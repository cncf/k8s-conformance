  I0618 08:23:07.423078      17 e2e.go:117] Starting e2e run "c48b9130-3e60-4593-94b6-a4fc8e3735c8" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1718698986 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun 18 08:23:07.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 08:23:07.700: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun 18 08:26:36.678: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun 18 08:26:36.689: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Jun 18 08:26:36.689: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Jun 18 08:26:36.689: INFO: e2e test version: v1.29.6
  Jun 18 08:26:36.695: INFO: kube-apiserver version: v1.29.6
  Jun 18 08:26:36.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 08:26:36.702: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [209.003 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/18/24 08:26:36.875
  Jun 18 08:26:36.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 08:26:36.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:26:36.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:26:36.899
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:26:36.904
  STEP: Saw pod success @ 06/18/24 08:26:40.929
  Jun 18 08:26:40.932: INFO: Trying to get logs from node ck-129-worker-2 pod downwardapi-volume-7a160f3f-72d7-41b3-9188-30014e07a744 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:26:40.957
  Jun 18 08:26:40.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6349" for this suite. @ 06/18/24 08:26:40.976
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/18/24 08:26:40.984
  Jun 18 08:26:40.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 08:26:40.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:26:40.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:26:41.002
  STEP: Creating Pod @ 06/18/24 08:26:41.006
  STEP: Reading file content from the nginx-container @ 06/18/24 08:26:43.026
  Jun 18 08:26:43.026: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7373 PodName:pod-sharedvolume-84883b4b-62f4-4036-8289-25a25a6265e7 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 08:26:43.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 08:26:43.026: INFO: ExecWithOptions: Clientset creation
  Jun 18 08:26:43.026: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-7373/pods/pod-sharedvolume-84883b4b-62f4-4036-8289-25a25a6265e7/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun 18 08:26:43.084: INFO: Exec stderr: ""
  Jun 18 08:26:43.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7373" for this suite. @ 06/18/24 08:26:43.094
• [2.117 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/18/24 08:26:43.101
  Jun 18 08:26:43.101: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:26:43.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:26:43.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:26:43.124
  STEP: Creating secret with name projected-secret-test-ec4296ec-f8f1-4982-91a9-62d09158101f @ 06/18/24 08:26:43.128
  STEP: Creating a pod to test consume secrets @ 06/18/24 08:26:43.132
  STEP: Saw pod success @ 06/18/24 08:26:45.149
  Jun 18 08:26:45.151: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-secrets-c0c2cb72-30d4-440d-8f4a-68814e2b2735 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 08:26:45.176
  Jun 18 08:26:45.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9410" for this suite. @ 06/18/24 08:26:45.194
• [2.099 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/18/24 08:26:45.201
  Jun 18 08:26:45.201: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 08:26:45.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:26:45.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:26:45.22
  Jun 18 08:26:45.223: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  W0618 08:26:47.783351      17 warnings.go:70] unknown field "alpha"
  W0618 08:26:47.783407      17 warnings.go:70] unknown field "beta"
  W0618 08:26:47.783413      17 warnings.go:70] unknown field "delta"
  W0618 08:26:47.783419      17 warnings.go:70] unknown field "epsilon"
  W0618 08:26:47.783429      17 warnings.go:70] unknown field "gamma"
  Jun 18 08:26:48.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2637" for this suite. @ 06/18/24 08:26:48.34
• [3.153 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/18/24 08:26:48.354
  Jun 18 08:26:48.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 08:26:48.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:26:48.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:26:48.374
  STEP: Creating a suspended cronjob @ 06/18/24 08:26:48.377
  STEP: Ensuring no jobs are scheduled @ 06/18/24 08:26:48.383
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/18/24 08:31:48.389
  STEP: Removing cronjob @ 06/18/24 08:31:48.391
  Jun 18 08:31:48.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7607" for this suite. @ 06/18/24 08:31:48.401
• [300.052 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/18/24 08:31:48.407
  Jun 18 08:31:48.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename podtemplate @ 06/18/24 08:31:48.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:31:48.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:31:48.427
  STEP: Create a pod template @ 06/18/24 08:31:48.431
  STEP: Replace a pod template @ 06/18/24 08:31:48.436
  Jun 18 08:31:48.443: INFO: Found updated podtemplate annotation: "true"

  Jun 18 08:31:48.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7983" for this suite. @ 06/18/24 08:31:48.448
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/18/24 08:31:48.454
  Jun 18 08:31:48.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename init-container @ 06/18/24 08:31:48.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:31:48.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:31:48.469
  STEP: creating the pod @ 06/18/24 08:31:48.472
  Jun 18 08:31:48.472: INFO: PodSpec: initContainers in spec.initContainers
  Jun 18 08:32:26.973: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-14bba4d6-57b4-4b4e-b502-7b222499e3bd", GenerateName:"", Namespace:"init-container-676", SelfLink:"", UID:"97665df1-dcd6-4518-b1fd-cd04db41680f", ResourceVersion:"3473", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"472425930"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"34a7573df521536981117788d5a499c1f6d1896a30b9d109d6d8a3a6dad9748f", "cni.projectcalico.org/podIP":"172.16.240.68/32", "cni.projectcalico.org/podIPs":"172.16.240.68/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048c7e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048c7e60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 8, 32, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048c7e90), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-qnn9p", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0008d77a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qnn9p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qnn9p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-qnn9p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004b91310), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ck-129-worker-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00027bab0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004b913a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004b913c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004b913c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004b913cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003b7ae60), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 8, 31, 49, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.190.166", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.190.166"}}, PodIP:"172.16.240.68", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.16.240.68"}}, StartTime:time.Date(2024, time.June, 18, 8, 31, 48, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00027bc00)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00027bc70)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://432e1b3033dd1f676f4d1c1ce999801a8cd3497d3b79cfb2a2c8b078e1f8e6ca", Started:(*bool)(0xc004b9146f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0008d7800), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004b91475), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0008d77e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc004b91444), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun 18 08:32:26.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-676" for this suite. @ 06/18/24 08:32:26.981
• [38.531 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/18/24 08:32:26.987
  Jun 18 08:32:26.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 08:32:26.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:32:27.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:32:27.006
  STEP: Deleting RuntimeClass runtimeclass-3209-delete-me @ 06/18/24 08:32:27.015
  STEP: Waiting for the RuntimeClass to disappear @ 06/18/24 08:32:27.019
  Jun 18 08:32:27.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3209" for this suite. @ 06/18/24 08:32:27.034
• [0.053 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/18/24 08:32:27.04
  Jun 18 08:32:27.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 08:32:27.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:32:27.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:32:27.056
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 08:32:27.065
  STEP: create the pod with lifecycle hook @ 06/18/24 08:32:29.084
  STEP: check poststart hook @ 06/18/24 08:32:31.106
  STEP: delete the pod with lifecycle hook @ 06/18/24 08:32:31.13
  Jun 18 08:32:33.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4058" for this suite. @ 06/18/24 08:32:33.148
• [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/18/24 08:32:33.156
  Jun 18 08:32:33.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 08:32:33.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:32:33.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:32:33.171
  STEP: Creating ServiceAccount "e2e-sa-ctdth"  @ 06/18/24 08:32:33.174
  Jun 18 08:32:33.178: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-ctdth"  @ 06/18/24 08:32:33.178
  Jun 18 08:32:33.185: INFO: AutomountServiceAccountToken: true
  Jun 18 08:32:33.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5702" for this suite. @ 06/18/24 08:32:33.189
• [0.036 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/18/24 08:32:33.194
  Jun 18 08:32:33.194: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename subpath @ 06/18/24 08:32:33.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:32:33.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:32:33.207
  STEP: Setting up data @ 06/18/24 08:32:33.212
  STEP: Creating pod pod-subpath-test-secret-qzmx @ 06/18/24 08:32:33.22
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 08:32:33.22
  STEP: Saw pod success @ 06/18/24 08:32:55.285
  Jun 18 08:32:55.288: INFO: Trying to get logs from node ck-129-worker-2 pod pod-subpath-test-secret-qzmx container test-container-subpath-secret-qzmx: <nil>
  STEP: delete the pod @ 06/18/24 08:32:55.307
  STEP: Deleting pod pod-subpath-test-secret-qzmx @ 06/18/24 08:32:55.322
  Jun 18 08:32:55.322: INFO: Deleting pod "pod-subpath-test-secret-qzmx" in namespace "subpath-9875"
  Jun 18 08:32:55.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9875" for this suite. @ 06/18/24 08:32:55.327
• [22.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/18/24 08:32:55.332
  Jun 18 08:32:55.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sysctl @ 06/18/24 08:32:55.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:32:55.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:32:55.347
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/18/24 08:32:55.35
  STEP: Watching for error events or started pod @ 06/18/24 08:32:55.355
  STEP: Waiting for pod completion @ 06/18/24 08:32:57.359
  STEP: Checking that the pod succeeded @ 06/18/24 08:32:57.363
  STEP: Getting logs from the pod @ 06/18/24 08:32:57.364
  STEP: Checking that the sysctl is actually updated @ 06/18/24 08:32:57.37
  Jun 18 08:32:57.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7186" for this suite. @ 06/18/24 08:32:57.373
• [2.045 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/18/24 08:32:57.378
  Jun 18 08:32:57.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 08:32:57.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:32:57.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:32:57.392
  Jun 18 08:32:59.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1728" for this suite. @ 06/18/24 08:32:59.441
• [2.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/18/24 08:32:59.447
  Jun 18 08:32:59.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pv @ 06/18/24 08:32:59.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:32:59.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:32:59.467
  STEP: Creating initial PV and PVC @ 06/18/24 08:32:59.47
  Jun 18 08:32:59.471: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7790" @ 06/18/24 08:32:59.48
  STEP: Listing PVCs in namespace "pv-7790" @ 06/18/24 08:32:59.483
  STEP: Patching the PV "pv-7790-qg6hx" @ 06/18/24 08:32:59.486
  STEP: Patching the PVC "pvc-n55fl" @ 06/18/24 08:32:59.502
  STEP: Getting PV "pv-7790-qg6hx" @ 06/18/24 08:32:59.512
  STEP: Getting PVC "pvc-n55fl" @ 06/18/24 08:32:59.515
  STEP: Deleting PVC "pvc-n55fl" @ 06/18/24 08:32:59.517
  STEP: Confirm deletion of PVC "pvc-n55fl" @ 06/18/24 08:32:59.521
  STEP: Deleting PV "pv-7790-qg6hx" @ 06/18/24 08:33:01.529
  STEP: Confirm deletion of PV "pv-7790-qg6hx" @ 06/18/24 08:33:01.534
  STEP: Recreating another PV & PVC @ 06/18/24 08:33:03.542
  Jun 18 08:33:03.542: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-7790-dh2tb" @ 06/18/24 08:33:03.549
  STEP: Updating the PVC "pvc-c5scc" @ 06/18/24 08:33:03.556
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-c5scc=updated" @ 06/18/24 08:33:03.562
  STEP: Deleting PVC "pvc-c5scc" via DeleteCollection @ 06/18/24 08:33:03.569
  STEP: Confirm deletion of PVC "pvc-c5scc" @ 06/18/24 08:33:03.575
  STEP: Deleting PV "pv-7790-dh2tb" via DeleteCollection @ 06/18/24 08:33:05.583
  STEP: Confirm deletion of PV "pv-7790-dh2tb" @ 06/18/24 08:33:05.589
  Jun 18 08:33:05.596: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 18 08:33:05.596: INFO: Deleting PersistentVolumeClaim "pvc-c5scc"
  Jun 18 08:33:05.598: INFO: Deleting PersistentVolume "pv-7790-dh2tb"
  Jun 18 08:33:05.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7790" for this suite. @ 06/18/24 08:33:05.606
• [6.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/18/24 08:33:05.617
  Jun 18 08:33:05.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename subpath @ 06/18/24 08:33:05.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:05.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:05.635
  STEP: Setting up data @ 06/18/24 08:33:05.639
  STEP: Creating pod pod-subpath-test-downwardapi-j5m8 @ 06/18/24 08:33:05.646
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 08:33:05.646
  STEP: Saw pod success @ 06/18/24 08:33:29.717
  Jun 18 08:33:29.722: INFO: Trying to get logs from node ck-129-worker-1 pod pod-subpath-test-downwardapi-j5m8 container test-container-subpath-downwardapi-j5m8: <nil>
  STEP: delete the pod @ 06/18/24 08:33:29.733
  STEP: Deleting pod pod-subpath-test-downwardapi-j5m8 @ 06/18/24 08:33:29.746
  Jun 18 08:33:29.746: INFO: Deleting pod "pod-subpath-test-downwardapi-j5m8" in namespace "subpath-7839"
  Jun 18 08:33:29.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7839" for this suite. @ 06/18/24 08:33:29.753
• [24.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/18/24 08:33:29.762
  Jun 18 08:33:29.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 08:33:29.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:29.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:29.781
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/18/24 08:33:29.786
  STEP: Saw pod success @ 06/18/24 08:33:33.805
  Jun 18 08:33:33.808: INFO: Trying to get logs from node ck-129-worker-1 pod pod-3618dda3-2ad7-4195-8c0b-4d4400de20ae container test-container: <nil>
  STEP: delete the pod @ 06/18/24 08:33:33.817
  Jun 18 08:33:33.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7260" for this suite. @ 06/18/24 08:33:33.836
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/18/24 08:33:33.843
  Jun 18 08:33:33.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 08:33:33.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:33.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:33.859
  STEP: Setting up server cert @ 06/18/24 08:33:33.879
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 08:33:34.384
  STEP: Deploying the webhook pod @ 06/18/24 08:33:34.39
  STEP: Wait for the deployment to be ready @ 06/18/24 08:33:34.403
  Jun 18 08:33:34.414: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 08:33:36.426
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:33:36.44
  Jun 18 08:33:37.441: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/18/24 08:33:37.448
  STEP: create a namespace for the webhook @ 06/18/24 08:33:37.469
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/18/24 08:33:37.48
  Jun 18 08:33:37.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2635" for this suite. @ 06/18/24 08:33:37.554
  STEP: Destroying namespace "webhook-markers-9467" for this suite. @ 06/18/24 08:33:37.559
  STEP: Destroying namespace "fail-closed-namespace-4835" for this suite. @ 06/18/24 08:33:37.565
• [3.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/18/24 08:33:37.575
  Jun 18 08:33:37.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 08:33:37.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:37.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:37.6
  Jun 18 08:33:37.603: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 08:33:37.611: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 08:33:37.614: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-1 before test
  Jun 18 08:33:37.622: INFO: calico-kube-controllers-8d76c5f9b-8wpb6 from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.622: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 08:33:37.622: INFO: calico-node-c7wnv from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.622: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:33:37.622: INFO: kube-proxy-47vln from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.622: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:33:37.622: INFO: secloudit-registry-agent-8ggt2 from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.622: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:33:37.622: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-xhr4k from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:33:37.623: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:33:37.623: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 08:33:37.623: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-2 before test
  Jun 18 08:33:37.630: INFO: calico-node-bq6wj from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.630: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:33:37.630: INFO: kube-proxy-hch9l from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.630: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:33:37.630: INFO: secloudit-registry-agent-lsgrp from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.630: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:33:37.630: INFO: sonobuoy from sonobuoy started at 2024-06-18 08:22:49 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.630: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 08:33:37.630: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-v4brh from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:33:37.630: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:33:37.630: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 08:33:37.630: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-3 before test
  Jun 18 08:33:37.637: INFO: calico-node-4b96w from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.637: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:33:37.637: INFO: kube-proxy-zrpzr from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.637: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:33:37.637: INFO: secloudit-registry-agent-ksqhs from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:33:37.637: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:33:37.637: INFO: sonobuoy-e2e-job-95d5e6fef3cb4755 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:33:37.637: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 08:33:37.637: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:33:37.637: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-s85s9 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:33:37.637: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:33:37.637: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/18/24 08:33:37.637
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17da0c323a7ed5f0], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 06/18/24 08:33:37.671
  Jun 18 08:33:38.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3517" for this suite. @ 06/18/24 08:33:38.673
• [1.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/18/24 08:33:38.68
  Jun 18 08:33:38.680: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 08:33:38.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:38.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:38.699
  STEP: Creating a pod to test downward api env vars @ 06/18/24 08:33:38.703
  STEP: Saw pod success @ 06/18/24 08:33:42.722
  Jun 18 08:33:42.725: INFO: Trying to get logs from node ck-129-worker-1 pod downward-api-5d4d515f-6439-4dff-a44c-42973f2c6806 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 08:33:42.731
  Jun 18 08:33:42.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5651" for this suite. @ 06/18/24 08:33:42.746
• [4.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/18/24 08:33:42.752
  Jun 18 08:33:42.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 08:33:42.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:42.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:42.771
  STEP: creating an Endpoint @ 06/18/24 08:33:42.778
  STEP: waiting for available Endpoint @ 06/18/24 08:33:42.783
  STEP: listing all Endpoints @ 06/18/24 08:33:42.786
  STEP: updating the Endpoint @ 06/18/24 08:33:42.789
  STEP: fetching the Endpoint @ 06/18/24 08:33:42.797
  STEP: patching the Endpoint @ 06/18/24 08:33:42.803
  STEP: fetching the Endpoint @ 06/18/24 08:33:42.811
  STEP: deleting the Endpoint by Collection @ 06/18/24 08:33:42.814
  STEP: waiting for Endpoint deletion @ 06/18/24 08:33:42.819
  STEP: fetching the Endpoint @ 06/18/24 08:33:42.821
  Jun 18 08:33:42.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3218" for this suite. @ 06/18/24 08:33:42.826
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/18/24 08:33:42.831
  Jun 18 08:33:42.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:33:42.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:42.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:42.848
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:33:42.851
  STEP: Saw pod success @ 06/18/24 08:33:46.87
  Jun 18 08:33:46.874: INFO: Trying to get logs from node ck-129-worker-2 pod downwardapi-volume-e13fc063-610c-45a3-afd6-05878a9945e7 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:33:46.881
  Jun 18 08:33:46.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6809" for this suite. @ 06/18/24 08:33:46.902
• [4.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/18/24 08:33:46.907
  Jun 18 08:33:46.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:33:46.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:46.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:46.922
  STEP: Creating secret with name s-test-opt-del-24cca1d1-f493-49bf-bfee-bd9f9d272a02 @ 06/18/24 08:33:46.93
  STEP: Creating secret with name s-test-opt-upd-b11ca613-90ec-4cd9-8f5e-0eb231338ce1 @ 06/18/24 08:33:46.934
  STEP: Creating the pod @ 06/18/24 08:33:46.94
  STEP: Deleting secret s-test-opt-del-24cca1d1-f493-49bf-bfee-bd9f9d272a02 @ 06/18/24 08:33:48.98
  STEP: Updating secret s-test-opt-upd-b11ca613-90ec-4cd9-8f5e-0eb231338ce1 @ 06/18/24 08:33:48.987
  STEP: Creating secret with name s-test-opt-create-57e839de-f6e8-440a-a52e-d45fe3e9029a @ 06/18/24 08:33:48.991
  STEP: waiting to observe update in volume @ 06/18/24 08:33:48.997
  Jun 18 08:33:51.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7281" for this suite. @ 06/18/24 08:33:51.037
• [4.136 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/18/24 08:33:51.043
  Jun 18 08:33:51.043: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 08:33:51.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:51.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:51.062
  STEP: Creating secret with name secret-test-2f9f2a8b-fb76-40a3-aca7-7f06c8d054f5 @ 06/18/24 08:33:51.066
  STEP: Creating a pod to test consume secrets @ 06/18/24 08:33:51.07
  STEP: Saw pod success @ 06/18/24 08:33:55.089
  Jun 18 08:33:55.092: INFO: Trying to get logs from node ck-129-worker-2 pod pod-secrets-be61c7c6-de20-4c88-ac65-fd28e31fe3b3 container secret-env-test: <nil>
  STEP: delete the pod @ 06/18/24 08:33:55.098
  Jun 18 08:33:55.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9374" for this suite. @ 06/18/24 08:33:55.116
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/18/24 08:33:55.123
  Jun 18 08:33:55.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 08:33:55.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:55.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:55.14
  STEP: creating a Namespace @ 06/18/24 08:33:55.143
  STEP: patching the Namespace @ 06/18/24 08:33:55.153
  STEP: get the Namespace and ensuring it has the label @ 06/18/24 08:33:55.157
  Jun 18 08:33:55.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-233" for this suite. @ 06/18/24 08:33:55.165
  STEP: Destroying namespace "nspatchtest-9f9ec357-e495-416c-9045-61b3b466a6da-1695" for this suite. @ 06/18/24 08:33:55.175
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/18/24 08:33:55.182
  Jun 18 08:33:55.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename gc @ 06/18/24 08:33:55.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:33:55.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:33:55.198
  STEP: create the rc1 @ 06/18/24 08:33:55.204
  STEP: create the rc2 @ 06/18/24 08:33:55.209
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/18/24 08:34:01.216
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/18/24 08:34:01.7
  STEP: wait for the rc to be deleted @ 06/18/24 08:34:01.705
  Jun 18 08:34:06.739: INFO: 65 pods remaining
  Jun 18 08:34:06.739: INFO: 65 pods has nil DeletionTimestamp
  Jun 18 08:34:06.739: INFO: 
  STEP: Gathering metrics @ 06/18/24 08:34:11.724
  Jun 18 08:34:11.861: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 08:34:11.861: INFO: Deleting pod "simpletest-rc-to-be-deleted-2cqtq" in namespace "gc-5163"
  Jun 18 08:34:11.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-2czxw" in namespace "gc-5163"
  Jun 18 08:34:11.889: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lhf8" in namespace "gc-5163"
  Jun 18 08:34:11.900: INFO: Deleting pod "simpletest-rc-to-be-deleted-2mkms" in namespace "gc-5163"
  Jun 18 08:34:11.910: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rjcm" in namespace "gc-5163"
  Jun 18 08:34:11.929: INFO: Deleting pod "simpletest-rc-to-be-deleted-2sv9t" in namespace "gc-5163"
  Jun 18 08:34:11.943: INFO: Deleting pod "simpletest-rc-to-be-deleted-2tpms" in namespace "gc-5163"
  Jun 18 08:34:11.953: INFO: Deleting pod "simpletest-rc-to-be-deleted-2vp96" in namespace "gc-5163"
  Jun 18 08:34:11.970: INFO: Deleting pod "simpletest-rc-to-be-deleted-47fsz" in namespace "gc-5163"
  Jun 18 08:34:11.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ctn9" in namespace "gc-5163"
  Jun 18 08:34:11.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-4gp77" in namespace "gc-5163"
  Jun 18 08:34:12.006: INFO: Deleting pod "simpletest-rc-to-be-deleted-4jcdx" in namespace "gc-5163"
  Jun 18 08:34:12.022: INFO: Deleting pod "simpletest-rc-to-be-deleted-4rmwd" in namespace "gc-5163"
  Jun 18 08:34:12.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zhdp" in namespace "gc-5163"
  Jun 18 08:34:12.049: INFO: Deleting pod "simpletest-rc-to-be-deleted-55tfd" in namespace "gc-5163"
  Jun 18 08:34:12.063: INFO: Deleting pod "simpletest-rc-to-be-deleted-56gxf" in namespace "gc-5163"
  Jun 18 08:34:12.080: INFO: Deleting pod "simpletest-rc-to-be-deleted-68kqh" in namespace "gc-5163"
  Jun 18 08:34:12.101: INFO: Deleting pod "simpletest-rc-to-be-deleted-6bscr" in namespace "gc-5163"
  Jun 18 08:34:12.125: INFO: Deleting pod "simpletest-rc-to-be-deleted-6f8xt" in namespace "gc-5163"
  Jun 18 08:34:12.133: INFO: Deleting pod "simpletest-rc-to-be-deleted-6flqn" in namespace "gc-5163"
  Jun 18 08:34:12.149: INFO: Deleting pod "simpletest-rc-to-be-deleted-6k5mp" in namespace "gc-5163"
  Jun 18 08:34:12.170: INFO: Deleting pod "simpletest-rc-to-be-deleted-7j7cq" in namespace "gc-5163"
  Jun 18 08:34:12.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-7r8rw" in namespace "gc-5163"
  Jun 18 08:34:12.234: INFO: Deleting pod "simpletest-rc-to-be-deleted-82skk" in namespace "gc-5163"
  Jun 18 08:34:12.249: INFO: Deleting pod "simpletest-rc-to-be-deleted-87dzt" in namespace "gc-5163"
  Jun 18 08:34:12.271: INFO: Deleting pod "simpletest-rc-to-be-deleted-9bqrr" in namespace "gc-5163"
  Jun 18 08:34:12.299: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jrhh" in namespace "gc-5163"
  Jun 18 08:34:12.346: INFO: Deleting pod "simpletest-rc-to-be-deleted-9k8bq" in namespace "gc-5163"
  Jun 18 08:34:12.375: INFO: Deleting pod "simpletest-rc-to-be-deleted-9r8kt" in namespace "gc-5163"
  Jun 18 08:34:12.407: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rvtw" in namespace "gc-5163"
  Jun 18 08:34:12.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9vg8" in namespace "gc-5163"
  Jun 18 08:34:12.457: INFO: Deleting pod "simpletest-rc-to-be-deleted-bfqzj" in namespace "gc-5163"
  Jun 18 08:34:12.479: INFO: Deleting pod "simpletest-rc-to-be-deleted-bprwt" in namespace "gc-5163"
  Jun 18 08:34:12.505: INFO: Deleting pod "simpletest-rc-to-be-deleted-bv9zl" in namespace "gc-5163"
  Jun 18 08:34:12.532: INFO: Deleting pod "simpletest-rc-to-be-deleted-bz77d" in namespace "gc-5163"
  Jun 18 08:34:12.558: INFO: Deleting pod "simpletest-rc-to-be-deleted-ccc5k" in namespace "gc-5163"
  Jun 18 08:34:12.575: INFO: Deleting pod "simpletest-rc-to-be-deleted-ch6kx" in namespace "gc-5163"
  Jun 18 08:34:12.610: INFO: Deleting pod "simpletest-rc-to-be-deleted-ctjs6" in namespace "gc-5163"
  Jun 18 08:34:12.642: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwzgf" in namespace "gc-5163"
  Jun 18 08:34:12.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-d67th" in namespace "gc-5163"
  Jun 18 08:34:12.696: INFO: Deleting pod "simpletest-rc-to-be-deleted-dsqpc" in namespace "gc-5163"
  Jun 18 08:34:12.727: INFO: Deleting pod "simpletest-rc-to-be-deleted-f9z42" in namespace "gc-5163"
  Jun 18 08:34:12.751: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffm2x" in namespace "gc-5163"
  Jun 18 08:34:12.780: INFO: Deleting pod "simpletest-rc-to-be-deleted-fg9tb" in namespace "gc-5163"
  Jun 18 08:34:12.803: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhdpb" in namespace "gc-5163"
  Jun 18 08:34:12.854: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwxd4" in namespace "gc-5163"
  Jun 18 08:34:12.904: INFO: Deleting pod "simpletest-rc-to-be-deleted-gd6bm" in namespace "gc-5163"
  Jun 18 08:34:12.931: INFO: Deleting pod "simpletest-rc-to-be-deleted-ghch2" in namespace "gc-5163"
  Jun 18 08:34:12.980: INFO: Deleting pod "simpletest-rc-to-be-deleted-gv6pq" in namespace "gc-5163"
  Jun 18 08:34:13.015: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzh8v" in namespace "gc-5163"
  Jun 18 08:34:13.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5163" for this suite. @ 06/18/24 08:34:13.051
• [17.878 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/18/24 08:34:13.06
  Jun 18 08:34:13.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 08:34:13.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:34:13.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:34:13.104
  STEP: Creating a pod to test downward api env vars @ 06/18/24 08:34:13.11
  STEP: Saw pod success @ 06/18/24 08:34:17.142
  Jun 18 08:34:17.145: INFO: Trying to get logs from node ck-129-worker-2 pod downward-api-8e06f9b2-e187-4323-8196-5e6d6049d4cf container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 08:34:17.153
  Jun 18 08:34:17.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7722" for this suite. @ 06/18/24 08:34:17.169
• [4.113 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/18/24 08:34:17.175
  Jun 18 08:34:17.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 08:34:17.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:34:17.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:34:17.19
  Jun 18 08:34:17.210: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/18/24 08:34:17.215
  Jun 18 08:34:17.218: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:17.218: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/18/24 08:34:17.218
  Jun 18 08:34:17.238: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:17.238: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 08:34:18.245: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:18.245: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 08:34:19.239: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 08:34:19.239: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/18/24 08:34:19.242
  Jun 18 08:34:19.257: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 08:34:19.257: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jun 18 08:34:20.258: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:20.258: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/18/24 08:34:20.258
  Jun 18 08:34:20.274: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:20.274: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 08:34:21.276: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:21.276: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 08:34:22.276: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 08:34:22.276: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 08:34:22.283
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4261, will wait for the garbage collector to delete the pods @ 06/18/24 08:34:22.284
  Jun 18 08:34:22.345: INFO: Deleting DaemonSet.extensions daemon-set took: 7.508853ms
  Jun 18 08:34:22.445: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.525412ms
  Jun 18 08:34:24.550: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:24.550: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 08:34:24.556: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6789"},"items":null}

  Jun 18 08:34:24.561: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6789"},"items":null}

  Jun 18 08:34:24.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4261" for this suite. @ 06/18/24 08:34:24.595
• [7.429 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/18/24 08:34:24.609
  Jun 18 08:34:24.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 08:34:24.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:34:24.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:34:24.631
  STEP: Creating simple DaemonSet "daemon-set" @ 06/18/24 08:34:24.657
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 08:34:24.662
  Jun 18 08:34:24.667: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:34:24.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:34:24.670: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 08:34:25.668: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:34:25.671: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 08:34:25.671: INFO: Node ck-129-worker-2 is running 0 daemon pod, expected 1
  Jun 18 08:34:26.667: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:34:26.670: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 08:34:26.670: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/18/24 08:34:26.673
  STEP: DeleteCollection of the DaemonSets @ 06/18/24 08:34:26.676
  STEP: Verify that ReplicaSets have been deleted @ 06/18/24 08:34:26.681
  Jun 18 08:34:26.691: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6841"},"items":null}

  Jun 18 08:34:26.698: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6845"},"items":[{"metadata":{"name":"daemon-set-6ndpw","generateName":"daemon-set-","namespace":"daemonsets-1628","uid":"ef4141ce-80c8-4a5f-b0bf-d42b50c073be","resourceVersion":"6842","creationTimestamp":"2024-06-18T08:34:24Z","deletionTimestamp":"2024-06-18T08:34:56Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"00a8eeea0ff0b522976e1c58a00b55acb38768ea0c1a0bfc0c2f64b1d63a37f7","cni.projectcalico.org/podIP":"172.16.240.107/32","cni.projectcalico.org/podIPs":"172.16.240.107/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8183caa0-513e-414c-834a-7a1bdd29a1fa","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8183caa0-513e-414c-834a-7a1bdd29a1fa\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.240.107\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-nqsh7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-nqsh7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-129-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-129-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:25Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:24Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:25Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:25Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:24Z"}],"hostIP":"192.168.190.166","hostIPs":[{"ip":"192.168.190.166"}],"podIP":"172.16.240.107","podIPs":[{"ip":"172.16.240.107"}],"startTime":"2024-06-18T08:34:24Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-18T08:34:25Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://652f63372637c47423d3aaef592bb589252df97e7e2e6eed1fbdc6d598266df6","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-f7ghg","generateName":"daemon-set-","namespace":"daemonsets-1628","uid":"c378d959-8208-4b2d-bb34-0aa1cab73b3c","resourceVersion":"6844","creationTimestamp":"2024-06-18T08:34:24Z","deletionTimestamp":"2024-06-18T08:34:56Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"f04fa140c774ba34c0475fb18db6b08d5a0dada1e279c213898a9a3669e2becf","cni.projectcalico.org/podIP":"172.16.61.238/32","cni.projectcalico.org/podIPs":"172.16.61.238/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8183caa0-513e-414c-834a-7a1bdd29a1fa","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8183caa0-513e-414c-834a-7a1bdd29a1fa\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.61.238\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mj2ms","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mj2ms","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-129-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-129-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:25Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:24Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:25Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:25Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:24Z"}],"hostIP":"192.168.190.169","hostIPs":[{"ip":"192.168.190.169"}],"podIP":"172.16.61.238","podIPs":[{"ip":"172.16.61.238"}],"startTime":"2024-06-18T08:34:24Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-18T08:34:25Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://55cc4928ed6267103b7f8bc1b3f1ce3105c61f90122cab7882ebc279a55f757e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-srv9w","generateName":"daemon-set-","namespace":"daemonsets-1628","uid":"326858ba-7b59-45d4-88fa-8ed49b7bd8ab","resourceVersion":"6845","creationTimestamp":"2024-06-18T08:34:24Z","deletionTimestamp":"2024-06-18T08:34:56Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"04cea74d2a394030773823c15f87968ef80ba785f969e4c49a9c4849859eac56","cni.projectcalico.org/podIP":"172.16.8.99/32","cni.projectcalico.org/podIPs":"172.16.8.99/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8183caa0-513e-414c-834a-7a1bdd29a1fa","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:24Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8183caa0-513e-414c-834a-7a1bdd29a1fa\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-18T08:34:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.8.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-45g8f","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-45g8f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-129-worker-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-129-worker-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:26Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:24Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:26Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-18T08:34:24Z"}],"hostIP":"192.168.190.167","hostIPs":[{"ip":"192.168.190.167"}],"podIP":"172.16.8.99","podIPs":[{"ip":"172.16.8.99"}],"startTime":"2024-06-18T08:34:24Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-18T08:34:25Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://7cefb016c213556671af59a208da322290744a2e57ff486eff3cf6767853f3ab","started":true}],"qosClass":"BestEffort"}}]}

  Jun 18 08:34:26.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1628" for this suite. @ 06/18/24 08:34:26.714
• [2.109 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/18/24 08:34:26.718
  Jun 18 08:34:26.718: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 08:34:26.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:34:26.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:34:26.735
  STEP: creating service in namespace services-5518 @ 06/18/24 08:34:26.738
  STEP: creating service affinity-clusterip in namespace services-5518 @ 06/18/24 08:34:26.738
  STEP: creating replication controller affinity-clusterip in namespace services-5518 @ 06/18/24 08:34:26.747
  I0618 08:34:26.756090      17 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-5518, replica count: 3
  I0618 08:34:29.808031      17 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 08:34:29.816: INFO: Creating new exec pod
  Jun 18 08:34:32.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5518 exec execpod-affinitykndwg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jun 18 08:34:33.047: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun 18 08:34:33.047: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 08:34:33.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5518 exec execpod-affinitykndwg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.169.157 80'
  Jun 18 08:34:33.184: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.169.157 80\nConnection to 10.103.169.157 80 port [tcp/http] succeeded!\n"
  Jun 18 08:34:33.184: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 08:34:33.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5518 exec execpod-affinitykndwg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.103.169.157:80/ ; done'
  Jun 18 08:34:33.379: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.169.157:80/\n"
  Jun 18 08:34:33.379: INFO: stdout: "\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc\naffinity-clusterip-frmrc"
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Received response from host: affinity-clusterip-frmrc
  Jun 18 08:34:33.379: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5518, will wait for the garbage collector to delete the pods @ 06/18/24 08:34:33.389
  Jun 18 08:34:33.447: INFO: Deleting ReplicationController affinity-clusterip took: 4.569569ms
  Jun 18 08:34:33.548: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.881568ms
  Jun 18 08:34:36.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5518" for this suite. @ 06/18/24 08:34:36.978
• [10.266 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/18/24 08:34:36.985
  Jun 18 08:34:36.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 08:34:36.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:34:37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:34:37.007
  STEP: creating service multi-endpoint-test in namespace services-279 @ 06/18/24 08:34:37.012
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-279 to expose endpoints map[] @ 06/18/24 08:34:37.025
  Jun 18 08:34:37.030: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Jun 18 08:34:38.037: INFO: successfully validated that service multi-endpoint-test in namespace services-279 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-279 @ 06/18/24 08:34:38.038
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-279 to expose endpoints map[pod1:[100]] @ 06/18/24 08:34:40.057
  Jun 18 08:34:40.065: INFO: successfully validated that service multi-endpoint-test in namespace services-279 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-279 @ 06/18/24 08:34:40.065
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-279 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/18/24 08:34:42.08
  Jun 18 08:34:42.091: INFO: successfully validated that service multi-endpoint-test in namespace services-279 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/18/24 08:34:42.091
  Jun 18 08:34:42.092: INFO: Creating new exec pod
  Jun 18 08:34:45.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-279 exec execpodm7gww -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun 18 08:34:47.755: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun 18 08:34:47.755: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 08:34:47.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-279 exec execpodm7gww -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.163.107 80'
  Jun 18 08:34:47.928: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.163.107 80\nConnection to 10.108.163.107 80 port [tcp/http] succeeded!\n"
  Jun 18 08:34:47.928: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 08:34:47.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-279 exec execpodm7gww -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun 18 08:34:48.073: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun 18 08:34:48.073: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 08:34:48.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-279 exec execpodm7gww -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.163.107 81'
  Jun 18 08:34:48.207: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.163.107 81\nConnection to 10.108.163.107 81 port [tcp/*] succeeded!\n"
  Jun 18 08:34:48.207: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-279 @ 06/18/24 08:34:48.207
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-279 to expose endpoints map[pod2:[101]] @ 06/18/24 08:34:48.236
  Jun 18 08:34:48.255: INFO: successfully validated that service multi-endpoint-test in namespace services-279 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-279 @ 06/18/24 08:34:48.255
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-279 to expose endpoints map[] @ 06/18/24 08:34:48.276
  Jun 18 08:34:48.290: INFO: successfully validated that service multi-endpoint-test in namespace services-279 exposes endpoints map[]
  Jun 18 08:34:48.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-279" for this suite. @ 06/18/24 08:34:48.317
• [11.337 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/18/24 08:34:48.323
  Jun 18 08:34:48.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 08:34:48.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:34:48.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:34:48.344
  STEP: Creating secret with name secret-test-a8ad4110-a256-4aaf-a77a-090f5f7d4a0e @ 06/18/24 08:34:48.347
  STEP: Creating a pod to test consume secrets @ 06/18/24 08:34:48.351
  STEP: Saw pod success @ 06/18/24 08:34:52.37
  Jun 18 08:34:52.376: INFO: Trying to get logs from node ck-129-worker-2 pod pod-secrets-90f08c15-9fac-429f-ae3f-ba26f5a4cd45 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 08:34:52.385
  Jun 18 08:34:52.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2751" for this suite. @ 06/18/24 08:34:52.402
• [4.084 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/18/24 08:34:52.408
  Jun 18 08:34:52.408: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 08:34:52.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:34:52.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:34:52.426
  STEP: creating a replication controller @ 06/18/24 08:34:52.43
  Jun 18 08:34:52.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 create -f -'
  Jun 18 08:34:52.601: INFO: stderr: ""
  Jun 18 08:34:52.601: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 08:34:52.601
  Jun 18 08:34:52.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 08:34:52.699: INFO: stderr: ""
  Jun 18 08:34:52.699: INFO: stdout: "update-demo-nautilus-bhmx2 update-demo-nautilus-rk7bf "
  Jun 18 08:34:52.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-bhmx2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 08:34:52.778: INFO: stderr: ""
  Jun 18 08:34:52.778: INFO: stdout: ""
  Jun 18 08:34:52.778: INFO: update-demo-nautilus-bhmx2 is created but not running
  Jun 18 08:34:57.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 08:34:57.873: INFO: stderr: ""
  Jun 18 08:34:57.873: INFO: stdout: "update-demo-nautilus-bhmx2 update-demo-nautilus-rk7bf "
  Jun 18 08:34:57.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-bhmx2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 08:34:57.952: INFO: stderr: ""
  Jun 18 08:34:57.952: INFO: stdout: "true"
  Jun 18 08:34:57.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-bhmx2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 08:34:58.029: INFO: stderr: ""
  Jun 18 08:34:58.029: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 08:34:58.029: INFO: validating pod update-demo-nautilus-bhmx2
  Jun 18 08:34:58.036: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 08:34:58.036: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 08:34:58.036: INFO: update-demo-nautilus-bhmx2 is verified up and running
  Jun 18 08:34:58.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-rk7bf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 08:34:58.130: INFO: stderr: ""
  Jun 18 08:34:58.130: INFO: stdout: "true"
  Jun 18 08:34:58.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-rk7bf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 08:34:58.205: INFO: stderr: ""
  Jun 18 08:34:58.205: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 08:34:58.205: INFO: validating pod update-demo-nautilus-rk7bf
  Jun 18 08:34:58.213: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 08:34:58.213: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 08:34:58.213: INFO: update-demo-nautilus-rk7bf is verified up and running
  STEP: scaling down the replication controller @ 06/18/24 08:34:58.213
  Jun 18 08:34:58.217: INFO: scanned /root for discovery docs: <nil>
  Jun 18 08:34:58.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jun 18 08:34:59.351: INFO: stderr: ""
  Jun 18 08:34:59.351: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 08:34:59.351
  Jun 18 08:34:59.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 08:34:59.446: INFO: stderr: ""
  Jun 18 08:34:59.446: INFO: stdout: "update-demo-nautilus-bhmx2 update-demo-nautilus-rk7bf "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 06/18/24 08:34:59.446
  Jun 18 08:35:04.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 08:35:04.550: INFO: stderr: ""
  Jun 18 08:35:04.550: INFO: stdout: "update-demo-nautilus-rk7bf "
  Jun 18 08:35:04.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-rk7bf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 08:35:04.629: INFO: stderr: ""
  Jun 18 08:35:04.629: INFO: stdout: "true"
  Jun 18 08:35:04.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-rk7bf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 08:35:04.711: INFO: stderr: ""
  Jun 18 08:35:04.711: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 08:35:04.711: INFO: validating pod update-demo-nautilus-rk7bf
  Jun 18 08:35:04.717: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 08:35:04.717: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 08:35:04.717: INFO: update-demo-nautilus-rk7bf is verified up and running
  STEP: scaling up the replication controller @ 06/18/24 08:35:04.717
  Jun 18 08:35:04.720: INFO: scanned /root for discovery docs: <nil>
  Jun 18 08:35:04.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jun 18 08:35:05.811: INFO: stderr: ""
  Jun 18 08:35:05.811: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 08:35:05.811
  Jun 18 08:35:05.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 08:35:05.910: INFO: stderr: ""
  Jun 18 08:35:05.910: INFO: stdout: "update-demo-nautilus-2n9nn update-demo-nautilus-rk7bf "
  Jun 18 08:35:05.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-2n9nn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 08:35:05.997: INFO: stderr: ""
  Jun 18 08:35:05.997: INFO: stdout: "true"
  Jun 18 08:35:05.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-2n9nn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 08:35:06.071: INFO: stderr: ""
  Jun 18 08:35:06.072: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 08:35:06.072: INFO: validating pod update-demo-nautilus-2n9nn
  Jun 18 08:35:06.076: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 08:35:06.076: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 08:35:06.076: INFO: update-demo-nautilus-2n9nn is verified up and running
  Jun 18 08:35:06.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-rk7bf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 08:35:06.152: INFO: stderr: ""
  Jun 18 08:35:06.152: INFO: stdout: "true"
  Jun 18 08:35:06.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods update-demo-nautilus-rk7bf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 08:35:06.239: INFO: stderr: ""
  Jun 18 08:35:06.239: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 08:35:06.239: INFO: validating pod update-demo-nautilus-rk7bf
  Jun 18 08:35:06.242: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 08:35:06.242: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 08:35:06.242: INFO: update-demo-nautilus-rk7bf is verified up and running
  STEP: using delete to clean up resources @ 06/18/24 08:35:06.242
  Jun 18 08:35:06.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 delete --grace-period=0 --force -f -'
  Jun 18 08:35:06.325: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 08:35:06.325: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 18 08:35:06.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get rc,svc -l name=update-demo --no-headers'
  Jun 18 08:35:06.407: INFO: stderr: "No resources found in kubectl-3283 namespace.\n"
  Jun 18 08:35:06.407: INFO: stdout: ""
  Jun 18 08:35:06.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3283 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 18 08:35:06.487: INFO: stderr: ""
  Jun 18 08:35:06.487: INFO: stdout: ""
  Jun 18 08:35:06.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3283" for this suite. @ 06/18/24 08:35:06.493
• [14.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/18/24 08:35:06.502
  Jun 18 08:35:06.502: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 08:35:06.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:06.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:06.527
  STEP: fetching services @ 06/18/24 08:35:06.531
  Jun 18 08:35:06.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5203" for this suite. @ 06/18/24 08:35:06.54
• [0.042 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/18/24 08:35:06.544
  Jun 18 08:35:06.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 08:35:06.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:06.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:06.563
  STEP: Setting up server cert @ 06/18/24 08:35:06.584
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 08:35:07.125
  STEP: Deploying the webhook pod @ 06/18/24 08:35:07.132
  STEP: Wait for the deployment to be ready @ 06/18/24 08:35:07.142
  Jun 18 08:35:07.147: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 08:35:09.159
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:35:09.178
  Jun 18 08:35:10.179: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/18/24 08:35:10.185
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 08:35:10.206
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/18/24 08:35:10.217
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 08:35:10.228
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/18/24 08:35:10.238
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 08:35:10.245
  Jun 18 08:35:10.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5168" for this suite. @ 06/18/24 08:35:10.291
  STEP: Destroying namespace "webhook-markers-167" for this suite. @ 06/18/24 08:35:10.297
• [3.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/18/24 08:35:10.303
  Jun 18 08:35:10.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 08:35:10.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:10.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:10.322
  STEP: Creating a pod to test downward api env vars @ 06/18/24 08:35:10.327
  STEP: Saw pod success @ 06/18/24 08:35:14.35
  Jun 18 08:35:14.353: INFO: Trying to get logs from node ck-129-worker-1 pod downward-api-e9840cbd-78e6-4bd7-9e52-e8027ba96cd6 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 08:35:14.362
  Jun 18 08:35:14.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-750" for this suite. @ 06/18/24 08:35:14.381
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/18/24 08:35:14.388
  Jun 18 08:35:14.388: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 08:35:14.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:14.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:14.402
  STEP: creating a Deployment @ 06/18/24 08:35:14.408
  STEP: waiting for Deployment to be created @ 06/18/24 08:35:14.414
  STEP: waiting for all Replicas to be Ready @ 06/18/24 08:35:14.417
  Jun 18 08:35:14.419: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:14.419: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:14.426: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:14.426: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:14.443: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:14.443: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:14.456: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:14.456: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 18 08:35:15.695: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 18 08:35:15.695: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 18 08:35:15.978: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/18/24 08:35:15.979
  Jun 18 08:35:15.994: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/18/24 08:35:15.994
  Jun 18 08:35:15.996: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.996: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.996: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.996: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.996: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.996: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 0
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:15.997: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:16.004: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:16.004: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:16.022: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:16.022: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:16.029: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:16.029: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:16.043: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:16.043: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:16.712: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:16.712: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:16.736: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  STEP: listing Deployments @ 06/18/24 08:35:16.736
  Jun 18 08:35:16.740: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/18/24 08:35:16.74
  Jun 18 08:35:16.750: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/18/24 08:35:16.75
  Jun 18 08:35:16.756: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:16.771: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:16.785: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:16.814: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:16.832: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:17.999: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:18.012: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:18.023: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:18.032: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:18.038: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 18 08:35:19.250: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/18/24 08:35:19.275
  STEP: fetching the DeploymentStatus @ 06/18/24 08:35:19.284
  Jun 18 08:35:19.290: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:19.291: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:19.291: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:19.291: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:19.291: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 1
  Jun 18 08:35:19.291: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:19.292: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:19.292: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:19.292: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:19.292: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 2
  Jun 18 08:35:19.292: INFO: observed Deployment test-deployment in namespace deployment-9857 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/18/24 08:35:19.292
  Jun 18 08:35:19.301: INFO: observed event type MODIFIED
  Jun 18 08:35:19.301: INFO: observed event type MODIFIED
  Jun 18 08:35:19.301: INFO: observed event type MODIFIED
  Jun 18 08:35:19.301: INFO: observed event type MODIFIED
  Jun 18 08:35:19.301: INFO: observed event type MODIFIED
  Jun 18 08:35:19.302: INFO: observed event type MODIFIED
  Jun 18 08:35:19.302: INFO: observed event type MODIFIED
  Jun 18 08:35:19.303: INFO: observed event type MODIFIED
  Jun 18 08:35:19.303: INFO: observed event type MODIFIED
  Jun 18 08:35:19.303: INFO: observed event type MODIFIED
  Jun 18 08:35:19.303: INFO: observed event type MODIFIED
  Jun 18 08:35:19.303: INFO: observed event type MODIFIED
  Jun 18 08:35:19.303: INFO: observed event type MODIFIED
  Jun 18 08:35:19.303: INFO: observed event type MODIFIED
  Jun 18 08:35:19.312: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun 18 08:35:19.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9857" for this suite. @ 06/18/24 08:35:19.319
• [4.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/18/24 08:35:19.33
  Jun 18 08:35:19.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename watch @ 06/18/24 08:35:19.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:19.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:19.347
  STEP: creating a watch on configmaps with a certain label @ 06/18/24 08:35:19.353
  STEP: creating a new configmap @ 06/18/24 08:35:19.355
  STEP: modifying the configmap once @ 06/18/24 08:35:19.36
  STEP: changing the label value of the configmap @ 06/18/24 08:35:19.368
  STEP: Expecting to observe a delete notification for the watched object @ 06/18/24 08:35:19.375
  Jun 18 08:35:19.375: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7690  ebfa2b41-11c3-4f19-ae04-7ad182104596 7653 0 2024-06-18 08:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 08:35:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:35:19.376: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7690  ebfa2b41-11c3-4f19-ae04-7ad182104596 7654 0 2024-06-18 08:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 08:35:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:35:19.376: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7690  ebfa2b41-11c3-4f19-ae04-7ad182104596 7655 0 2024-06-18 08:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 08:35:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/18/24 08:35:19.376
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/18/24 08:35:19.382
  STEP: changing the label value of the configmap back @ 06/18/24 08:35:29.383
  STEP: modifying the configmap a third time @ 06/18/24 08:35:29.394
  STEP: deleting the configmap @ 06/18/24 08:35:29.403
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/18/24 08:35:29.408
  Jun 18 08:35:29.408: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7690  ebfa2b41-11c3-4f19-ae04-7ad182104596 7764 0 2024-06-18 08:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 08:35:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:35:29.409: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7690  ebfa2b41-11c3-4f19-ae04-7ad182104596 7765 0 2024-06-18 08:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 08:35:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:35:29.410: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7690  ebfa2b41-11c3-4f19-ae04-7ad182104596 7766 0 2024-06-18 08:35:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-18 08:35:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:35:29.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7690" for this suite. @ 06/18/24 08:35:29.419
• [10.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/18/24 08:35:29.431
  Jun 18 08:35:29.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:35:29.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:29.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:29.455
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:35:29.459
  STEP: Saw pod success @ 06/18/24 08:35:33.486
  Jun 18 08:35:33.489: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-55a5b7b9-dba3-4149-9118-1928b669550f container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:35:33.496
  Jun 18 08:35:33.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3957" for this suite. @ 06/18/24 08:35:33.52
• [4.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/18/24 08:35:33.53
  Jun 18 08:35:33.530: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 08:35:33.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:33.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:33.552
  STEP: getting /apis @ 06/18/24 08:35:33.557
  STEP: getting /apis/discovery.k8s.io @ 06/18/24 08:35:33.564
  STEP: getting /apis/discovery.k8s.iov1 @ 06/18/24 08:35:33.566
  STEP: creating @ 06/18/24 08:35:33.568
  STEP: getting @ 06/18/24 08:35:33.584
  STEP: listing @ 06/18/24 08:35:33.588
  STEP: watching @ 06/18/24 08:35:33.591
  Jun 18 08:35:33.591: INFO: starting watch
  STEP: cluster-wide listing @ 06/18/24 08:35:33.593
  STEP: cluster-wide watching @ 06/18/24 08:35:33.596
  Jun 18 08:35:33.596: INFO: starting watch
  STEP: patching @ 06/18/24 08:35:33.597
  STEP: updating @ 06/18/24 08:35:33.602
  Jun 18 08:35:33.609: INFO: waiting for watch events with expected annotations
  Jun 18 08:35:33.609: INFO: saw patched and updated annotations
  STEP: deleting @ 06/18/24 08:35:33.61
  STEP: deleting a collection @ 06/18/24 08:35:33.62
  Jun 18 08:35:33.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8193" for this suite. @ 06/18/24 08:35:33.637
• [0.111 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/18/24 08:35:33.641
  Jun 18 08:35:33.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 08:35:33.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:35:33.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:35:33.665
  STEP: referencing a single matching pod @ 06/18/24 08:35:38.756
  STEP: referencing matching pods with named port @ 06/18/24 08:35:43.764
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/18/24 08:35:48.772
  STEP: recreating EndpointSlices after they've been deleted @ 06/18/24 08:35:53.781
  Jun 18 08:35:53.796: INFO: EndpointSlice for Service endpointslice-973/example-named-port not found
  Jun 18 08:36:03.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-973" for this suite. @ 06/18/24 08:36:03.806
• [30.174 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/18/24 08:36:03.815
  Jun 18 08:36:03.815: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:36:03.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:36:03.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:36:03.838
  STEP: Creating projection with secret that has name projected-secret-test-5212ccd5-8c8a-44ed-b301-e78b92e5a1ef @ 06/18/24 08:36:03.841
  STEP: Creating a pod to test consume secrets @ 06/18/24 08:36:03.844
  STEP: Saw pod success @ 06/18/24 08:36:07.864
  Jun 18 08:36:07.867: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-secrets-2cbd9b35-584b-41cf-b58d-7931ba847721 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 08:36:07.876
  Jun 18 08:36:07.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7290" for this suite. @ 06/18/24 08:36:07.891
• [4.080 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/18/24 08:36:07.895
  Jun 18 08:36:07.895: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 08:36:07.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:36:07.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:36:07.914
  STEP: create the container @ 06/18/24 08:36:07.921
  W0618 08:36:07.931848      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/18/24 08:36:07.932
  STEP: get the container status @ 06/18/24 08:36:10.949
  STEP: the container should be terminated @ 06/18/24 08:36:10.953
  STEP: the termination message should be set @ 06/18/24 08:36:10.953
  Jun 18 08:36:10.953: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/18/24 08:36:10.953
  Jun 18 08:36:10.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6036" for this suite. @ 06/18/24 08:36:10.971
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/18/24 08:36:10.978
  Jun 18 08:36:10.978: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 08:36:10.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:36:10.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:36:10.999
  STEP: Creating secret with name s-test-opt-del-63adf4df-375f-416f-a1e6-143e6d4727df @ 06/18/24 08:36:11.007
  STEP: Creating secret with name s-test-opt-upd-7152cf4b-2125-46a5-bf4b-6e4e7520db8f @ 06/18/24 08:36:11.011
  STEP: Creating the pod @ 06/18/24 08:36:11.014
  STEP: Deleting secret s-test-opt-del-63adf4df-375f-416f-a1e6-143e6d4727df @ 06/18/24 08:36:13.05
  STEP: Updating secret s-test-opt-upd-7152cf4b-2125-46a5-bf4b-6e4e7520db8f @ 06/18/24 08:36:13.056
  STEP: Creating secret with name s-test-opt-create-f08d3d73-97ab-40a4-b24f-78e8a57e07c5 @ 06/18/24 08:36:13.061
  STEP: waiting to observe update in volume @ 06/18/24 08:36:13.064
  Jun 18 08:36:15.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-797" for this suite. @ 06/18/24 08:36:15.098
• [4.126 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/18/24 08:36:15.104
  Jun 18 08:36:15.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:36:15.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:36:15.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:36:15.124
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:36:15.127
  STEP: Saw pod success @ 06/18/24 08:36:17.148
  Jun 18 08:36:17.152: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-3fc50cab-52e5-4fc9-9c60-7b3e6b3f203d container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:36:17.158
  Jun 18 08:36:17.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9292" for this suite. @ 06/18/24 08:36:17.178
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/18/24 08:36:17.183
  Jun 18 08:36:17.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 08:36:17.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:36:17.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:36:17.204
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 08:36:17.212
  STEP: create the pod with lifecycle hook @ 06/18/24 08:36:19.234
  STEP: delete the pod with lifecycle hook @ 06/18/24 08:36:21.251
  STEP: check prestop hook @ 06/18/24 08:36:23.265
  Jun 18 08:36:23.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8915" for this suite. @ 06/18/24 08:36:23.277
• [6.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/18/24 08:36:23.283
  Jun 18 08:36:23.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 08:36:23.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:36:23.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:36:23.3
  STEP: Creating pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716 @ 06/18/24 08:36:23.304
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 08:36:25.322
  Jun 18 08:36:25.324: INFO: Initial restart count of pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 is 0
  Jun 18 08:36:25.327: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:27.330: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:29.335: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:31.339: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:33.344: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:35.349: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:37.354: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:39.360: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:41.365: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:43.372: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:45.377: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:47.382: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:49.387: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:51.393: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:53.399: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:55.404: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:57.409: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:36:59.416: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:01.420: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:03.426: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:05.432: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:07.437: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:09.442: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:11.447: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:13.452: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:15.459: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:17.465: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:19.471: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:21.477: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:23.482: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:25.488: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:27.492: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:29.498: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:31.502: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:33.506: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:35.515: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:37.520: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:39.526: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:41.533: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:43.539: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:45.544: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:47.549: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:49.554: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:51.559: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:53.563: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:55.570: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:57.576: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:37:59.581: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:01.587: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:03.593: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:05.601: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:07.606: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:09.611: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:11.617: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:13.623: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:15.631: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:17.637: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:19.641: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:21.647: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:23.652: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:25.656: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:27.661: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:29.667: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:31.670: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:33.675: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:35.681: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:37.685: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:39.690: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:41.696: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:43.700: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:45.707: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:47.713: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:49.718: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:51.722: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:53.726: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:55.733: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:57.737: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:38:59.743: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:01.747: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:03.752: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:05.759: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:07.763: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:09.768: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:11.775: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:13.779: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:15.784: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:17.790: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:19.796: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:21.801: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:23.806: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:25.812: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:27.817: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:29.822: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:31.826: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:33.832: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:35.839: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:37.844: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:39.850: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:41.854: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:43.860: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:45.865: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:47.869: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:49.875: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:51.880: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:53.884: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:55.889: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:57.893: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:39:59.899: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:01.904: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:03.910: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:05.916: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:07.921: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:09.926: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:11.932: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:13.937: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:15.945: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:17.949: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:19.961: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:21.967: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  Jun 18 08:40:23.971: INFO: Get pod test-grpc-d3281c8f-ba79-4d5a-a84f-a4a55d46c2f8 in namespace container-probe-4716
  STEP: deleting the pod @ 06/18/24 08:40:25.973
  Jun 18 08:40:25.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4716" for this suite. @ 06/18/24 08:40:25.993
• [242.715 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/18/24 08:40:26.004
  Jun 18 08:40:26.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 08:40:26.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:40:26.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:40:26.024
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 08:40:26.032
  STEP: create the pod with lifecycle hook @ 06/18/24 08:40:28.05
  STEP: delete the pod with lifecycle hook @ 06/18/24 08:40:30.065
  STEP: check prestop hook @ 06/18/24 08:40:32.078
  Jun 18 08:40:32.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2662" for this suite. @ 06/18/24 08:40:32.092
• [6.094 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/18/24 08:40:32.098
  Jun 18 08:40:32.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 08:40:32.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:40:32.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:40:32.115
  STEP: fetching the /apis discovery document @ 06/18/24 08:40:32.119
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/18/24 08:40:32.12
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/18/24 08:40:32.12
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/18/24 08:40:32.12
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/18/24 08:40:32.121
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/18/24 08:40:32.121
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/18/24 08:40:32.122
  Jun 18 08:40:32.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2839" for this suite. @ 06/18/24 08:40:32.126
• [0.032 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/18/24 08:40:32.13
  Jun 18 08:40:32.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 08:40:32.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:40:32.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:40:32.147
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 08:40:32.149
  Jun 18 08:40:32.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2057 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 18 08:40:32.264: INFO: stderr: ""
  Jun 18 08:40:32.264: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/18/24 08:40:32.264
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/18/24 08:40:37.316
  Jun 18 08:40:37.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2057 get pod e2e-test-httpd-pod -o json'
  Jun 18 08:40:37.402: INFO: stderr: ""
  Jun 18 08:40:37.402: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"de4d7604a1a15edb666fbd58707e32270f219f42e1b03613f64618bae3efdf98\",\n            \"cni.projectcalico.org/podIP\": \"172.16.240.118/32\",\n            \"cni.projectcalico.org/podIPs\": \"172.16.240.118/32\"\n        },\n        \"creationTimestamp\": \"2024-06-18T08:40:32Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2057\",\n        \"resourceVersion\": \"8705\",\n        \"uid\": \"4c2b9ef3-e4e0-4948-862f-ff820cf081e7\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5b6jr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ck-129-worker-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-5b6jr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T08:40:33Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T08:40:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T08:40:33Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T08:40:33Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-18T08:40:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://49cbf9df2e0f400ca63f474b22f727942928aab149e26863053af16528e0493d\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-18T08:40:32Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.190.166\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.190.166\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.16.240.118\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.16.240.118\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-18T08:40:32Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/18/24 08:40:37.402
  Jun 18 08:40:37.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2057 replace -f -'
  Jun 18 08:40:37.592: INFO: stderr: ""
  Jun 18 08:40:37.592: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/18/24 08:40:37.592
  Jun 18 08:40:37.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2057 delete pods e2e-test-httpd-pod'
  Jun 18 08:40:38.849: INFO: stderr: ""
  Jun 18 08:40:38.849: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 18 08:40:38.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2057" for this suite. @ 06/18/24 08:40:38.855
• [6.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/18/24 08:40:38.863
  Jun 18 08:40:38.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 08:40:38.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:40:38.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:40:38.883
  STEP: Counting existing ResourceQuota @ 06/18/24 08:40:38.887
  STEP: Creating a ResourceQuota @ 06/18/24 08:40:43.891
  STEP: Ensuring resource quota status is calculated @ 06/18/24 08:40:43.898
  STEP: Creating a Service @ 06/18/24 08:40:45.907
  STEP: Creating a NodePort Service @ 06/18/24 08:40:45.93
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/18/24 08:40:45.962
  STEP: Ensuring resource quota status captures service creation @ 06/18/24 08:40:45.987
  STEP: Deleting Services @ 06/18/24 08:40:47.991
  STEP: Ensuring resource quota status released usage @ 06/18/24 08:40:48.032
  Jun 18 08:40:50.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9249" for this suite. @ 06/18/24 08:40:50.04
• [11.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/18/24 08:40:50.046
  Jun 18 08:40:50.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename proxy @ 06/18/24 08:40:50.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:40:50.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:40:50.064
  Jun 18 08:40:50.068: INFO: Creating pod...
  Jun 18 08:40:52.085: INFO: Creating service...
  Jun 18 08:40:52.097: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/pods/agnhost/proxy/some/path/with/DELETE
  Jun 18 08:40:52.105: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 08:40:52.105: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/pods/agnhost/proxy/some/path/with/GET
  Jun 18 08:40:52.109: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 18 08:40:52.109: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/pods/agnhost/proxy/some/path/with/HEAD
  Jun 18 08:40:52.112: INFO: http.Client request:HEAD | StatusCode:200
  Jun 18 08:40:52.112: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun 18 08:40:52.116: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 08:40:52.116: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/pods/agnhost/proxy/some/path/with/PATCH
  Jun 18 08:40:52.122: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 08:40:52.122: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/pods/agnhost/proxy/some/path/with/POST
  Jun 18 08:40:52.125: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 08:40:52.125: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/pods/agnhost/proxy/some/path/with/PUT
  Jun 18 08:40:52.130: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 08:40:52.130: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/services/test-service/proxy/some/path/with/DELETE
  Jun 18 08:40:52.134: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 08:40:52.134: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/services/test-service/proxy/some/path/with/GET
  Jun 18 08:40:52.139: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 18 08:40:52.139: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/services/test-service/proxy/some/path/with/HEAD
  Jun 18 08:40:52.143: INFO: http.Client request:HEAD | StatusCode:200
  Jun 18 08:40:52.143: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/services/test-service/proxy/some/path/with/OPTIONS
  Jun 18 08:40:52.147: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 08:40:52.147: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/services/test-service/proxy/some/path/with/PATCH
  Jun 18 08:40:52.150: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 08:40:52.150: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/services/test-service/proxy/some/path/with/POST
  Jun 18 08:40:52.153: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 08:40:52.153: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-708/services/test-service/proxy/some/path/with/PUT
  Jun 18 08:40:52.156: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 08:40:52.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-708" for this suite. @ 06/18/24 08:40:52.162
• [2.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/18/24 08:40:52.172
  Jun 18 08:40:52.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename disruption @ 06/18/24 08:40:52.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:40:52.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:40:52.19
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/18/24 08:40:52.193
  STEP: Waiting for the pdb to be processed @ 06/18/24 08:40:52.198
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/18/24 08:40:52.206
  STEP: Waiting for all pods to be running @ 06/18/24 08:40:52.206
  Jun 18 08:40:52.209: INFO: pods: 0 < 3
  STEP: locating a running pod @ 06/18/24 08:40:54.213
  STEP: Updating the pdb to allow a pod to be evicted @ 06/18/24 08:40:54.223
  STEP: Waiting for the pdb to be processed @ 06/18/24 08:40:54.232
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/18/24 08:40:56.237
  STEP: Waiting for all pods to be running @ 06/18/24 08:40:56.237
  STEP: Waiting for the pdb to observed all healthy pods @ 06/18/24 08:40:56.241
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/18/24 08:40:56.264
  STEP: Waiting for the pdb to be processed @ 06/18/24 08:40:56.286
  STEP: Waiting for all pods to be running @ 06/18/24 08:40:58.291
  STEP: locating a running pod @ 06/18/24 08:40:58.294
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/18/24 08:40:58.301
  STEP: Waiting for the pdb to be deleted @ 06/18/24 08:40:58.305
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/18/24 08:40:58.307
  STEP: Waiting for all pods to be running @ 06/18/24 08:40:58.307
  Jun 18 08:40:58.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5437" for this suite. @ 06/18/24 08:40:58.329
• [6.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/18/24 08:40:58.338
  Jun 18 08:40:58.338: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 08:40:58.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:40:58.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:40:58.357
  STEP: Setting up server cert @ 06/18/24 08:40:58.374
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 08:40:58.768
  STEP: Deploying the webhook pod @ 06/18/24 08:40:58.776
  STEP: Wait for the deployment to be ready @ 06/18/24 08:40:58.786
  Jun 18 08:40:58.791: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 08:41:00.8
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:41:00.813
  Jun 18 08:41:01.813: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/18/24 08:41:01.82
  STEP: create a configmap that should be updated by the webhook @ 06/18/24 08:41:01.841
  Jun 18 08:41:01.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6089" for this suite. @ 06/18/24 08:41:01.909
  STEP: Destroying namespace "webhook-markers-3350" for this suite. @ 06/18/24 08:41:01.918
• [3.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/18/24 08:41:01.925
  Jun 18 08:41:01.925: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 08:41:01.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:01.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:01.943
  STEP: apply creating a deployment @ 06/18/24 08:41:01.947
  Jun 18 08:41:01.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3254" for this suite. @ 06/18/24 08:41:01.961
• [0.042 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/18/24 08:41:01.967
  Jun 18 08:41:01.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 08:41:01.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:01.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:01.984
  Jun 18 08:41:04.001: INFO: Deleting pod "var-expansion-3b75785a-8931-4c35-90e8-35debd08edc4" in namespace "var-expansion-7433"
  Jun 18 08:41:04.009: INFO: Wait up to 5m0s for pod "var-expansion-3b75785a-8931-4c35-90e8-35debd08edc4" to be fully deleted
  Jun 18 08:41:06.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7433" for this suite. @ 06/18/24 08:41:06.021
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/18/24 08:41:06.03
  Jun 18 08:41:06.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 08:41:06.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:06.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:06.047
  STEP: Creating namespace "e2e-ns-vxxpm" @ 06/18/24 08:41:06.05
  Jun 18 08:41:06.060: INFO: Namespace "e2e-ns-vxxpm-8023" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-vxxpm-8023" @ 06/18/24 08:41:06.06
  Jun 18 08:41:06.066: INFO: Namespace "e2e-ns-vxxpm-8023" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-vxxpm-8023" @ 06/18/24 08:41:06.066
  Jun 18 08:41:06.072: INFO: Namespace "e2e-ns-vxxpm-8023" has []v1.FinalizerName{"kubernetes"}
  Jun 18 08:41:06.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-951" for this suite. @ 06/18/24 08:41:06.077
  STEP: Destroying namespace "e2e-ns-vxxpm-8023" for this suite. @ 06/18/24 08:41:06.081
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/18/24 08:41:06.086
  Jun 18 08:41:06.086: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 08:41:06.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:06.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:06.102
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4669.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4669.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/18/24 08:41:06.105
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4669.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4669.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/18/24 08:41:06.105
  STEP: creating a pod to probe /etc/hosts @ 06/18/24 08:41:06.105
  STEP: submitting the pod to kubernetes @ 06/18/24 08:41:06.105
  STEP: retrieving the pod @ 06/18/24 08:41:08.123
  STEP: looking for the results for each expected name from probers @ 06/18/24 08:41:08.126
  Jun 18 08:41:08.139: INFO: DNS probes using dns-4669/dns-test-e03bec71-ab5a-47db-87cb-83e78d80ede0 succeeded

  STEP: deleting the pod @ 06/18/24 08:41:08.139
  Jun 18 08:41:08.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4669" for this suite. @ 06/18/24 08:41:08.156
• [2.074 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/18/24 08:41:08.16
  Jun 18 08:41:08.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 08:41:08.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:08.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:08.183
  STEP: creating service nodeport-test with type=NodePort in namespace services-5009 @ 06/18/24 08:41:08.195
  STEP: creating replication controller nodeport-test in namespace services-5009 @ 06/18/24 08:41:08.217
  I0618 08:41:08.234553      17 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5009, replica count: 2
  I0618 08:41:11.286883      17 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 08:41:11.287: INFO: Creating new exec pod
  Jun 18 08:41:14.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5009 exec execpod98wpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun 18 08:41:14.443: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun 18 08:41:14.444: INFO: stdout: "nodeport-test-r9dct"
  Jun 18 08:41:14.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5009 exec execpod98wpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.105.199.5 80'
  Jun 18 08:41:14.569: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.105.199.5 80\nConnection to 10.105.199.5 80 port [tcp/http] succeeded!\n"
  Jun 18 08:41:14.569: INFO: stdout: "nodeport-test-vg48h"
  Jun 18 08:41:14.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5009 exec execpod98wpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 30917'
  Jun 18 08:41:14.684: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 30917\nConnection to 192.168.190.167 30917 port [tcp/*] succeeded!\n"
  Jun 18 08:41:14.684: INFO: stdout: ""
  Jun 18 08:41:15.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5009 exec execpod98wpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 30917'
  Jun 18 08:41:15.713: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 30917\nConnection to 192.168.190.167 30917 port [tcp/*] succeeded!\n"
  Jun 18 08:41:15.713: INFO: stdout: "nodeport-test-vg48h"
  Jun 18 08:41:15.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5009 exec execpod98wpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 30917'
  Jun 18 08:41:15.858: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 30917\nConnection to 192.168.190.169 30917 port [tcp/*] succeeded!\n"
  Jun 18 08:41:15.858: INFO: stdout: ""
  Jun 18 08:41:16.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5009 exec execpod98wpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 30917'
  Jun 18 08:41:16.909: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 30917\nConnection to 192.168.190.169 30917 port [tcp/*] succeeded!\n"
  Jun 18 08:41:16.909: INFO: stdout: ""
  Jun 18 08:41:17.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5009 exec execpod98wpw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 30917'
  Jun 18 08:41:17.854: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 30917\nConnection to 192.168.190.169 30917 port [tcp/*] succeeded!\n"
  Jun 18 08:41:17.854: INFO: stdout: "nodeport-test-vg48h"
  Jun 18 08:41:17.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5009" for this suite. @ 06/18/24 08:41:17.861
• [9.706 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/18/24 08:41:17.867
  Jun 18 08:41:17.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 08:41:17.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:17.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:17.886
  STEP: Create set of pods @ 06/18/24 08:41:17.889
  Jun 18 08:41:17.897: INFO: created test-pod-1
  Jun 18 08:41:17.903: INFO: created test-pod-2
  Jun 18 08:41:17.914: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/18/24 08:41:17.914
  STEP: waiting for all pods to be deleted @ 06/18/24 08:41:19.957
  Jun 18 08:41:19.963: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 18 08:41:20.962: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 18 08:41:21.961: INFO: Pod quantity 1 is different from expected quantity 0
  Jun 18 08:41:22.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8579" for this suite. @ 06/18/24 08:41:22.967
• [5.104 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/18/24 08:41:22.98
  Jun 18 08:41:22.980: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 08:41:22.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:22.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:23.001
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/18/24 08:41:23.005
  STEP: Saw pod success @ 06/18/24 08:41:27.026
  Jun 18 08:41:27.030: INFO: Trying to get logs from node ck-129-worker-2 pod pod-f3d7c09b-f289-4188-9699-28947469c6bf container test-container: <nil>
  STEP: delete the pod @ 06/18/24 08:41:27.048
  Jun 18 08:41:27.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9735" for this suite. @ 06/18/24 08:41:27.068
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/18/24 08:41:27.074
  Jun 18 08:41:27.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename discovery @ 06/18/24 08:41:27.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:27.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:27.095
  STEP: Setting up server cert @ 06/18/24 08:41:27.101
  Jun 18 08:41:27.644: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun 18 08:41:27.645: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun 18 08:41:27.645: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun 18 08:41:27.645: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun 18 08:41:27.645: INFO: Checking APIGroup: apps
  Jun 18 08:41:27.646: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun 18 08:41:27.646: INFO: Versions found [{apps/v1 v1}]
  Jun 18 08:41:27.646: INFO: apps/v1 matches apps/v1
  Jun 18 08:41:27.646: INFO: Checking APIGroup: events.k8s.io
  Jun 18 08:41:27.647: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun 18 08:41:27.647: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun 18 08:41:27.647: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun 18 08:41:27.647: INFO: Checking APIGroup: authentication.k8s.io
  Jun 18 08:41:27.648: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun 18 08:41:27.648: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun 18 08:41:27.648: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun 18 08:41:27.648: INFO: Checking APIGroup: authorization.k8s.io
  Jun 18 08:41:27.649: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun 18 08:41:27.649: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun 18 08:41:27.649: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun 18 08:41:27.649: INFO: Checking APIGroup: autoscaling
  Jun 18 08:41:27.650: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun 18 08:41:27.650: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun 18 08:41:27.650: INFO: autoscaling/v2 matches autoscaling/v2
  Jun 18 08:41:27.650: INFO: Checking APIGroup: batch
  Jun 18 08:41:27.652: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun 18 08:41:27.652: INFO: Versions found [{batch/v1 v1}]
  Jun 18 08:41:27.652: INFO: batch/v1 matches batch/v1
  Jun 18 08:41:27.652: INFO: Checking APIGroup: certificates.k8s.io
  Jun 18 08:41:27.653: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun 18 08:41:27.653: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun 18 08:41:27.653: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun 18 08:41:27.653: INFO: Checking APIGroup: networking.k8s.io
  Jun 18 08:41:27.654: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun 18 08:41:27.654: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun 18 08:41:27.654: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun 18 08:41:27.654: INFO: Checking APIGroup: policy
  Jun 18 08:41:27.655: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun 18 08:41:27.655: INFO: Versions found [{policy/v1 v1}]
  Jun 18 08:41:27.655: INFO: policy/v1 matches policy/v1
  Jun 18 08:41:27.655: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun 18 08:41:27.656: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun 18 08:41:27.657: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun 18 08:41:27.657: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun 18 08:41:27.657: INFO: Checking APIGroup: storage.k8s.io
  Jun 18 08:41:27.658: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun 18 08:41:27.658: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun 18 08:41:27.658: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun 18 08:41:27.658: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun 18 08:41:27.659: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun 18 08:41:27.659: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun 18 08:41:27.659: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun 18 08:41:27.659: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun 18 08:41:27.660: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun 18 08:41:27.660: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun 18 08:41:27.660: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun 18 08:41:27.660: INFO: Checking APIGroup: scheduling.k8s.io
  Jun 18 08:41:27.661: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun 18 08:41:27.661: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun 18 08:41:27.661: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun 18 08:41:27.661: INFO: Checking APIGroup: coordination.k8s.io
  Jun 18 08:41:27.662: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun 18 08:41:27.662: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun 18 08:41:27.662: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun 18 08:41:27.662: INFO: Checking APIGroup: node.k8s.io
  Jun 18 08:41:27.664: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun 18 08:41:27.664: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun 18 08:41:27.664: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun 18 08:41:27.664: INFO: Checking APIGroup: discovery.k8s.io
  Jun 18 08:41:27.665: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun 18 08:41:27.665: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun 18 08:41:27.665: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun 18 08:41:27.665: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun 18 08:41:27.666: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun 18 08:41:27.667: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun 18 08:41:27.667: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun 18 08:41:27.667: INFO: Checking APIGroup: crd.projectcalico.org
  Jun 18 08:41:27.668: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Jun 18 08:41:27.668: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Jun 18 08:41:27.668: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Jun 18 08:41:27.668: INFO: Checking APIGroup: gitlab.secloudit.io
  Jun 18 08:41:27.670: INFO: PreferredVersion.GroupVersion: gitlab.secloudit.io/v1
  Jun 18 08:41:27.670: INFO: Versions found [{gitlab.secloudit.io/v1 v1}]
  Jun 18 08:41:27.670: INFO: gitlab.secloudit.io/v1 matches gitlab.secloudit.io/v1
  Jun 18 08:41:27.670: INFO: Checking APIGroup: workload.secloudit.io
  Jun 18 08:41:27.672: INFO: PreferredVersion.GroupVersion: workload.secloudit.io/v1
  Jun 18 08:41:27.672: INFO: Versions found [{workload.secloudit.io/v1 v1}]
  Jun 18 08:41:27.672: INFO: workload.secloudit.io/v1 matches workload.secloudit.io/v1
  Jun 18 08:41:27.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9584" for this suite. @ 06/18/24 08:41:27.677
• [0.609 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/18/24 08:41:27.683
  Jun 18 08:41:27.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 08:41:27.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:27.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:27.699
  Jun 18 08:41:49.784: INFO: Container started at 2024-06-18 08:41:28 +0000 UTC, pod became ready at 2024-06-18 08:41:48 +0000 UTC
  Jun 18 08:41:49.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9405" for this suite. @ 06/18/24 08:41:49.789
• [22.110 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/18/24 08:41:49.794
  Jun 18 08:41:49.794: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename containers @ 06/18/24 08:41:49.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:49.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:49.816
  STEP: Creating a pod to test override arguments @ 06/18/24 08:41:49.82
  STEP: Saw pod success @ 06/18/24 08:41:53.841
  Jun 18 08:41:53.844: INFO: Trying to get logs from node ck-129-worker-2 pod client-containers-6596c403-f21b-4111-b13a-bced0bcbd20b container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 08:41:53.851
  Jun 18 08:41:53.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3441" for this suite. @ 06/18/24 08:41:53.868
• [4.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/18/24 08:41:53.873
  Jun 18 08:41:53.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 08:41:53.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:41:53.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:41:53.89
  STEP: Setting up server cert @ 06/18/24 08:41:53.906
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 08:41:54.721
  STEP: Deploying the webhook pod @ 06/18/24 08:41:54.728
  STEP: Wait for the deployment to be ready @ 06/18/24 08:41:54.738
  Jun 18 08:41:54.747: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 08:41:56.757
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:41:56.772
  Jun 18 08:41:57.772: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/18/24 08:41:57.779
  STEP: create a pod that should be denied by the webhook @ 06/18/24 08:41:57.8
  STEP: create a pod that causes the webhook to hang @ 06/18/24 08:41:57.819
  STEP: create a configmap that should be denied by the webhook @ 06/18/24 08:42:07.828
  STEP: create a configmap that should be admitted by the webhook @ 06/18/24 08:42:07.836
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/18/24 08:42:07.845
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/18/24 08:42:07.852
  STEP: create a namespace that bypass the webhook @ 06/18/24 08:42:07.857
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/18/24 08:42:07.867
  Jun 18 08:42:07.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6568" for this suite. @ 06/18/24 08:42:07.923
  STEP: Destroying namespace "webhook-markers-1665" for this suite. @ 06/18/24 08:42:07.928
  STEP: Destroying namespace "exempted-namespace-1165" for this suite. @ 06/18/24 08:42:07.932
• [14.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/18/24 08:42:07.94
  Jun 18 08:42:07.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 08:42:07.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:07.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:07.958
  STEP: Creating a cronjob @ 06/18/24 08:42:07.962
  STEP: creating @ 06/18/24 08:42:07.962
  STEP: getting @ 06/18/24 08:42:07.966
  STEP: listing @ 06/18/24 08:42:07.969
  STEP: watching @ 06/18/24 08:42:07.971
  Jun 18 08:42:07.971: INFO: starting watch
  STEP: cluster-wide listing @ 06/18/24 08:42:07.972
  STEP: cluster-wide watching @ 06/18/24 08:42:07.974
  Jun 18 08:42:07.974: INFO: starting watch
  STEP: patching @ 06/18/24 08:42:07.976
  STEP: updating @ 06/18/24 08:42:07.981
  Jun 18 08:42:07.989: INFO: waiting for watch events with expected annotations
  Jun 18 08:42:07.989: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/18/24 08:42:07.989
  STEP: updating /status @ 06/18/24 08:42:07.995
  STEP: get /status @ 06/18/24 08:42:08.006
  STEP: deleting @ 06/18/24 08:42:08.01
  STEP: deleting a collection @ 06/18/24 08:42:08.023
  Jun 18 08:42:08.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2489" for this suite. @ 06/18/24 08:42:08.035
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/18/24 08:42:08.045
  Jun 18 08:42:08.045: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:42:08.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:08.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:08.063
  STEP: Creating projection with secret that has name projected-secret-test-map-26886e1d-da8f-4f69-8c37-9e76993b5b66 @ 06/18/24 08:42:08.066
  STEP: Creating a pod to test consume secrets @ 06/18/24 08:42:08.07
  STEP: Saw pod success @ 06/18/24 08:42:12.092
  Jun 18 08:42:12.095: INFO: Trying to get logs from node ck-129-worker-2 pod pod-projected-secrets-f08ceb58-7914-4e41-9b23-310d3f8a3298 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 08:42:12.101
  Jun 18 08:42:12.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2334" for this suite. @ 06/18/24 08:42:12.117
• [4.077 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/18/24 08:42:12.123
  Jun 18 08:42:12.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 08:42:12.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:12.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:12.137
  Jun 18 08:42:12.141: INFO: Creating deployment "test-recreate-deployment"
  Jun 18 08:42:12.147: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun 18 08:42:12.152: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jun 18 08:42:14.160: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun 18 08:42:14.162: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun 18 08:42:14.172: INFO: Updating deployment test-recreate-deployment
  Jun 18 08:42:14.172: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun 18 08:42:14.256: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d897fd19-b5bb-4c23-a961-52194a9a0267",
      ResourceVersion: (string) (len=4) "9780",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854296932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 08:42:14.264: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2d58850-f112-4212-87ba-8476564f7e11",
      ResourceVersion: (string) (len=4) "9779",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854296934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d897fd19-b5bb-4c23-a961-52194a9a0267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 38 39 37 66 64  31 39 2d 62 35 62 62 2d  |\"d897fd19-b5bb-|
              00000120  34 63 32 33 2d 61 39 36  31 2d 35 32 31 39 34 61  |4c23-a961-52194a|
              00000130  39 61 30 32 36 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9a0267\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 08:42:14.267: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun 18 08:42:14.270: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58e82b41-d513-4b32-9d12-bac9969938c7",
      ResourceVersion: (string) (len=4) "9768",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854296932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "d897fd19-b5bb-4c23-a961-52194a9a0267",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 38 39 37 66 64  31 39 2d 62 35 62 62 2d  |\"d897fd19-b5bb-|
              00000120  34 63 32 33 2d 61 39 36  31 2d 35 32 31 39 34 61  |4c23-a961-52194a|
              00000130  39 61 30 32 36 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9a0267\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 08:42:14.278: INFO: Pod "test-recreate-deployment-76fb77d45-fthkv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-fthkv",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-5312",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07154c20-4f23-4fb3-8afc-e4194c84c82a",
      ResourceVersion: (string) (len=4) "9778",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854296934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "c2d58850-f112-4212-87ba-8476564f7e11",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  64 35 38 38 35 30 2d 66  |d\":\"c2d58850-f|
              00000090  31 31 32 2d 34 32 31 32  2d 38 37 62 61 2d 38 34  |112-4212-87ba-84|
              000000a0  37 36 35 36 34 66 37 65  31 31 5c 22 7d 22 3a 7b  |76564f7e11\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sl65c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sl65c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854296934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854296934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 08:42:14.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5312" for this suite. @ 06/18/24 08:42:14.286
• [2.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/18/24 08:42:14.294
  Jun 18 08:42:14.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:42:14.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:14.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:14.313
  STEP: Creating projection with secret that has name projected-secret-test-e68c4ff0-0292-4b1f-94dc-05e4aae9b157 @ 06/18/24 08:42:14.316
  STEP: Creating a pod to test consume secrets @ 06/18/24 08:42:14.322
  STEP: Saw pod success @ 06/18/24 08:42:16.341
  Jun 18 08:42:16.344: INFO: Trying to get logs from node ck-129-worker-2 pod pod-projected-secrets-9917f9b1-8bc5-48a2-b56e-150b52c31529 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 08:42:16.35
  Jun 18 08:42:16.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6501" for this suite. @ 06/18/24 08:42:16.366
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/18/24 08:42:16.371
  Jun 18 08:42:16.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 08:42:16.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:16.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:16.386
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/18/24 08:42:16.389
  STEP: Saw pod success @ 06/18/24 08:42:18.403
  Jun 18 08:42:18.406: INFO: Trying to get logs from node ck-129-worker-2 pod pod-ace7b688-a075-4575-abcc-de1ff3c12a08 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 08:42:18.413
  Jun 18 08:42:18.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8768" for this suite. @ 06/18/24 08:42:18.431
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/18/24 08:42:18.439
  Jun 18 08:42:18.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 08:42:18.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:18.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:18.457
  STEP: Setting up server cert @ 06/18/24 08:42:18.474
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 08:42:18.869
  STEP: Deploying the webhook pod @ 06/18/24 08:42:18.874
  STEP: Wait for the deployment to be ready @ 06/18/24 08:42:18.883
  Jun 18 08:42:18.888: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 08:42:20.899
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:42:20.911
  Jun 18 08:42:21.911: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/18/24 08:42:21.917
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/18/24 08:42:21.934
  Jun 18 08:42:21.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 08:42:21.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9989" for this suite. @ 06/18/24 08:42:21.991
  STEP: Destroying namespace "webhook-markers-636" for this suite. @ 06/18/24 08:42:21.995
• [3.561 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/18/24 08:42:22
  Jun 18 08:42:22.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename gc @ 06/18/24 08:42:22.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:22.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:22.024
  STEP: create the deployment @ 06/18/24 08:42:22.027
  W0618 08:42:22.034022      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/18/24 08:42:22.034
  STEP: delete the deployment @ 06/18/24 08:42:22.14
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/18/24 08:42:22.145
  STEP: Gathering metrics @ 06/18/24 08:42:22.659
  Jun 18 08:42:22.795: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 08:42:22.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9671" for this suite. @ 06/18/24 08:42:22.802
• [0.808 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/18/24 08:42:22.81
  Jun 18 08:42:22.810: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 08:42:22.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:42:22.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:42:22.827
  Jun 18 08:42:22.830: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 08:42:22.837: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 08:42:22.839: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-1 before test
  Jun 18 08:42:22.846: INFO: simpletest.deployment-5dd5877885-n8vdx from gc-9671 started at 2024-06-18 08:42:22 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.846: INFO: 	Container nginx ready: false, restart count 0
  Jun 18 08:42:22.846: INFO: calico-kube-controllers-8d76c5f9b-8wpb6 from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.846: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 08:42:22.846: INFO: calico-node-c7wnv from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.846: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:42:22.846: INFO: kube-proxy-47vln from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.846: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:42:22.846: INFO: secloudit-registry-agent-8ggt2 from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.846: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:42:22.846: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-xhr4k from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:42:22.846: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:42:22.846: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 08:42:22.846: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-2 before test
  Jun 18 08:42:22.853: INFO: simpletest.deployment-5dd5877885-5bltm from gc-9671 started at 2024-06-18 08:42:22 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.853: INFO: 	Container nginx ready: false, restart count 0
  Jun 18 08:42:22.853: INFO: calico-node-bq6wj from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.853: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:42:22.853: INFO: kube-proxy-hch9l from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.853: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:42:22.854: INFO: secloudit-registry-agent-lsgrp from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.854: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:42:22.854: INFO: sonobuoy from sonobuoy started at 2024-06-18 08:22:49 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.854: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 08:42:22.854: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-v4brh from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:42:22.854: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:42:22.854: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 08:42:22.854: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-3 before test
  Jun 18 08:42:22.863: INFO: calico-node-4b96w from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.863: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:42:22.863: INFO: kube-proxy-zrpzr from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.863: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:42:22.863: INFO: secloudit-registry-agent-ksqhs from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:42:22.863: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:42:22.863: INFO: sonobuoy-e2e-job-95d5e6fef3cb4755 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:42:22.863: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 08:42:22.863: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:42:22.863: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-s85s9 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:42:22.863: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:42:22.863: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/18/24 08:42:22.863
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/18/24 08:42:24.878
  STEP: Trying to apply a random label on the found node. @ 06/18/24 08:42:24.893
  STEP: verifying the node has the label kubernetes.io/e2e-8675962b-866c-4028-89f8-e8b567cefaa1 95 @ 06/18/24 08:42:24.903
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/18/24 08:42:24.912
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.190.169 on the node which pod4 resides and expect not scheduled @ 06/18/24 08:42:26.927
  STEP: removing the label kubernetes.io/e2e-8675962b-866c-4028-89f8-e8b567cefaa1 off the node ck-129-worker-1 @ 06/18/24 08:47:26.938
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8675962b-866c-4028-89f8-e8b567cefaa1 @ 06/18/24 08:47:26.951
  Jun 18 08:47:26.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4986" for this suite. @ 06/18/24 08:47:26.965
• [304.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/18/24 08:47:26.973
  Jun 18 08:47:26.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 08:47:26.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:47:26.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:47:26.994
  STEP: Creating a ResourceQuota with terminating scope @ 06/18/24 08:47:26.999
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 08:47:27.005
  STEP: Creating a ResourceQuota with not terminating scope @ 06/18/24 08:47:29.01
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 08:47:29.016
  STEP: Creating a long running pod @ 06/18/24 08:47:31.021
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/18/24 08:47:31.034
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/18/24 08:47:33.038
  STEP: Deleting the pod @ 06/18/24 08:47:35.043
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 08:47:35.053
  STEP: Creating a terminating pod @ 06/18/24 08:47:37.057
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/18/24 08:47:37.069
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/18/24 08:47:39.074
  STEP: Deleting the pod @ 06/18/24 08:47:41.078
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 08:47:41.09
  Jun 18 08:47:43.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4627" for this suite. @ 06/18/24 08:47:43.101
• [16.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/18/24 08:47:43.111
  Jun 18 08:47:43.112: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename proxy @ 06/18/24 08:47:43.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:47:43.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:47:43.129
  Jun 18 08:47:43.132: INFO: Creating pod...
  Jun 18 08:47:45.148: INFO: Creating service...
  Jun 18 08:47:45.170: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/pods/agnhost/proxy?method=DELETE
  Jun 18 08:47:45.177: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 08:47:45.177: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/pods/agnhost/proxy?method=OPTIONS
  Jun 18 08:47:45.182: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 08:47:45.182: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/pods/agnhost/proxy?method=PATCH
  Jun 18 08:47:45.187: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 08:47:45.187: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/pods/agnhost/proxy?method=POST
  Jun 18 08:47:45.192: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 08:47:45.192: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/pods/agnhost/proxy?method=PUT
  Jun 18 08:47:45.198: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 08:47:45.198: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun 18 08:47:45.202: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 18 08:47:45.202: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun 18 08:47:45.207: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 18 08:47:45.207: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun 18 08:47:45.211: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 18 08:47:45.211: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/services/e2e-proxy-test-service/proxy?method=POST
  Jun 18 08:47:45.215: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 18 08:47:45.215: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/services/e2e-proxy-test-service/proxy?method=PUT
  Jun 18 08:47:45.218: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 18 08:47:45.218: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/pods/agnhost/proxy?method=GET
  Jun 18 08:47:45.221: INFO: http.Client request:GET StatusCode:301
  Jun 18 08:47:45.221: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/services/e2e-proxy-test-service/proxy?method=GET
  Jun 18 08:47:45.224: INFO: http.Client request:GET StatusCode:301
  Jun 18 08:47:45.224: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/pods/agnhost/proxy?method=HEAD
  Jun 18 08:47:45.227: INFO: http.Client request:HEAD StatusCode:301
  Jun 18 08:47:45.227: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-5243/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun 18 08:47:45.230: INFO: http.Client request:HEAD StatusCode:301
  Jun 18 08:47:45.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5243" for this suite. @ 06/18/24 08:47:45.235
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/18/24 08:47:45.241
  Jun 18 08:47:45.241: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 08:47:45.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:47:45.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:47:45.257
  Jun 18 08:47:45.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 08:47:46.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3673" for this suite. @ 06/18/24 08:47:46.295
• [1.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/18/24 08:47:46.306
  Jun 18 08:47:46.306: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 08:47:46.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:47:46.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:47:46.326
  STEP: Creating service test in namespace statefulset-688 @ 06/18/24 08:47:46.329
  STEP: Creating stateful set ss in namespace statefulset-688 @ 06/18/24 08:47:46.337
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-688 @ 06/18/24 08:47:46.345
  Jun 18 08:47:46.349: INFO: Found 0 stateful pods, waiting for 1
  Jun 18 08:47:56.353: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/18/24 08:47:56.353
  Jun 18 08:47:56.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-688 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 08:47:56.505: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 08:47:56.505: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 08:47:56.505: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 08:47:56.510: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 18 08:48:06.517: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 08:48:06.517: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 08:48:06.534: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Jun 18 08:48:06.534: INFO: ss-0  ck-129-worker-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:46 +0000 UTC  }]
  Jun 18 08:48:06.534: INFO: 
  Jun 18 08:48:06.534: INFO: StatefulSet ss has not reached scale 3, at 1
  Jun 18 08:48:07.539: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995884363s
  Jun 18 08:48:08.544: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991086846s
  Jun 18 08:48:09.549: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.985986202s
  Jun 18 08:48:10.554: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981271037s
  Jun 18 08:48:11.561: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.975570584s
  Jun 18 08:48:12.569: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.968791189s
  Jun 18 08:48:13.577: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.960987771s
  Jun 18 08:48:14.584: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.952288713s
  Jun 18 08:48:15.592: INFO: Verifying statefulset ss doesn't scale past 3 for another 945.516135ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-688 @ 06/18/24 08:48:16.593
  Jun 18 08:48:16.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-688 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 08:48:16.756: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 08:48:16.756: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 08:48:16.756: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 08:48:16.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-688 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 08:48:16.900: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 18 08:48:16.900: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 08:48:16.900: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 08:48:16.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-688 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 08:48:17.039: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 18 08:48:17.039: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 08:48:17.039: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 08:48:17.044: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Jun 18 08:48:27.044: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 08:48:27.044: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 08:48:27.044: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/18/24 08:48:27.044
  Jun 18 08:48:27.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-688 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 08:48:27.183: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 08:48:27.183: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 08:48:27.183: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 08:48:27.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-688 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 08:48:27.322: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 08:48:27.323: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 08:48:27.323: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 08:48:27.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-688 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 08:48:27.457: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 08:48:27.457: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 08:48:27.457: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 08:48:27.457: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 08:48:27.460: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun 18 08:48:37.467: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 08:48:37.467: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 08:48:37.467: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 08:48:37.480: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Jun 18 08:48:37.480: INFO: ss-0  ck-129-worker-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:47:46 +0000 UTC  }]
  Jun 18 08:48:37.480: INFO: ss-1  ck-129-worker-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:06 +0000 UTC  }]
  Jun 18 08:48:37.480: INFO: ss-2  ck-129-worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 08:48:06 +0000 UTC  }]
  Jun 18 08:48:37.480: INFO: 
  Jun 18 08:48:37.480: INFO: StatefulSet ss has not reached scale 0, at 3
  Jun 18 08:48:38.487: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.991728305s
  Jun 18 08:48:39.491: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.988364439s
  Jun 18 08:48:40.496: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.984486223s
  Jun 18 08:48:41.500: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.979644762s
  Jun 18 08:48:42.504: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.975594473s
  Jun 18 08:48:43.509: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.970631641s
  Jun 18 08:48:44.513: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.96640129s
  Jun 18 08:48:45.517: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962428597s
  Jun 18 08:48:46.521: INFO: Verifying statefulset ss doesn't scale past 0 for another 958.906852ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-688 @ 06/18/24 08:48:47.522
  Jun 18 08:48:47.527: INFO: Scaling statefulset ss to 0
  Jun 18 08:48:47.532: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 08:48:47.538: INFO: Deleting all statefulset in ns statefulset-688
  Jun 18 08:48:47.541: INFO: Scaling statefulset ss to 0
  Jun 18 08:48:47.547: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 08:48:47.549: INFO: Deleting statefulset ss
  Jun 18 08:48:47.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-688" for this suite. @ 06/18/24 08:48:47.567
• [61.267 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/18/24 08:48:47.574
  Jun 18 08:48:47.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 08:48:47.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:48:47.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:48:47.594
  Jun 18 08:48:47.597: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 08:48:47.607: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 08:48:47.612: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-1 before test
  Jun 18 08:48:47.625: INFO: calico-kube-controllers-8d76c5f9b-8wpb6 from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.625: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 08:48:47.625: INFO: calico-node-c7wnv from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.625: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:48:47.625: INFO: kube-proxy-47vln from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.625: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:48:47.625: INFO: secloudit-registry-agent-8ggt2 from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.625: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:48:47.625: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-xhr4k from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:48:47.625: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:48:47.625: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 08:48:47.625: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-2 before test
  Jun 18 08:48:47.637: INFO: calico-node-bq6wj from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.637: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:48:47.637: INFO: kube-proxy-hch9l from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.637: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:48:47.638: INFO: secloudit-registry-agent-lsgrp from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.638: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:48:47.638: INFO: sonobuoy from sonobuoy started at 2024-06-18 08:22:49 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.639: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 08:48:47.639: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-v4brh from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:48:47.639: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:48:47.639: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 08:48:47.639: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-3 before test
  Jun 18 08:48:47.648: INFO: calico-node-4b96w from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.648: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 08:48:47.648: INFO: kube-proxy-zrpzr from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.648: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 08:48:47.649: INFO: secloudit-registry-agent-ksqhs from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 08:48:47.649: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 08:48:47.649: INFO: sonobuoy-e2e-job-95d5e6fef3cb4755 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:48:47.649: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 08:48:47.649: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:48:47.650: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-s85s9 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 08:48:47.650: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 08:48:47.650: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/18/24 08:48:47.651
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/18/24 08:48:49.67
  STEP: Trying to apply a random label on the found node. @ 06/18/24 08:48:49.682
  STEP: verifying the node has the label kubernetes.io/e2e-77143bd8-df6b-46a6-aa32-7df13b637953 42 @ 06/18/24 08:48:49.691
  STEP: Trying to relaunch the pod, now with labels. @ 06/18/24 08:48:49.696
  STEP: removing the label kubernetes.io/e2e-77143bd8-df6b-46a6-aa32-7df13b637953 off the node ck-129-worker-2 @ 06/18/24 08:48:51.724
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-77143bd8-df6b-46a6-aa32-7df13b637953 @ 06/18/24 08:48:51.735
  Jun 18 08:48:51.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1148" for this suite. @ 06/18/24 08:48:51.748
• [4.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/18/24 08:48:51.756
  Jun 18 08:48:51.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 08:48:51.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:48:51.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:48:51.775
  Jun 18 08:48:51.790: INFO: created pod
  STEP: Saw pod success @ 06/18/24 08:48:55.804
  Jun 18 08:49:25.807: INFO: polling logs
  Jun 18 08:49:25.830: INFO: Pod logs: 
  I0618 08:48:52.440313       1 log.go:245] OK: Got token
  I0618 08:48:52.440391       1 log.go:245] validating with in-cluster discovery
  I0618 08:48:52.441006       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0618 08:48:52.441051       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8114:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00013b9b0), NotBefore:(*jwt.NumericDate)(0xc00013ba98), IssuedAt:(*jwt.NumericDate)(0xc00013b9c0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8114", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e0d2b93f-eada-49fd-bf48-0d9f93204022"}}}
  I0618 08:48:52.456656       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0618 08:48:52.464144       1 log.go:245] OK: Validated signature on JWT
  I0618 08:48:52.464258       1 log.go:245] OK: Got valid claims from token!
  I0618 08:48:52.464313       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8114:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012d20), NotBefore:(*jwt.NumericDate)(0xc000012d48), IssuedAt:(*jwt.NumericDate)(0xc000012d28), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8114", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"e0d2b93f-eada-49fd-bf48-0d9f93204022"}}}

  Jun 18 08:49:25.830: INFO: completed pod
  Jun 18 08:49:25.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8114" for this suite. @ 06/18/24 08:49:25.842
• [34.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/18/24 08:49:25.847
  Jun 18 08:49:25.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 08:49:25.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:25.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:25.865
  STEP: Creating projection with secret that has name secret-emptykey-test-3e0180bd-6e0c-4ebb-80a8-7583192748c7 @ 06/18/24 08:49:25.868
  Jun 18 08:49:25.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6112" for this suite. @ 06/18/24 08:49:25.875
• [0.031 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/18/24 08:49:25.88
  Jun 18 08:49:25.880: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename endpointslice @ 06/18/24 08:49:25.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:25.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:25.895
  Jun 18 08:49:25.907: INFO: Endpoints addresses: [192.168.190.151] , ports: [6443]
  Jun 18 08:49:25.907: INFO: EndpointSlices addresses: [192.168.190.151] , ports: [6443]
  Jun 18 08:49:25.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8846" for this suite. @ 06/18/24 08:49:25.911
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/18/24 08:49:25.92
  Jun 18 08:49:25.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 08:49:25.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:25.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:25.937
  STEP: creating Agnhost RC @ 06/18/24 08:49:25.94
  Jun 18 08:49:25.941: INFO: namespace kubectl-9969
  Jun 18 08:49:25.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9969 create -f -'
  Jun 18 08:49:26.136: INFO: stderr: ""
  Jun 18 08:49:26.136: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/18/24 08:49:26.136
  Jun 18 08:49:27.141: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 08:49:27.141: INFO: Found 1 / 1
  Jun 18 08:49:27.141: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 18 08:49:27.144: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 08:49:27.144: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 08:49:27.144: INFO: wait on agnhost-primary startup in kubectl-9969 
  Jun 18 08:49:27.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9969 logs agnhost-primary-hn7cd agnhost-primary'
  Jun 18 08:49:27.248: INFO: stderr: ""
  Jun 18 08:49:27.248: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/18/24 08:49:27.248
  Jun 18 08:49:27.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9969 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun 18 08:49:27.343: INFO: stderr: ""
  Jun 18 08:49:27.343: INFO: stdout: "service/rm2 exposed\n"
  Jun 18 08:49:27.349: INFO: Service rm2 in namespace kubectl-9969 found.
  STEP: exposing service @ 06/18/24 08:49:29.36
  Jun 18 08:49:29.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9969 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun 18 08:49:29.487: INFO: stderr: ""
  Jun 18 08:49:29.487: INFO: stdout: "service/rm3 exposed\n"
  Jun 18 08:49:29.491: INFO: Service rm3 in namespace kubectl-9969 found.
  Jun 18 08:49:31.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9969" for this suite. @ 06/18/24 08:49:31.503
• [5.588 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/18/24 08:49:31.508
  Jun 18 08:49:31.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 08:49:31.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:31.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:31.528
  STEP: Creating configMap with name configmap-test-volume-a0e0b5f1-b90b-4c9b-b380-8c1a7b286786 @ 06/18/24 08:49:31.531
  STEP: Creating a pod to test consume configMaps @ 06/18/24 08:49:31.534
  STEP: Saw pod success @ 06/18/24 08:49:33.55
  Jun 18 08:49:33.552: INFO: Trying to get logs from node ck-129-worker-2 pod pod-configmaps-43412c55-d2a0-41af-bdc3-c072556fb3bc container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 08:49:33.573
  Jun 18 08:49:33.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5910" for this suite. @ 06/18/24 08:49:33.589
• [2.085 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/18/24 08:49:33.594
  Jun 18 08:49:33.594: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:49:33.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:33.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:33.612
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:49:33.615
  STEP: Saw pod success @ 06/18/24 08:49:37.635
  Jun 18 08:49:37.638: INFO: Trying to get logs from node ck-129-worker-2 pod downwardapi-volume-5dfd58db-f3fe-4ed9-9436-0194c0715fff container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:49:37.645
  Jun 18 08:49:37.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5174" for this suite. @ 06/18/24 08:49:37.664
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/18/24 08:49:37.672
  Jun 18 08:49:37.672: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename disruption @ 06/18/24 08:49:37.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:37.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:37.688
  STEP: Creating a kubernetes client @ 06/18/24 08:49:37.692
  Jun 18 08:49:37.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename disruption-2 @ 06/18/24 08:49:37.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:37.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:37.71
  STEP: Waiting for the pdb to be processed @ 06/18/24 08:49:37.716
  STEP: Waiting for the pdb to be processed @ 06/18/24 08:49:39.725
  STEP: Waiting for the pdb to be processed @ 06/18/24 08:49:41.736
  STEP: listing a collection of PDBs across all namespaces @ 06/18/24 08:49:43.741
  STEP: listing a collection of PDBs in namespace disruption-3524 @ 06/18/24 08:49:43.745
  STEP: deleting a collection of PDBs @ 06/18/24 08:49:43.75
  STEP: Waiting for the PDB collection to be deleted @ 06/18/24 08:49:43.759
  Jun 18 08:49:43.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5090" for this suite. @ 06/18/24 08:49:43.767
  Jun 18 08:49:43.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3524" for this suite. @ 06/18/24 08:49:43.779
• [6.113 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/18/24 08:49:43.798
  Jun 18 08:49:43.798: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 08:49:43.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:43.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:43.82
  STEP: Creating a pod to test substitution in container's command @ 06/18/24 08:49:43.823
  STEP: Saw pod success @ 06/18/24 08:49:47.845
  Jun 18 08:49:47.849: INFO: Trying to get logs from node ck-129-worker-1 pod var-expansion-c2d48a29-4b2d-4052-8f26-9642275667b4 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 08:49:47.857
  Jun 18 08:49:47.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7883" for this suite. @ 06/18/24 08:49:47.877
• [4.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/18/24 08:49:47.887
  Jun 18 08:49:47.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename job @ 06/18/24 08:49:47.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:47.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:47.914
  STEP: Creating a job @ 06/18/24 08:49:47.919
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/18/24 08:49:47.928
  STEP: patching /status @ 06/18/24 08:49:49.933
  STEP: updating /status @ 06/18/24 08:49:49.94
  STEP: get /status @ 06/18/24 08:49:49.947
  Jun 18 08:49:49.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4354" for this suite. @ 06/18/24 08:49:49.956
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/18/24 08:49:49.963
  Jun 18 08:49:49.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 08:49:49.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:49.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:49.976
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/18/24 08:49:49.98
  STEP: Saw pod success @ 06/18/24 08:49:54
  Jun 18 08:49:54.004: INFO: Trying to get logs from node ck-129-worker-3 pod pod-9c382fe7-b683-4448-b475-813c57de08d5 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 08:49:54.015
  Jun 18 08:49:54.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4276" for this suite. @ 06/18/24 08:49:54.035
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/18/24 08:49:54.042
  Jun 18 08:49:54.042: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 08:49:54.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:54.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:54.057
  STEP: Setting up server cert @ 06/18/24 08:49:54.073
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 08:49:54.738
  STEP: Deploying the webhook pod @ 06/18/24 08:49:54.746
  STEP: Wait for the deployment to be ready @ 06/18/24 08:49:54.757
  Jun 18 08:49:54.762: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/18/24 08:49:56.77
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:49:56.78
  Jun 18 08:49:57.781: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/18/24 08:49:57.826
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 08:49:57.861
  STEP: Deleting the collection of validation webhooks @ 06/18/24 08:49:57.884
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/18/24 08:49:57.914
  Jun 18 08:49:57.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3300" for this suite. @ 06/18/24 08:49:57.961
  STEP: Destroying namespace "webhook-markers-1333" for this suite. @ 06/18/24 08:49:57.968
• [3.931 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/18/24 08:49:57.973
  Jun 18 08:49:57.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 08:49:57.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:49:57.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:49:57.986
  STEP: Setting up server cert @ 06/18/24 08:49:58.005
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 08:49:58.216
  STEP: Deploying the webhook pod @ 06/18/24 08:49:58.223
  STEP: Wait for the deployment to be ready @ 06/18/24 08:49:58.242
  Jun 18 08:49:58.249: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 08:50:00.26
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:50:00.273
  Jun 18 08:50:01.273: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/18/24 08:50:01.28
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 08:50:01.28
  Jun 18 08:50:01.292: INFO: Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/18/24 08:50:01.407
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/18/24 08:50:02.418
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 08:50:02.418
  STEP: Having no error when timeout is longer than webhook latency @ 06/18/24 08:50:03.443
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 08:50:03.443
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/18/24 08:50:08.475
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/18/24 08:50:08.475
  Jun 18 08:50:13.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3130" for this suite. @ 06/18/24 08:50:13.562
  STEP: Destroying namespace "webhook-markers-972" for this suite. @ 06/18/24 08:50:13.567
• [15.600 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/18/24 08:50:13.575
  Jun 18 08:50:13.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 08:50:13.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:13.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:13.595
  STEP: apply creating a deployment @ 06/18/24 08:50:13.599
  Jun 18 08:50:13.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4219" for this suite. @ 06/18/24 08:50:13.613
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/18/24 08:50:13.624
  Jun 18 08:50:13.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 08:50:13.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:13.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:13.642
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/18/24 08:50:13.645
  STEP: Saw pod success @ 06/18/24 08:50:17.662
  Jun 18 08:50:17.665: INFO: Trying to get logs from node ck-129-worker-1 pod pod-c64bd893-8089-4881-91d2-2bd5b3c9eb7b container test-container: <nil>
  STEP: delete the pod @ 06/18/24 08:50:17.673
  Jun 18 08:50:17.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2548" for this suite. @ 06/18/24 08:50:17.695
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/18/24 08:50:17.709
  Jun 18 08:50:17.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 08:50:17.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:17.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:17.729
  STEP: Creating configMap with name configmap-test-volume-map-1c6f4a48-d538-4de8-b72c-ee12c124a759 @ 06/18/24 08:50:17.733
  STEP: Creating a pod to test consume configMaps @ 06/18/24 08:50:17.737
  STEP: Saw pod success @ 06/18/24 08:50:21.757
  Jun 18 08:50:21.761: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-0a28b8d9-11f7-4dd0-acdf-9409715ec346 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 08:50:21.77
  Jun 18 08:50:21.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3387" for this suite. @ 06/18/24 08:50:21.791
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/18/24 08:50:21.796
  Jun 18 08:50:21.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 08:50:21.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:21.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:21.811
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/18/24 08:50:21.838
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 08:50:21.843
  Jun 18 08:50:21.847: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:50:21.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:50:21.849: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 08:50:22.849: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:50:22.853: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 08:50:22.853: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 08:50:23.850: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:50:23.854: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 08:50:23.854: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/18/24 08:50:23.856
  Jun 18 08:50:23.875: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:50:23.879: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 08:50:23.879: INFO: Node ck-129-worker-3 is running 0 daemon pod, expected 1
  Jun 18 08:50:24.873: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 08:50:24.876: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 08:50:24.876: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/18/24 08:50:24.877
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 08:50:24.882
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5125, will wait for the garbage collector to delete the pods @ 06/18/24 08:50:24.882
  Jun 18 08:50:24.940: INFO: Deleting DaemonSet.extensions daemon-set took: 5.195941ms
  Jun 18 08:50:25.041: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.625616ms
  Jun 18 08:50:27.844: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 08:50:27.844: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 08:50:27.847: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11932"},"items":null}

  Jun 18 08:50:27.850: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11932"},"items":null}

  Jun 18 08:50:27.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5125" for this suite. @ 06/18/24 08:50:27.866
• [6.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/18/24 08:50:27.874
  Jun 18 08:50:27.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 08:50:27.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:27.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:27.891
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:50:27.894
  STEP: Saw pod success @ 06/18/24 08:50:31.915
  Jun 18 08:50:31.918: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-06028d64-7a0e-4fa0-af2e-bcd1230ef284 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:50:31.926
  Jun 18 08:50:31.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2339" for this suite. @ 06/18/24 08:50:31.951
• [4.084 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/18/24 08:50:31.959
  Jun 18 08:50:31.959: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:50:31.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:31.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:31.978
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:50:31.982
  STEP: Saw pod success @ 06/18/24 08:50:36.002
  Jun 18 08:50:36.006: INFO: Trying to get logs from node ck-129-worker-2 pod downwardapi-volume-8113bb08-1d41-4785-b563-bb8e394b1973 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:50:36.014
  Jun 18 08:50:36.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9763" for this suite. @ 06/18/24 08:50:36.03
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/18/24 08:50:36.037
  Jun 18 08:50:36.037: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 08:50:36.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:36.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:36.052
  Jun 18 08:50:36.055: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun 18 08:50:36.062: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun 18 08:50:41.068: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 08:50:41.068
  Jun 18 08:50:41.068: INFO: Creating deployment "test-rolling-update-deployment"
  Jun 18 08:50:41.074: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun 18 08:50:41.082: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jun 18 08:50:43.092: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun 18 08:50:43.096: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun 18 08:50:43.107: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23748fb7-0e04-45e6-86fd-07883edeecd3",
      ResourceVersion: (string) (len=5) "12100",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854297441,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 08:50:43.120: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67c45f1b-e2ca-4c37-9a07-c59c16658f4d",
      ResourceVersion: (string) (len=5) "12090",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854297441,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "23748fb7-0e04-45e6-86fd-07883edeecd3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 33 37 34 38 66  62 37 2d 30 65 30 34 2d  |\"23748fb7-0e04-|
              00000120  34 35 65 36 2d 38 36 66  64 2d 30 37 38 38 33 65  |45e6-86fd-07883e|
              00000130  64 65 65 63 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |deecd3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 08:50:43.122: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun 18 08:50:43.122: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f0ae985-3ebc-46a8-81c0-32d01d009bea",
      ResourceVersion: (string) (len=5) "12099",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854297436,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "23748fb7-0e04-45e6-86fd-07883edeecd3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297436,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 33 37 34 38 66 62  |"uid\":\"23748fb|
              000000b0  37 2d 30 65 30 34 2d 34  35 65 36 2d 38 36 66 64  |7-0e04-45e6-86fd|
              000000c0  2d 30 37 38 38 33 65 64  65 65 63 64 33 5c 22 7d  |-07883edeecd3\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 08:50:43.133: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-7h49j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-7h49j",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-6898",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fa01d12-53af-4b93-9d86-06ed6ff53c52",
      ResourceVersion: (string) (len=5) "12089",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854297441,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3bc144f90bae335d1c569ec95273e855439deb9989956196bf0c37d94e305f9c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.229/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.229/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "67c45f1b-e2ca-4c37-9a07-c59c16658f4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 37  63 34 35 66 31 62 2d 65  |d\":\"67c45f1b-e|
              00000090  32 63 61 2d 34 63 33 37  2d 39 61 30 37 2d 63 35  |2ca-4c37-9a07-c5|
              000000a0  39 63 31 36 36 35 38 66  34 64 5c 22 7d 22 3a 7b  |9c16658f4d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 36 31 2e  32 32 39 5c 22 7d 22 3a  |2.16.61.229\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-df2tj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-df2tj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854297441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=13) "172.16.61.229",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.61.229"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854297441,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854297441,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://444564cb275e58ac0a7a6594bc1d81db90a76cb86c47da6f890ae63672ce3c97",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 08:50:43.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6898" for this suite. @ 06/18/24 08:50:43.144
• [7.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/18/24 08:50:43.15
  Jun 18 08:50:43.150: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svc-latency @ 06/18/24 08:50:43.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:43.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:43.171
  Jun 18 08:50:43.175: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-5525 @ 06/18/24 08:50:43.176
  I0618 08:50:43.183864      17 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-5525, replica count: 1
  I0618 08:50:44.235368      17 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0618 08:50:45.236002      17 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 08:50:45.348: INFO: Created: latency-svc-b75k8
  Jun 18 08:50:45.356: INFO: Got endpoints: latency-svc-b75k8 [19.88157ms]
  Jun 18 08:50:45.373: INFO: Created: latency-svc-hhg5x
  Jun 18 08:50:45.381: INFO: Got endpoints: latency-svc-hhg5x [23.988306ms]
  Jun 18 08:50:45.384: INFO: Created: latency-svc-q5cqq
  Jun 18 08:50:45.393: INFO: Got endpoints: latency-svc-q5cqq [36.465309ms]
  Jun 18 08:50:45.397: INFO: Created: latency-svc-xhxwz
  Jun 18 08:50:45.402: INFO: Got endpoints: latency-svc-xhxwz [44.350787ms]
  Jun 18 08:50:45.412: INFO: Created: latency-svc-s5xzb
  Jun 18 08:50:45.418: INFO: Got endpoints: latency-svc-s5xzb [60.962895ms]
  Jun 18 08:50:45.430: INFO: Created: latency-svc-sr8dl
  Jun 18 08:50:45.438: INFO: Got endpoints: latency-svc-sr8dl [81.354968ms]
  Jun 18 08:50:45.442: INFO: Created: latency-svc-x85t9
  Jun 18 08:50:45.448: INFO: Got endpoints: latency-svc-x85t9 [90.261337ms]
  Jun 18 08:50:45.453: INFO: Created: latency-svc-7748q
  Jun 18 08:50:45.462: INFO: Got endpoints: latency-svc-7748q [104.478398ms]
  Jun 18 08:50:45.464: INFO: Created: latency-svc-wqbm4
  Jun 18 08:50:45.468: INFO: Got endpoints: latency-svc-wqbm4 [110.901928ms]
  Jun 18 08:50:45.474: INFO: Created: latency-svc-84555
  Jun 18 08:50:45.478: INFO: Got endpoints: latency-svc-84555 [121.218023ms]
  Jun 18 08:50:45.487: INFO: Created: latency-svc-wm9hd
  Jun 18 08:50:45.495: INFO: Got endpoints: latency-svc-wm9hd [137.483266ms]
  Jun 18 08:50:45.503: INFO: Created: latency-svc-scwb2
  Jun 18 08:50:45.509: INFO: Got endpoints: latency-svc-scwb2 [151.732518ms]
  Jun 18 08:50:45.516: INFO: Created: latency-svc-7qdrr
  Jun 18 08:50:45.519: INFO: Got endpoints: latency-svc-7qdrr [162.407502ms]
  Jun 18 08:50:45.527: INFO: Created: latency-svc-vlc4s
  Jun 18 08:50:45.536: INFO: Got endpoints: latency-svc-vlc4s [178.940281ms]
  Jun 18 08:50:45.541: INFO: Created: latency-svc-2w5db
  Jun 18 08:50:45.552: INFO: Got endpoints: latency-svc-2w5db [194.603066ms]
  Jun 18 08:50:45.552: INFO: Created: latency-svc-k66w8
  Jun 18 08:50:45.557: INFO: Got endpoints: latency-svc-k66w8 [199.32824ms]
  Jun 18 08:50:45.560: INFO: Created: latency-svc-pc2r5
  Jun 18 08:50:45.566: INFO: Got endpoints: latency-svc-pc2r5 [184.951537ms]
  Jun 18 08:50:45.572: INFO: Created: latency-svc-gjjvj
  Jun 18 08:50:45.578: INFO: Got endpoints: latency-svc-gjjvj [184.845597ms]
  Jun 18 08:50:45.580: INFO: Created: latency-svc-2pmtm
  Jun 18 08:50:45.588: INFO: Got endpoints: latency-svc-2pmtm [186.372064ms]
  Jun 18 08:50:45.590: INFO: Created: latency-svc-z2xtc
  Jun 18 08:50:45.599: INFO: Got endpoints: latency-svc-z2xtc [180.454802ms]
  Jun 18 08:50:45.600: INFO: Created: latency-svc-cbj6p
  Jun 18 08:50:45.610: INFO: Got endpoints: latency-svc-cbj6p [171.338816ms]
  Jun 18 08:50:45.613: INFO: Created: latency-svc-zqmx5
  Jun 18 08:50:45.618: INFO: Got endpoints: latency-svc-zqmx5 [170.071658ms]
  Jun 18 08:50:45.628: INFO: Created: latency-svc-j7htl
  Jun 18 08:50:45.633: INFO: Got endpoints: latency-svc-j7htl [170.920055ms]
  Jun 18 08:50:45.645: INFO: Created: latency-svc-l8t9m
  Jun 18 08:50:45.649: INFO: Got endpoints: latency-svc-l8t9m [180.868777ms]
  Jun 18 08:50:45.653: INFO: Created: latency-svc-zrlr6
  Jun 18 08:50:45.661: INFO: Got endpoints: latency-svc-zrlr6 [182.517116ms]
  Jun 18 08:50:45.664: INFO: Created: latency-svc-v92rd
  Jun 18 08:50:45.671: INFO: Got endpoints: latency-svc-v92rd [176.236112ms]
  Jun 18 08:50:45.676: INFO: Created: latency-svc-zms2k
  Jun 18 08:50:45.680: INFO: Got endpoints: latency-svc-zms2k [171.209245ms]
  Jun 18 08:50:45.690: INFO: Created: latency-svc-zdwgl
  Jun 18 08:50:45.701: INFO: Got endpoints: latency-svc-zdwgl [181.842428ms]
  Jun 18 08:50:45.707: INFO: Created: latency-svc-k2ljd
  Jun 18 08:50:45.713: INFO: Got endpoints: latency-svc-k2ljd [177.226233ms]
  Jun 18 08:50:45.722: INFO: Created: latency-svc-98xck
  Jun 18 08:50:45.728: INFO: Got endpoints: latency-svc-98xck [176.31174ms]
  Jun 18 08:50:45.732: INFO: Created: latency-svc-zxb8d
  Jun 18 08:50:45.738: INFO: Got endpoints: latency-svc-zxb8d [180.775288ms]
  Jun 18 08:50:45.740: INFO: Created: latency-svc-s6wj2
  Jun 18 08:50:45.751: INFO: Got endpoints: latency-svc-s6wj2 [185.358525ms]
  Jun 18 08:50:45.755: INFO: Created: latency-svc-qw9gg
  Jun 18 08:50:45.757: INFO: Got endpoints: latency-svc-qw9gg [179.564257ms]
  Jun 18 08:50:45.765: INFO: Created: latency-svc-dxvbg
  Jun 18 08:50:45.773: INFO: Got endpoints: latency-svc-dxvbg [185.102624ms]
  Jun 18 08:50:45.773: INFO: Created: latency-svc-r264z
  Jun 18 08:50:45.778: INFO: Got endpoints: latency-svc-r264z [179.28651ms]
  Jun 18 08:50:45.786: INFO: Created: latency-svc-mbwbl
  Jun 18 08:50:45.792: INFO: Got endpoints: latency-svc-mbwbl [182.248987ms]
  Jun 18 08:50:45.794: INFO: Created: latency-svc-m6nmh
  Jun 18 08:50:45.798: INFO: Got endpoints: latency-svc-m6nmh [179.82421ms]
  Jun 18 08:50:45.807: INFO: Created: latency-svc-l7ht8
  Jun 18 08:50:45.812: INFO: Got endpoints: latency-svc-l7ht8 [179.379151ms]
  Jun 18 08:50:45.815: INFO: Created: latency-svc-mh4r7
  Jun 18 08:50:45.823: INFO: Got endpoints: latency-svc-mh4r7 [174.033725ms]
  Jun 18 08:50:45.827: INFO: Created: latency-svc-xrksb
  Jun 18 08:50:45.835: INFO: Created: latency-svc-8sgn8
  Jun 18 08:50:45.845: INFO: Created: latency-svc-6qkbj
  Jun 18 08:50:45.859: INFO: Got endpoints: latency-svc-xrksb [198.025533ms]
  Jun 18 08:50:45.859: INFO: Created: latency-svc-92qlk
  Jun 18 08:50:45.869: INFO: Created: latency-svc-dcvld
  Jun 18 08:50:45.878: INFO: Created: latency-svc-cvn9h
  Jun 18 08:50:45.884: INFO: Created: latency-svc-64kxw
  Jun 18 08:50:45.895: INFO: Created: latency-svc-8c7rn
  Jun 18 08:50:45.902: INFO: Created: latency-svc-2cv69
  Jun 18 08:50:45.907: INFO: Got endpoints: latency-svc-8sgn8 [235.670007ms]
  Jun 18 08:50:45.913: INFO: Created: latency-svc-drmtx
  Jun 18 08:50:45.922: INFO: Created: latency-svc-k5jzv
  Jun 18 08:50:45.930: INFO: Created: latency-svc-8fk7x
  Jun 18 08:50:45.939: INFO: Created: latency-svc-7h5g7
  Jun 18 08:50:45.947: INFO: Created: latency-svc-nqzgn
  Jun 18 08:50:46.000: INFO: Got endpoints: latency-svc-6qkbj [319.737256ms]
  Jun 18 08:50:46.012: INFO: Created: latency-svc-4rjf2
  Jun 18 08:50:46.013: INFO: Got endpoints: latency-svc-92qlk [312.01757ms]
  Jun 18 08:50:46.023: INFO: Created: latency-svc-gqw8b
  Jun 18 08:50:46.031: INFO: Created: latency-svc-6stz9
  Jun 18 08:50:46.038: INFO: Created: latency-svc-p9g25
  Jun 18 08:50:46.046: INFO: Created: latency-svc-f7fbj
  Jun 18 08:50:46.055: INFO: Got endpoints: latency-svc-dcvld [342.030611ms]
  Jun 18 08:50:46.069: INFO: Created: latency-svc-9hp6n
  Jun 18 08:50:46.106: INFO: Got endpoints: latency-svc-cvn9h [377.726011ms]
  Jun 18 08:50:46.118: INFO: Created: latency-svc-pkwmw
  Jun 18 08:50:46.155: INFO: Got endpoints: latency-svc-64kxw [416.943899ms]
  Jun 18 08:50:46.167: INFO: Created: latency-svc-zc87h
  Jun 18 08:50:46.205: INFO: Got endpoints: latency-svc-8c7rn [453.591159ms]
  Jun 18 08:50:46.220: INFO: Created: latency-svc-vxghl
  Jun 18 08:50:46.254: INFO: Got endpoints: latency-svc-2cv69 [496.497091ms]
  Jun 18 08:50:46.264: INFO: Created: latency-svc-hr59f
  Jun 18 08:50:46.304: INFO: Got endpoints: latency-svc-drmtx [530.913173ms]
  Jun 18 08:50:46.319: INFO: Created: latency-svc-jvxg5
  Jun 18 08:50:46.354: INFO: Got endpoints: latency-svc-k5jzv [576.098992ms]
  Jun 18 08:50:46.368: INFO: Created: latency-svc-zxgxr
  Jun 18 08:50:46.404: INFO: Got endpoints: latency-svc-8fk7x [612.387838ms]
  Jun 18 08:50:46.422: INFO: Created: latency-svc-fbtkg
  Jun 18 08:50:46.454: INFO: Got endpoints: latency-svc-7h5g7 [656.268532ms]
  Jun 18 08:50:46.467: INFO: Created: latency-svc-v9lz4
  Jun 18 08:50:46.504: INFO: Got endpoints: latency-svc-nqzgn [692.191006ms]
  Jun 18 08:50:46.516: INFO: Created: latency-svc-fhd25
  Jun 18 08:50:46.555: INFO: Got endpoints: latency-svc-4rjf2 [732.391632ms]
  Jun 18 08:50:46.567: INFO: Created: latency-svc-9plm2
  Jun 18 08:50:46.605: INFO: Got endpoints: latency-svc-gqw8b [745.910555ms]
  Jun 18 08:50:46.616: INFO: Created: latency-svc-6ct8d
  Jun 18 08:50:46.654: INFO: Got endpoints: latency-svc-6stz9 [747.12433ms]
  Jun 18 08:50:46.667: INFO: Created: latency-svc-r7shc
  Jun 18 08:50:46.705: INFO: Got endpoints: latency-svc-p9g25 [705.340401ms]
  Jun 18 08:50:46.723: INFO: Created: latency-svc-j4ckv
  Jun 18 08:50:46.755: INFO: Got endpoints: latency-svc-f7fbj [741.218938ms]
  Jun 18 08:50:46.766: INFO: Created: latency-svc-vcr67
  Jun 18 08:50:46.804: INFO: Got endpoints: latency-svc-9hp6n [749.139379ms]
  Jun 18 08:50:46.816: INFO: Created: latency-svc-r6jxw
  Jun 18 08:50:46.854: INFO: Got endpoints: latency-svc-pkwmw [748.382676ms]
  Jun 18 08:50:46.869: INFO: Created: latency-svc-hgjzq
  Jun 18 08:50:46.905: INFO: Got endpoints: latency-svc-zc87h [750.270983ms]
  Jun 18 08:50:46.920: INFO: Created: latency-svc-m8568
  Jun 18 08:50:46.954: INFO: Got endpoints: latency-svc-vxghl [749.560851ms]
  Jun 18 08:50:46.967: INFO: Created: latency-svc-4zh7d
  Jun 18 08:50:47.005: INFO: Got endpoints: latency-svc-hr59f [751.167922ms]
  Jun 18 08:50:47.016: INFO: Created: latency-svc-d7tr6
  Jun 18 08:50:47.054: INFO: Got endpoints: latency-svc-jvxg5 [750.31285ms]
  Jun 18 08:50:47.066: INFO: Created: latency-svc-hkgxk
  Jun 18 08:50:47.104: INFO: Got endpoints: latency-svc-zxgxr [750.145459ms]
  Jun 18 08:50:47.117: INFO: Created: latency-svc-hr428
  Jun 18 08:50:47.157: INFO: Got endpoints: latency-svc-fbtkg [752.4143ms]
  Jun 18 08:50:47.169: INFO: Created: latency-svc-x7crg
  Jun 18 08:50:47.205: INFO: Got endpoints: latency-svc-v9lz4 [751.117118ms]
  Jun 18 08:50:47.217: INFO: Created: latency-svc-hlkn5
  Jun 18 08:50:47.254: INFO: Got endpoints: latency-svc-fhd25 [749.385403ms]
  Jun 18 08:50:47.268: INFO: Created: latency-svc-9stvb
  Jun 18 08:50:47.306: INFO: Got endpoints: latency-svc-9plm2 [750.353402ms]
  Jun 18 08:50:47.318: INFO: Created: latency-svc-hmkd2
  Jun 18 08:50:47.356: INFO: Got endpoints: latency-svc-6ct8d [750.695438ms]
  Jun 18 08:50:47.370: INFO: Created: latency-svc-9ff56
  Jun 18 08:50:47.410: INFO: Got endpoints: latency-svc-r7shc [756.405375ms]
  Jun 18 08:50:47.428: INFO: Created: latency-svc-9sj2t
  Jun 18 08:50:47.454: INFO: Got endpoints: latency-svc-j4ckv [748.860962ms]
  Jun 18 08:50:47.475: INFO: Created: latency-svc-ktpdb
  Jun 18 08:50:47.506: INFO: Got endpoints: latency-svc-vcr67 [751.241171ms]
  Jun 18 08:50:47.518: INFO: Created: latency-svc-n78wd
  Jun 18 08:50:47.554: INFO: Got endpoints: latency-svc-r6jxw [749.506111ms]
  Jun 18 08:50:47.566: INFO: Created: latency-svc-ngtk9
  Jun 18 08:50:47.605: INFO: Got endpoints: latency-svc-hgjzq [750.220786ms]
  Jun 18 08:50:47.620: INFO: Created: latency-svc-p52sh
  Jun 18 08:50:47.654: INFO: Got endpoints: latency-svc-m8568 [748.605935ms]
  Jun 18 08:50:47.664: INFO: Created: latency-svc-5tjl9
  Jun 18 08:50:47.704: INFO: Got endpoints: latency-svc-4zh7d [749.733168ms]
  Jun 18 08:50:47.717: INFO: Created: latency-svc-n2c9p
  Jun 18 08:50:47.754: INFO: Got endpoints: latency-svc-d7tr6 [748.848292ms]
  Jun 18 08:50:47.764: INFO: Created: latency-svc-vsqs9
  Jun 18 08:50:47.805: INFO: Got endpoints: latency-svc-hkgxk [750.882369ms]
  Jun 18 08:50:47.817: INFO: Created: latency-svc-x6v9q
  Jun 18 08:50:47.854: INFO: Got endpoints: latency-svc-hr428 [749.555305ms]
  Jun 18 08:50:47.867: INFO: Created: latency-svc-fw9ss
  Jun 18 08:50:47.906: INFO: Got endpoints: latency-svc-x7crg [748.634064ms]
  Jun 18 08:50:47.919: INFO: Created: latency-svc-mbw8d
  Jun 18 08:50:47.954: INFO: Got endpoints: latency-svc-hlkn5 [748.804891ms]
  Jun 18 08:50:47.964: INFO: Created: latency-svc-dtk7h
  Jun 18 08:50:48.004: INFO: Got endpoints: latency-svc-9stvb [749.838114ms]
  Jun 18 08:50:48.017: INFO: Created: latency-svc-x8s8m
  Jun 18 08:50:48.054: INFO: Got endpoints: latency-svc-hmkd2 [748.192029ms]
  Jun 18 08:50:48.068: INFO: Created: latency-svc-sdzjh
  Jun 18 08:50:48.110: INFO: Got endpoints: latency-svc-9ff56 [753.820647ms]
  Jun 18 08:50:48.123: INFO: Created: latency-svc-rvcwd
  Jun 18 08:50:48.155: INFO: Got endpoints: latency-svc-9sj2t [744.004987ms]
  Jun 18 08:50:48.167: INFO: Created: latency-svc-95pvb
  Jun 18 08:50:48.205: INFO: Got endpoints: latency-svc-ktpdb [750.342669ms]
  Jun 18 08:50:48.227: INFO: Created: latency-svc-rgwdx
  Jun 18 08:50:48.257: INFO: Got endpoints: latency-svc-n78wd [751.378779ms]
  Jun 18 08:50:48.274: INFO: Created: latency-svc-8fr62
  Jun 18 08:50:48.308: INFO: Got endpoints: latency-svc-ngtk9 [753.960551ms]
  Jun 18 08:50:48.321: INFO: Created: latency-svc-mgqtl
  Jun 18 08:50:48.355: INFO: Got endpoints: latency-svc-p52sh [750.017234ms]
  Jun 18 08:50:48.369: INFO: Created: latency-svc-rp824
  Jun 18 08:50:48.406: INFO: Got endpoints: latency-svc-5tjl9 [752.730456ms]
  Jun 18 08:50:48.425: INFO: Created: latency-svc-xhrgt
  Jun 18 08:50:48.454: INFO: Got endpoints: latency-svc-n2c9p [749.967014ms]
  Jun 18 08:50:48.469: INFO: Created: latency-svc-ksdz8
  Jun 18 08:50:48.505: INFO: Got endpoints: latency-svc-vsqs9 [751.499298ms]
  Jun 18 08:50:48.521: INFO: Created: latency-svc-c4ttg
  Jun 18 08:50:48.553: INFO: Got endpoints: latency-svc-x6v9q [747.544755ms]
  Jun 18 08:50:48.564: INFO: Created: latency-svc-g72cm
  Jun 18 08:50:48.605: INFO: Got endpoints: latency-svc-fw9ss [751.268633ms]
  Jun 18 08:50:48.630: INFO: Created: latency-svc-mkmzp
  Jun 18 08:50:48.660: INFO: Got endpoints: latency-svc-mbw8d [754.230604ms]
  Jun 18 08:50:48.674: INFO: Created: latency-svc-56l5r
  Jun 18 08:50:48.705: INFO: Got endpoints: latency-svc-dtk7h [751.290027ms]
  Jun 18 08:50:48.716: INFO: Created: latency-svc-zzfv6
  Jun 18 08:50:48.755: INFO: Got endpoints: latency-svc-x8s8m [750.810704ms]
  Jun 18 08:50:48.768: INFO: Created: latency-svc-pqhk4
  Jun 18 08:50:48.805: INFO: Got endpoints: latency-svc-sdzjh [750.372191ms]
  Jun 18 08:50:48.818: INFO: Created: latency-svc-k68vn
  Jun 18 08:50:48.855: INFO: Got endpoints: latency-svc-rvcwd [744.819217ms]
  Jun 18 08:50:48.868: INFO: Created: latency-svc-nc5zw
  Jun 18 08:50:48.903: INFO: Got endpoints: latency-svc-95pvb [748.622892ms]
  Jun 18 08:50:48.914: INFO: Created: latency-svc-sntk4
  Jun 18 08:50:48.955: INFO: Got endpoints: latency-svc-rgwdx [750.363405ms]
  Jun 18 08:50:48.967: INFO: Created: latency-svc-jg6kl
  Jun 18 08:50:49.003: INFO: Got endpoints: latency-svc-8fr62 [745.711129ms]
  Jun 18 08:50:49.015: INFO: Created: latency-svc-pm6kq
  Jun 18 08:50:49.054: INFO: Got endpoints: latency-svc-mgqtl [745.872578ms]
  Jun 18 08:50:49.065: INFO: Created: latency-svc-2cw4d
  Jun 18 08:50:49.105: INFO: Got endpoints: latency-svc-rp824 [750.628666ms]
  Jun 18 08:50:49.120: INFO: Created: latency-svc-5xfb9
  Jun 18 08:50:49.156: INFO: Got endpoints: latency-svc-xhrgt [749.538221ms]
  Jun 18 08:50:49.170: INFO: Created: latency-svc-mfh7b
  Jun 18 08:50:49.207: INFO: Got endpoints: latency-svc-ksdz8 [752.186409ms]
  Jun 18 08:50:49.220: INFO: Created: latency-svc-8txhm
  Jun 18 08:50:49.254: INFO: Got endpoints: latency-svc-c4ttg [746.2046ms]
  Jun 18 08:50:49.264: INFO: Created: latency-svc-sn72z
  Jun 18 08:50:49.306: INFO: Got endpoints: latency-svc-g72cm [752.757884ms]
  Jun 18 08:50:49.317: INFO: Created: latency-svc-6qhwv
  Jun 18 08:50:49.354: INFO: Got endpoints: latency-svc-mkmzp [748.447525ms]
  Jun 18 08:50:49.366: INFO: Created: latency-svc-vptjg
  Jun 18 08:50:49.404: INFO: Got endpoints: latency-svc-56l5r [744.103402ms]
  Jun 18 08:50:49.414: INFO: Created: latency-svc-ksss6
  Jun 18 08:50:49.454: INFO: Got endpoints: latency-svc-zzfv6 [749.065811ms]
  Jun 18 08:50:49.465: INFO: Created: latency-svc-w2drf
  Jun 18 08:50:49.506: INFO: Got endpoints: latency-svc-pqhk4 [750.774765ms]
  Jun 18 08:50:49.517: INFO: Created: latency-svc-n2qlq
  Jun 18 08:50:49.554: INFO: Got endpoints: latency-svc-k68vn [749.099932ms]
  Jun 18 08:50:49.565: INFO: Created: latency-svc-r6p5b
  Jun 18 08:50:49.603: INFO: Got endpoints: latency-svc-nc5zw [748.736016ms]
  Jun 18 08:50:49.616: INFO: Created: latency-svc-v88sq
  Jun 18 08:50:49.653: INFO: Got endpoints: latency-svc-sntk4 [749.463832ms]
  Jun 18 08:50:49.663: INFO: Created: latency-svc-jk9ln
  Jun 18 08:50:49.707: INFO: Got endpoints: latency-svc-jg6kl [751.333247ms]
  Jun 18 08:50:49.720: INFO: Created: latency-svc-mk2qg
  Jun 18 08:50:49.754: INFO: Got endpoints: latency-svc-pm6kq [750.513604ms]
  Jun 18 08:50:49.764: INFO: Created: latency-svc-mnrgg
  Jun 18 08:50:49.809: INFO: Got endpoints: latency-svc-2cw4d [754.473461ms]
  Jun 18 08:50:49.820: INFO: Created: latency-svc-49t46
  Jun 18 08:50:49.854: INFO: Got endpoints: latency-svc-5xfb9 [747.344386ms]
  Jun 18 08:50:49.866: INFO: Created: latency-svc-sknf4
  Jun 18 08:50:49.906: INFO: Got endpoints: latency-svc-mfh7b [750.207038ms]
  Jun 18 08:50:49.921: INFO: Created: latency-svc-m5cjv
  Jun 18 08:50:49.955: INFO: Got endpoints: latency-svc-8txhm [748.53004ms]
  Jun 18 08:50:49.966: INFO: Created: latency-svc-5xqbq
  Jun 18 08:50:50.007: INFO: Got endpoints: latency-svc-sn72z [753.237933ms]
  Jun 18 08:50:50.023: INFO: Created: latency-svc-vqbqz
  Jun 18 08:50:50.054: INFO: Got endpoints: latency-svc-6qhwv [748.09917ms]
  Jun 18 08:50:50.066: INFO: Created: latency-svc-rn8k6
  Jun 18 08:50:50.104: INFO: Got endpoints: latency-svc-vptjg [750.274893ms]
  Jun 18 08:50:50.116: INFO: Created: latency-svc-bhq7m
  Jun 18 08:50:50.155: INFO: Got endpoints: latency-svc-ksss6 [750.132512ms]
  Jun 18 08:50:50.166: INFO: Created: latency-svc-5xfgf
  Jun 18 08:50:50.205: INFO: Got endpoints: latency-svc-w2drf [750.885943ms]
  Jun 18 08:50:50.218: INFO: Created: latency-svc-s2tkj
  Jun 18 08:50:50.256: INFO: Got endpoints: latency-svc-n2qlq [750.049531ms]
  Jun 18 08:50:50.268: INFO: Created: latency-svc-c8fz8
  Jun 18 08:50:50.306: INFO: Got endpoints: latency-svc-r6p5b [752.340179ms]
  Jun 18 08:50:50.321: INFO: Created: latency-svc-l4kzk
  Jun 18 08:50:50.357: INFO: Got endpoints: latency-svc-v88sq [753.286057ms]
  Jun 18 08:50:50.371: INFO: Created: latency-svc-6svxf
  Jun 18 08:50:50.405: INFO: Got endpoints: latency-svc-jk9ln [752.300414ms]
  Jun 18 08:50:50.419: INFO: Created: latency-svc-q8rxh
  Jun 18 08:50:50.454: INFO: Got endpoints: latency-svc-mk2qg [747.803007ms]
  Jun 18 08:50:50.466: INFO: Created: latency-svc-pmlfz
  Jun 18 08:50:50.505: INFO: Got endpoints: latency-svc-mnrgg [751.399589ms]
  Jun 18 08:50:50.518: INFO: Created: latency-svc-8849d
  Jun 18 08:50:50.554: INFO: Got endpoints: latency-svc-49t46 [745.184574ms]
  Jun 18 08:50:50.564: INFO: Created: latency-svc-dm2ps
  Jun 18 08:50:50.608: INFO: Got endpoints: latency-svc-sknf4 [754.295786ms]
  Jun 18 08:50:50.622: INFO: Created: latency-svc-hhqqx
  Jun 18 08:50:50.655: INFO: Got endpoints: latency-svc-m5cjv [748.644264ms]
  Jun 18 08:50:50.673: INFO: Created: latency-svc-jc988
  Jun 18 08:50:50.706: INFO: Got endpoints: latency-svc-5xqbq [750.580477ms]
  Jun 18 08:50:50.717: INFO: Created: latency-svc-lzm4w
  Jun 18 08:50:50.756: INFO: Got endpoints: latency-svc-vqbqz [748.816191ms]
  Jun 18 08:50:50.766: INFO: Created: latency-svc-mg9fc
  Jun 18 08:50:50.805: INFO: Got endpoints: latency-svc-rn8k6 [750.877377ms]
  Jun 18 08:50:50.815: INFO: Created: latency-svc-rr7dp
  Jun 18 08:50:50.857: INFO: Got endpoints: latency-svc-bhq7m [753.041619ms]
  Jun 18 08:50:50.871: INFO: Created: latency-svc-td75h
  Jun 18 08:50:50.905: INFO: Got endpoints: latency-svc-5xfgf [750.500345ms]
  Jun 18 08:50:50.918: INFO: Created: latency-svc-vjbkh
  Jun 18 08:50:50.954: INFO: Got endpoints: latency-svc-s2tkj [748.555503ms]
  Jun 18 08:50:50.967: INFO: Created: latency-svc-nh57b
  Jun 18 08:50:51.004: INFO: Got endpoints: latency-svc-c8fz8 [748.732504ms]
  Jun 18 08:50:51.015: INFO: Created: latency-svc-j7tvt
  Jun 18 08:50:51.055: INFO: Got endpoints: latency-svc-l4kzk [749.251804ms]
  Jun 18 08:50:51.069: INFO: Created: latency-svc-6cjhp
  Jun 18 08:50:51.106: INFO: Got endpoints: latency-svc-6svxf [748.884629ms]
  Jun 18 08:50:51.119: INFO: Created: latency-svc-x6kl7
  Jun 18 08:50:51.154: INFO: Got endpoints: latency-svc-q8rxh [748.673412ms]
  Jun 18 08:50:51.167: INFO: Created: latency-svc-4qv2w
  Jun 18 08:50:51.204: INFO: Got endpoints: latency-svc-pmlfz [749.599362ms]
  Jun 18 08:50:51.216: INFO: Created: latency-svc-7h848
  Jun 18 08:50:51.256: INFO: Got endpoints: latency-svc-8849d [750.994111ms]
  Jun 18 08:50:51.268: INFO: Created: latency-svc-qz99z
  Jun 18 08:50:51.305: INFO: Got endpoints: latency-svc-dm2ps [750.595247ms]
  Jun 18 08:50:51.317: INFO: Created: latency-svc-zm97k
  Jun 18 08:50:51.358: INFO: Got endpoints: latency-svc-hhqqx [750.041701ms]
  Jun 18 08:50:51.370: INFO: Created: latency-svc-mkw7s
  Jun 18 08:50:51.405: INFO: Got endpoints: latency-svc-jc988 [750.4355ms]
  Jun 18 08:50:51.420: INFO: Created: latency-svc-xtzf4
  Jun 18 08:50:51.455: INFO: Got endpoints: latency-svc-lzm4w [748.948918ms]
  Jun 18 08:50:51.467: INFO: Created: latency-svc-5qwss
  Jun 18 08:50:51.506: INFO: Got endpoints: latency-svc-mg9fc [749.620361ms]
  Jun 18 08:50:51.517: INFO: Created: latency-svc-2pbcr
  Jun 18 08:50:51.556: INFO: Got endpoints: latency-svc-rr7dp [750.796472ms]
  Jun 18 08:50:51.572: INFO: Created: latency-svc-jrqxr
  Jun 18 08:50:51.606: INFO: Got endpoints: latency-svc-td75h [748.309817ms]
  Jun 18 08:50:51.619: INFO: Created: latency-svc-fkvdp
  Jun 18 08:50:51.655: INFO: Got endpoints: latency-svc-vjbkh [749.409123ms]
  Jun 18 08:50:51.682: INFO: Created: latency-svc-mkdft
  Jun 18 08:50:51.713: INFO: Got endpoints: latency-svc-nh57b [759.11252ms]
  Jun 18 08:50:51.730: INFO: Created: latency-svc-flbxm
  Jun 18 08:50:51.755: INFO: Got endpoints: latency-svc-j7tvt [749.988081ms]
  Jun 18 08:50:51.767: INFO: Created: latency-svc-zz849
  Jun 18 08:50:51.804: INFO: Got endpoints: latency-svc-6cjhp [748.254747ms]
  Jun 18 08:50:51.824: INFO: Created: latency-svc-dcn6j
  Jun 18 08:50:51.855: INFO: Got endpoints: latency-svc-x6kl7 [748.795159ms]
  Jun 18 08:50:51.866: INFO: Created: latency-svc-s4wd5
  Jun 18 08:50:51.907: INFO: Got endpoints: latency-svc-4qv2w [752.449137ms]
  Jun 18 08:50:51.929: INFO: Created: latency-svc-rqrdn
  Jun 18 08:50:51.954: INFO: Got endpoints: latency-svc-7h848 [750.241594ms]
  Jun 18 08:50:51.965: INFO: Created: latency-svc-4fm82
  Jun 18 08:50:52.004: INFO: Got endpoints: latency-svc-qz99z [747.777404ms]
  Jun 18 08:50:52.024: INFO: Created: latency-svc-7msr9
  Jun 18 08:50:52.055: INFO: Got endpoints: latency-svc-zm97k [749.830248ms]
  Jun 18 08:50:52.066: INFO: Created: latency-svc-kfw8f
  Jun 18 08:50:52.104: INFO: Got endpoints: latency-svc-mkw7s [745.922207ms]
  Jun 18 08:50:52.117: INFO: Created: latency-svc-szjrz
  Jun 18 08:50:52.155: INFO: Got endpoints: latency-svc-xtzf4 [749.47262ms]
  Jun 18 08:50:52.169: INFO: Created: latency-svc-7cwqm
  Jun 18 08:50:52.206: INFO: Got endpoints: latency-svc-5qwss [751.435731ms]
  Jun 18 08:50:52.221: INFO: Created: latency-svc-xzc4p
  Jun 18 08:50:52.254: INFO: Got endpoints: latency-svc-2pbcr [748.265496ms]
  Jun 18 08:50:52.264: INFO: Created: latency-svc-8tn7v
  Jun 18 08:50:52.304: INFO: Got endpoints: latency-svc-jrqxr [748.408338ms]
  Jun 18 08:50:52.319: INFO: Created: latency-svc-tbcrp
  Jun 18 08:50:52.354: INFO: Got endpoints: latency-svc-fkvdp [748.497652ms]
  Jun 18 08:50:52.366: INFO: Created: latency-svc-7h284
  Jun 18 08:50:52.403: INFO: Got endpoints: latency-svc-mkdft [748.771995ms]
  Jun 18 08:50:52.416: INFO: Created: latency-svc-t8wm6
  Jun 18 08:50:52.453: INFO: Got endpoints: latency-svc-flbxm [739.889874ms]
  Jun 18 08:50:52.464: INFO: Created: latency-svc-dxb68
  Jun 18 08:50:52.506: INFO: Got endpoints: latency-svc-zz849 [751.55873ms]
  Jun 18 08:50:52.520: INFO: Created: latency-svc-p5n8w
  Jun 18 08:50:52.556: INFO: Got endpoints: latency-svc-dcn6j [752.329152ms]
  Jun 18 08:50:52.570: INFO: Created: latency-svc-fxpjl
  Jun 18 08:50:52.607: INFO: Got endpoints: latency-svc-s4wd5 [751.790833ms]
  Jun 18 08:50:52.623: INFO: Created: latency-svc-slrh8
  Jun 18 08:50:52.653: INFO: Got endpoints: latency-svc-rqrdn [746.616659ms]
  Jun 18 08:50:52.667: INFO: Created: latency-svc-7xh5c
  Jun 18 08:50:52.706: INFO: Got endpoints: latency-svc-4fm82 [751.388385ms]
  Jun 18 08:50:52.719: INFO: Created: latency-svc-q9kk9
  Jun 18 08:50:52.756: INFO: Got endpoints: latency-svc-7msr9 [751.342588ms]
  Jun 18 08:50:52.768: INFO: Created: latency-svc-r6tj2
  Jun 18 08:50:52.805: INFO: Got endpoints: latency-svc-kfw8f [749.835377ms]
  Jun 18 08:50:52.817: INFO: Created: latency-svc-lbqfd
  Jun 18 08:50:52.855: INFO: Got endpoints: latency-svc-szjrz [750.524515ms]
  Jun 18 08:50:52.873: INFO: Created: latency-svc-vwrgj
  Jun 18 08:50:52.904: INFO: Got endpoints: latency-svc-7cwqm [749.131699ms]
  Jun 18 08:50:52.917: INFO: Created: latency-svc-g9bk6
  Jun 18 08:50:52.955: INFO: Got endpoints: latency-svc-xzc4p [748.289692ms]
  Jun 18 08:50:52.966: INFO: Created: latency-svc-d6tms
  Jun 18 08:50:53.006: INFO: Got endpoints: latency-svc-8tn7v [751.551659ms]
  Jun 18 08:50:53.018: INFO: Created: latency-svc-254xr
  Jun 18 08:50:53.056: INFO: Got endpoints: latency-svc-tbcrp [751.626558ms]
  Jun 18 08:50:53.067: INFO: Created: latency-svc-7dnkf
  Jun 18 08:50:53.105: INFO: Got endpoints: latency-svc-7h284 [750.387008ms]
  Jun 18 08:50:53.121: INFO: Created: latency-svc-68t88
  Jun 18 08:50:53.155: INFO: Got endpoints: latency-svc-t8wm6 [751.945536ms]
  Jun 18 08:50:53.173: INFO: Created: latency-svc-8dvdq
  Jun 18 08:50:53.207: INFO: Got endpoints: latency-svc-dxb68 [754.18523ms]
  Jun 18 08:50:53.255: INFO: Got endpoints: latency-svc-p5n8w [748.621826ms]
  Jun 18 08:50:53.306: INFO: Got endpoints: latency-svc-fxpjl [749.444067ms]
  Jun 18 08:50:53.354: INFO: Got endpoints: latency-svc-slrh8 [747.245739ms]
  Jun 18 08:50:53.404: INFO: Got endpoints: latency-svc-7xh5c [750.131833ms]
  Jun 18 08:50:53.454: INFO: Got endpoints: latency-svc-q9kk9 [748.154362ms]
  Jun 18 08:50:53.506: INFO: Got endpoints: latency-svc-r6tj2 [750.289054ms]
  Jun 18 08:50:53.554: INFO: Got endpoints: latency-svc-lbqfd [749.349719ms]
  Jun 18 08:50:53.604: INFO: Got endpoints: latency-svc-vwrgj [748.991122ms]
  Jun 18 08:50:53.654: INFO: Got endpoints: latency-svc-g9bk6 [750.113059ms]
  Jun 18 08:50:53.708: INFO: Got endpoints: latency-svc-d6tms [752.934892ms]
  Jun 18 08:50:53.755: INFO: Got endpoints: latency-svc-254xr [749.213492ms]
  Jun 18 08:50:53.806: INFO: Got endpoints: latency-svc-7dnkf [749.986585ms]
  Jun 18 08:50:53.856: INFO: Got endpoints: latency-svc-68t88 [751.421083ms]
  Jun 18 08:50:53.905: INFO: Got endpoints: latency-svc-8dvdq [749.996364ms]
  Jun 18 08:50:53.906: INFO: Latencies: [23.988306ms 36.465309ms 44.350787ms 60.962895ms 81.354968ms 90.261337ms 104.478398ms 110.901928ms 121.218023ms 137.483266ms 151.732518ms 162.407502ms 170.071658ms 170.920055ms 171.209245ms 171.338816ms 174.033725ms 176.236112ms 176.31174ms 177.226233ms 178.940281ms 179.28651ms 179.379151ms 179.564257ms 179.82421ms 180.454802ms 180.775288ms 180.868777ms 181.842428ms 182.248987ms 182.517116ms 184.845597ms 184.951537ms 185.102624ms 185.358525ms 186.372064ms 194.603066ms 198.025533ms 199.32824ms 235.670007ms 312.01757ms 319.737256ms 342.030611ms 377.726011ms 416.943899ms 453.591159ms 496.497091ms 530.913173ms 576.098992ms 612.387838ms 656.268532ms 692.191006ms 705.340401ms 732.391632ms 739.889874ms 741.218938ms 744.004987ms 744.103402ms 744.819217ms 745.184574ms 745.711129ms 745.872578ms 745.910555ms 745.922207ms 746.2046ms 746.616659ms 747.12433ms 747.245739ms 747.344386ms 747.544755ms 747.777404ms 747.803007ms 748.09917ms 748.154362ms 748.192029ms 748.254747ms 748.265496ms 748.289692ms 748.309817ms 748.382676ms 748.408338ms 748.447525ms 748.497652ms 748.53004ms 748.555503ms 748.605935ms 748.621826ms 748.622892ms 748.634064ms 748.644264ms 748.673412ms 748.732504ms 748.736016ms 748.771995ms 748.795159ms 748.804891ms 748.816191ms 748.848292ms 748.860962ms 748.884629ms 748.948918ms 748.991122ms 749.065811ms 749.099932ms 749.131699ms 749.139379ms 749.213492ms 749.251804ms 749.349719ms 749.385403ms 749.409123ms 749.444067ms 749.463832ms 749.47262ms 749.506111ms 749.538221ms 749.555305ms 749.560851ms 749.599362ms 749.620361ms 749.733168ms 749.830248ms 749.835377ms 749.838114ms 749.967014ms 749.986585ms 749.988081ms 749.996364ms 750.017234ms 750.041701ms 750.049531ms 750.113059ms 750.131833ms 750.132512ms 750.145459ms 750.207038ms 750.220786ms 750.241594ms 750.270983ms 750.274893ms 750.289054ms 750.31285ms 750.342669ms 750.353402ms 750.363405ms 750.372191ms 750.387008ms 750.4355ms 750.500345ms 750.513604ms 750.524515ms 750.580477ms 750.595247ms 750.628666ms 750.695438ms 750.774765ms 750.796472ms 750.810704ms 750.877377ms 750.882369ms 750.885943ms 750.994111ms 751.117118ms 751.167922ms 751.241171ms 751.268633ms 751.290027ms 751.333247ms 751.342588ms 751.378779ms 751.388385ms 751.399589ms 751.421083ms 751.435731ms 751.499298ms 751.551659ms 751.55873ms 751.626558ms 751.790833ms 751.945536ms 752.186409ms 752.300414ms 752.329152ms 752.340179ms 752.4143ms 752.449137ms 752.730456ms 752.757884ms 752.934892ms 753.041619ms 753.237933ms 753.286057ms 753.820647ms 753.960551ms 754.18523ms 754.230604ms 754.295786ms 754.473461ms 756.405375ms 759.11252ms]
  Jun 18 08:50:53.906: INFO: 50 %ile: 748.948918ms
  Jun 18 08:50:53.906: INFO: 90 %ile: 752.186409ms
  Jun 18 08:50:53.906: INFO: 99 %ile: 756.405375ms
  Jun 18 08:50:53.906: INFO: Total sample count: 200
  Jun 18 08:50:53.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-5525" for this suite. @ 06/18/24 08:50:53.914
• [10.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/18/24 08:50:53.922
  Jun 18 08:50:53.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename prestop @ 06/18/24 08:50:53.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:50:53.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:50:53.942
  STEP: Creating server pod server in namespace prestop-4270 @ 06/18/24 08:50:53.946
  STEP: Waiting for pods to come up. @ 06/18/24 08:50:53.957
  STEP: Creating tester pod tester in namespace prestop-4270 @ 06/18/24 08:50:55.969
  STEP: Deleting pre-stop pod @ 06/18/24 08:50:57.98
  Jun 18 08:51:02.992: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/18/24 08:51:02.993
  Jun 18 08:51:03.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4270" for this suite. @ 06/18/24 08:51:03.009
• [9.091 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/18/24 08:51:03.015
  Jun 18 08:51:03.015: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 08:51:03.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:51:03.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:51:03.031
  STEP: Creating pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981 @ 06/18/24 08:51:03.035
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 08:51:05.049
  Jun 18 08:51:05.053: INFO: Initial restart count of pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee is 0
  Jun 18 08:51:05.056: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:07.061: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:09.066: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:11.072: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:13.077: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:15.082: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:17.086: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:19.092: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:21.097: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:23.103: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:25.107: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:27.112: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:29.118: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:31.124: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:33.131: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:35.138: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:37.143: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:39.147: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:41.151: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:43.156: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:45.161: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:47.167: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:49.171: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:51.176: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:53.182: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:55.187: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:57.191: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:51:59.198: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:52:01.202: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:52:03.207: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:52:05.211: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:52:07.215: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:52:09.219: INFO: Get pod test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee in namespace container-probe-1981
  Jun 18 08:52:09.219: INFO: Restart count of pod container-probe-1981/test-grpc-1d290975-4c75-44d3-a61a-f0f3258707ee is now 1 (1m4.166146145s elapsed)
  STEP: deleting the pod @ 06/18/24 08:52:09.22
  Jun 18 08:52:09.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1981" for this suite. @ 06/18/24 08:52:09.241
• [66.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/18/24 08:52:09.248
  Jun 18 08:52:09.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 08:52:09.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:09.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:09.265
  STEP: Discovering how many secrets are in namespace by default @ 06/18/24 08:52:09.268
  STEP: Counting existing ResourceQuota @ 06/18/24 08:52:14.272
  STEP: Creating a ResourceQuota @ 06/18/24 08:52:19.277
  STEP: Ensuring resource quota status is calculated @ 06/18/24 08:52:19.284
  STEP: Creating a Secret @ 06/18/24 08:52:21.29
  STEP: Ensuring resource quota status captures secret creation @ 06/18/24 08:52:21.302
  STEP: Deleting a secret @ 06/18/24 08:52:23.309
  STEP: Ensuring resource quota status released usage @ 06/18/24 08:52:23.315
  Jun 18 08:52:25.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5673" for this suite. @ 06/18/24 08:52:25.324
• [16.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/18/24 08:52:25.33
  Jun 18 08:52:25.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 08:52:25.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:25.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:25.348
  STEP: Creating a ResourceQuota @ 06/18/24 08:52:25.352
  STEP: Getting a ResourceQuota @ 06/18/24 08:52:25.356
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/18/24 08:52:25.362
  STEP: Patching the ResourceQuota @ 06/18/24 08:52:25.365
  STEP: Deleting a Collection of ResourceQuotas @ 06/18/24 08:52:25.37
  STEP: Verifying the deleted ResourceQuota @ 06/18/24 08:52:25.376
  Jun 18 08:52:25.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3511" for this suite. @ 06/18/24 08:52:25.383
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/18/24 08:52:25.39
  Jun 18 08:52:25.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 08:52:25.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:25.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:25.402
  STEP: validating cluster-info @ 06/18/24 08:52:25.405
  Jun 18 08:52:25.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-3170 cluster-info'
  Jun 18 08:52:25.510: INFO: stderr: ""
  Jun 18 08:52:25.510: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun 18 08:52:25.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3170" for this suite. @ 06/18/24 08:52:25.515
• [0.130 seconds]
------------------------------
S
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/18/24 08:52:25.519
  Jun 18 08:52:25.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename subjectreview @ 06/18/24 08:52:25.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:25.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:25.538
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9381" @ 06/18/24 08:52:25.541
  Jun 18 08:52:25.544: INFO: saUsername: "system:serviceaccount:subjectreview-9381:e2e"
  Jun 18 08:52:25.544: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9381"}
  Jun 18 08:52:25.544: INFO: saUID: "53ed54f6-ec2f-4c9a-a582-656b4961db5e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9381:e2e" @ 06/18/24 08:52:25.544
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9381:e2e" @ 06/18/24 08:52:25.545
  Jun 18 08:52:25.547: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9381:e2e" api 'list' configmaps in "subjectreview-9381" namespace @ 06/18/24 08:52:25.547
  Jun 18 08:52:25.549: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9381:e2e" @ 06/18/24 08:52:25.549
  Jun 18 08:52:25.551: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun 18 08:52:25.551: INFO: LocalSubjectAccessReview has been verified
  Jun 18 08:52:25.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9381" for this suite. @ 06/18/24 08:52:25.556
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/18/24 08:52:25.562
  Jun 18 08:52:25.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 08:52:25.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:25.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:25.579
  STEP: Creating configMap with name cm-test-opt-del-4bd75c8b-aabb-4fed-9d9f-008e53df0698 @ 06/18/24 08:52:25.587
  STEP: Creating configMap with name cm-test-opt-upd-5f09ff43-835e-4d65-a725-4f0e6b375fb9 @ 06/18/24 08:52:25.591
  STEP: Creating the pod @ 06/18/24 08:52:25.597
  STEP: Deleting configmap cm-test-opt-del-4bd75c8b-aabb-4fed-9d9f-008e53df0698 @ 06/18/24 08:52:27.649
  STEP: Updating configmap cm-test-opt-upd-5f09ff43-835e-4d65-a725-4f0e6b375fb9 @ 06/18/24 08:52:27.655
  STEP: Creating configMap with name cm-test-opt-create-743a17c6-d9a8-4c8e-8e09-4ea4ab0789b1 @ 06/18/24 08:52:27.659
  STEP: waiting to observe update in volume @ 06/18/24 08:52:27.663
  Jun 18 08:52:29.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1285" for this suite. @ 06/18/24 08:52:29.709
• [4.156 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/18/24 08:52:29.719
  Jun 18 08:52:29.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:52:29.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:29.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:29.745
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:52:29.753
  STEP: Saw pod success @ 06/18/24 08:52:33.782
  Jun 18 08:52:33.785: INFO: Trying to get logs from node ck-129-worker-2 pod downwardapi-volume-b9b82835-128a-45df-8632-8a21493322ad container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:52:33.801
  Jun 18 08:52:33.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9152" for this suite. @ 06/18/24 08:52:33.819
• [4.105 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/18/24 08:52:33.824
  Jun 18 08:52:33.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 08:52:33.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:33.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:33.84
  STEP: Given a ReplicationController is created @ 06/18/24 08:52:33.843
  STEP: When the matched label of one of its pods change @ 06/18/24 08:52:33.847
  Jun 18 08:52:33.850: INFO: Pod name pod-release: Found 0 pods out of 1
  Jun 18 08:52:38.854: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/18/24 08:52:38.87
  Jun 18 08:52:39.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9302" for this suite. @ 06/18/24 08:52:39.886
• [6.068 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/18/24 08:52:39.893
  Jun 18 08:52:39.893: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename containers @ 06/18/24 08:52:39.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:39.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:39.916
  Jun 18 08:52:41.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9723" for this suite. @ 06/18/24 08:52:41.95
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/18/24 08:52:41.956
  Jun 18 08:52:41.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 08:52:41.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:41.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:41.978
  STEP: Creating ReplicationController "e2e-rc-b55z6" @ 06/18/24 08:52:41.981
  Jun 18 08:52:41.987: INFO: Get Replication Controller "e2e-rc-b55z6" to confirm replicas
  Jun 18 08:52:42.988: INFO: Get Replication Controller "e2e-rc-b55z6" to confirm replicas
  Jun 18 08:52:42.994: INFO: Found 1 replicas for "e2e-rc-b55z6" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-b55z6" @ 06/18/24 08:52:42.994
  STEP: Updating a scale subresource @ 06/18/24 08:52:42.998
  STEP: Verifying replicas where modified for replication controller "e2e-rc-b55z6" @ 06/18/24 08:52:43.004
  Jun 18 08:52:43.004: INFO: Get Replication Controller "e2e-rc-b55z6" to confirm replicas
  Jun 18 08:52:44.005: INFO: Get Replication Controller "e2e-rc-b55z6" to confirm replicas
  Jun 18 08:52:44.009: INFO: Found 2 replicas for "e2e-rc-b55z6" replication controller
  Jun 18 08:52:44.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7251" for this suite. @ 06/18/24 08:52:44.015
• [2.063 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/18/24 08:52:44.02
  Jun 18 08:52:44.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 08:52:44.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:44.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:44.038
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 08:52:44.042
  STEP: Saw pod success @ 06/18/24 08:52:46.057
  Jun 18 08:52:46.060: INFO: Trying to get logs from node ck-129-worker-2 pod downwardapi-volume-695c216a-7040-4e76-8045-a47e2f55c3fa container client-container: <nil>
  STEP: delete the pod @ 06/18/24 08:52:46.07
  Jun 18 08:52:46.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4130" for this suite. @ 06/18/24 08:52:46.088
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/18/24 08:52:46.094
  Jun 18 08:52:46.094: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 08:52:46.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:46.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:46.113
  Jun 18 08:52:46.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-952" for this suite. @ 06/18/24 08:52:46.155
• [0.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/18/24 08:52:46.166
  Jun 18 08:52:46.166: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 08:52:46.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:46.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:46.184
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9927 @ 06/18/24 08:52:46.188
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/18/24 08:52:46.203
  STEP: creating service externalsvc in namespace services-9927 @ 06/18/24 08:52:46.204
  STEP: creating replication controller externalsvc in namespace services-9927 @ 06/18/24 08:52:46.222
  I0618 08:52:46.229723      17 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9927, replica count: 2
  I0618 08:52:49.281358      17 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/18/24 08:52:49.285
  Jun 18 08:52:49.303: INFO: Creating new exec pod
  Jun 18 08:52:51.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-9927 exec execpodm9pqt -- /bin/sh -x -c nslookup nodeport-service.services-9927.svc.cluster.local'
  Jun 18 08:52:51.478: INFO: stderr: "+ nslookup nodeport-service.services-9927.svc.cluster.local\n"
  Jun 18 08:52:51.478: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-9927.svc.cluster.local\tcanonical name = externalsvc.services-9927.svc.cluster.local.\nName:\texternalsvc.services-9927.svc.cluster.local\nAddress: 10.98.223.197\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9927, will wait for the garbage collector to delete the pods @ 06/18/24 08:52:51.478
  Jun 18 08:52:51.538: INFO: Deleting ReplicationController externalsvc took: 5.98162ms
  Jun 18 08:52:51.638: INFO: Terminating ReplicationController externalsvc pods took: 100.660081ms
  Jun 18 08:52:54.757: INFO: Cleaning up the NodePort to ExternalName test service
  Jun 18 08:52:54.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9927" for this suite. @ 06/18/24 08:52:54.77
• [8.610 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/18/24 08:52:54.777
  Jun 18 08:52:54.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/18/24 08:52:54.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:52:54.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:52:54.793
  Jun 18 08:52:54.795: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 18 08:53:54.797: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 08:53:54.802: INFO: Starting informer...
  STEP: Starting pods... @ 06/18/24 08:53:54.802
  Jun 18 08:53:55.023: INFO: Pod1 is running on ck-129-worker-1. Tainting Node
  Jun 18 08:53:57.243: INFO: Pod2 is running on ck-129-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/18/24 08:53:57.243
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 08:53:57.263
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/18/24 08:53:57.269
  Jun 18 08:54:02.857: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jun 18 08:54:22.919: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 08:54:22.934
  Jun 18 08:54:22.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-9340" for this suite. @ 06/18/24 08:54:22.944
• [88.177 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/18/24 08:54:22.955
  Jun 18 08:54:22.955: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 08:54:22.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:54:22.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:54:22.978
  STEP: creating the pod @ 06/18/24 08:54:22.981
  Jun 18 08:54:22.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 create -f -'
  Jun 18 08:54:23.163: INFO: stderr: ""
  Jun 18 08:54:23.163: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/18/24 08:54:25.171
  Jun 18 08:54:25.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 label pods pause testing-label=testing-label-value'
  Jun 18 08:54:25.255: INFO: stderr: ""
  Jun 18 08:54:25.255: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/18/24 08:54:25.255
  Jun 18 08:54:25.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 get pod pause -L testing-label'
  Jun 18 08:54:25.328: INFO: stderr: ""
  Jun 18 08:54:25.328: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/18/24 08:54:25.328
  Jun 18 08:54:25.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 label pods pause testing-label-'
  Jun 18 08:54:25.411: INFO: stderr: ""
  Jun 18 08:54:25.411: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/18/24 08:54:25.411
  Jun 18 08:54:25.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 get pod pause -L testing-label'
  Jun 18 08:54:25.509: INFO: stderr: ""
  Jun 18 08:54:25.509: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/18/24 08:54:25.51
  Jun 18 08:54:25.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 delete --grace-period=0 --force -f -'
  Jun 18 08:54:25.591: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 08:54:25.591: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun 18 08:54:25.591: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 get rc,svc -l name=pause --no-headers'
  Jun 18 08:54:25.671: INFO: stderr: "No resources found in kubectl-763 namespace.\n"
  Jun 18 08:54:25.671: INFO: stdout: ""
  Jun 18 08:54:25.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-763 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 18 08:54:25.746: INFO: stderr: ""
  Jun 18 08:54:25.746: INFO: stdout: ""
  Jun 18 08:54:25.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-763" for this suite. @ 06/18/24 08:54:25.75
• [2.801 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/18/24 08:54:25.756
  Jun 18 08:54:25.756: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename watch @ 06/18/24 08:54:25.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:54:25.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:54:25.774
  STEP: creating a watch on configmaps with label A @ 06/18/24 08:54:25.778
  STEP: creating a watch on configmaps with label B @ 06/18/24 08:54:25.78
  STEP: creating a watch on configmaps with label A or B @ 06/18/24 08:54:25.781
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/18/24 08:54:25.783
  Jun 18 08:54:25.786: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14822 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:54:25.786: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14822 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/18/24 08:54:25.786
  Jun 18 08:54:25.793: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14824 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:54:25.793: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14824 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/18/24 08:54:25.793
  Jun 18 08:54:25.800: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14825 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:54:25.800: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14825 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/18/24 08:54:25.8
  Jun 18 08:54:25.805: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14826 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:54:25.805: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5949  eae5ef14-bf05-4099-b49d-074a879fa2d1 14826 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/18/24 08:54:25.805
  Jun 18 08:54:25.808: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5949  c0537475-cb2d-4801-91ce-8c63e8cf9206 14827 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:54:25.808: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5949  c0537475-cb2d-4801-91ce-8c63e8cf9206 14827 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/18/24 08:54:35.81
  Jun 18 08:54:35.816: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5949  c0537475-cb2d-4801-91ce-8c63e8cf9206 14870 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:54:35.816: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5949  c0537475-cb2d-4801-91ce-8c63e8cf9206 14870 0 2024-06-18 08:54:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-18 08:54:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 08:54:45.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5949" for this suite. @ 06/18/24 08:54:45.826
• [20.079 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/18/24 08:54:45.836
  Jun 18 08:54:45.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 08:54:45.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:54:45.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:54:45.864
  STEP: Creating configMap with name configmap-test-volume-map-eb27e24a-e210-4bd6-a40a-bcf61db8c567 @ 06/18/24 08:54:45.869
  STEP: Creating a pod to test consume configMaps @ 06/18/24 08:54:45.876
  STEP: Saw pod success @ 06/18/24 08:54:49.9
  Jun 18 08:54:49.904: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-f0e0f81f-269d-4da7-85a4-42eaf7747660 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 08:54:49.927
  Jun 18 08:54:49.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-865" for this suite. @ 06/18/24 08:54:49.946
• [4.116 seconds]
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/18/24 08:54:49.952
  Jun 18 08:54:49.952: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 08:54:49.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:54:49.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:54:49.969
  STEP: creating a Service @ 06/18/24 08:54:49.975
  STEP: watching for the Service to be added @ 06/18/24 08:54:49.989
  Jun 18 08:54:49.991: INFO: Found Service test-service-mjmbl in namespace services-8349 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31954}]
  Jun 18 08:54:49.991: INFO: Service test-service-mjmbl created
  STEP: Getting /status @ 06/18/24 08:54:49.991
  Jun 18 08:54:49.995: INFO: Service test-service-mjmbl has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/18/24 08:54:49.995
  STEP: watching for the Service to be patched @ 06/18/24 08:54:50.003
  Jun 18 08:54:50.005: INFO: observed Service test-service-mjmbl in namespace services-8349 with annotations: map[] & LoadBalancer: {[]}
  Jun 18 08:54:50.005: INFO: Found Service test-service-mjmbl in namespace services-8349 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun 18 08:54:50.005: INFO: Service test-service-mjmbl has service status patched
  STEP: updating the ServiceStatus @ 06/18/24 08:54:50.005
  Jun 18 08:54:50.012: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/18/24 08:54:50.013
  Jun 18 08:54:50.017: INFO: Observed Service test-service-mjmbl in namespace services-8349 with annotations: map[] & Conditions: {[]}
  Jun 18 08:54:50.017: INFO: Observed event: &Service{ObjectMeta:{test-service-mjmbl  services-8349  837785d9-dc44-44ec-9f65-24112ea24b09 14931 0 2024-06-18 08:54:49 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-18 08:54:49 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-18 08:54:49 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31954,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.98.128.153,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.98.128.153],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun 18 08:54:50.018: INFO: Found Service test-service-mjmbl in namespace services-8349 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 08:54:50.018: INFO: Service test-service-mjmbl has service status updated
  STEP: patching the service @ 06/18/24 08:54:50.019
  STEP: watching for the Service to be patched @ 06/18/24 08:54:50.033
  Jun 18 08:54:50.035: INFO: observed Service test-service-mjmbl in namespace services-8349 with labels: map[test-service-static:true]
  Jun 18 08:54:50.035: INFO: observed Service test-service-mjmbl in namespace services-8349 with labels: map[test-service-static:true]
  Jun 18 08:54:50.035: INFO: observed Service test-service-mjmbl in namespace services-8349 with labels: map[test-service-static:true]
  Jun 18 08:54:50.036: INFO: Found Service test-service-mjmbl in namespace services-8349 with labels: map[test-service:patched test-service-static:true]
  Jun 18 08:54:50.036: INFO: Service test-service-mjmbl patched
  STEP: deleting the service @ 06/18/24 08:54:50.036
  STEP: watching for the Service to be deleted @ 06/18/24 08:54:50.054
  Jun 18 08:54:50.056: INFO: Observed event: ADDED
  Jun 18 08:54:50.056: INFO: Observed event: MODIFIED
  Jun 18 08:54:50.056: INFO: Observed event: MODIFIED
  Jun 18 08:54:50.056: INFO: Observed event: MODIFIED
  Jun 18 08:54:50.057: INFO: Found Service test-service-mjmbl in namespace services-8349 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun 18 08:54:50.057: INFO: Service test-service-mjmbl deleted
  Jun 18 08:54:50.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8349" for this suite. @ 06/18/24 08:54:50.062
• [0.115 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/18/24 08:54:50.068
  Jun 18 08:54:50.068: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-webhook @ 06/18/24 08:54:50.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:54:50.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:54:50.084
  STEP: Setting up server cert @ 06/18/24 08:54:50.086
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/18/24 08:54:50.656
  STEP: Deploying the custom resource conversion webhook pod @ 06/18/24 08:54:50.668
  STEP: Wait for the deployment to be ready @ 06/18/24 08:54:50.682
  Jun 18 08:54:50.692: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 08:54:52.706
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 08:54:52.726
  Jun 18 08:54:53.726: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 18 08:54:53.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Creating a v1 custom resource @ 06/18/24 08:54:56.328
  STEP: Create a v2 custom resource @ 06/18/24 08:54:56.344
  STEP: List CRs in v1 @ 06/18/24 08:54:56.379
  STEP: List CRs in v2 @ 06/18/24 08:54:56.383
  Jun 18 08:54:56.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1415" for this suite. @ 06/18/24 08:54:56.941
• [6.884 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/18/24 08:54:56.952
  Jun 18 08:54:56.952: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 08:54:56.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:54:56.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:54:56.968
  STEP: creating pod @ 06/18/24 08:54:56.972
  Jun 18 08:54:58.992: INFO: Pod pod-hostip-819ad13a-f4a9-41b2-9f16-616d5162abfd has hostIP: 192.168.190.169
  Jun 18 08:54:58.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6505" for this suite. @ 06/18/24 08:54:58.997
• [2.050 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/18/24 08:54:59.002
  Jun 18 08:54:59.003: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 08:54:59.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:54:59.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:54:59.021
  STEP: Creating configMap with name configmap-test-volume-388b4fbe-51c7-4a32-960a-507f9f8459dc @ 06/18/24 08:54:59.025
  STEP: Creating a pod to test consume configMaps @ 06/18/24 08:54:59.028
  STEP: Saw pod success @ 06/18/24 08:55:03.048
  Jun 18 08:55:03.051: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-2bdba7ba-757c-4bf9-a4ff-646027553a72 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 08:55:03.066
  Jun 18 08:55:03.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3547" for this suite. @ 06/18/24 08:55:03.083
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/18/24 08:55:03.089
  Jun 18 08:55:03.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename limitrange @ 06/18/24 08:55:03.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:55:03.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:55:03.105
  STEP: Creating LimitRange "e2e-limitrange-xxhjl" in namespace "limitrange-355" @ 06/18/24 08:55:03.114
  STEP: Creating another limitRange in another namespace @ 06/18/24 08:55:03.119
  Jun 18 08:55:03.130: INFO: Namespace "e2e-limitrange-xxhjl-5441" created
  Jun 18 08:55:03.130: INFO: Creating LimitRange "e2e-limitrange-xxhjl" in namespace "e2e-limitrange-xxhjl-5441"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-xxhjl" @ 06/18/24 08:55:03.135
  Jun 18 08:55:03.138: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-xxhjl" in "limitrange-355" namespace @ 06/18/24 08:55:03.138
  Jun 18 08:55:03.144: INFO: LimitRange "e2e-limitrange-xxhjl" has been patched
  STEP: Delete LimitRange "e2e-limitrange-xxhjl" by Collection with labelSelector: "e2e-limitrange-xxhjl=patched" @ 06/18/24 08:55:03.145
  STEP: Confirm that the limitRange "e2e-limitrange-xxhjl" has been deleted @ 06/18/24 08:55:03.149
  Jun 18 08:55:03.149: INFO: Requesting list of LimitRange to confirm quantity
  Jun 18 08:55:03.152: INFO: Found 0 LimitRange with label "e2e-limitrange-xxhjl=patched"
  Jun 18 08:55:03.152: INFO: LimitRange "e2e-limitrange-xxhjl" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-xxhjl" @ 06/18/24 08:55:03.152
  Jun 18 08:55:03.154: INFO: Found 1 limitRange
  Jun 18 08:55:03.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-355" for this suite. @ 06/18/24 08:55:03.159
  STEP: Destroying namespace "e2e-limitrange-xxhjl-5441" for this suite. @ 06/18/24 08:55:03.163
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/18/24 08:55:03.169
  Jun 18 08:55:03.170: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 08:55:03.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:55:03.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:55:03.186
  STEP: Creating pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631 @ 06/18/24 08:55:03.189
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 08:55:05.201
  Jun 18 08:55:05.204: INFO: Initial restart count of pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 is 0
  Jun 18 08:55:05.207: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:07.211: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:09.216: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:11.224: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:13.229: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:15.234: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:17.240: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:19.245: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:21.249: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:23.254: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:25.259: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:27.264: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:29.269: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:31.274: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:33.279: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:35.286: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:37.290: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:39.295: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:41.301: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:43.306: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:45.313: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:47.320: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:49.325: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:51.329: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:53.334: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:55.340: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:57.348: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:55:59.353: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:01.358: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:03.363: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:05.368: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:07.373: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:09.379: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:11.383: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:13.388: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:15.395: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:17.401: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:19.407: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:21.416: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:23.421: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:25.425: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:27.431: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:29.437: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:31.441: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:33.444: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:35.449: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:37.455: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:39.461: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:41.465: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:43.470: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:45.476: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:47.481: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:49.487: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:51.492: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:53.498: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:55.503: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:57.509: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:56:59.514: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:01.519: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:03.524: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:05.530: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:07.534: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:09.540: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:11.545: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:13.550: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:15.555: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:17.560: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:19.565: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:21.570: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:23.575: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:25.580: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:27.586: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:29.590: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:31.599: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:33.605: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:35.612: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:37.617: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:39.623: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:41.630: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:43.636: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:45.642: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:47.646: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:49.653: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:51.658: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:53.664: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:55.671: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:57.677: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:57:59.685: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:01.691: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:03.694: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:05.701: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:07.706: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:09.719: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:11.725: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:13.731: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:15.736: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:17.741: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:19.746: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:21.751: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:23.758: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:25.763: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:27.768: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:29.774: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:31.778: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:33.784: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:35.789: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:37.794: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:39.799: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:41.805: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:43.810: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:45.814: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:47.819: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:49.825: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:51.830: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:53.835: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:55.840: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:57.845: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:58:59.854: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:59:01.859: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  Jun 18 08:59:03.863: INFO: Get pod liveness-de71ed10-2d87-4b06-8f26-94fdaadc7782 in namespace container-probe-631
  STEP: deleting the pod @ 06/18/24 08:59:05.865
  Jun 18 08:59:05.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-631" for this suite. @ 06/18/24 08:59:05.886
• [242.722 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/18/24 08:59:05.892
  Jun 18 08:59:05.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 08:59:05.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:59:05.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:59:05.924
  STEP: Creating the pod @ 06/18/24 08:59:05.928
  Jun 18 08:59:08.479: INFO: Successfully updated pod "annotationupdateb47541f0-4068-4084-b96f-258744f13826"
  Jun 18 08:59:12.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9360" for this suite. @ 06/18/24 08:59:12.509
• [6.626 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/18/24 08:59:12.519
  Jun 18 08:59:12.519: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 08:59:12.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 08:59:12.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 08:59:12.539
  STEP: Creating service test in namespace statefulset-5639 @ 06/18/24 08:59:12.542
  STEP: Creating a new StatefulSet @ 06/18/24 08:59:12.548
  Jun 18 08:59:12.561: INFO: Found 0 stateful pods, waiting for 3
  Jun 18 08:59:22.564: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 08:59:22.565: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 08:59:22.565: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 08:59:22.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-5639 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 08:59:22.751: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 08:59:22.751: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 08:59:22.751: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/18/24 08:59:32.762
  Jun 18 08:59:32.780: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/18/24 08:59:32.78
  STEP: Updating Pods in reverse ordinal order @ 06/18/24 08:59:42.789
  Jun 18 08:59:42.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-5639 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 08:59:42.920: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 08:59:42.920: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 08:59:42.920: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 06/18/24 08:59:52.939
  Jun 18 08:59:52.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-5639 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 08:59:53.119: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 08:59:53.119: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 08:59:53.119: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 09:00:03.269: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 06/18/24 09:00:13.279
  Jun 18 09:00:13.282: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-5639 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 09:00:13.405: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 09:00:13.405: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 09:00:13.405: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 09:00:23.421: INFO: Deleting all statefulset in ns statefulset-5639
  Jun 18 09:00:23.424: INFO: Scaling statefulset ss2 to 0
  Jun 18 09:00:33.437: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 09:00:33.440: INFO: Deleting statefulset ss2
  Jun 18 09:00:33.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5639" for this suite. @ 06/18/24 09:00:33.469
• [80.966 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/18/24 09:00:33.486
  Jun 18 09:00:33.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 09:00:33.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:00:33.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:00:33.514
  Jun 18 09:00:33.540: INFO: Create a RollingUpdate DaemonSet
  Jun 18 09:00:33.546: INFO: Check that daemon pods launch on every node of the cluster
  Jun 18 09:00:33.551: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:33.554: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:00:33.554: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 09:00:34.553: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:34.557: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 09:00:34.557: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  Jun 18 09:00:35.552: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:35.555: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 09:00:35.555: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun 18 09:00:35.555: INFO: Update the DaemonSet to trigger a rollout
  Jun 18 09:00:35.564: INFO: Updating DaemonSet daemon-set
  Jun 18 09:00:37.577: INFO: Roll back the DaemonSet before rollout is complete
  Jun 18 09:00:37.586: INFO: Updating DaemonSet daemon-set
  Jun 18 09:00:37.586: INFO: Make sure DaemonSet rollback is complete
  Jun 18 09:00:37.589: INFO: Wrong image for pod: daemon-set-7g7cv. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun 18 09:00:37.589: INFO: Pod daemon-set-7g7cv is not available
  Jun 18 09:00:37.594: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:38.595: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:39.595: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:40.593: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:41.595: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:42.594: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:00:43.592: INFO: Pod daemon-set-7kw88 is not available
  Jun 18 09:00:43.597: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 09:00:43.606
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2323, will wait for the garbage collector to delete the pods @ 06/18/24 09:00:43.606
  Jun 18 09:00:43.666: INFO: Deleting DaemonSet.extensions daemon-set took: 4.932549ms
  Jun 18 09:00:43.766: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.493688ms
  Jun 18 09:00:45.470: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:00:45.470: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 09:00:45.472: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16382"},"items":null}

  Jun 18 09:00:45.474: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16382"},"items":null}

  Jun 18 09:00:45.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2323" for this suite. @ 06/18/24 09:00:45.49
• [12.008 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/18/24 09:00:45.494
  Jun 18 09:00:45.494: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:00:45.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:00:45.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:00:45.513
  Jun 18 09:00:45.516: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/18/24 09:00:47.058
  Jun 18 09:00:47.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-7846 --namespace=crd-publish-openapi-7846 create -f -'
  Jun 18 09:00:47.228: INFO: stderr: ""
  Jun 18 09:00:47.228: INFO: stdout: "e2e-test-crd-publish-openapi-9986-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 18 09:00:47.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-7846 --namespace=crd-publish-openapi-7846 delete e2e-test-crd-publish-openapi-9986-crds test-cr'
  Jun 18 09:00:47.325: INFO: stderr: ""
  Jun 18 09:00:47.325: INFO: stdout: "e2e-test-crd-publish-openapi-9986-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun 18 09:00:47.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-7846 --namespace=crd-publish-openapi-7846 apply -f -'
  Jun 18 09:00:47.407: INFO: stderr: ""
  Jun 18 09:00:47.408: INFO: stdout: "e2e-test-crd-publish-openapi-9986-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 18 09:00:47.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-7846 --namespace=crd-publish-openapi-7846 delete e2e-test-crd-publish-openapi-9986-crds test-cr'
  Jun 18 09:00:47.488: INFO: stderr: ""
  Jun 18 09:00:47.488: INFO: stdout: "e2e-test-crd-publish-openapi-9986-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/18/24 09:00:47.488
  Jun 18 09:00:47.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-7846 explain e2e-test-crd-publish-openapi-9986-crds'
  Jun 18 09:00:47.563: INFO: stderr: ""
  Jun 18 09:00:47.563: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9986-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jun 18 09:00:48.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7846" for this suite. @ 06/18/24 09:00:48.994
• [3.504 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/18/24 09:00:48.999
  Jun 18 09:00:48.999: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename job @ 06/18/24 09:00:49
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:00:49.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:00:49.016
  STEP: Creating a suspended job @ 06/18/24 09:00:49.023
  STEP: Patching the Job @ 06/18/24 09:00:49.029
  STEP: Watching for Job to be patched @ 06/18/24 09:00:49.044
  Jun 18 09:00:49.046: INFO: Event ADDED observed for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-job-label:e2e-8t2p2] and annotations: map[]
  Jun 18 09:00:49.046: INFO: Event MODIFIED observed for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-job-label:e2e-8t2p2] and annotations: map[]
  Jun 18 09:00:49.046: INFO: Event MODIFIED found for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[]
  STEP: Updating the job @ 06/18/24 09:00:49.046
  STEP: Watching for Job to be updated @ 06/18/24 09:00:49.053
  Jun 18 09:00:49.055: INFO: Event MODIFIED found for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[updated:true]
  Jun 18 09:00:49.055: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/18/24 09:00:49.055
  Jun 18 09:00:49.058: INFO: Job: e2e-8t2p2 as labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2]
  STEP: Waiting for job to complete @ 06/18/24 09:00:49.058
  STEP: Delete a job collection with a labelselector @ 06/18/24 09:00:55.063
  STEP: Watching for Job to be deleted @ 06/18/24 09:00:55.069
  Jun 18 09:00:55.072: INFO: Event MODIFIED observed for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[updated:true]
  Jun 18 09:00:55.072: INFO: Event MODIFIED observed for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[updated:true]
  Jun 18 09:00:55.073: INFO: Event MODIFIED observed for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[updated:true]
  Jun 18 09:00:55.073: INFO: Event MODIFIED observed for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[updated:true]
  Jun 18 09:00:55.073: INFO: Event MODIFIED observed for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[updated:true]
  Jun 18 09:00:55.073: INFO: Event DELETED found for Job e2e-8t2p2 in namespace job-8127 with labels: map[e2e-8t2p2:patched e2e-job-label:e2e-8t2p2] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/18/24 09:00:55.074
  Jun 18 09:00:55.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8127" for this suite. @ 06/18/24 09:00:55.085
• [6.092 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/18/24 09:00:55.092
  Jun 18 09:00:55.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:00:55.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:00:55.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:00:55.107
  STEP: creating a ConfigMap @ 06/18/24 09:00:55.111
  STEP: fetching the ConfigMap @ 06/18/24 09:00:55.115
  STEP: patching the ConfigMap @ 06/18/24 09:00:55.118
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/18/24 09:00:55.123
  STEP: deleting the ConfigMap by collection with a label selector @ 06/18/24 09:00:55.126
  STEP: listing all ConfigMaps in test namespace @ 06/18/24 09:00:55.13
  Jun 18 09:00:55.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8823" for this suite. @ 06/18/24 09:00:55.136
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/18/24 09:00:55.145
  Jun 18 09:00:55.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:00:55.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:00:55.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:00:55.163
  Jun 18 09:00:55.168: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: creating the pod @ 06/18/24 09:00:55.169
  STEP: submitting the pod to kubernetes @ 06/18/24 09:00:55.169
  Jun 18 09:00:57.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5464" for this suite. @ 06/18/24 09:00:57.241
• [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/18/24 09:00:57.253
  Jun 18 09:00:57.253: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:00:57.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:00:57.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:00:57.27
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3200 @ 06/18/24 09:00:57.273
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/18/24 09:00:57.286
  STEP: creating service externalsvc in namespace services-3200 @ 06/18/24 09:00:57.286
  STEP: creating replication controller externalsvc in namespace services-3200 @ 06/18/24 09:00:57.304
  I0618 09:00:57.313725      17 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3200, replica count: 2
  I0618 09:01:00.366415      17 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/18/24 09:01:00.371
  Jun 18 09:01:00.384: INFO: Creating new exec pod
  Jun 18 09:01:02.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-3200 exec execpod4bkqn -- /bin/sh -x -c nslookup clusterip-service.services-3200.svc.cluster.local'
  Jun 18 09:01:02.578: INFO: stderr: "+ nslookup clusterip-service.services-3200.svc.cluster.local\n"
  Jun 18 09:01:02.578: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-3200.svc.cluster.local\tcanonical name = externalsvc.services-3200.svc.cluster.local.\nName:\texternalsvc.services-3200.svc.cluster.local\nAddress: 10.100.207.19\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3200, will wait for the garbage collector to delete the pods @ 06/18/24 09:01:02.578
  Jun 18 09:01:02.638: INFO: Deleting ReplicationController externalsvc took: 5.736132ms
  Jun 18 09:01:02.739: INFO: Terminating ReplicationController externalsvc pods took: 100.735711ms
  Jun 18 09:01:06.058: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun 18 09:01:06.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3200" for this suite. @ 06/18/24 09:01:06.069
• [8.822 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/18/24 09:01:06.076
  Jun 18 09:01:06.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename certificates @ 06/18/24 09:01:06.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:06.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:06.099
  STEP: getting /apis @ 06/18/24 09:01:06.849
  STEP: getting /apis/certificates.k8s.io @ 06/18/24 09:01:06.854
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/18/24 09:01:06.856
  STEP: creating @ 06/18/24 09:01:06.857
  STEP: getting @ 06/18/24 09:01:06.874
  STEP: listing @ 06/18/24 09:01:06.876
  STEP: watching @ 06/18/24 09:01:06.879
  Jun 18 09:01:06.879: INFO: starting watch
  STEP: patching @ 06/18/24 09:01:06.881
  STEP: updating @ 06/18/24 09:01:06.889
  Jun 18 09:01:06.893: INFO: waiting for watch events with expected annotations
  Jun 18 09:01:06.893: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/18/24 09:01:06.894
  STEP: patching /approval @ 06/18/24 09:01:06.897
  STEP: updating /approval @ 06/18/24 09:01:06.902
  STEP: getting /status @ 06/18/24 09:01:06.909
  STEP: patching /status @ 06/18/24 09:01:06.913
  STEP: updating /status @ 06/18/24 09:01:06.921
  STEP: deleting @ 06/18/24 09:01:06.93
  STEP: deleting a collection @ 06/18/24 09:01:06.939
  Jun 18 09:01:06.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3403" for this suite. @ 06/18/24 09:01:06.955
• [0.885 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/18/24 09:01:06.964
  Jun 18 09:01:06.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename watch @ 06/18/24 09:01:06.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:06.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:06.98
  STEP: creating a new configmap @ 06/18/24 09:01:06.983
  STEP: modifying the configmap once @ 06/18/24 09:01:06.988
  STEP: modifying the configmap a second time @ 06/18/24 09:01:06.997
  STEP: deleting the configmap @ 06/18/24 09:01:07.003
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/18/24 09:01:07.007
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/18/24 09:01:07.009
  Jun 18 09:01:07.009: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9434  884837aa-106e-47e4-8955-56ba1bf37327 16751 0 2024-06-18 09:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-18 09:01:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 09:01:07.010: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9434  884837aa-106e-47e4-8955-56ba1bf37327 16752 0 2024-06-18 09:01:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-18 09:01:07 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 09:01:07.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9434" for this suite. @ 06/18/24 09:01:07.015
• [0.056 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/18/24 09:01:07.02
  Jun 18 09:01:07.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:01:07.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:07.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:07.034
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/18/24 09:01:07.036
  Jun 18 09:01:07.037: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:01:08.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:01:14.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6843" for this suite. @ 06/18/24 09:01:14.053
• [7.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/18/24 09:01:14.06
  Jun 18 09:01:14.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename podtemplate @ 06/18/24 09:01:14.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:14.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:14.081
  STEP: Create set of pod templates @ 06/18/24 09:01:14.084
  Jun 18 09:01:14.088: INFO: created test-podtemplate-1
  Jun 18 09:01:14.091: INFO: created test-podtemplate-2
  Jun 18 09:01:14.095: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/18/24 09:01:14.095
  STEP: delete collection of pod templates @ 06/18/24 09:01:14.097
  Jun 18 09:01:14.097: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/18/24 09:01:14.106
  Jun 18 09:01:14.106: INFO: requesting list of pod templates to confirm quantity
  Jun 18 09:01:14.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5724" for this suite. @ 06/18/24 09:01:14.113
• [0.059 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/18/24 09:01:14.119
  Jun 18 09:01:14.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename lease-test @ 06/18/24 09:01:14.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:14.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:14.135
  Jun 18 09:01:14.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5959" for this suite. @ 06/18/24 09:01:14.183
• [0.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/18/24 09:01:14.188
  Jun 18 09:01:14.188: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 09:01:14.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:14.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:14.203
  Jun 18 09:01:14.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  W0618 09:01:16.761674      17 warnings.go:70] unknown field "alpha"
  W0618 09:01:16.761708      17 warnings.go:70] unknown field "beta"
  W0618 09:01:16.761714      17 warnings.go:70] unknown field "delta"
  W0618 09:01:16.761723      17 warnings.go:70] unknown field "epsilon"
  W0618 09:01:16.761728      17 warnings.go:70] unknown field "gamma"
  Jun 18 09:01:17.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9798" for this suite. @ 06/18/24 09:01:17.304
• [3.121 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/18/24 09:01:17.309
  Jun 18 09:01:17.309: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:01:17.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:17.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:17.33
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7496 @ 06/18/24 09:01:17.334
  STEP: changing the ExternalName service to type=NodePort @ 06/18/24 09:01:17.339
  STEP: creating replication controller externalname-service in namespace services-7496 @ 06/18/24 09:01:17.359
  I0618 09:01:17.371257      17 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7496, replica count: 2
  I0618 09:01:20.423948      17 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 09:01:20.424: INFO: Creating new exec pod
  Jun 18 09:01:23.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 09:01:23.594: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:23.594: INFO: stdout: ""
  Jun 18 09:01:24.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 09:01:24.583: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:24.583: INFO: stdout: ""
  Jun 18 09:01:25.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 09:01:25.558: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:25.558: INFO: stdout: ""
  Jun 18 09:01:26.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 09:01:26.568: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:26.568: INFO: stdout: ""
  Jun 18 09:01:27.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 09:01:27.576: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:27.576: INFO: stdout: ""
  Jun 18 09:01:28.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 09:01:28.572: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:28.572: INFO: stdout: "externalname-service-5rnzk"
  Jun 18 09:01:28.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.1.48 80'
  Jun 18 09:01:28.686: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.1.48 80\nConnection to 10.104.1.48 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:28.686: INFO: stdout: ""
  Jun 18 09:01:29.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.1.48 80'
  Jun 18 09:01:29.691: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.1.48 80\nConnection to 10.104.1.48 80 port [tcp/http] succeeded!\n"
  Jun 18 09:01:29.691: INFO: stdout: "externalname-service-zm9gq"
  Jun 18 09:01:29.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 30480'
  Jun 18 09:01:29.826: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 30480\nConnection to 192.168.190.169 30480 port [tcp/*] succeeded!\n"
  Jun 18 09:01:29.826: INFO: stdout: "externalname-service-5rnzk"
  Jun 18 09:01:29.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-7496 exec execpods7m9b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 30480'
  Jun 18 09:01:29.954: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 30480\nConnection to 192.168.190.167 30480 port [tcp/*] succeeded!\n"
  Jun 18 09:01:29.954: INFO: stdout: "externalname-service-zm9gq"
  Jun 18 09:01:29.955: INFO: Cleaning up the ExternalName to NodePort test service
  Jun 18 09:01:29.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7496" for this suite. @ 06/18/24 09:01:29.993
• [12.694 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/18/24 09:01:30.004
  Jun 18 09:01:30.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename init-container @ 06/18/24 09:01:30.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:30.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:30.022
  STEP: creating the pod @ 06/18/24 09:01:30.026
  Jun 18 09:01:30.026: INFO: PodSpec: initContainers in spec.initContainers
  Jun 18 09:01:34.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3406" for this suite. @ 06/18/24 09:01:34.307
• [4.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/18/24 09:01:34.315
  Jun 18 09:01:34.315: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 09:01:34.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:01:34.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:01:34.343
  STEP: creating the pod @ 06/18/24 09:01:34.347
  STEP: waiting for pod running @ 06/18/24 09:01:34.356
  STEP: creating a file in subpath @ 06/18/24 09:01:36.368
  Jun 18 09:01:36.373: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6953 PodName:var-expansion-68e8abc0-385b-4f6b-a64c-601c33774176 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:01:36.373: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:01:36.373: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:01:36.373: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-6953/pods/var-expansion-68e8abc0-385b-4f6b-a64c-601c33774176/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/18/24 09:01:36.434
  Jun 18 09:01:36.439: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6953 PodName:var-expansion-68e8abc0-385b-4f6b-a64c-601c33774176 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:01:36.440: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:01:36.442: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:01:36.442: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-6953/pods/var-expansion-68e8abc0-385b-4f6b-a64c-601c33774176/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/18/24 09:01:36.483
  Jun 18 09:01:36.999: INFO: Successfully updated pod "var-expansion-68e8abc0-385b-4f6b-a64c-601c33774176"
  STEP: waiting for annotated pod running @ 06/18/24 09:01:36.999
  STEP: deleting the pod gracefully @ 06/18/24 09:01:37.003
  Jun 18 09:01:37.003: INFO: Deleting pod "var-expansion-68e8abc0-385b-4f6b-a64c-601c33774176" in namespace "var-expansion-6953"
  Jun 18 09:01:37.009: INFO: Wait up to 5m0s for pod "var-expansion-68e8abc0-385b-4f6b-a64c-601c33774176" to be fully deleted
  Jun 18 09:02:11.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6953" for this suite. @ 06/18/24 09:02:11.1
• [36.793 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/18/24 09:02:11.108
  Jun 18 09:02:11.109: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename events @ 06/18/24 09:02:11.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:02:11.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:02:11.126
  STEP: Create set of events @ 06/18/24 09:02:11.129
  STEP: get a list of Events with a label in the current namespace @ 06/18/24 09:02:11.142
  STEP: delete a list of events @ 06/18/24 09:02:11.145
  Jun 18 09:02:11.145: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/18/24 09:02:11.158
  Jun 18 09:02:11.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6645" for this suite. @ 06/18/24 09:02:11.171
• [0.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/18/24 09:02:11.18
  Jun 18 09:02:11.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:02:11.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:02:11.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:02:11.196
  STEP: Creating configMap with name cm-test-opt-del-d0dfafa3-07fc-4428-8970-c8297c74145c @ 06/18/24 09:02:11.202
  STEP: Creating configMap with name cm-test-opt-upd-b2df0b58-1313-46df-8c0d-aa41ee19f843 @ 06/18/24 09:02:11.207
  STEP: Creating the pod @ 06/18/24 09:02:11.211
  STEP: Deleting configmap cm-test-opt-del-d0dfafa3-07fc-4428-8970-c8297c74145c @ 06/18/24 09:02:13.271
  STEP: Updating configmap cm-test-opt-upd-b2df0b58-1313-46df-8c0d-aa41ee19f843 @ 06/18/24 09:02:13.276
  STEP: Creating configMap with name cm-test-opt-create-7d8af35f-3bb1-4348-9e51-7636658fa4c2 @ 06/18/24 09:02:13.28
  STEP: waiting to observe update in volume @ 06/18/24 09:02:13.286
  Jun 18 09:02:15.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6282" for this suite. @ 06/18/24 09:02:15.329
• [4.156 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/18/24 09:02:15.335
  Jun 18 09:02:15.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 09:02:15.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:02:15.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:02:15.36
  STEP: Creating pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929 @ 06/18/24 09:02:15.364
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 09:02:17.38
  Jun 18 09:02:17.384: INFO: Initial restart count of pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf is 0
  Jun 18 09:02:17.386: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:19.391: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:21.397: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:23.401: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:25.406: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:27.410: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:29.417: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:31.422: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:33.427: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:35.432: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:37.437: INFO: Get pod liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf in namespace container-probe-5929
  Jun 18 09:02:37.438: INFO: Restart count of pod container-probe-5929/liveness-bd275ffd-7053-4ea1-a693-d52be10ed7cf is now 1 (20.053964423s elapsed)
  STEP: deleting the pod @ 06/18/24 09:02:37.438
  Jun 18 09:02:37.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5929" for this suite. @ 06/18/24 09:02:37.453
• [22.123 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/18/24 09:02:37.458
  Jun 18 09:02:37.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:02:37.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:02:37.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:02:37.478
  STEP: set up a multi version CRD @ 06/18/24 09:02:37.485
  Jun 18 09:02:37.487: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: mark a version not serverd @ 06/18/24 09:02:41.229
  STEP: check the unserved version gets removed @ 06/18/24 09:02:41.249
  STEP: check the other version is not changed @ 06/18/24 09:02:42.117
  Jun 18 09:02:45.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8568" for this suite. @ 06/18/24 09:02:45.04
• [7.588 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/18/24 09:02:45.046
  Jun 18 09:02:45.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename aggregator @ 06/18/24 09:02:45.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:02:45.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:02:45.064
  Jun 18 09:02:45.068: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Registering the sample API server. @ 06/18/24 09:02:45.069
  Jun 18 09:02:45.549: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun 18 09:02:45.577: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Jun 18 09:02:47.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:02:49.626: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:02:51.624: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:02:53.624: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:02:55.626: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:02:57.625: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:02:59.627: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:03:01.626: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:03:03.626: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:03:05.625: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:03:07.625: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:03:09.626: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 2, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 18 09:03:11.749: INFO: Waited 115.455634ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/18/24 09:03:11.791
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/18/24 09:03:11.793
  STEP: List APIServices @ 06/18/24 09:03:11.799
  Jun 18 09:03:11.807: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/18/24 09:03:11.807
  Jun 18 09:03:11.821: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/18/24 09:03:11.821
  Jun 18 09:03:11.829: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 18, 9, 3, 11, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/18/24 09:03:11.83
  Jun 18 09:03:11.833: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-18 09:03:11 +0000 UTC Passed all checks passed}
  Jun 18 09:03:11.833: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 09:03:11.833: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/18/24 09:03:11.833
  Jun 18 09:03:11.841: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1778960356" @ 06/18/24 09:03:11.841
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/18/24 09:03:11.852
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/18/24 09:03:11.858
  STEP: Patch APIService Status @ 06/18/24 09:03:11.86
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/18/24 09:03:11.868
  Jun 18 09:03:11.870: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-18 09:03:11 +0000 UTC Passed all checks passed}
  Jun 18 09:03:11.871: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 09:03:11.871: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun 18 09:03:11.871: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/18/24 09:03:11.871
  STEP: Confirm that the generated APIService has been deleted @ 06/18/24 09:03:11.878
  Jun 18 09:03:11.878: INFO: Requesting list of APIServices to confirm quantity
  Jun 18 09:03:11.882: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun 18 09:03:11.882: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun 18 09:03:11.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-804" for this suite. @ 06/18/24 09:03:11.971
• [26.929 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/18/24 09:03:11.977
  Jun 18 09:03:11.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 09:03:11.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:11.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:12.003
  Jun 18 09:03:12.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  W0618 09:03:14.567999      17 warnings.go:70] unknown field "alpha"
  W0618 09:03:14.568117      17 warnings.go:70] unknown field "beta"
  W0618 09:03:14.568132      17 warnings.go:70] unknown field "delta"
  W0618 09:03:14.568145      17 warnings.go:70] unknown field "epsilon"
  W0618 09:03:14.568157      17 warnings.go:70] unknown field "gamma"
  Jun 18 09:03:15.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9999" for this suite. @ 06/18/24 09:03:15.116
• [3.146 seconds]
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/18/24 09:03:15.122
  Jun 18 09:03:15.122: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:03:15.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:15.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:15.144
  Jun 18 09:03:15.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: creating the pod @ 06/18/24 09:03:15.15
  STEP: submitting the pod to kubernetes @ 06/18/24 09:03:15.15
  Jun 18 09:03:17.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7952" for this suite. @ 06/18/24 09:03:17.187
• [2.069 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/18/24 09:03:17.192
  Jun 18 09:03:17.192: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:03:17.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:17.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:17.211
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:03:17.214
  STEP: Saw pod success @ 06/18/24 09:03:21.237
  Jun 18 09:03:21.240: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-d2710de6-c29d-42f5-b01e-ffd9424a575a container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:03:21.248
  Jun 18 09:03:21.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7714" for this suite. @ 06/18/24 09:03:21.269
• [4.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/18/24 09:03:21.276
  Jun 18 09:03:21.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename disruption @ 06/18/24 09:03:21.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:21.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:21.298
  STEP: Waiting for the pdb to be processed @ 06/18/24 09:03:21.306
  STEP: Waiting for all pods to be running @ 06/18/24 09:03:23.366
  Jun 18 09:03:23.373: INFO: running pods: 0 < 3
  Jun 18 09:03:25.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5465" for this suite. @ 06/18/24 09:03:25.379
• [4.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/18/24 09:03:25.385
  Jun 18 09:03:25.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename hostport @ 06/18/24 09:03:25.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:25.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:25.401
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/18/24 09:03:25.409
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.190.167 on the node which pod1 resides and expect scheduled @ 06/18/24 09:03:27.424
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.190.167 but use UDP protocol on the node which pod2 resides @ 06/18/24 09:03:31.45
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/18/24 09:03:35.489
  Jun 18 09:03:35.489: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.190.167 http://127.0.0.1:54323/hostname] Namespace:hostport-4005 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:03:35.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:03:35.490: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:03:35.490: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4005/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.190.167+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.190.167, port: 54323 @ 06/18/24 09:03:35.555
  Jun 18 09:03:35.556: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.190.167:54323/hostname] Namespace:hostport-4005 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:03:35.556: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:03:35.557: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:03:35.557: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4005/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.190.167%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.190.167, port: 54323 UDP @ 06/18/24 09:03:35.606
  Jun 18 09:03:35.606: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.190.167 54323] Namespace:hostport-4005 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:03:35.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:03:35.607: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:03:35.607: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4005/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.190.167+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jun 18 09:03:40.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4005" for this suite. @ 06/18/24 09:03:40.664
• [15.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/18/24 09:03:40.671
  Jun 18 09:03:40.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename job @ 06/18/24 09:03:40.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:40.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:40.69
  STEP: Creating a job @ 06/18/24 09:03:40.695
  STEP: Ensuring active pods == parallelism @ 06/18/24 09:03:40.7
  STEP: Orphaning one of the Job's Pods @ 06/18/24 09:03:42.707
  Jun 18 09:03:43.224: INFO: Successfully updated pod "adopt-release-fqzlb"
  STEP: Checking that the Job readopts the Pod @ 06/18/24 09:03:43.224
  STEP: Removing the labels from the Job's Pod @ 06/18/24 09:03:45.231
  Jun 18 09:03:45.743: INFO: Successfully updated pod "adopt-release-fqzlb"
  STEP: Checking that the Job releases the Pod @ 06/18/24 09:03:45.743
  Jun 18 09:03:47.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5230" for this suite. @ 06/18/24 09:03:47.756
• [7.092 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/18/24 09:03:47.764
  Jun 18 09:03:47.765: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename ingress @ 06/18/24 09:03:47.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:47.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:47.788
  STEP: getting /apis @ 06/18/24 09:03:47.791
  STEP: getting /apis/networking.k8s.io @ 06/18/24 09:03:47.797
  STEP: getting /apis/networking.k8s.iov1 @ 06/18/24 09:03:47.798
  STEP: creating @ 06/18/24 09:03:47.8
  STEP: getting @ 06/18/24 09:03:47.817
  STEP: listing @ 06/18/24 09:03:47.82
  STEP: watching @ 06/18/24 09:03:47.823
  Jun 18 09:03:47.823: INFO: starting watch
  STEP: cluster-wide listing @ 06/18/24 09:03:47.825
  STEP: cluster-wide watching @ 06/18/24 09:03:47.827
  Jun 18 09:03:47.827: INFO: starting watch
  STEP: patching @ 06/18/24 09:03:47.829
  STEP: updating @ 06/18/24 09:03:47.835
  Jun 18 09:03:47.840: INFO: waiting for watch events with expected annotations
  Jun 18 09:03:47.840: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/18/24 09:03:47.841
  STEP: updating /status @ 06/18/24 09:03:47.845
  STEP: get /status @ 06/18/24 09:03:47.85
  STEP: deleting @ 06/18/24 09:03:47.852
  STEP: deleting a collection @ 06/18/24 09:03:47.859
  Jun 18 09:03:47.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7401" for this suite. @ 06/18/24 09:03:47.871
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/18/24 09:03:47.875
  Jun 18 09:03:47.875: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:03:47.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:47.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:47.889
  STEP: Setting up server cert @ 06/18/24 09:03:47.906
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:03:48.376
  STEP: Deploying the webhook pod @ 06/18/24 09:03:48.383
  STEP: Wait for the deployment to be ready @ 06/18/24 09:03:48.392
  Jun 18 09:03:48.398: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 09:03:50.409
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:03:50.421
  Jun 18 09:03:51.422: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/18/24 09:03:51.43
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/18/24 09:03:51.432
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/18/24 09:03:51.432
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/18/24 09:03:51.432
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/18/24 09:03:51.434
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/18/24 09:03:51.434
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/18/24 09:03:51.435
  Jun 18 09:03:51.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4836" for this suite. @ 06/18/24 09:03:51.479
  STEP: Destroying namespace "webhook-markers-1035" for this suite. @ 06/18/24 09:03:51.488
• [3.621 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/18/24 09:03:51.497
  Jun 18 09:03:51.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 09:03:51.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:51.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:51.521
  STEP: Waiting for pod completion @ 06/18/24 09:03:51.532
  Jun 18 09:03:55.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5346" for this suite. @ 06/18/24 09:03:55.561
• [4.069 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/18/24 09:03:55.567
  Jun 18 09:03:55.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:03:55.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:55.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:55.584
  STEP: Creating configMap configmap-5954/configmap-test-929d353e-1f79-4175-8416-291b335c5411 @ 06/18/24 09:03:55.587
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:03:55.59
  STEP: Saw pod success @ 06/18/24 09:03:59.61
  Jun 18 09:03:59.615: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-0df96c35-4710-4d4e-8e8c-7c2a09f04fa5 container env-test: <nil>
  STEP: delete the pod @ 06/18/24 09:03:59.63
  Jun 18 09:03:59.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5954" for this suite. @ 06/18/24 09:03:59.654
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/18/24 09:03:59.66
  Jun 18 09:03:59.660: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:03:59.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:59.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:59.678
  STEP: validating api versions @ 06/18/24 09:03:59.683
  Jun 18 09:03:59.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2592 api-versions'
  Jun 18 09:03:59.773: INFO: stderr: ""
  Jun 18 09:03:59.773: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\ngitlab.secloudit.io/v1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\nworkload.secloudit.io/v1\n"
  Jun 18 09:03:59.773: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2592" for this suite. @ 06/18/24 09:03:59.777
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/18/24 09:03:59.783
  Jun 18 09:03:59.783: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 09:03:59.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:03:59.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:03:59.798
  Jun 18 09:03:59.801: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:04:00.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6768" for this suite. @ 06/18/24 09:04:00.353
• [0.576 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/18/24 09:04:00.359
  Jun 18 09:04:00.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:04:00.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:04:00.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:04:00.379
  Jun 18 09:04:00.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-7577 version'
  Jun 18 09:04:00.462: INFO: stderr: ""
  Jun 18 09:04:00.462: INFO: stdout: "Client Version: v1.29.6\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.6\n"
  Jun 18 09:04:00.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7577" for this suite. @ 06/18/24 09:04:00.467
• [0.114 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/18/24 09:04:00.473
  Jun 18 09:04:00.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/18/24 09:04:00.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:04:00.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:04:00.489
  STEP: Creating two CSIDrivers @ 06/18/24 09:04:00.492
  STEP: Getting "inline-driver-284f650f-1cc3-4e4c-b27d-d021ad0a1857" & "inline-driver-7d2f7bd1-660f-4c1a-a405-4021a6e7170f" @ 06/18/24 09:04:00.505
  STEP: Patching the CSIDriver "inline-driver-7d2f7bd1-660f-4c1a-a405-4021a6e7170f" @ 06/18/24 09:04:00.51
  STEP: Updating the CSIDriver "inline-driver-7d2f7bd1-660f-4c1a-a405-4021a6e7170f" @ 06/18/24 09:04:00.517
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3090" @ 06/18/24 09:04:00.524
  STEP: Deleting CSIDriver "inline-driver-284f650f-1cc3-4e4c-b27d-d021ad0a1857" @ 06/18/24 09:04:00.527
  STEP: Confirm deletion of CSIDriver "inline-driver-284f650f-1cc3-4e4c-b27d-d021ad0a1857" @ 06/18/24 09:04:00.536
  STEP: Deleting CSIDriver "inline-driver-7d2f7bd1-660f-4c1a-a405-4021a6e7170f" via DeleteCollection @ 06/18/24 09:04:00.539
  STEP: Confirm deletion of CSIDriver "inline-driver-7d2f7bd1-660f-4c1a-a405-4021a6e7170f" @ 06/18/24 09:04:00.544
  Jun 18 09:04:00.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3090" for this suite. @ 06/18/24 09:04:00.565
• [0.098 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/18/24 09:04:00.573
  Jun 18 09:04:00.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:04:00.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:04:00.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:04:00.592
  STEP: Creating configMap with name configmap-test-upd-f98ece33-a3dc-4639-ad07-cc5d20139db1 @ 06/18/24 09:04:00.6
  STEP: Creating the pod @ 06/18/24 09:04:00.604
  STEP: Waiting for pod with text data @ 06/18/24 09:04:02.622
  STEP: Waiting for pod with binary data @ 06/18/24 09:04:02.628
  Jun 18 09:04:02.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9086" for this suite. @ 06/18/24 09:04:02.64
• [2.074 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/18/24 09:04:02.646
  Jun 18 09:04:02.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:04:02.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:04:02.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:04:02.663
  STEP: creating service endpoint-test2 in namespace services-403 @ 06/18/24 09:04:02.666
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-403 to expose endpoints map[] @ 06/18/24 09:04:02.677
  Jun 18 09:04:02.680: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Jun 18 09:04:03.688: INFO: successfully validated that service endpoint-test2 in namespace services-403 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-403 @ 06/18/24 09:04:03.688
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-403 to expose endpoints map[pod1:[80]] @ 06/18/24 09:04:05.703
  Jun 18 09:04:05.711: INFO: successfully validated that service endpoint-test2 in namespace services-403 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/18/24 09:04:05.711
  Jun 18 09:04:05.711: INFO: Creating new exec pod
  Jun 18 09:04:08.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-403 exec execpodqzw2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 18 09:04:08.866: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 18 09:04:08.866: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:04:08.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-403 exec execpodqzw2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.37.117 80'
  Jun 18 09:04:08.994: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.37.117 80\nConnection to 10.100.37.117 80 port [tcp/http] succeeded!\n"
  Jun 18 09:04:08.995: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-403 @ 06/18/24 09:04:08.995
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-403 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/18/24 09:04:11.013
  Jun 18 09:04:11.027: INFO: successfully validated that service endpoint-test2 in namespace services-403 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/18/24 09:04:11.027
  Jun 18 09:04:12.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-403 exec execpodqzw2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 18 09:04:12.154: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 18 09:04:12.154: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:04:12.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-403 exec execpodqzw2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.37.117 80'
  Jun 18 09:04:12.287: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.37.117 80\nConnection to 10.100.37.117 80 port [tcp/http] succeeded!\n"
  Jun 18 09:04:12.287: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-403 @ 06/18/24 09:04:12.287
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-403 to expose endpoints map[pod2:[80]] @ 06/18/24 09:04:12.299
  Jun 18 09:04:12.314: INFO: successfully validated that service endpoint-test2 in namespace services-403 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/18/24 09:04:12.314
  Jun 18 09:04:13.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-403 exec execpodqzw2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 18 09:04:13.440: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 18 09:04:13.440: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:04:13.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-403 exec execpodqzw2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.100.37.117 80'
  Jun 18 09:04:13.562: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.100.37.117 80\nConnection to 10.100.37.117 80 port [tcp/http] succeeded!\n"
  Jun 18 09:04:13.562: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-403 @ 06/18/24 09:04:13.562
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-403 to expose endpoints map[] @ 06/18/24 09:04:13.574
  Jun 18 09:04:14.595: INFO: successfully validated that service endpoint-test2 in namespace services-403 exposes endpoints map[]
  Jun 18 09:04:14.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-403" for this suite. @ 06/18/24 09:04:14.628
• [11.987 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/18/24 09:04:14.634
  Jun 18 09:04:14.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 09:04:14.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:04:14.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:04:14.657
  STEP: Creating service test in namespace statefulset-3208 @ 06/18/24 09:04:14.661
  STEP: Creating a new StatefulSet @ 06/18/24 09:04:14.665
  Jun 18 09:04:14.675: INFO: Found 0 stateful pods, waiting for 3
  Jun 18 09:04:24.680: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 09:04:24.680: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 09:04:24.680: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/18/24 09:04:24.689
  Jun 18 09:04:24.711: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/18/24 09:04:24.711
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/18/24 09:04:34.723
  STEP: Performing a canary update @ 06/18/24 09:04:34.724
  Jun 18 09:04:34.744: INFO: Updating stateful set ss2
  Jun 18 09:04:34.750: INFO: Waiting for Pod statefulset-3208/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/18/24 09:04:44.754
  Jun 18 09:04:44.798: INFO: Found 1 stateful pods, waiting for 3
  Jun 18 09:04:54.799: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 09:04:54.800: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 09:04:54.800: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/18/24 09:04:54.806
  Jun 18 09:04:54.831: INFO: Updating stateful set ss2
  Jun 18 09:04:54.837: INFO: Waiting for Pod statefulset-3208/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 18 09:05:04.859: INFO: Updating stateful set ss2
  Jun 18 09:05:04.866: INFO: Waiting for StatefulSet statefulset-3208/ss2 to complete update
  Jun 18 09:05:04.867: INFO: Waiting for Pod statefulset-3208/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 18 09:05:14.869: INFO: Deleting all statefulset in ns statefulset-3208
  Jun 18 09:05:14.872: INFO: Scaling statefulset ss2 to 0
  Jun 18 09:05:24.886: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 09:05:24.889: INFO: Deleting statefulset ss2
  Jun 18 09:05:24.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3208" for this suite. @ 06/18/24 09:05:24.905
• [70.278 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/18/24 09:05:24.913
  Jun 18 09:05:24.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:05:24.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:05:24.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:05:24.936
  STEP: Creating the pod @ 06/18/24 09:05:24.939
  Jun 18 09:05:27.479: INFO: Successfully updated pod "annotationupdate1ec0519c-cfcd-4777-b75e-10859493f387"
  Jun 18 09:05:31.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1761" for this suite. @ 06/18/24 09:05:31.51
• [6.602 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/18/24 09:05:31.515
  Jun 18 09:05:31.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename subpath @ 06/18/24 09:05:31.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:05:31.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:05:31.533
  STEP: Setting up data @ 06/18/24 09:05:31.536
  STEP: Creating pod pod-subpath-test-projected-6wst @ 06/18/24 09:05:31.543
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 09:05:31.543
  STEP: Saw pod success @ 06/18/24 09:05:55.616
  Jun 18 09:05:55.620: INFO: Trying to get logs from node ck-129-worker-1 pod pod-subpath-test-projected-6wst container test-container-subpath-projected-6wst: <nil>
  STEP: delete the pod @ 06/18/24 09:05:55.631
  STEP: Deleting pod pod-subpath-test-projected-6wst @ 06/18/24 09:05:55.645
  Jun 18 09:05:55.645: INFO: Deleting pod "pod-subpath-test-projected-6wst" in namespace "subpath-1280"
  Jun 18 09:05:55.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1280" for this suite. @ 06/18/24 09:05:55.653
• [24.142 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/18/24 09:05:55.657
  Jun 18 09:05:55.657: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:05:55.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:05:55.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:05:55.675
  STEP: Creating projection with secret that has name projected-secret-test-fdfb9977-3829-45d8-8eb9-c540852004e3 @ 06/18/24 09:05:55.678
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:05:55.682
  STEP: Saw pod success @ 06/18/24 09:05:59.701
  Jun 18 09:05:59.704: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-secrets-fccbd7c0-98f2-4e1a-b717-6192c04e4eaf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:05:59.714
  Jun 18 09:05:59.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9940" for this suite. @ 06/18/24 09:05:59.733
• [4.081 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/18/24 09:05:59.738
  Jun 18 09:05:59.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 09:05:59.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:05:59.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:05:59.758
  Jun 18 09:05:59.772: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 18 09:06:59.781: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/18/24 09:06:59.784
  Jun 18 09:06:59.808: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 18 09:06:59.816: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 18 09:06:59.835: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 18 09:06:59.845: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 18 09:06:59.869: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 18 09:06:59.875: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/18/24 09:06:59.875
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/18/24 09:07:01.903
  Jun 18 09:07:08.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3127" for this suite. @ 06/18/24 09:07:08.021
• [68.288 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/18/24 09:07:08.034
  Jun 18 09:07:08.034: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename taint-single-pod @ 06/18/24 09:07:08.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:07:08.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:07:08.052
  Jun 18 09:07:08.055: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 18 09:08:08.056: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 09:08:08.060: INFO: Starting informer...
  STEP: Starting pod... @ 06/18/24 09:08:08.06
  Jun 18 09:08:08.281: INFO: Pod is running on ck-129-worker-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/18/24 09:08:08.281
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 09:08:08.305
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/18/24 09:08:08.311
  Jun 18 09:08:08.311: INFO: Pod wasn't evicted. Proceeding
  Jun 18 09:08:08.311: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/18/24 09:08:08.328
  STEP: Waiting some time to make sure that toleration time passed. @ 06/18/24 09:08:08.334
  Jun 18 09:09:23.334: INFO: Pod wasn't evicted. Test successful
  Jun 18 09:09:23.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1487" for this suite. @ 06/18/24 09:09:23.341
• [135.314 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/18/24 09:09:23.348
  Jun 18 09:09:23.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename init-container @ 06/18/24 09:09:23.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:09:23.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:09:23.369
  STEP: creating the pod @ 06/18/24 09:09:23.373
  Jun 18 09:09:23.374: INFO: PodSpec: initContainers in spec.initContainers
  Jun 18 09:09:26.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6565" for this suite. @ 06/18/24 09:09:26.661
• [3.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/18/24 09:09:26.668
  Jun 18 09:09:26.668: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 09:09:26.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:09:26.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:09:26.685
  STEP: getting /apis @ 06/18/24 09:09:26.689
  STEP: getting /apis/node.k8s.io @ 06/18/24 09:09:26.694
  STEP: getting /apis/node.k8s.io/v1 @ 06/18/24 09:09:26.696
  STEP: creating @ 06/18/24 09:09:26.698
  STEP: watching @ 06/18/24 09:09:26.715
  Jun 18 09:09:26.715: INFO: starting watch
  STEP: getting @ 06/18/24 09:09:26.721
  STEP: listing @ 06/18/24 09:09:26.724
  STEP: patching @ 06/18/24 09:09:26.727
  STEP: updating @ 06/18/24 09:09:26.733
  Jun 18 09:09:26.737: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/18/24 09:09:26.738
  STEP: deleting a collection @ 06/18/24 09:09:26.746
  Jun 18 09:09:26.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8655" for this suite. @ 06/18/24 09:09:26.764
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/18/24 09:09:26.77
  Jun 18 09:09:26.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 09:09:26.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:09:26.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:09:26.787
  STEP: Creating service test in namespace statefulset-1183 @ 06/18/24 09:09:26.791
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/18/24 09:09:26.797
  STEP: Creating stateful set ss in namespace statefulset-1183 @ 06/18/24 09:09:26.8
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1183 @ 06/18/24 09:09:26.806
  Jun 18 09:09:26.809: INFO: Found 0 stateful pods, waiting for 1
  Jun 18 09:09:36.811: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/18/24 09:09:36.811
  Jun 18 09:09:36.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 09:09:36.980: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 09:09:36.980: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 09:09:36.980: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 09:09:36.992: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 18 09:09:46.987: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 09:09:46.987: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 09:09:47.005: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999138s
  Jun 18 09:09:48.010: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.994644852s
  Jun 18 09:09:49.015: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990470051s
  Jun 18 09:09:50.020: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.986133591s
  Jun 18 09:09:51.026: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.980283939s
  Jun 18 09:09:52.032: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.974605912s
  Jun 18 09:09:53.036: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.968435004s
  Jun 18 09:09:54.040: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.964692768s
  Jun 18 09:09:55.044: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.960798679s
  Jun 18 09:09:56.050: INFO: Verifying statefulset ss doesn't scale past 1 for another 955.669596ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1183 @ 06/18/24 09:09:57.05
  Jun 18 09:09:57.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 09:09:57.202: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 09:09:57.202: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 09:09:57.202: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 09:09:57.206: INFO: Found 1 stateful pods, waiting for 3
  Jun 18 09:10:07.210: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 09:10:07.210: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 09:10:07.210: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/18/24 09:10:07.21
  STEP: Scale down will halt with unhealthy stateful pod @ 06/18/24 09:10:07.211
  Jun 18 09:10:07.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 09:10:07.375: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 09:10:07.375: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 09:10:07.375: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 09:10:07.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 09:10:07.533: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 09:10:07.533: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 09:10:07.533: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 09:10:07.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 18 09:10:07.685: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 18 09:10:07.685: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 18 09:10:07.685: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 18 09:10:07.685: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 18 09:10:07.689: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Jun 18 09:10:17.699: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 09:10:17.699: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 09:10:17.699: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 18 09:10:17.714: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999461s
  Jun 18 09:10:18.719: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995603595s
  Jun 18 09:10:19.724: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.99048643s
  Jun 18 09:10:20.729: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.985163461s
  Jun 18 09:10:21.734: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.97993349s
  Jun 18 09:10:22.739: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.974976941s
  Jun 18 09:10:23.743: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.97069766s
  Jun 18 09:10:24.748: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.96626435s
  Jun 18 09:10:25.753: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.960816677s
  Jun 18 09:10:26.758: INFO: Verifying statefulset ss doesn't scale past 3 for another 956.089594ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1183 @ 06/18/24 09:10:27.759
  Jun 18 09:10:27.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 09:10:27.893: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 09:10:27.893: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 09:10:27.893: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 09:10:27.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 09:10:28.042: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 09:10:28.042: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 09:10:28.042: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 09:10:28.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=statefulset-1183 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 18 09:10:28.150: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 18 09:10:28.150: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 18 09:10:28.150: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 18 09:10:28.150: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/18/24 09:10:38.159
  Jun 18 09:10:38.159: INFO: Deleting all statefulset in ns statefulset-1183
  Jun 18 09:10:38.163: INFO: Scaling statefulset ss to 0
  Jun 18 09:10:38.169: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 09:10:38.174: INFO: Deleting statefulset ss
  Jun 18 09:10:38.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1183" for this suite. @ 06/18/24 09:10:38.2
• [71.437 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/18/24 09:10:38.208
  Jun 18 09:10:38.208: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:10:38.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:10:38.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:10:38.232
  STEP: creating the pod @ 06/18/24 09:10:38.237
  STEP: setting up watch @ 06/18/24 09:10:38.237
  STEP: submitting the pod to kubernetes @ 06/18/24 09:10:38.342
  STEP: verifying the pod is in kubernetes @ 06/18/24 09:10:38.351
  STEP: verifying pod creation was observed @ 06/18/24 09:10:38.354
  STEP: deleting the pod gracefully @ 06/18/24 09:10:40.369
  STEP: verifying pod deletion was observed @ 06/18/24 09:10:40.376
  Jun 18 09:10:42.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3731" for this suite. @ 06/18/24 09:10:42.686
• [4.484 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/18/24 09:10:42.692
  Jun 18 09:10:42.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:10:42.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:10:42.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:10:42.712
  STEP: Creating configMap that has name configmap-test-emptyKey-3fdbf728-a7bd-4730-8ea2-f12fe152cd6f @ 06/18/24 09:10:42.715
  Jun 18 09:10:42.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2292" for this suite. @ 06/18/24 09:10:42.722
• [0.035 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/18/24 09:10:42.728
  Jun 18 09:10:42.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/18/24 09:10:42.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:10:42.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:10:42.746
  STEP: Creating 50 configmaps @ 06/18/24 09:10:42.75
  STEP: Creating RC which spawns configmap-volume pods @ 06/18/24 09:10:42.986
  Jun 18 09:10:43.102: INFO: Pod name wrapped-volume-race-65362611-85c5-4c31-a165-aa237cee5e8d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/18/24 09:10:43.103
  STEP: Creating RC which spawns configmap-volume pods @ 06/18/24 09:10:45.183
  Jun 18 09:10:45.197: INFO: Pod name wrapped-volume-race-91b6c748-6f34-4b19-ac3a-1f70f0408a53: Found 0 pods out of 5
  Jun 18 09:10:50.215: INFO: Pod name wrapped-volume-race-91b6c748-6f34-4b19-ac3a-1f70f0408a53: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/18/24 09:10:50.215
  STEP: Creating RC which spawns configmap-volume pods @ 06/18/24 09:10:50.238
  Jun 18 09:10:50.257: INFO: Pod name wrapped-volume-race-29252948-fc28-4d7d-8e64-6b81c10b4938: Found 0 pods out of 5
  Jun 18 09:10:55.270: INFO: Pod name wrapped-volume-race-29252948-fc28-4d7d-8e64-6b81c10b4938: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/18/24 09:10:55.27
  STEP: deleting ReplicationController wrapped-volume-race-29252948-fc28-4d7d-8e64-6b81c10b4938 in namespace emptydir-wrapper-747, will wait for the garbage collector to delete the pods @ 06/18/24 09:10:55.286
  Jun 18 09:10:55.348: INFO: Deleting ReplicationController wrapped-volume-race-29252948-fc28-4d7d-8e64-6b81c10b4938 took: 6.737462ms
  Jun 18 09:10:55.449: INFO: Terminating ReplicationController wrapped-volume-race-29252948-fc28-4d7d-8e64-6b81c10b4938 pods took: 101.020572ms
  STEP: deleting ReplicationController wrapped-volume-race-91b6c748-6f34-4b19-ac3a-1f70f0408a53 in namespace emptydir-wrapper-747, will wait for the garbage collector to delete the pods @ 06/18/24 09:10:56.95
  Jun 18 09:10:57.011: INFO: Deleting ReplicationController wrapped-volume-race-91b6c748-6f34-4b19-ac3a-1f70f0408a53 took: 6.527195ms
  Jun 18 09:10:57.111: INFO: Terminating ReplicationController wrapped-volume-race-91b6c748-6f34-4b19-ac3a-1f70f0408a53 pods took: 100.56923ms
  STEP: deleting ReplicationController wrapped-volume-race-65362611-85c5-4c31-a165-aa237cee5e8d in namespace emptydir-wrapper-747, will wait for the garbage collector to delete the pods @ 06/18/24 09:10:58.012
  Jun 18 09:10:58.072: INFO: Deleting ReplicationController wrapped-volume-race-65362611-85c5-4c31-a165-aa237cee5e8d took: 4.928496ms
  Jun 18 09:10:58.172: INFO: Terminating ReplicationController wrapped-volume-race-65362611-85c5-4c31-a165-aa237cee5e8d pods took: 100.708073ms
  STEP: Cleaning up the configMaps @ 06/18/24 09:10:59.073
  Jun 18 09:10:59.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-747" for this suite. @ 06/18/24 09:10:59.259
• [16.536 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/18/24 09:10:59.266
  Jun 18 09:10:59.266: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:10:59.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:10:59.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:10:59.285
  STEP: Setting up server cert @ 06/18/24 09:10:59.307
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:10:59.822
  STEP: Deploying the webhook pod @ 06/18/24 09:10:59.829
  STEP: Wait for the deployment to be ready @ 06/18/24 09:10:59.84
  Jun 18 09:10:59.849: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 09:11:01.861
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:11:01.872
  Jun 18 09:11:02.874: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 09:11:02.882: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4712-crds.webhook.example.com via the AdmissionRegistration API @ 06/18/24 09:11:03.396
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/18/24 09:11:03.418
  Jun 18 09:11:06.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5563" for this suite. @ 06/18/24 09:11:06.019
  STEP: Destroying namespace "webhook-markers-9036" for this suite. @ 06/18/24 09:11:06.024
• [6.763 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/18/24 09:11:06.03
  Jun 18 09:11:06.031: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:11:06.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:11:06.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:11:06.046
  STEP: Setting up server cert @ 06/18/24 09:11:06.072
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:11:06.672
  STEP: Deploying the webhook pod @ 06/18/24 09:11:06.676
  STEP: Wait for the deployment to be ready @ 06/18/24 09:11:06.685
  Jun 18 09:11:06.692: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/18/24 09:11:08.702
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:11:08.713
  Jun 18 09:11:09.714: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/18/24 09:11:09.719
  STEP: create a pod @ 06/18/24 09:11:09.738
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/18/24 09:11:11.751
  Jun 18 09:11:11.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=webhook-346 attach --namespace=webhook-346 to-be-attached-pod -i -c=container1'
  Jun 18 09:11:11.839: INFO: rc: 1
  Jun 18 09:11:11.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-346" for this suite. @ 06/18/24 09:11:11.888
  STEP: Destroying namespace "webhook-markers-2121" for this suite. @ 06/18/24 09:11:11.894
• [5.870 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/18/24 09:11:11.9
  Jun 18 09:11:11.900: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-pred @ 06/18/24 09:11:11.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:11:11.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:11:11.919
  Jun 18 09:11:11.922: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 18 09:11:11.932: INFO: Waiting for terminating namespaces to be deleted...
  Jun 18 09:11:11.935: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-1 before test
  Jun 18 09:11:11.942: INFO: calico-node-c7wnv from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.942: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 09:11:11.942: INFO: kube-proxy-47vln from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.942: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 09:11:11.942: INFO: secloudit-registry-agent-577k6 from secloudit started at 2024-06-18 09:08:09 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.942: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 09:11:11.942: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-xhr4k from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 09:11:11.942: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 09:11:11.942: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 09:11:11.942: INFO: to-be-attached-pod from webhook-346 started at 2024-06-18 09:11:09 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.942: INFO: 	Container container1 ready: true, restart count 0
  Jun 18 09:11:11.942: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-2 before test
  Jun 18 09:11:11.949: INFO: calico-kube-controllers-8d76c5f9b-xttxm from kube-system started at 2024-06-18 08:53:57 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.949: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 18 09:11:11.949: INFO: calico-node-bq6wj from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.949: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 09:11:11.949: INFO: kube-proxy-hch9l from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.949: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 09:11:11.950: INFO: secloudit-registry-agent-lsgrp from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.950: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 09:11:11.950: INFO: sonobuoy from sonobuoy started at 2024-06-18 08:22:49 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.950: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 18 09:11:11.950: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-v4brh from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 09:11:11.950: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 09:11:11.950: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 18 09:11:11.950: INFO: 
  Logging pods the apiserver thinks is on node ck-129-worker-3 before test
  Jun 18 09:11:11.956: INFO: calico-node-4b96w from kube-system started at 2024-06-18 08:12:07 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.956: INFO: 	Container calico-node ready: true, restart count 0
  Jun 18 09:11:11.956: INFO: kube-proxy-zrpzr from kube-system started at 2024-06-18 08:11:33 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.957: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun 18 09:11:11.957: INFO: secloudit-registry-agent-ksqhs from secloudit started at 2024-06-18 08:18:24 +0000 UTC (1 container statuses recorded)
  Jun 18 09:11:11.957: INFO: 	Container secloudit-registry-agent ready: false, restart count 0
  Jun 18 09:11:11.957: INFO: sonobuoy-e2e-job-95d5e6fef3cb4755 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 09:11:11.957: INFO: 	Container e2e ready: true, restart count 0
  Jun 18 09:11:11.957: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 09:11:11.957: INFO: sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-s85s9 from sonobuoy started at 2024-06-18 08:22:50 +0000 UTC (2 container statuses recorded)
  Jun 18 09:11:11.957: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 18 09:11:11.957: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ck-129-worker-1 @ 06/18/24 09:11:11.978
  STEP: verifying the node has the label node ck-129-worker-2 @ 06/18/24 09:11:11.989
  STEP: verifying the node has the label node ck-129-worker-3 @ 06/18/24 09:11:12.002
  Jun 18 09:11:12.021: INFO: Pod calico-kube-controllers-8d76c5f9b-xttxm requesting resource cpu=0m on Node ck-129-worker-2
  Jun 18 09:11:12.021: INFO: Pod calico-node-4b96w requesting resource cpu=250m on Node ck-129-worker-3
  Jun 18 09:11:12.021: INFO: Pod calico-node-bq6wj requesting resource cpu=250m on Node ck-129-worker-2
  Jun 18 09:11:12.021: INFO: Pod calico-node-c7wnv requesting resource cpu=250m on Node ck-129-worker-1
  Jun 18 09:11:12.021: INFO: Pod kube-proxy-47vln requesting resource cpu=0m on Node ck-129-worker-1
  Jun 18 09:11:12.022: INFO: Pod kube-proxy-hch9l requesting resource cpu=0m on Node ck-129-worker-2
  Jun 18 09:11:12.022: INFO: Pod kube-proxy-zrpzr requesting resource cpu=0m on Node ck-129-worker-3
  Jun 18 09:11:12.022: INFO: Pod secloudit-registry-agent-577k6 requesting resource cpu=0m on Node ck-129-worker-1
  Jun 18 09:11:12.022: INFO: Pod secloudit-registry-agent-ksqhs requesting resource cpu=0m on Node ck-129-worker-3
  Jun 18 09:11:12.022: INFO: Pod secloudit-registry-agent-lsgrp requesting resource cpu=0m on Node ck-129-worker-2
  Jun 18 09:11:12.022: INFO: Pod sonobuoy requesting resource cpu=0m on Node ck-129-worker-2
  Jun 18 09:11:12.022: INFO: Pod sonobuoy-e2e-job-95d5e6fef3cb4755 requesting resource cpu=0m on Node ck-129-worker-3
  Jun 18 09:11:12.022: INFO: Pod sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-s85s9 requesting resource cpu=0m on Node ck-129-worker-3
  Jun 18 09:11:12.022: INFO: Pod sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-v4brh requesting resource cpu=0m on Node ck-129-worker-2
  Jun 18 09:11:12.023: INFO: Pod sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-xhr4k requesting resource cpu=0m on Node ck-129-worker-1
  Jun 18 09:11:12.023: INFO: Pod to-be-attached-pod requesting resource cpu=0m on Node ck-129-worker-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/18/24 09:11:12.023
  Jun 18 09:11:12.023: INFO: Creating a pod which consumes cpu=4025m on Node ck-129-worker-1
  Jun 18 09:11:12.032: INFO: Creating a pod which consumes cpu=4025m on Node ck-129-worker-2
  Jun 18 09:11:12.037: INFO: Creating a pod which consumes cpu=4025m on Node ck-129-worker-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/18/24 09:11:14.057
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-27dd9937-4c5a-44e8-bf68-41cca72a862e.17da0e3f1e880d02], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7698/filler-pod-27dd9937-4c5a-44e8-bf68-41cca72a862e to ck-129-worker-3] @ 06/18/24 09:11:14.061
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-27dd9937-4c5a-44e8-bf68-41cca72a862e.17da0e3f41eac322], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/18/24 09:11:14.061
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-27dd9937-4c5a-44e8-bf68-41cca72a862e.17da0e3f4668d067], Reason = [Created], Message = [Created container filler-pod-27dd9937-4c5a-44e8-bf68-41cca72a862e] @ 06/18/24 09:11:14.061
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-27dd9937-4c5a-44e8-bf68-41cca72a862e.17da0e3f47043490], Reason = [Started], Message = [Started container filler-pod-27dd9937-4c5a-44e8-bf68-41cca72a862e] @ 06/18/24 09:11:14.061
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8ea2f2c5-13a2-45af-b8ab-ca6b7ebf5c79.17da0e3f1e408f78], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7698/filler-pod-8ea2f2c5-13a2-45af-b8ab-ca6b7ebf5c79 to ck-129-worker-2] @ 06/18/24 09:11:14.061
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8ea2f2c5-13a2-45af-b8ab-ca6b7ebf5c79.17da0e3f3e2c3c0b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/18/24 09:11:14.061
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8ea2f2c5-13a2-45af-b8ab-ca6b7ebf5c79.17da0e3f4208be32], Reason = [Created], Message = [Created container filler-pod-8ea2f2c5-13a2-45af-b8ab-ca6b7ebf5c79] @ 06/18/24 09:11:14.062
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8ea2f2c5-13a2-45af-b8ab-ca6b7ebf5c79.17da0e3f428332d4], Reason = [Started], Message = [Started container filler-pod-8ea2f2c5-13a2-45af-b8ab-ca6b7ebf5c79] @ 06/18/24 09:11:14.062
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5292522-03fa-4f2c-bcf7-4cea872a926b.17da0e3f1d9d4f36], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7698/filler-pod-b5292522-03fa-4f2c-bcf7-4cea872a926b to ck-129-worker-1] @ 06/18/24 09:11:14.062
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5292522-03fa-4f2c-bcf7-4cea872a926b.17da0e3f3e01f755], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/18/24 09:11:14.062
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5292522-03fa-4f2c-bcf7-4cea872a926b.17da0e3f414cf639], Reason = [Created], Message = [Created container filler-pod-b5292522-03fa-4f2c-bcf7-4cea872a926b] @ 06/18/24 09:11:14.062
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b5292522-03fa-4f2c-bcf7-4cea872a926b.17da0e3f41ce93d0], Reason = [Started], Message = [Started container filler-pod-b5292522-03fa-4f2c-bcf7-4cea872a926b] @ 06/18/24 09:11:14.062
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17da0e3f96cb2db6], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/4 nodes are available: 1 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 06/18/24 09:11:14.075
  STEP: removing the label node off the node ck-129-worker-1 @ 06/18/24 09:11:15.076
  STEP: verifying the node doesn't have the label node @ 06/18/24 09:11:15.094
  STEP: removing the label node off the node ck-129-worker-2 @ 06/18/24 09:11:15.098
  STEP: verifying the node doesn't have the label node @ 06/18/24 09:11:15.112
  STEP: removing the label node off the node ck-129-worker-3 @ 06/18/24 09:11:15.115
  STEP: verifying the node doesn't have the label node @ 06/18/24 09:11:15.129
  Jun 18 09:11:15.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7698" for this suite. @ 06/18/24 09:11:15.138
• [3.244 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/18/24 09:11:15.145
  Jun 18 09:11:15.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 09:11:15.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:11:15.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:11:15.165
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/18/24 09:11:15.168
  STEP: When a replication controller with a matching selector is created @ 06/18/24 09:11:17.185
  STEP: Then the orphan pod is adopted @ 06/18/24 09:11:17.191
  Jun 18 09:11:18.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1062" for this suite. @ 06/18/24 09:11:18.203
• [3.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/18/24 09:11:18.211
  Jun 18 09:11:18.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/18/24 09:11:18.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:11:18.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:11:18.237
  STEP: create the container to handle the HTTPGet hook request. @ 06/18/24 09:11:18.246
  STEP: create the pod with lifecycle hook @ 06/18/24 09:11:20.274
  STEP: check poststart hook @ 06/18/24 09:11:22.291
  STEP: delete the pod with lifecycle hook @ 06/18/24 09:11:22.312
  Jun 18 09:11:24.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3282" for this suite. @ 06/18/24 09:11:24.329
• [6.124 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/18/24 09:11:24.335
  Jun 18 09:11:24.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/18/24 09:11:24.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:11:24.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:11:24.353
  STEP: Cleaning up the secret @ 06/18/24 09:11:26.382
  STEP: Cleaning up the configmap @ 06/18/24 09:11:26.388
  STEP: Cleaning up the pod @ 06/18/24 09:11:26.393
  Jun 18 09:11:26.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2785" for this suite. @ 06/18/24 09:11:26.407
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/18/24 09:11:26.414
  Jun 18 09:11:26.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 09:11:26.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:11:26.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:11:26.434
  STEP: Creating a test externalName service @ 06/18/24 09:11:26.438
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5673.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local; sleep 1; done
   @ 06/18/24 09:11:26.443
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5673.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local; sleep 1; done
   @ 06/18/24 09:11:26.443
  STEP: creating a pod to probe DNS @ 06/18/24 09:11:26.443
  STEP: submitting the pod to kubernetes @ 06/18/24 09:11:26.443
  STEP: retrieving the pod @ 06/18/24 09:11:28.463
  STEP: looking for the results for each expected name from probers @ 06/18/24 09:11:28.466
  Jun 18 09:11:28.473: INFO: DNS probes using dns-test-a2ba0e06-9241-44e4-9161-d4ca23d0c300 succeeded

  STEP: changing the externalName to bar.example.com @ 06/18/24 09:11:28.473
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5673.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local; sleep 1; done
   @ 06/18/24 09:11:28.482
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5673.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local; sleep 1; done
   @ 06/18/24 09:11:28.482
  STEP: creating a second pod to probe DNS @ 06/18/24 09:11:28.482
  STEP: submitting the pod to kubernetes @ 06/18/24 09:11:28.482
  STEP: retrieving the pod @ 06/18/24 09:11:30.496
  STEP: looking for the results for each expected name from probers @ 06/18/24 09:11:30.5
  Jun 18 09:11:30.505: INFO: File wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:30.510: INFO: File jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:30.511: INFO: Lookups using dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 failed for: [wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local]

  Jun 18 09:11:30.533: INFO: Pod client logs for webserver: 
  Jun 18 09:11:30.538: INFO: Pod client logs for querier: 
  Jun 18 09:11:30.543: INFO: Pod client logs for jessie-querier: 
  Jun 18 09:11:35.508: INFO: File wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:35.513: INFO: File jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:35.513: INFO: Lookups using dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 failed for: [wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local]

  Jun 18 09:11:35.520: INFO: Pod client logs for webserver: 
  Jun 18 09:11:35.526: INFO: Pod client logs for querier: 
  Jun 18 09:11:35.532: INFO: Pod client logs for jessie-querier: 
  Jun 18 09:11:40.509: INFO: File wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:40.512: INFO: File jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:40.512: INFO: Lookups using dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 failed for: [wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local]

  Jun 18 09:11:40.519: INFO: Pod client logs for webserver: 
  Jun 18 09:11:40.525: INFO: Pod client logs for querier: 
  Jun 18 09:11:40.531: INFO: Pod client logs for jessie-querier: 
  Jun 18 09:11:45.506: INFO: File wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:45.512: INFO: File jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains '' instead of 'bar.example.com.'
  Jun 18 09:11:45.512: INFO: Lookups using dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 failed for: [wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local]

  Jun 18 09:11:45.523: INFO: Pod client logs for webserver: 
  Jun 18 09:11:45.530: INFO: Pod client logs for querier: 
  Jun 18 09:11:45.540: INFO: Pod client logs for jessie-querier: 
  Jun 18 09:11:50.508: INFO: File wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:50.512: INFO: File jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:50.512: INFO: Lookups using dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 failed for: [wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local]

  Jun 18 09:11:50.519: INFO: Pod client logs for webserver: 
  Jun 18 09:11:50.525: INFO: Pod client logs for querier: 
  Jun 18 09:11:50.532: INFO: Pod client logs for jessie-querier: 
  Jun 18 09:11:55.508: INFO: File wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:55.513: INFO: File jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local from pod  dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun 18 09:11:55.513: INFO: Lookups using dns-5673/dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 failed for: [wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local]

  Jun 18 09:11:55.522: INFO: Pod client logs for webserver: 
  Jun 18 09:11:55.530: INFO: Pod client logs for querier: 
  Jun 18 09:11:55.536: INFO: Pod client logs for jessie-querier: 
  Jun 18 09:12:00.509: INFO: DNS probes using dns-test-d74b56e3-9284-4709-839c-9a72243aaa34 succeeded

  STEP: changing the service to type=ClusterIP @ 06/18/24 09:12:00.509
  W0618 09:12:00.529832      17 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5673.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5673.svc.cluster.local; sleep 1; done
   @ 06/18/24 09:12:00.53
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5673.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5673.svc.cluster.local; sleep 1; done
   @ 06/18/24 09:12:00.531
  STEP: creating a third pod to probe DNS @ 06/18/24 09:12:00.531
  STEP: submitting the pod to kubernetes @ 06/18/24 09:12:00.534
  STEP: retrieving the pod @ 06/18/24 09:12:02.555
  STEP: looking for the results for each expected name from probers @ 06/18/24 09:12:02.558
  Jun 18 09:12:02.567: INFO: DNS probes using dns-test-125661e8-7b9b-4c5b-bb15-3e875d2d1577 succeeded

  STEP: deleting the pod @ 06/18/24 09:12:02.568
  STEP: deleting the pod @ 06/18/24 09:12:02.576
  STEP: deleting the pod @ 06/18/24 09:12:02.588
  STEP: deleting the test externalName service @ 06/18/24 09:12:02.603
  Jun 18 09:12:02.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5673" for this suite. @ 06/18/24 09:12:02.708
• [36.335 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/18/24 09:12:02.751
  Jun 18 09:12:02.752: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:12:02.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:02.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:02.774
  STEP: creating Agnhost RC @ 06/18/24 09:12:02.778
  Jun 18 09:12:02.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1463 create -f -'
  Jun 18 09:12:02.951: INFO: stderr: ""
  Jun 18 09:12:02.951: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/18/24 09:12:02.951
  Jun 18 09:12:03.956: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 09:12:03.956: INFO: Found 0 / 1
  Jun 18 09:12:04.956: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 09:12:04.956: INFO: Found 1 / 1
  Jun 18 09:12:04.956: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/18/24 09:12:04.956
  Jun 18 09:12:04.959: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 09:12:04.959: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 09:12:04.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1463 patch pod agnhost-primary-2l6fw -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun 18 09:12:05.037: INFO: stderr: ""
  Jun 18 09:12:05.037: INFO: stdout: "pod/agnhost-primary-2l6fw patched\n"
  STEP: checking annotations @ 06/18/24 09:12:05.037
  Jun 18 09:12:05.040: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 09:12:05.040: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 09:12:05.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1463" for this suite. @ 06/18/24 09:12:05.046
• [2.300 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/18/24 09:12:05.053
  Jun 18 09:12:05.053: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:12:05.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:05.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:05.071
  STEP: Creating configMap with name projected-configmap-test-volume-6c9d0543-2209-43f8-8816-2714344e57b3 @ 06/18/24 09:12:05.075
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:12:05.078
  STEP: Saw pod success @ 06/18/24 09:12:09.095
  Jun 18 09:12:09.098: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-configmaps-aedfde95-ffff-452a-ba51-c6dd9906e87b container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:12:09.106
  Jun 18 09:12:09.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-885" for this suite. @ 06/18/24 09:12:09.124
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/18/24 09:12:09.141
  Jun 18 09:12:09.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 09:12:09.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:09.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:09.157
  Jun 18 09:12:09.161: INFO: Creating deployment "webserver-deployment"
  Jun 18 09:12:09.168: INFO: Waiting for observed generation 1
  Jun 18 09:12:11.177: INFO: Waiting for all required pods to come up
  Jun 18 09:12:11.183: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/18/24 09:12:11.183
  Jun 18 09:12:11.183: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun 18 09:12:11.190: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun 18 09:12:11.198: INFO: Updating deployment webserver-deployment
  Jun 18 09:12:11.198: INFO: Waiting for observed generation 2
  Jun 18 09:12:13.206: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun 18 09:12:13.209: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun 18 09:12:13.212: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 18 09:12:13.221: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun 18 09:12:13.221: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun 18 09:12:13.224: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 18 09:12:13.229: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun 18 09:12:13.229: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun 18 09:12:13.239: INFO: Updating deployment webserver-deployment
  Jun 18 09:12:13.239: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun 18 09:12:13.249: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun 18 09:12:13.253: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jun 18 09:12:13.266: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1efab572-2c52-43a0-9f14-4ce865e7e2f9",
      ResourceVersion: (string) (len=5) "21524",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 09:12:13.303: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
      ResourceVersion: (string) (len=5) "21518",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "1efab572-2c52-43a0-9f14-4ce865e7e2f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 65 66 61 62 35  37 32 2d 32 63 35 32 2d  |\"1efab572-2c52-|
              00000120  34 33 61 30 2d 39 66 31  34 2d 34 63 65 38 36 35  |43a0-9f14-4ce865|
              00000130  65 37 65 32 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e7e2f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:12:13.312: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun 18 09:12:13.313: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
      ResourceVersion: (string) (len=5) "21514",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "1efab572-2c52-43a0-9f14-4ce865e7e2f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 65 66 61 62 35  37 32 2d 32 63 35 32 2d  |\"1efab572-2c52-|
              00000120  34 33 61 30 2d 39 66 31  34 2d 34 63 65 38 36 35  |43a0-9f14-4ce865|
              00000130  65 37 65 32 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e7e2f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:12:13.346: INFO: Pod "webserver-deployment-557759b7c7-45rhc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-45rhc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44824aad-317c-49b7-a871-29b90ddbb1a1",
      ResourceVersion: (string) (len=5) "21380",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fda796d3d374fa4622ed9164caae73191ddad36b70983b930a9a68ab47925a58",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.206/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.206/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 36 31 2e  32 30 36 5c 22 7d 22 3a  |2.16.61.206\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxgq5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxgq5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=13) "172.16.61.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.61.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://fc2027fdb2d30d8a6ba2069c506b584930c0db8bf130e3311b33b153b3b2b37d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.361: INFO: Pod "webserver-deployment-557759b7c7-5r7t9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5r7t9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e2130f0-a0ff-4c07-9409-05ddd421b6bc",
      ResourceVersion: (string) (len=5) "21527",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rsd8n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rsd8n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.371: INFO: Pod "webserver-deployment-557759b7c7-8vw4b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8vw4b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84560fe6-0421-4f06-81f4-808d48490861",
      ResourceVersion: (string) (len=5) "21558",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5xcnc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5xcnc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.377: INFO: Pod "webserver-deployment-557759b7c7-9scd8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9scd8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8dcd3542-6220-47f9-84ad-c75e24f4fdc4",
      ResourceVersion: (string) (len=5) "21550",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pfvtx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pfvtx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.379: INFO: Pod "webserver-deployment-557759b7c7-cn4lc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cn4lc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28fb21b2-3c3c-45d3-b92a-0ba80b33a7bd",
      ResourceVersion: (string) (len=5) "21546",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhp58",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhp58",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.381: INFO: Pod "webserver-deployment-557759b7c7-dzs6m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dzs6m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26592494-14e5-4010-b43d-0cbd06990144",
      ResourceVersion: (string) (len=5) "21559",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2v2zg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2v2zg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.383: INFO: Pod "webserver-deployment-557759b7c7-jfdpn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jfdpn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6652f5db-739c-448d-b2a9-3e22a77b8114",
      ResourceVersion: (string) (len=5) "21425",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8dfbf6d77b1f686ac3db2758de532971e50b34406484086ab7b87403c27a4e05",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.240.113/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.240.113/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 34 30  2e 31 31 33 5c 22 7d 22  |2.16.240.113\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2zk4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2zk4c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) (len=14) "172.16.240.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.240.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://09e4e8dd755fd497d5521e0abe32a61f8ad9860ef5811f8ce445ba3a20389187",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.386: INFO: Pod "webserver-deployment-557759b7c7-jmhp9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jmhp9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "325455d7-aeaf-4118-8dfb-1045d09233de",
      ResourceVersion: (string) (len=5) "21427",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "828953bade82702239de63a90c99180c6d9e846805c23d9fe91e2fd35078cd0b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.240.112/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.240.112/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 34 30  2e 31 31 32 5c 22 7d 22  |2.16.240.112\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-chzfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-chzfs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) (len=14) "172.16.240.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.240.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e5045998e673bde78d832b09d4e1abd74784dc1a3d4df7d12d49f996c27567ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.390: INFO: Pod "webserver-deployment-557759b7c7-jqklz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jqklz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a36c8e00-3cb5-4100-8cc5-985c1babfa5d",
      ResourceVersion: (string) (len=5) "21555",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-84fwn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-84fwn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.393: INFO: Pod "webserver-deployment-557759b7c7-kqvft" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kqvft",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3911d527-a27d-43c6-90ea-e832f888da4d",
      ResourceVersion: (string) (len=5) "21552",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-chml2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-chml2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.395: INFO: Pod "webserver-deployment-557759b7c7-mcfst" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mcfst",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f200df21-3552-4c58-8707-9f944d3cb751",
      ResourceVersion: (string) (len=5) "21560",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c8jlf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c8jlf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.397: INFO: Pod "webserver-deployment-557759b7c7-mnbw5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mnbw5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b1357f7-2214-467a-adf6-7dc6f334cc31",
      ResourceVersion: (string) (len=5) "21543",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gv4jm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gv4jm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.398: INFO: Pod "webserver-deployment-557759b7c7-psbv9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-psbv9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "faa7c72a-57f1-4cc9-b069-cf3dae9ccc8b",
      ResourceVersion: (string) (len=5) "21545",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f2b7p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f2b7p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.400: INFO: Pod "webserver-deployment-557759b7c7-pskhk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pskhk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5742ff3-ad03-4c9f-8974-6ae08e444700",
      ResourceVersion: (string) (len=5) "21418",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "42f4faaf07f0022e5abc0e5d3a3aa510d3b4e09c4d76d8fe475e8bda081ee07c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.16.8.72/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.16.8.72/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 38 2e 37  32 5c 22 7d 22 3a 7b 22  |2.16.8.72\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ghztd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ghztd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=11) "172.16.8.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.16.8.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://33b5ef8e23a8aeaab19d192df14dd6b0ce5171a46013e4d5d959b99d8ff238ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.403: INFO: Pod "webserver-deployment-557759b7c7-q45nk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q45nk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fb06531-ffe4-4809-999a-24b237fc5992",
      ResourceVersion: (string) (len=5) "21544",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxxch",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxxch",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.405: INFO: Pod "webserver-deployment-557759b7c7-qd6qs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qd6qs",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6d3c947-bdb0-4f88-a5b6-e4da36f99709",
      ResourceVersion: (string) (len=5) "21557",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k5flm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k5flm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.407: INFO: Pod "webserver-deployment-557759b7c7-qztdp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qztdp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a15574dc-b057-4e41-a0e2-6c6ff1708bb5",
      ResourceVersion: (string) (len=5) "21415",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.16.8.70/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0b6390a325d847afe8bc22ca388a35d8bc6362959a897941cb5c8b111381504d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.16.8.70/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 38 2e 37  30 5c 22 7d 22 3a 7b 22  |2.16.8.70\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-72fz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-72fz4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=11) "172.16.8.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.16.8.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://642ccae5f634bb9a5ded5e297f1767b915f9b7680feccbefe048cb17c6a1958d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.410: INFO: Pod "webserver-deployment-557759b7c7-szq8t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-szq8t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0abc643-6117-4311-b7e0-f23851b96417",
      ResourceVersion: (string) (len=5) "21374",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2ab51109a2712d5788d3b1cbe5d9c8d0c4f52cab3d0e8fd36c8298e83297c16e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.240.111/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.240.111/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 34 30  2e 31 31 31 5c 22 7d 22  |2.16.240.111\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-scskn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-scskn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) (len=14) "172.16.240.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.240.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://29d01ba5f00695d611973cf204196cddbc85aa9113600f5c1245f190fcf4e734",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.414: INFO: Pod "webserver-deployment-557759b7c7-vtmnl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vtmnl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a1dfc7a-c5b3-47f8-b9fe-d5a4e2ccfc6f",
      ResourceVersion: (string) (len=5) "21385",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "84d40800df60b537a9b7ea26c2334504e6f90ae874f48112ed0ff053d2ee0936",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.214/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.214/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 36 31 2e  32 31 34 5c 22 7d 22 3a  |2.16.61.214\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kc9qv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kc9qv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=13) "172.16.61.214",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.61.214"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0b051dcd8a7cdbdf406eed1c1944ae0e227021f06ee67afa670b9d109d4e1393",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.418: INFO: Pod "webserver-deployment-557759b7c7-xww7l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xww7l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d5043fd-df03-48c8-a8d2-cc967c50b355",
      ResourceVersion: (string) (len=5) "21411",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.16.8.77/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "38ecd8e4330ef1476ce324a4fa5c1e2cd4b5d99dd443eb307a886c847e763a53",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.16.8.77/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4091582e-13eb-4ac7-bd6b-757583303393",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  39 31 35 38 32 65 2d 31  |d\":\"4091582e-1|
              00000090  33 65 62 2d 34 61 63 37  2d 62 64 36 62 2d 37 35  |3eb-4ac7-bd6b-75|
              000000a0  37 35 38 33 33 30 33 33  39 33 5c 22 7d 22 3a 7b  |7583303393\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 38 2e 37  37 5c 22 7d 22 3a 7b 22  |2.16.8.77\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5lnm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5lnm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=11) "172.16.8.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.16.8.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854298729,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://8dfe7aa661d99d5e22cc6167f65a1cfbc72fbc3b800d2ce5a5be1c9a4a468612",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.421: INFO: Pod "webserver-deployment-9b4f5bf69-2bbrl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2bbrl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7204f878-aaa2-4c93-892e-fa337e6bec7e",
      ResourceVersion: (string) (len=5) "21549",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sqgch",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sqgch",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.423: INFO: Pod "webserver-deployment-9b4f5bf69-2nc49" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2nc49",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3cea090-482a-4d7a-8651-63e8bad04ec1",
      ResourceVersion: (string) (len=5) "21541",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtvz7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtvz7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.426: INFO: Pod "webserver-deployment-9b4f5bf69-4tpqt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4tpqt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b11f6a8f-6803-4969-9973-6bd6577260bc",
      ResourceVersion: (string) (len=5) "21507",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b5fd748633632bd5b019f7660bfd9e0ee701daf08eeef235847e0af9287a4423",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.16.8.84/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.16.8.84/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7hhgw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7hhgw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.430: INFO: Pod "webserver-deployment-9b4f5bf69-9c4pr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9c4pr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6d072e9-aff7-413b-b409-6e030edcf599",
      ResourceVersion: (string) (len=5) "21496",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5973737fedd2ea0d9cc968ce25697a7c3d7d1a7d4dc2e2835da124f8e3d88544",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.240.114/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.240.114/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wr248",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wr248",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.434: INFO: Pod "webserver-deployment-9b4f5bf69-b4dbb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-b4dbb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74f7ed7d-986c-45f2-a38e-ed3af20491d5",
      ResourceVersion: (string) (len=5) "21554",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wxgwq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wxgwq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.438: INFO: Pod "webserver-deployment-9b4f5bf69-bkdnn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bkdnn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9be5305-7775-4022-9ed8-a2116ae07569",
      ResourceVersion: (string) (len=5) "21493",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0b240c922f704fe9883604d1a5a71fe4a674dffab92ef5c1195f25315eeef7fb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.202/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.202/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qslzm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qslzm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.446: INFO: Pod "webserver-deployment-9b4f5bf69-fhkk7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fhkk7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f9751ab-ad12-4bde-8740-0344ae279a0f",
      ResourceVersion: (string) (len=5) "21502",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "13cdcb05c68a51a97933f961dcc899dd166912be576bbb4f5348c37ee9427bb3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.213/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.213/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5wxww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5wxww",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.452: INFO: Pod "webserver-deployment-9b4f5bf69-fpnvm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fpnvm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e73509fd-7337-4980-b07b-a979a4896461",
      ResourceVersion: (string) (len=5) "21553",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9jtf8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9jtf8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.456: INFO: Pod "webserver-deployment-9b4f5bf69-j6tgr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j6tgr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c67206e-acbb-4024-ad58-2e7281b5450a",
      ResourceVersion: (string) (len=5) "21564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7nh9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7nh9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.459: INFO: Pod "webserver-deployment-9b4f5bf69-kv2wb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kv2wb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "309abff8-f5e3-4cb9-b882-b57ea8b517ad",
      ResourceVersion: (string) (len=5) "21539",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ngt52",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ngt52",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.461: INFO: Pod "webserver-deployment-9b4f5bf69-kx45p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kx45p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8039c07a-11d3-4d67-bc07-bf56ce46e60e",
      ResourceVersion: (string) (len=5) "21561",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6dmbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6dmbh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.464: INFO: Pod "webserver-deployment-9b4f5bf69-pgbg5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pgbg5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "512a7927-bda1-4d8a-8578-0131641d7b54",
      ResourceVersion: (string) (len=5) "21497",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.16.8.78/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c2198967f3ce1d2c3fbf0c7d86871b17c2cfc8a257e82767e33adb912d791c6b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.16.8.78/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rxtg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rxtg6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.468: INFO: Pod "webserver-deployment-9b4f5bf69-tr8xk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tr8xk",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1199",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c123d436-f637-488d-b5f8-1c4660d3ec2c",
      ResourceVersion: (string) (len=5) "21562",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854298733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "d5315c2c-7c06-4d35-8af0-911c5c510b69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854298733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 35  33 31 35 63 32 63 2d 37  |d\":\"d5315c2c-7|
              00000090  63 30 36 2d 34 64 33 35  2d 38 61 66 30 2d 39 31  |c06-4d35-8af0-91|
              000000a0  31 63 35 63 35 31 30 62  36 39 5c 22 7d 22 3a 7b  |1c5c510b69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jj2v9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jj2v9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:12:13.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1199" for this suite. @ 06/18/24 09:12:13.477
• [4.349 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/18/24 09:12:13.492
  Jun 18 09:12:13.492: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:12:13.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:13.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:13.518
  STEP: creating service multiprotocol-test in namespace services-5291 @ 06/18/24 09:12:13.521
  STEP: creating pod pod1 in namespace services-5291 @ 06/18/24 09:12:13.536
  STEP: Creating pod pod1 in namespace services-5291 @ 06/18/24 09:12:13.536
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5291 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/18/24 09:12:15.558
  Jun 18 09:12:15.568: INFO: successfully validated that service multiprotocol-test in namespace services-5291 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/18/24 09:12:15.568
  Jun 18 09:12:15.568: INFO: Creating new exec pod
  Jun 18 09:12:17.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80'
  Jun 18 09:12:17.708: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.55.174 80\nConnection to 10.103.55.174 80 port [tcp/http] succeeded!\n"
  Jun 18 09:12:17.708: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:12:17.708: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.55.174 80'
  Jun 18 09:12:21.845: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.55.174 80\nConnection to 10.103.55.174 80 port [udp/*] succeeded!\n"
  Jun 18 09:12:21.845: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/18/24 09:12:21.845
  Jun 18 09:12:21.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80'
  Jun 18 09:12:21.983: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.55.174 80\nConnection to 10.103.55.174 80 port [tcp/http] succeeded!\n"
  Jun 18 09:12:21.983: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:12:21.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.55.174 80'
  Jun 18 09:12:26.113: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.55.174 80\nConnection to 10.103.55.174 80 port [udp/*] succeeded!\n"
  Jun 18 09:12:26.113: INFO: stdout: ""
  Jun 18 09:12:26.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.55.174 80'
  Jun 18 09:12:30.242: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.55.174 80\nConnection to 10.103.55.174 80 port [udp/*] succeeded!\n"
  Jun 18 09:12:30.242: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/18/24 09:12:30.242
  Jun 18 09:12:30.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.103.55.174 80'
  Jun 18 09:12:34.383: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.103.55.174 80\nConnection to 10.103.55.174 80 port [udp/*] succeeded!\n"
  Jun 18 09:12:34.383: INFO: stdout: "pod1"
  Jun 18 09:12:34.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80'
  Jun 18 09:12:34.525: INFO: rc: 1
  Jun 18 09:12:34.525: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.55.174 80
  nc: connect to 10.103.55.174 port 80 (tcp) failed: Host is unreachable
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 18 09:12:36.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80'
  Jun 18 09:12:36.519: INFO: rc: 1
  Jun 18 09:12:36.519: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.55.174 80
  nc: connect to 10.103.55.174 port 80 (tcp) failed: Host is unreachable
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 18 09:12:38.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80'
  Jun 18 09:12:38.526: INFO: rc: 1
  Jun 18 09:12:38.526: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.55.174 80
  nc: connect to 10.103.55.174 port 80 (tcp) failed: Host is unreachable
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 18 09:12:40.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80'
  Jun 18 09:12:40.557: INFO: rc: 1
  Jun 18 09:12:40.557: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5291 exec execpodwcgc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.55.174 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.103.55.174 80
  nc: connect to 10.103.55.174 port 80 (tcp) failed: Host is unreachable
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 18 09:12:40.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5291" for this suite. @ 06/18/24 09:12:40.564
• [27.079 seconds]
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/18/24 09:12:40.571
  Jun 18 09:12:40.571: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/18/24 09:12:40.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:40.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:40.589
  STEP: getting /apis @ 06/18/24 09:12:40.592
  STEP: getting /apis/storage.k8s.io @ 06/18/24 09:12:40.597
  STEP: getting /apis/storage.k8s.io/v1 @ 06/18/24 09:12:40.598
  STEP: creating @ 06/18/24 09:12:40.6
  STEP: watching @ 06/18/24 09:12:40.611
  Jun 18 09:12:40.611: INFO: starting watch
  STEP: getting @ 06/18/24 09:12:40.617
  STEP: listing in namespace @ 06/18/24 09:12:40.62
  STEP: listing across namespaces @ 06/18/24 09:12:40.622
  STEP: patching @ 06/18/24 09:12:40.625
  STEP: updating @ 06/18/24 09:12:40.628
  Jun 18 09:12:40.633: INFO: waiting for watch events with expected annotations in namespace
  Jun 18 09:12:40.633: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/18/24 09:12:40.633
  STEP: deleting a collection @ 06/18/24 09:12:40.641
  Jun 18 09:12:40.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5138" for this suite. @ 06/18/24 09:12:40.655
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/18/24 09:12:40.662
  Jun 18 09:12:40.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename init-container @ 06/18/24 09:12:40.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:40.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:40.68
  STEP: creating the pod @ 06/18/24 09:12:40.728
  Jun 18 09:12:40.728: INFO: PodSpec: initContainers in spec.initContainers
  Jun 18 09:12:44.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8680" for this suite. @ 06/18/24 09:12:44.135
• [3.479 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/18/24 09:12:44.141
  Jun 18 09:12:44.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 09:12:44.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:44.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:44.155
  STEP: create the container @ 06/18/24 09:12:44.159
  W0618 09:12:44.168672      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/18/24 09:12:44.168
  STEP: get the container status @ 06/18/24 09:12:47.182
  STEP: the container should be terminated @ 06/18/24 09:12:47.185
  STEP: the termination message should be set @ 06/18/24 09:12:47.185
  Jun 18 09:12:47.185: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/18/24 09:12:47.185
  Jun 18 09:12:47.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6201" for this suite. @ 06/18/24 09:12:47.201
• [3.064 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/18/24 09:12:47.206
  Jun 18 09:12:47.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename job @ 06/18/24 09:12:47.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:47.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:47.226
  STEP: Creating a job @ 06/18/24 09:12:47.23
  STEP: Ensuring active pods == parallelism @ 06/18/24 09:12:47.236
  STEP: delete a job @ 06/18/24 09:12:49.241
  STEP: deleting Job.batch foo in namespace job-3562, will wait for the garbage collector to delete the pods @ 06/18/24 09:12:49.241
  Jun 18 09:12:49.299: INFO: Deleting Job.batch foo took: 4.146083ms
  Jun 18 09:12:49.399: INFO: Terminating Job.batch foo pods took: 100.397156ms
  STEP: Ensuring job was deleted @ 06/18/24 09:12:51.3
  Jun 18 09:12:51.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3562" for this suite. @ 06/18/24 09:12:51.309
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/18/24 09:12:51.319
  Jun 18 09:12:51.319: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:12:51.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:51.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:51.337
  STEP: Creating secret with name secret-test-810493f0-7480-45fe-85ab-d3545ff63afb @ 06/18/24 09:12:51.34
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:12:51.345
  STEP: Saw pod success @ 06/18/24 09:12:55.363
  Jun 18 09:12:55.366: INFO: Trying to get logs from node ck-129-worker-1 pod pod-secrets-c2d67219-02f3-49fb-b665-41b6553897e7 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:12:55.373
  Jun 18 09:12:55.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3367" for this suite. @ 06/18/24 09:12:55.395
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/18/24 09:12:55.4
  Jun 18 09:12:55.400: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 09:12:55.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:55.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:55.418
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/18/24 09:12:55.423
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/18/24 09:12:55.423
  STEP: creating a pod to probe DNS @ 06/18/24 09:12:55.423
  STEP: submitting the pod to kubernetes @ 06/18/24 09:12:55.423
  STEP: retrieving the pod @ 06/18/24 09:12:57.439
  STEP: looking for the results for each expected name from probers @ 06/18/24 09:12:57.443
  Jun 18 09:12:57.455: INFO: DNS probes using dns-643/dns-test-88084ae3-8d96-41bf-b175-32e2778b1fe9 succeeded

  STEP: deleting the pod @ 06/18/24 09:12:57.457
  Jun 18 09:12:57.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-643" for this suite. @ 06/18/24 09:12:57.473
• [2.078 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/18/24 09:12:57.48
  Jun 18 09:12:57.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:12:57.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:12:57.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:12:57.498
  STEP: creating service in namespace services-6348 @ 06/18/24 09:12:57.502
  STEP: creating service affinity-clusterip-transition in namespace services-6348 @ 06/18/24 09:12:57.502
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6348 @ 06/18/24 09:12:57.513
  I0618 09:12:57.519251      17 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-6348, replica count: 3
  I0618 09:13:00.571345      17 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 09:13:00.576: INFO: Creating new exec pod
  Jun 18 09:13:03.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-6348 exec execpod-affinityr28hz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun 18 09:13:03.739: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun 18 09:13:03.739: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:13:03.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-6348 exec execpod-affinityr28hz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.20.168 80'
  Jun 18 09:13:03.875: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.20.168 80\nConnection to 10.97.20.168 80 port [tcp/http] succeeded!\n"
  Jun 18 09:13:03.875: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:13:03.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-6348 exec execpod-affinityr28hz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.20.168:80/ ; done'
  Jun 18 09:13:04.110: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n"
  Jun 18 09:13:04.110: INFO: stdout: "\naffinity-clusterip-transition-rqc6l\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-rqc6l\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-rqc6l\naffinity-clusterip-transition-rqc6l\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-rqc6l\naffinity-clusterip-transition-9mvcm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm"
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-rqc6l
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-rqc6l
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-rqc6l
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-rqc6l
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-rqc6l
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-9mvcm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.110: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-6348 exec execpod-affinityr28hz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.97.20.168:80/ ; done'
  Jun 18 09:13:04.350: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.97.20.168:80/\n"
  Jun 18 09:13:04.350: INFO: stdout: "\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm\naffinity-clusterip-transition-572bm"
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Received response from host: affinity-clusterip-transition-572bm
  Jun 18 09:13:04.350: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6348, will wait for the garbage collector to delete the pods @ 06/18/24 09:13:04.361
  Jun 18 09:13:04.421: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.971149ms
  Jun 18 09:13:04.522: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.308536ms
  Jun 18 09:13:08.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6348" for this suite. @ 06/18/24 09:13:08.261
• [10.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/18/24 09:13:08.268
  Jun 18 09:13:08.268: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 09:13:08.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:13:08.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:13:08.29
  STEP: Creating pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522 @ 06/18/24 09:13:08.295
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 09:13:10.317
  Jun 18 09:13:10.322: INFO: Initial restart count of pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 is 0
  Jun 18 09:13:10.326: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:12.330: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:14.335: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:16.340: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:18.344: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:20.349: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:22.354: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:24.360: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:26.366: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:28.371: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:30.376: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:30.376: INFO: Restart count of pod container-probe-3522/liveness-e28123d3-bf06-46ab-bfc0-21f398171151 is now 1 (20.054527958s elapsed)
  Jun 18 09:13:32.383: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:34.388: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:36.393: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:38.398: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:40.403: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:42.409: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:44.415: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:46.421: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:48.427: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:50.431: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:50.431: INFO: Restart count of pod container-probe-3522/liveness-e28123d3-bf06-46ab-bfc0-21f398171151 is now 2 (40.109734024s elapsed)
  Jun 18 09:13:52.435: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:54.440: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:56.446: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:13:58.451: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:00.457: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:02.463: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:04.468: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:06.473: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:08.478: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:10.484: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:10.484: INFO: Restart count of pod container-probe-3522/liveness-e28123d3-bf06-46ab-bfc0-21f398171151 is now 3 (1m0.16203191s elapsed)
  Jun 18 09:14:12.489: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:14.495: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:16.499: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:18.504: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:20.510: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:22.515: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:24.520: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:26.525: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:28.530: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:30.534: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:30.534: INFO: Restart count of pod container-probe-3522/liveness-e28123d3-bf06-46ab-bfc0-21f398171151 is now 4 (1m20.212154855s elapsed)
  Jun 18 09:14:32.539: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:34.543: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:36.549: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:38.555: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:40.560: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:42.565: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:44.571: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:46.577: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:48.582: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:50.587: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:52.592: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:54.597: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:56.602: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:14:58.607: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:00.612: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:02.616: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:04.621: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:06.626: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:08.631: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:10.637: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:12.642: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:14.649: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:16.655: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:18.660: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:20.665: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:22.672: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:24.677: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:26.681: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:28.692: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:30.697: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:32.702: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:34.706: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:36.712: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:38.717: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:40.722: INFO: Get pod liveness-e28123d3-bf06-46ab-bfc0-21f398171151 in namespace container-probe-3522
  Jun 18 09:15:40.722: INFO: Restart count of pod container-probe-3522/liveness-e28123d3-bf06-46ab-bfc0-21f398171151 is now 5 (2m30.400476033s elapsed)
  STEP: deleting the pod @ 06/18/24 09:15:40.723
  Jun 18 09:15:40.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3522" for this suite. @ 06/18/24 09:15:40.741
• [152.478 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/18/24 09:15:40.747
  Jun 18 09:15:40.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:15:40.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:15:40.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:15:40.766
  STEP: Creating configMap with name configmap-test-upd-82d28065-0b10-4ec1-a8df-65931a010c7d @ 06/18/24 09:15:40.773
  STEP: Creating the pod @ 06/18/24 09:15:40.777
  STEP: Updating configmap configmap-test-upd-82d28065-0b10-4ec1-a8df-65931a010c7d @ 06/18/24 09:15:42.819
  STEP: waiting to observe update in volume @ 06/18/24 09:15:42.824
  Jun 18 09:17:05.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9847" for this suite. @ 06/18/24 09:17:05.251
• [84.512 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/18/24 09:17:05.26
  Jun 18 09:17:05.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:17:05.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:05.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:05.28
  STEP: Creating configMap with name configmap-test-volume-41dfd6b8-748d-45bf-a2af-8ea2115776a2 @ 06/18/24 09:17:05.285
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:17:05.292
  STEP: Saw pod success @ 06/18/24 09:17:09.315
  Jun 18 09:17:09.318: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-62a32888-c591-4050-a637-99d12d5780ed container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:17:09.325
  Jun 18 09:17:09.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6057" for this suite. @ 06/18/24 09:17:09.347
• [4.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/18/24 09:17:09.352
  Jun 18 09:17:09.352: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:17:09.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:09.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:09.371
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/18/24 09:17:09.375
  STEP: Saw pod success @ 06/18/24 09:17:13.397
  Jun 18 09:17:13.401: INFO: Trying to get logs from node ck-129-worker-1 pod pod-e031a41e-5657-4906-b3c5-3cd35185f6d2 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:17:13.409
  Jun 18 09:17:13.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-481" for this suite. @ 06/18/24 09:17:13.429
• [4.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/18/24 09:17:13.44
  Jun 18 09:17:13.440: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:17:13.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:13.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:13.46
  STEP: starting the proxy server @ 06/18/24 09:17:13.465
  Jun 18 09:17:13.467: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9069 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/18/24 09:17:13.553
  Jun 18 09:17:13.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9069" for this suite. @ 06/18/24 09:17:13.573
• [0.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/18/24 09:17:13.578
  Jun 18 09:17:13.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:17:13.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:13.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:13.594
  Jun 18 09:17:13.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-465" for this suite. @ 06/18/24 09:17:13.602
• [0.029 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/18/24 09:17:13.607
  Jun 18 09:17:13.607: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:17:13.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:13.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:13.625
  STEP: Creating a pod to test downward api env vars @ 06/18/24 09:17:13.628
  STEP: Saw pod success @ 06/18/24 09:17:17.649
  Jun 18 09:17:17.651: INFO: Trying to get logs from node ck-129-worker-1 pod downward-api-e25658db-ec22-4e98-9349-94103edc8bb8 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 09:17:17.661
  Jun 18 09:17:17.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7299" for this suite. @ 06/18/24 09:17:17.68
• [4.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/18/24 09:17:17.684
  Jun 18 09:17:17.685: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:17:17.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:17.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:17.701
  STEP: Creating secret with name secret-test-811abc48-1e47-4dff-854d-b32f25b50fee @ 06/18/24 09:17:17.717
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:17:17.72
  STEP: Saw pod success @ 06/18/24 09:17:21.739
  Jun 18 09:17:21.742: INFO: Trying to get logs from node ck-129-worker-1 pod pod-secrets-d3676d3e-4e35-4d02-b2d0-24fff9f0a1fe container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:17:21.749
  Jun 18 09:17:21.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4994" for this suite. @ 06/18/24 09:17:21.766
  STEP: Destroying namespace "secret-namespace-2875" for this suite. @ 06/18/24 09:17:21.771
• [4.092 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/18/24 09:17:21.778
  Jun 18 09:17:21.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:17:21.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:21.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:21.799
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:17:21.803
  STEP: Saw pod success @ 06/18/24 09:17:25.822
  Jun 18 09:17:25.825: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-54b8b5db-0825-4f95-8f19-ce176eb313ba container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:17:25.831
  Jun 18 09:17:25.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5437" for this suite. @ 06/18/24 09:17:25.846
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/18/24 09:17:25.853
  Jun 18 09:17:25.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:17:25.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:25.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:25.868
  STEP: creating a Pod with a static label @ 06/18/24 09:17:25.878
  STEP: watching for Pod to be ready @ 06/18/24 09:17:25.887
  Jun 18 09:17:25.889: INFO: observed Pod pod-test in namespace pods-8651 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun 18 09:17:25.892: INFO: observed Pod pod-test in namespace pods-8651 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  }]
  Jun 18 09:17:25.901: INFO: observed Pod pod-test in namespace pods-8651 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  }]
  Jun 18 09:17:26.408: INFO: observed Pod pod-test in namespace pods-8651 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  }]
  Jun 18 09:17:26.977: INFO: Found Pod pod-test in namespace pods-8651 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:26 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:26 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-18 09:17:25 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/18/24 09:17:26.98
  STEP: getting the Pod and ensuring that it's patched @ 06/18/24 09:17:26.993
  STEP: replacing the Pod's status Ready condition to False @ 06/18/24 09:17:26.996
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/18/24 09:17:27.01
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/18/24 09:17:27.01
  STEP: watching for the Pod to be deleted @ 06/18/24 09:17:27.018
  Jun 18 09:17:27.020: INFO: observed event type MODIFIED
  Jun 18 09:17:28.981: INFO: observed event type MODIFIED
  Jun 18 09:17:29.097: INFO: observed event type MODIFIED
  Jun 18 09:17:29.256: INFO: observed event type MODIFIED
  Jun 18 09:17:29.982: INFO: observed event type MODIFIED
  Jun 18 09:17:29.998: INFO: observed event type MODIFIED
  Jun 18 09:17:30.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8651" for this suite. @ 06/18/24 09:17:30.014
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/18/24 09:17:30.025
  Jun 18 09:17:30.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 09:17:30.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:17:30.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:17:30.049
  STEP: Creating a ReplaceConcurrent cronjob @ 06/18/24 09:17:30.052
  STEP: Ensuring a job is scheduled @ 06/18/24 09:17:30.058
  STEP: Ensuring exactly one is scheduled @ 06/18/24 09:18:02.065
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/18/24 09:18:02.069
  STEP: Ensuring the job is replaced with a new one @ 06/18/24 09:18:02.073
  STEP: Removing cronjob @ 06/18/24 09:19:02.078
  Jun 18 09:19:02.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-821" for this suite. @ 06/18/24 09:19:02.088
• [92.068 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/18/24 09:19:02.095
  Jun 18 09:19:02.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 09:19:02.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:02.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:02.117
  STEP: Performing setup for networking test in namespace pod-network-test-3725 @ 06/18/24 09:19:02.12
  STEP: creating a selector @ 06/18/24 09:19:02.12
  STEP: Creating the service pods in kubernetes @ 06/18/24 09:19:02.12
  Jun 18 09:19:02.120: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/18/24 09:19:14.195
  Jun 18 09:19:16.245: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 09:19:16.245: INFO: Going to poll 172.16.61.245 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 09:19:16.248: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.61.245 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3725 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:19:16.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:19:16.249: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:19:16.250: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3725/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.61.245+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 09:19:17.302: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 18 09:19:17.302: INFO: Going to poll 172.16.240.119 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 09:19:17.306: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.240.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3725 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:19:17.306: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:19:17.308: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:19:17.308: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3725/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.240.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 09:19:18.346: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 18 09:19:18.347: INFO: Going to poll 172.16.8.95 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 09:19:18.350: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.8.95 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3725 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:19:18.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:19:18.352: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:19:18.352: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3725/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.8.95+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 09:19:19.387: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 18 09:19:19.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3725" for this suite. @ 06/18/24 09:19:19.393
• [17.304 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/18/24 09:19:19.399
  Jun 18 09:19:19.399: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/18/24 09:19:19.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:19.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:19.468
  STEP: creating a target pod @ 06/18/24 09:19:19.471
  STEP: adding an ephemeral container @ 06/18/24 09:19:21.49
  STEP: checking pod container endpoints @ 06/18/24 09:19:23.517
  Jun 18 09:19:23.517: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3408 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:19:23.517: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:19:23.519: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:19:23.519: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3408/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 18 09:19:23.575: INFO: Exec stderr: ""
  Jun 18 09:19:23.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3408" for this suite. @ 06/18/24 09:19:23.594
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/18/24 09:19:23.598
  Jun 18 09:19:23.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 09:19:23.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:23.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:23.613
  Jun 18 09:19:25.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9828" for this suite. @ 06/18/24 09:19:25.64
• [2.047 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/18/24 09:19:25.645
  Jun 18 09:19:25.645: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename events @ 06/18/24 09:19:25.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:25.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:25.662
  STEP: creating a test event @ 06/18/24 09:19:25.665
  STEP: listing events in all namespaces @ 06/18/24 09:19:25.67
  STEP: listing events in test namespace @ 06/18/24 09:19:25.676
  STEP: listing events with field selection filtering on source @ 06/18/24 09:19:25.678
  STEP: listing events with field selection filtering on reportingController @ 06/18/24 09:19:25.68
  STEP: getting the test event @ 06/18/24 09:19:25.683
  STEP: patching the test event @ 06/18/24 09:19:25.685
  STEP: getting the test event @ 06/18/24 09:19:25.696
  STEP: updating the test event @ 06/18/24 09:19:25.698
  STEP: getting the test event @ 06/18/24 09:19:25.703
  STEP: deleting the test event @ 06/18/24 09:19:25.705
  STEP: listing events in all namespaces @ 06/18/24 09:19:25.709
  STEP: listing events in test namespace @ 06/18/24 09:19:25.714
  Jun 18 09:19:25.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1385" for this suite. @ 06/18/24 09:19:25.719
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/18/24 09:19:25.728
  Jun 18 09:19:25.728: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename security-context @ 06/18/24 09:19:25.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:25.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:25.741
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/18/24 09:19:25.744
  STEP: Saw pod success @ 06/18/24 09:19:29.761
  Jun 18 09:19:29.766: INFO: Trying to get logs from node ck-129-worker-2 pod security-context-f66d73fa-1dc8-4e31-b199-e8d4dbc7e0f5 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:19:29.788
  Jun 18 09:19:29.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7468" for this suite. @ 06/18/24 09:19:29.807
• [4.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/18/24 09:19:29.813
  Jun 18 09:19:29.813: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:19:29.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:29.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:29.832
  STEP: creating the pod @ 06/18/24 09:19:29.835
  STEP: submitting the pod to kubernetes @ 06/18/24 09:19:29.835
  STEP: verifying QOS class is set on the pod @ 06/18/24 09:19:29.844
  Jun 18 09:19:29.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2564" for this suite. @ 06/18/24 09:19:29.853
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/18/24 09:19:29.861
  Jun 18 09:19:29.861: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 09:19:29.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:29.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:29.884
  STEP: creating a Deployment @ 06/18/24 09:19:29.891
  Jun 18 09:19:29.891: INFO: Creating simple deployment test-deployment-ssv2p
  Jun 18 09:19:29.907: INFO: deployment "test-deployment-ssv2p" doesn't have the required revision set
  STEP: Getting /status @ 06/18/24 09:19:31.918
  Jun 18 09:19:31.921: INFO: Deployment test-deployment-ssv2p has Conditions: [{Available True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ssv2p-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/18/24 09:19:31.921
  Jun 18 09:19:31.929: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 19, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 19, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 19, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 19, 29, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-ssv2p-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/18/24 09:19:31.929
  Jun 18 09:19:31.933: INFO: Observed &Deployment event: ADDED
  Jun 18 09:19:31.933: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ssv2p-5d576bd769"}
  Jun 18 09:19:31.934: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ssv2p-5d576bd769"}
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 09:19:31.934: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ssv2p-5d576bd769" is progressing.}
  Jun 18 09:19:31.934: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ssv2p-5d576bd769" has successfully progressed.}
  Jun 18 09:19:31.934: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 09:19:31.934: INFO: Observed Deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ssv2p-5d576bd769" has successfully progressed.}
  Jun 18 09:19:31.934: INFO: Found Deployment test-deployment-ssv2p in namespace deployment-4406 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 09:19:31.934: INFO: Deployment test-deployment-ssv2p has an updated status
  STEP: patching the Statefulset Status @ 06/18/24 09:19:31.934
  Jun 18 09:19:31.934: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 18 09:19:31.943: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/18/24 09:19:31.943
  Jun 18 09:19:31.945: INFO: Observed &Deployment event: ADDED
  Jun 18 09:19:31.945: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ssv2p-5d576bd769"}
  Jun 18 09:19:31.945: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ssv2p-5d576bd769"}
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 09:19:31.946: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:29 +0000 UTC 2024-06-18 09:19:29 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ssv2p-5d576bd769" is progressing.}
  Jun 18 09:19:31.946: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ssv2p-5d576bd769" has successfully progressed.}
  Jun 18 09:19:31.946: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:31 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-18 09:19:31 +0000 UTC 2024-06-18 09:19:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ssv2p-5d576bd769" has successfully progressed.}
  Jun 18 09:19:31.946: INFO: Observed deployment test-deployment-ssv2p in namespace deployment-4406 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 09:19:31.946: INFO: Observed &Deployment event: MODIFIED
  Jun 18 09:19:31.946: INFO: Found deployment test-deployment-ssv2p in namespace deployment-4406 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun 18 09:19:31.946: INFO: Deployment test-deployment-ssv2p has a patched status
  Jun 18 09:19:31.950: INFO: Deployment "test-deployment-ssv2p":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-ssv2p",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c99be651-b6ad-4245-93de-bb276916618c",
      ResourceVersion: (string) (len=5) "23671",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-ssv2p-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 09:19:31.954: INFO: New ReplicaSet "test-deployment-ssv2p-5d576bd769" of Deployment "test-deployment-ssv2p":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-ssv2p-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "369e7474-6f95-484a-8a09-d3550964fb2d",
      ResourceVersion: (string) (len=5) "23667",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-ssv2p",
          UID: (types.UID) (len=36) "c99be651-b6ad-4245-93de-bb276916618c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 63 39 39  |k:{\"uid\":\"c99|
              00000120  62 65 36 35 31 2d 62 36  61 64 2d 34 32 34 35 2d  |be651-b6ad-4245-|
              00000130  39 33 64 65 2d 62 62 32  37 36 39 31 36 36 31 38  |93de-bb276916618|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:19:31.958: INFO: Pod "test-deployment-ssv2p-5d576bd769-m6kbp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-ssv2p-5d576bd769-m6kbp",
      GenerateName: (string) (len=33) "test-deployment-ssv2p-5d576bd769-",
      Namespace: (string) (len=15) "deployment-4406",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "833de1dd-7450-4c21-bbad-9c27b767d1f9",
      ResourceVersion: (string) (len=5) "23666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f8727fef3ef79e31ce276d5ad969289182d19119f1a47b2d2e80f2ffbfc1c83b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.16.8.80/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.16.8.80/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-ssv2p-5d576bd769",
          UID: (types.UID) (len=36) "369e7474-6f95-484a-8a09-d3550964fb2d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 33 36 39 65 37 34 37  34 2d 36 66 39 35 2d 34  |"369e7474-6f95-4|
              000000a0  38 34 61 2d 38 61 30 39  2d 64 33 35 35 30 39 36  |84a-8a09-d355096|
              000000b0  34 66 62 32 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |4fb2d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299170,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 38 2e 38  30 5c 22 7d 22 3a 7b 22  |2.16.8.80\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-spv6k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-spv6k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299169,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=11) "172.16.8.80",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.16.8.80"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299169,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854299170,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://ae9406343b874ecee5d3dc3440ec04142216b40cd29c7bc1a3e5ac68401c69d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:19:31.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4406" for this suite. @ 06/18/24 09:19:31.966
• [2.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/18/24 09:19:31.972
  Jun 18 09:19:31.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 09:19:31.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:31.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:31.99
  STEP: creating a ReplicationController @ 06/18/24 09:19:31.995
  STEP: waiting for RC to be added @ 06/18/24 09:19:32
  STEP: waiting for available Replicas @ 06/18/24 09:19:32
  STEP: patching ReplicationController @ 06/18/24 09:19:33.319
  STEP: waiting for RC to be modified @ 06/18/24 09:19:33.33
  STEP: patching ReplicationController status @ 06/18/24 09:19:33.331
  STEP: waiting for RC to be modified @ 06/18/24 09:19:33.336
  STEP: waiting for available Replicas @ 06/18/24 09:19:33.336
  STEP: fetching ReplicationController status @ 06/18/24 09:19:33.342
  STEP: patching ReplicationController scale @ 06/18/24 09:19:33.346
  STEP: waiting for RC to be modified @ 06/18/24 09:19:33.354
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/18/24 09:19:33.354
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/18/24 09:19:34.141
  STEP: updating ReplicationController status @ 06/18/24 09:19:34.145
  STEP: waiting for RC to be modified @ 06/18/24 09:19:34.152
  STEP: listing all ReplicationControllers @ 06/18/24 09:19:34.152
  STEP: checking that ReplicationController has expected values @ 06/18/24 09:19:34.155
  STEP: deleting ReplicationControllers by collection @ 06/18/24 09:19:34.155
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/18/24 09:19:34.161
  Jun 18 09:19:34.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 09:19:34.224795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9486" for this suite. @ 06/18/24 09:19:34.229
• [2.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/18/24 09:19:34.236
  Jun 18 09:19:34.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename job @ 06/18/24 09:19:34.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:34.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:34.255
  STEP: Creating Indexed job @ 06/18/24 09:19:34.259
  STEP: Ensuring job reaches completions @ 06/18/24 09:19:34.264
  E0618 09:19:35.224941      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:36.225164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:37.225948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:38.226801      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:39.227600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:40.227952      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:41.228168      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:42.228652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 06/18/24 09:19:42.269
  Jun 18 09:19:42.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5490" for this suite. @ 06/18/24 09:19:42.278
• [8.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/18/24 09:19:42.283
  Jun 18 09:19:42.283: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl-logs @ 06/18/24 09:19:42.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:42.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:42.301
  STEP: creating an pod @ 06/18/24 09:19:42.304
  Jun 18 09:19:42.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jun 18 09:19:42.403: INFO: stderr: ""
  Jun 18 09:19:42.403: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/18/24 09:19:42.403
  Jun 18 09:19:42.403: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0618 09:19:43.229209      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:44.229659      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:19:44.414: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/18/24 09:19:44.414
  Jun 18 09:19:44.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 logs logs-generator logs-generator'
  Jun 18 09:19:44.532: INFO: stderr: ""
  Jun 18 09:19:44.532: INFO: stdout: "I0618 09:19:43.025991       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/4xzf 520\nI0618 09:19:43.226436       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/z9k 373\nI0618 09:19:43.426935       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/nqj 476\nI0618 09:19:43.626407       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/x8ds 257\nI0618 09:19:43.826938       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/ctj 559\nI0618 09:19:44.026356       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/fkp 227\nI0618 09:19:44.226807       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/b2qh 282\nI0618 09:19:44.426219       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/5hb 513\n"
  STEP: limiting log lines @ 06/18/24 09:19:44.532
  Jun 18 09:19:44.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 logs logs-generator logs-generator --tail=1'
  Jun 18 09:19:44.638: INFO: stderr: ""
  Jun 18 09:19:44.638: INFO: stdout: "I0618 09:19:44.626670       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/mkg 361\n"
  Jun 18 09:19:44.638: INFO: got output "I0618 09:19:44.626670       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/mkg 361\n"
  STEP: limiting log bytes @ 06/18/24 09:19:44.638
  Jun 18 09:19:44.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 logs logs-generator logs-generator --limit-bytes=1'
  Jun 18 09:19:44.725: INFO: stderr: ""
  Jun 18 09:19:44.725: INFO: stdout: "I"
  Jun 18 09:19:44.725: INFO: got output "I"
  STEP: exposing timestamps @ 06/18/24 09:19:44.725
  Jun 18 09:19:44.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun 18 09:19:44.826: INFO: stderr: ""
  Jun 18 09:19:44.826: INFO: stdout: "2024-06-18T09:19:44.626795720Z I0618 09:19:44.626670       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/mkg 361\n"
  Jun 18 09:19:44.826: INFO: got output "2024-06-18T09:19:44.626795720Z I0618 09:19:44.626670       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/mkg 361\n"
  STEP: restricting to a time range @ 06/18/24 09:19:44.826
  E0618 09:19:45.230415      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:46.230797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:47.231266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:19:47.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 logs logs-generator logs-generator --since=1s'
  Jun 18 09:19:47.440: INFO: stderr: ""
  Jun 18 09:19:47.440: INFO: stdout: "I0618 09:19:46.626138       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/q5p8 209\nI0618 09:19:46.826594       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/74c8 461\nI0618 09:19:47.027029       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/vx2s 574\nI0618 09:19:47.226494       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/4r8 254\nI0618 09:19:47.426945       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/68z 230\n"
  Jun 18 09:19:47.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 logs logs-generator logs-generator --since=24h'
  Jun 18 09:19:47.513: INFO: stderr: ""
  Jun 18 09:19:47.513: INFO: stdout: "I0618 09:19:43.025991       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/4xzf 520\nI0618 09:19:43.226436       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/z9k 373\nI0618 09:19:43.426935       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/nqj 476\nI0618 09:19:43.626407       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/x8ds 257\nI0618 09:19:43.826938       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/ctj 559\nI0618 09:19:44.026356       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/fkp 227\nI0618 09:19:44.226807       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/b2qh 282\nI0618 09:19:44.426219       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/5hb 513\nI0618 09:19:44.626670       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/mkg 361\nI0618 09:19:44.826067       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/ns/pods/zmbt 301\nI0618 09:19:45.026522       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/c64b 479\nI0618 09:19:45.226965       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/tlbs 285\nI0618 09:19:45.426562       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/vbpx 218\nI0618 09:19:45.625983       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/7t2q 508\nI0618 09:19:45.826452       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/9nsv 241\nI0618 09:19:46.026928       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/gch 440\nI0618 09:19:46.226391       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/5b25 555\nI0618 09:19:46.426812       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/cwk 268\nI0618 09:19:46.626138       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/q5p8 209\nI0618 09:19:46.826594       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/ns/pods/74c8 461\nI0618 09:19:47.027029       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/vx2s 574\nI0618 09:19:47.226494       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/4r8 254\nI0618 09:19:47.426945       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/68z 230\n"
  Jun 18 09:19:47.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-logs-5622 delete pod logs-generator'
  E0618 09:19:48.232128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:19:48.376: INFO: stderr: ""
  Jun 18 09:19:48.376: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun 18 09:19:48.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5622" for this suite. @ 06/18/24 09:19:48.381
• [6.103 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/18/24 09:19:48.386
  Jun 18 09:19:48.386: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/18/24 09:19:48.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:48.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:48.4
  STEP: creating a target pod @ 06/18/24 09:19:48.403
  E0618 09:19:49.232244      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:50.232504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/18/24 09:19:50.421
  E0618 09:19:51.232674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:52.233079      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/18/24 09:19:52.44
  Jun 18 09:19:52.440: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1754 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:19:52.440: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:19:52.441: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:19:52.442: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-1754/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun 18 09:19:52.491: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/18/24 09:19:52.507
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/18/24 09:19:52.512
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/18/24 09:19:52.526
  Jun 18 09:19:52.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1754" for this suite. @ 06/18/24 09:19:52.538
• [4.158 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/18/24 09:19:52.545
  Jun 18 09:19:52.545: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 09:19:52.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:52.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:52.566
  STEP: Creating a test namespace @ 06/18/24 09:19:52.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:52.584
  STEP: Creating a service in the namespace @ 06/18/24 09:19:52.587
  STEP: Deleting the namespace @ 06/18/24 09:19:52.601
  STEP: Waiting for the namespace to be removed. @ 06/18/24 09:19:52.61
  E0618 09:19:53.233559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:54.233892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:55.234565      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:56.235398      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:57.236484      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:19:58.237485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/18/24 09:19:58.616
  STEP: Verifying there is no service in the namespace @ 06/18/24 09:19:58.631
  Jun 18 09:19:58.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3206" for this suite. @ 06/18/24 09:19:58.641
  STEP: Destroying namespace "nsdeletetest-2999" for this suite. @ 06/18/24 09:19:58.648
  Jun 18 09:19:58.651: INFO: Namespace nsdeletetest-2999 was already deleted
  STEP: Destroying namespace "nsdeletetest-4360" for this suite. @ 06/18/24 09:19:58.651
• [6.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/18/24 09:19:58.656
  Jun 18 09:19:58.656: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename tables @ 06/18/24 09:19:58.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:58.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:58.673
  Jun 18 09:19:58.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8418" for this suite. @ 06/18/24 09:19:58.683
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/18/24 09:19:58.688
  Jun 18 09:19:58.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:19:58.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:19:58.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:19:58.704
  STEP: Creating configMap configmap-3209/configmap-test-254e4779-4ef2-4c04-a978-d71308e3e1b6 @ 06/18/24 09:19:58.707
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:19:58.711
  E0618 09:19:59.238498      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:00.238644      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:01.239285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:02.239540      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:20:02.733
  Jun 18 09:20:02.736: INFO: Trying to get logs from node ck-129-worker-3 pod pod-configmaps-a7581afd-6daf-4a76-b5cb-068eb772cfd5 container env-test: <nil>
  STEP: delete the pod @ 06/18/24 09:20:02.748
  Jun 18 09:20:02.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3209" for this suite. @ 06/18/24 09:20:02.766
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/18/24 09:20:02.776
  Jun 18 09:20:02.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename events @ 06/18/24 09:20:02.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:02.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:02.791
  STEP: creating a test event @ 06/18/24 09:20:02.794
  STEP: listing all events in all namespaces @ 06/18/24 09:20:02.798
  STEP: patching the test event @ 06/18/24 09:20:02.803
  STEP: fetching the test event @ 06/18/24 09:20:02.808
  STEP: updating the test event @ 06/18/24 09:20:02.81
  STEP: getting the test event @ 06/18/24 09:20:02.818
  STEP: deleting the test event @ 06/18/24 09:20:02.82
  STEP: listing all events in all namespaces @ 06/18/24 09:20:02.824
  Jun 18 09:20:02.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3696" for this suite. @ 06/18/24 09:20:02.834
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/18/24 09:20:02.848
  Jun 18 09:20:02.848: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename containers @ 06/18/24 09:20:02.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:02.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:02.865
  STEP: Creating a pod to test override command @ 06/18/24 09:20:02.868
  E0618 09:20:03.239774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:04.240080      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:05.241297      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:06.241862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:20:06.886
  Jun 18 09:20:06.892: INFO: Trying to get logs from node ck-129-worker-1 pod client-containers-ad793c75-07d4-4799-8927-0f41f5c0d358 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:20:06.9
  Jun 18 09:20:06.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-634" for this suite. @ 06/18/24 09:20:06.916
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/18/24 09:20:06.921
  Jun 18 09:20:06.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 09:20:06.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:06.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:06.941
  STEP: Performing setup for networking test in namespace pod-network-test-6969 @ 06/18/24 09:20:06.944
  STEP: creating a selector @ 06/18/24 09:20:06.944
  STEP: Creating the service pods in kubernetes @ 06/18/24 09:20:06.945
  Jun 18 09:20:06.945: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0618 09:20:07.242984      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:08.243470      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:09.244595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:10.244695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:11.245371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:12.245889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:13.246050      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:14.246283      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:15.246441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:16.249236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:17.250275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:18.251247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/18/24 09:20:19.019
  E0618 09:20:19.251803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:20.252513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:21.035: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 09:20:21.035: INFO: Breadth first check of 172.16.61.255 on host 192.168.190.169...
  Jun 18 09:20:21.038: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.61.254:9080/dial?request=hostname&protocol=udp&host=172.16.61.255&port=8081&tries=1'] Namespace:pod-network-test-6969 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:20:21.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:20:21.039: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:20:21.039: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6969/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.61.254%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.61.255%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 09:20:21.100: INFO: Waiting for responses: map[]
  Jun 18 09:20:21.100: INFO: reached 172.16.61.255 after 0/1 tries
  Jun 18 09:20:21.100: INFO: Breadth first check of 172.16.240.121 on host 192.168.190.166...
  Jun 18 09:20:21.104: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.61.254:9080/dial?request=hostname&protocol=udp&host=172.16.240.121&port=8081&tries=1'] Namespace:pod-network-test-6969 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:20:21.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:20:21.105: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:20:21.105: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6969/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.61.254%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.240.121%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 09:20:21.149: INFO: Waiting for responses: map[]
  Jun 18 09:20:21.149: INFO: reached 172.16.240.121 after 0/1 tries
  Jun 18 09:20:21.149: INFO: Breadth first check of 172.16.8.85 on host 192.168.190.167...
  Jun 18 09:20:21.152: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.61.254:9080/dial?request=hostname&protocol=udp&host=172.16.8.85&port=8081&tries=1'] Namespace:pod-network-test-6969 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:20:21.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:20:21.153: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:20:21.153: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6969/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.61.254%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.8.85%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 09:20:21.199: INFO: Waiting for responses: map[]
  Jun 18 09:20:21.199: INFO: reached 172.16.8.85 after 0/1 tries
  Jun 18 09:20:21.199: INFO: Going to retry 0 out of 3 pods....
  Jun 18 09:20:21.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6969" for this suite. @ 06/18/24 09:20:21.204
• [14.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/18/24 09:20:21.209
  Jun 18 09:20:21.209: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:20:21.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:21.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:21.225
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/18/24 09:20:21.228
  E0618 09:20:21.253317      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:22.254270      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:23.255061      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:24.255260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:20:25.247
  Jun 18 09:20:25.251: INFO: Trying to get logs from node ck-129-worker-1 pod pod-1e98d550-ec53-4e48-af52-ed08ba1919c7 container test-container: <nil>
  E0618 09:20:25.255724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 06/18/24 09:20:25.264
  Jun 18 09:20:25.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1089" for this suite. @ 06/18/24 09:20:25.286
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/18/24 09:20:25.293
  Jun 18 09:20:25.293: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:20:25.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:25.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:25.315
  STEP: Creating configMap with name configmap-test-volume-map-8933e49e-563d-44d1-810b-5cc4997e00c4 @ 06/18/24 09:20:25.319
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:20:25.324
  E0618 09:20:26.256857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:27.256923      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:28.257469      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:29.257614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:20:29.342
  Jun 18 09:20:29.346: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-a6ae3f27-3cbd-4c61-abe7-bb1e68441823 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:20:29.354
  Jun 18 09:20:29.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2107" for this suite. @ 06/18/24 09:20:29.372
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/18/24 09:20:29.378
  Jun 18 09:20:29.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:20:29.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:29.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:29.396
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/18/24 09:20:29.4
  Jun 18 09:20:29.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:20:30.257793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:30.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:20:31.258536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:32.259342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:33.259798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:34.260309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:35.265527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:36.266348      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:36.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7092" for this suite. @ 06/18/24 09:20:36.708
• [7.339 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/18/24 09:20:36.718
  Jun 18 09:20:36.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename server-version @ 06/18/24 09:20:36.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:36.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:36.739
  STEP: Request ServerVersion @ 06/18/24 09:20:36.742
  STEP: Confirm major version @ 06/18/24 09:20:36.743
  Jun 18 09:20:36.743: INFO: Major version: 1
  STEP: Confirm minor version @ 06/18/24 09:20:36.744
  Jun 18 09:20:36.744: INFO: cleanMinorVersion: 29
  Jun 18 09:20:36.744: INFO: Minor version: 29
  Jun 18 09:20:36.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8548" for this suite. @ 06/18/24 09:20:36.749
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/18/24 09:20:36.761
  Jun 18 09:20:36.762: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:20:36.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:36.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:36.78
  STEP: Setting up server cert @ 06/18/24 09:20:36.803
  E0618 09:20:37.266391      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:20:37.559
  STEP: Deploying the webhook pod @ 06/18/24 09:20:37.57
  STEP: Wait for the deployment to be ready @ 06/18/24 09:20:37.584
  Jun 18 09:20:37.593: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 09:20:38.266654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:39.267084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:20:39.602
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:20:39.614
  E0618 09:20:40.267013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:40.614: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/18/24 09:20:40.622
  STEP: create a pod that should be updated by the webhook @ 06/18/24 09:20:40.644
  Jun 18 09:20:40.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5021" for this suite. @ 06/18/24 09:20:40.713
  STEP: Destroying namespace "webhook-markers-6347" for this suite. @ 06/18/24 09:20:40.719
• [3.962 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/18/24 09:20:40.726
  Jun 18 09:20:40.726: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:20:40.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:40.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:40.743
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/18/24 09:20:40.747
  E0618 09:20:41.267259      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:42.268614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:43.268371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:44.268771      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:20:44.765
  Jun 18 09:20:44.769: INFO: Trying to get logs from node ck-129-worker-1 pod pod-20f88c9e-4ab2-440e-95fe-47689ad997ac container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:20:44.775
  Jun 18 09:20:44.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6369" for this suite. @ 06/18/24 09:20:44.798
• [4.076 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/18/24 09:20:44.802
  Jun 18 09:20:44.802: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 09:20:44.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:44.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:44.821
  Jun 18 09:20:44.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-707" for this suite. @ 06/18/24 09:20:44.849
• [0.053 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/18/24 09:20:44.857
  Jun 18 09:20:44.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename discovery @ 06/18/24 09:20:44.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:44.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:44.874
  STEP: Setting up server cert @ 06/18/24 09:20:44.879
  E0618 09:20:45.268875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 06/18/24 09:20:45.315
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/18/24 09:20:45.319
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/18/24 09:20:45.32
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/18/24 09:20:45.321
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/18/24 09:20:45.323
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/18/24 09:20:45.324
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/18/24 09:20:45.325
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/18/24 09:20:45.327
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/18/24 09:20:45.328
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/18/24 09:20:45.329
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/18/24 09:20:45.33
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/18/24 09:20:45.332
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/18/24 09:20:45.333
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/18/24 09:20:45.334
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/18/24 09:20:45.335
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/18/24 09:20:45.337
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/18/24 09:20:45.338
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/18/24 09:20:45.339
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/18/24 09:20:45.34
  Jun 18 09:20:45.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7520" for this suite. @ 06/18/24 09:20:45.345
• [0.492 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/18/24 09:20:45.351
  Jun 18 09:20:45.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 09:20:45.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:45.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:45.369
  STEP: create the container @ 06/18/24 09:20:45.372
  W0618 09:20:45.378875      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/18/24 09:20:45.379
  E0618 09:20:46.269010      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:47.269330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:48.269700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/18/24 09:20:48.396
  STEP: the container should be terminated @ 06/18/24 09:20:48.398
  STEP: the termination message should be set @ 06/18/24 09:20:48.398
  Jun 18 09:20:48.398: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/18/24 09:20:48.398
  Jun 18 09:20:48.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8580" for this suite. @ 06/18/24 09:20:48.414
• [3.069 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/18/24 09:20:48.42
  Jun 18 09:20:48.420: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename containers @ 06/18/24 09:20:48.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:48.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:48.438
  STEP: Creating a pod to test override all @ 06/18/24 09:20:48.441
  E0618 09:20:49.269892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:50.270433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:51.270767      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:52.271333      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:20:52.462
  Jun 18 09:20:52.466: INFO: Trying to get logs from node ck-129-worker-1 pod client-containers-f9283923-e36c-428f-afae-394c5ce0a9e9 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:20:52.473
  Jun 18 09:20:52.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4551" for this suite. @ 06/18/24 09:20:52.494
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/18/24 09:20:52.502
  Jun 18 09:20:52.502: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename controllerrevisions @ 06/18/24 09:20:52.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:52.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:52.524
  STEP: Creating DaemonSet "e2e-d72mv-daemon-set" @ 06/18/24 09:20:52.544
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 09:20:52.551
  Jun 18 09:20:52.555: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:20:52.558: INFO: Number of nodes with available pods controlled by daemonset e2e-d72mv-daemon-set: 0
  Jun 18 09:20:52.558: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:20:53.272392      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:53.556: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:20:53.559: INFO: Number of nodes with available pods controlled by daemonset e2e-d72mv-daemon-set: 1
  Jun 18 09:20:53.559: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:20:54.273510      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:54.557: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:20:54.561: INFO: Number of nodes with available pods controlled by daemonset e2e-d72mv-daemon-set: 3
  Jun 18 09:20:54.561: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-d72mv-daemon-set
  STEP: Confirm DaemonSet "e2e-d72mv-daemon-set" successfully created with "daemonset-name=e2e-d72mv-daemon-set" label @ 06/18/24 09:20:54.563
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-d72mv-daemon-set" @ 06/18/24 09:20:54.57
  Jun 18 09:20:54.573: INFO: Located ControllerRevision: "e2e-d72mv-daemon-set-54fc7659fc"
  STEP: Patching ControllerRevision "e2e-d72mv-daemon-set-54fc7659fc" @ 06/18/24 09:20:54.576
  Jun 18 09:20:54.581: INFO: e2e-d72mv-daemon-set-54fc7659fc has been patched
  STEP: Create a new ControllerRevision @ 06/18/24 09:20:54.581
  Jun 18 09:20:54.587: INFO: Created ControllerRevision: e2e-d72mv-daemon-set-6887d78f5c
  STEP: Confirm that there are two ControllerRevisions @ 06/18/24 09:20:54.587
  Jun 18 09:20:54.587: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 09:20:54.590: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-d72mv-daemon-set-54fc7659fc" @ 06/18/24 09:20:54.59
  STEP: Confirm that there is only one ControllerRevision @ 06/18/24 09:20:54.593
  Jun 18 09:20:54.593: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 09:20:54.596: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-d72mv-daemon-set-6887d78f5c" @ 06/18/24 09:20:54.598
  Jun 18 09:20:54.604: INFO: e2e-d72mv-daemon-set-6887d78f5c has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/18/24 09:20:54.604
  W0618 09:20:54.614314      17 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/18/24 09:20:54.614
  Jun 18 09:20:54.614: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0618 09:20:55.275623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:55.615: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 09:20:55.618: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-d72mv-daemon-set-6887d78f5c=updated" @ 06/18/24 09:20:55.618
  STEP: Confirm that there is only one ControllerRevision @ 06/18/24 09:20:55.626
  Jun 18 09:20:55.626: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 18 09:20:55.629: INFO: Found 1 ControllerRevisions
  Jun 18 09:20:55.632: INFO: ControllerRevision "e2e-d72mv-daemon-set-d646987c6" has revision 3
  STEP: Deleting DaemonSet "e2e-d72mv-daemon-set" @ 06/18/24 09:20:55.635
  STEP: deleting DaemonSet.extensions e2e-d72mv-daemon-set in namespace controllerrevisions-1118, will wait for the garbage collector to delete the pods @ 06/18/24 09:20:55.635
  Jun 18 09:20:55.694: INFO: Deleting DaemonSet.extensions e2e-d72mv-daemon-set took: 5.221485ms
  Jun 18 09:20:55.795: INFO: Terminating DaemonSet.extensions e2e-d72mv-daemon-set pods took: 100.857809ms
  E0618 09:20:56.275300      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:57.276043      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:20:57.400: INFO: Number of nodes with available pods controlled by daemonset e2e-d72mv-daemon-set: 0
  Jun 18 09:20:57.400: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-d72mv-daemon-set
  Jun 18 09:20:57.403: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24754"},"items":null}

  Jun 18 09:20:57.406: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24754"},"items":null}

  Jun 18 09:20:57.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1118" for this suite. @ 06/18/24 09:20:57.424
• [4.927 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/18/24 09:20:57.43
  Jun 18 09:20:57.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename disruption @ 06/18/24 09:20:57.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:20:57.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:20:57.445
  STEP: creating the pdb @ 06/18/24 09:20:57.448
  STEP: Waiting for the pdb to be processed @ 06/18/24 09:20:57.452
  E0618 09:20:58.276918      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:20:59.277316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 06/18/24 09:20:59.456
  STEP: Waiting for the pdb to be processed @ 06/18/24 09:20:59.463
  E0618 09:21:00.277882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:01.278848      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 06/18/24 09:21:01.467
  STEP: Waiting for the pdb to be processed @ 06/18/24 09:21:01.477
  E0618 09:21:02.279187      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:03.279932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 06/18/24 09:21:03.488
  Jun 18 09:21:03.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3033" for this suite. @ 06/18/24 09:21:03.496
• [6.071 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/18/24 09:21:03.501
  Jun 18 09:21:03.501: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:21:03.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:03.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:03.516
  STEP: Counting existing ResourceQuota @ 06/18/24 09:21:03.519
  E0618 09:21:04.280032      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:05.280521      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:06.281509      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:07.282588      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:08.282662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 09:21:08.522
  STEP: Ensuring resource quota status is calculated @ 06/18/24 09:21:08.529
  E0618 09:21:09.283513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:10.284014      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:10.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9644" for this suite. @ 06/18/24 09:21:10.539
• [7.043 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/18/24 09:21:10.544
  Jun 18 09:21:10.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:21:10.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:10.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:10.56
  STEP: Setting up server cert @ 06/18/24 09:21:10.577
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:21:10.848
  STEP: Deploying the webhook pod @ 06/18/24 09:21:10.858
  STEP: Wait for the deployment to be ready @ 06/18/24 09:21:10.87
  Jun 18 09:21:10.875: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 09:21:11.285071      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:12.285551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:21:12.885
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:21:12.897
  E0618 09:21:13.286026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:13.897: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 09:21:13.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:21:14.287112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3632-crds.webhook.example.com via the AdmissionRegistration API @ 06/18/24 09:21:14.417
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/18/24 09:21:14.443
  E0618 09:21:15.288145      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:16.288764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:17.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9172" for this suite. @ 06/18/24 09:21:17.062
  STEP: Destroying namespace "webhook-markers-3497" for this suite. @ 06/18/24 09:21:17.07
• [6.531 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/18/24 09:21:17.078
  Jun 18 09:21:17.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:21:17.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:17.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:17.095
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-5c0c5ff1-edbd-4faa-a17d-addedbfac635 @ 06/18/24 09:21:17.103
  STEP: Creating the pod @ 06/18/24 09:21:17.107
  E0618 09:21:17.289316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:18.290007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-5c0c5ff1-edbd-4faa-a17d-addedbfac635 @ 06/18/24 09:21:19.131
  STEP: waiting to observe update in volume @ 06/18/24 09:21:19.136
  E0618 09:21:19.290365      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:20.290766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:21.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1973" for this suite. @ 06/18/24 09:21:21.156
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/18/24 09:21:21.161
  Jun 18 09:21:21.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 09:21:21.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:21.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:21.181
  STEP: Creating a pod to test env composition @ 06/18/24 09:21:21.185
  E0618 09:21:21.291146      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:22.292104      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:23.293030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:24.293472      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:21:25.204
  Jun 18 09:21:25.208: INFO: Trying to get logs from node ck-129-worker-1 pod var-expansion-4b439730-8ec8-4fbb-b560-02d2551189c9 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 09:21:25.223
  Jun 18 09:21:25.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7071" for this suite. @ 06/18/24 09:21:25.244
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/18/24 09:21:25.253
  Jun 18 09:21:25.253: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:21:25.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:25.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:25.276
  E0618 09:21:25.294113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/18/24 09:21:25.296
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:21:25.677
  STEP: Deploying the webhook pod @ 06/18/24 09:21:25.681
  STEP: Wait for the deployment to be ready @ 06/18/24 09:21:25.691
  Jun 18 09:21:25.697: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 09:21:26.294650      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:27.295230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:21:27.707
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:21:27.718
  E0618 09:21:28.295323      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:28.718: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 09:21:28.725: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/18/24 09:21:29.238
  STEP: Creating a custom resource that should be denied by the webhook @ 06/18/24 09:21:29.256
  E0618 09:21:29.296154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:30.296546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/18/24 09:21:31.294
  E0618 09:21:31.297246      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating the custom resource with disallowed data should be denied @ 06/18/24 09:21:31.3
  STEP: Deleting the custom resource should be denied @ 06/18/24 09:21:31.311
  STEP: Remove the offending key and value from the custom resource data @ 06/18/24 09:21:31.317
  STEP: Deleting the updated custom resource should be successful @ 06/18/24 09:21:31.324
  Jun 18 09:21:31.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7059" for this suite. @ 06/18/24 09:21:31.889
  STEP: Destroying namespace "webhook-markers-1786" for this suite. @ 06/18/24 09:21:31.893
• [6.646 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/18/24 09:21:31.903
  Jun 18 09:21:31.903: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:21:31.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:31.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:31.922
  STEP: Creating a pod to test downward api env vars @ 06/18/24 09:21:31.925
  E0618 09:21:32.298066      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:33.298910      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:34.299108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:35.299342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:21:35.945
  Jun 18 09:21:35.948: INFO: Trying to get logs from node ck-129-worker-1 pod downward-api-a8d9aea5-2925-4032-961c-d4826660b77c container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 09:21:35.958
  Jun 18 09:21:35.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4562" for this suite. @ 06/18/24 09:21:35.975
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/18/24 09:21:35.982
  Jun 18 09:21:35.983: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sysctl @ 06/18/24 09:21:35.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:35.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:36.002
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/18/24 09:21:36.006
  Jun 18 09:21:36.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-857" for this suite. @ 06/18/24 09:21:36.014
• [0.037 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/18/24 09:21:36.021
  Jun 18 09:21:36.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 09:21:36.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:36.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:36.039
  E0618 09:21:36.299705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:37.300592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:38.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-754" for this suite. @ 06/18/24 09:21:38.069
• [2.054 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/18/24 09:21:38.075
  Jun 18 09:21:38.075: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:21:38.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:38.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:38.092
  STEP: Creating configMap with name projected-configmap-test-volume-e96f35ad-e3d4-43e2-91ef-843f36bba2d8 @ 06/18/24 09:21:38.096
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:21:38.099
  E0618 09:21:38.302140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:39.303167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:40.303502      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:41.303832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:21:42.121
  Jun 18 09:21:42.124: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-configmaps-4c150530-ba6e-41cd-8fef-714b8e51a86d container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:21:42.13
  Jun 18 09:21:42.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6029" for this suite. @ 06/18/24 09:21:42.146
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/18/24 09:21:42.151
  Jun 18 09:21:42.151: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 09:21:42.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:42.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:42.17
  Jun 18 09:21:42.183: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0618 09:21:42.304784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:43.305543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:44.305652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:45.305808      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:46.306077      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:47.187: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 09:21:47.188
  STEP: Scaling up "test-rs" replicaset @ 06/18/24 09:21:47.188
  Jun 18 09:21:47.198: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/18/24 09:21:47.198
  Jun 18 09:21:47.209: INFO: observed ReplicaSet test-rs in namespace replicaset-8722 with ReadyReplicas 1, AvailableReplicas 1
  Jun 18 09:21:47.222: INFO: observed ReplicaSet test-rs in namespace replicaset-8722 with ReadyReplicas 1, AvailableReplicas 1
  Jun 18 09:21:47.245: INFO: observed ReplicaSet test-rs in namespace replicaset-8722 with ReadyReplicas 1, AvailableReplicas 1
  Jun 18 09:21:47.253: INFO: observed ReplicaSet test-rs in namespace replicaset-8722 with ReadyReplicas 1, AvailableReplicas 1
  E0618 09:21:47.306717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:48.308007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:21:48.497: INFO: observed ReplicaSet test-rs in namespace replicaset-8722 with ReadyReplicas 2, AvailableReplicas 2
  Jun 18 09:21:48.934: INFO: observed Replicaset test-rs in namespace replicaset-8722 with ReadyReplicas 3 found true
  Jun 18 09:21:48.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8722" for this suite. @ 06/18/24 09:21:48.939
• [6.792 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/18/24 09:21:48.944
  Jun 18 09:21:48.944: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 09:21:48.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:48.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:48.961
  Jun 18 09:21:48.964: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  W0618 09:21:48.965724      17 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000f5aed0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0618 09:21:49.308124      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:50.308104      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:51.308603      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0618 09:21:51.525329      17 warnings.go:70] unknown field "alpha"
  W0618 09:21:51.525379      17 warnings.go:70] unknown field "beta"
  W0618 09:21:51.525385      17 warnings.go:70] unknown field "delta"
  W0618 09:21:51.525390      17 warnings.go:70] unknown field "epsilon"
  W0618 09:21:51.525395      17 warnings.go:70] unknown field "gamma"
  Jun 18 09:21:52.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6573" for this suite. @ 06/18/24 09:21:52.072
• [3.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/18/24 09:21:52.083
  Jun 18 09:21:52.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 09:21:52.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:21:52.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:21:52.101
  E0618 09:21:52.309076      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:53.309657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:54.310282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:55.310622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:56.311580      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:57.311816      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:58.312484      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:21:59.313311      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:00.313820      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:01.314014      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:02.314226      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:03.314399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:04.314461      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:05.315282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:06.315497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:07.316317      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:08.316914      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:09.317730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:10.318097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:11.318233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:12.319022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:13.319803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:14.320074      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:15.320527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:16.321057      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:17.321489      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:18.322148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:19.323391      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:20.323763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:21.324851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:22.324881      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:23.325511      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:24.325855      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:25.326029      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:26.326122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:27.327097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:28.328065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:29.328924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:30.328985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:31.329890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:32.330813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:33.331046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:34.331822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:35.331961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:36.332615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:37.333090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:38.334117      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:39.334324      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:40.334978      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:41.335268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:42.335433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:43.336462      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:44.337140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:45.339409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:46.338350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:47.338298      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:48.338926      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:49.339227      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:50.340097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:51.341126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:22:52.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8270" for this suite. @ 06/18/24 09:22:52.122
• [60.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/18/24 09:22:52.13
  Jun 18 09:22:52.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:22:52.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:22:52.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:22:52.152
  STEP: creating service in namespace services-9116 @ 06/18/24 09:22:52.156
  STEP: creating service affinity-nodeport-transition in namespace services-9116 @ 06/18/24 09:22:52.156
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9116 @ 06/18/24 09:22:52.175
  I0618 09:22:52.183744      17 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-9116, replica count: 3
  E0618 09:22:52.342248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:53.343322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:54.344596      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 09:22:55.235400      17 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 09:22:55.246: INFO: Creating new exec pod
  E0618 09:22:55.344917      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:56.345506      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:22:57.345493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:22:58.264: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-9116 exec execpod-affinity5grkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0618 09:22:58.345819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:22:58.408: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun 18 09:22:58.409: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:22:58.409: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-9116 exec execpod-affinity5grkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.200.230 80'
  Jun 18 09:22:58.518: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.200.230 80\nConnection to 10.103.200.230 80 port [tcp/http] succeeded!\n"
  Jun 18 09:22:58.518: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:22:58.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-9116 exec execpod-affinity5grkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 31604'
  Jun 18 09:22:58.628: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 31604\nConnection to 192.168.190.169 31604 port [tcp/*] succeeded!\n"
  Jun 18 09:22:58.628: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:22:58.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-9116 exec execpod-affinity5grkd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 31604'
  Jun 18 09:22:58.742: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 31604\nConnection to 192.168.190.167 31604 port [tcp/*] succeeded!\n"
  Jun 18 09:22:58.742: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:22:58.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-9116 exec execpod-affinity5grkd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:31604/ ; done'
  Jun 18 09:22:58.943: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n"
  Jun 18 09:22:58.943: INFO: stdout: "\naffinity-nodeport-transition-7jzjv\naffinity-nodeport-transition-csrc2\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-7jzjv\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-7jzjv\naffinity-nodeport-transition-7jzjv\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-csrc2\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-csrc2\naffinity-nodeport-transition-csrc2"
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-7jzjv
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-csrc2
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-7jzjv
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-7jzjv
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-7jzjv
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-csrc2
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-csrc2
  Jun 18 09:22:58.943: INFO: Received response from host: affinity-nodeport-transition-csrc2
  Jun 18 09:22:58.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-9116 exec execpod-affinity5grkd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:31604/ ; done'
  Jun 18 09:22:59.173: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31604/\n"
  Jun 18 09:22:59.173: INFO: stdout: "\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp\naffinity-nodeport-transition-f6pgp"
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Received response from host: affinity-nodeport-transition-f6pgp
  Jun 18 09:22:59.173: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9116, will wait for the garbage collector to delete the pods @ 06/18/24 09:22:59.183
  Jun 18 09:22:59.241: INFO: Deleting ReplicationController affinity-nodeport-transition took: 4.810146ms
  Jun 18 09:22:59.342: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.708222ms
  E0618 09:22:59.346902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:00.347748      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:01.347981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:02.349136      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:02.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9116" for this suite. @ 06/18/24 09:23:02.769
• [10.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/18/24 09:23:02.776
  Jun 18 09:23:02.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:23:02.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:23:02.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:23:02.792
  STEP: Counting existing ResourceQuota @ 06/18/24 09:23:02.795
  E0618 09:23:03.350028      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:04.350341      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:05.350473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:06.350647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:07.351167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 09:23:07.8
  STEP: Ensuring resource quota status is calculated @ 06/18/24 09:23:07.807
  E0618 09:23:08.352215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:09.352596      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/18/24 09:23:09.814
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/18/24 09:23:09.834
  E0618 09:23:10.353071      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:11.353279      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/18/24 09:23:11.839
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/18/24 09:23:11.842
  STEP: Ensuring a pod cannot update its resource requirements @ 06/18/24 09:23:11.845
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/18/24 09:23:11.849
  E0618 09:23:12.353389      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:13.353736      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 09:23:13.854
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 09:23:13.868
  E0618 09:23:14.353894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:15.354151      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:15.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3110" for this suite. @ 06/18/24 09:23:15.88
• [13.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/18/24 09:23:15.888
  Jun 18 09:23:15.888: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:23:15.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:23:15.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:23:15.913
  STEP: Creating resourceQuota "e2e-rq-status-9pzlj" @ 06/18/24 09:23:15.922
  Jun 18 09:23:15.931: INFO: Resource quota "e2e-rq-status-9pzlj" reports spec: hard cpu limit of 500m
  Jun 18 09:23:15.931: INFO: Resource quota "e2e-rq-status-9pzlj" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-9pzlj" /status @ 06/18/24 09:23:15.931
  STEP: Confirm /status for "e2e-rq-status-9pzlj" resourceQuota via watch @ 06/18/24 09:23:15.941
  Jun 18 09:23:15.944: INFO: observed resourceQuota "e2e-rq-status-9pzlj" in namespace "resourcequota-2415" with hard status: v1.ResourceList(nil)
  Jun 18 09:23:15.944: INFO: Found resourceQuota "e2e-rq-status-9pzlj" in namespace "resourcequota-2415" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 18 09:23:15.944: INFO: ResourceQuota "e2e-rq-status-9pzlj" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/18/24 09:23:15.948
  Jun 18 09:23:15.954: INFO: Resource quota "e2e-rq-status-9pzlj" reports spec: hard cpu limit of 1
  Jun 18 09:23:15.954: INFO: Resource quota "e2e-rq-status-9pzlj" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-9pzlj" /status @ 06/18/24 09:23:15.954
  STEP: Confirm /status for "e2e-rq-status-9pzlj" resourceQuota via watch @ 06/18/24 09:23:15.963
  Jun 18 09:23:15.965: INFO: observed resourceQuota "e2e-rq-status-9pzlj" in namespace "resourcequota-2415" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 18 09:23:15.965: INFO: Found resourceQuota "e2e-rq-status-9pzlj" in namespace "resourcequota-2415" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun 18 09:23:15.965: INFO: ResourceQuota "e2e-rq-status-9pzlj" /status was patched
  STEP: Get "e2e-rq-status-9pzlj" /status @ 06/18/24 09:23:15.965
  Jun 18 09:23:15.970: INFO: Resourcequota "e2e-rq-status-9pzlj" reports status: hard cpu of 1
  Jun 18 09:23:15.970: INFO: Resourcequota "e2e-rq-status-9pzlj" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-9pzlj" /status before checking Spec is unchanged @ 06/18/24 09:23:15.973
  Jun 18 09:23:15.979: INFO: Resourcequota "e2e-rq-status-9pzlj" reports status: hard cpu of 2
  Jun 18 09:23:15.979: INFO: Resourcequota "e2e-rq-status-9pzlj" reports status: hard memory of 2Gi
  Jun 18 09:23:15.981: INFO: Found resourceQuota "e2e-rq-status-9pzlj" in namespace "resourcequota-2415" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun 18 09:23:15.985: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a276b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27710), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27740), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:16.354858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:17.354973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:18.355559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:19.355841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:20.356024      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:20.987: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004926a80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004926ae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004926b58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:21.356746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:22.357199      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:23.357706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:24.358044      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:25.358574      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:25.985: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27a10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27a40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27a70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:26.358850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:27.359610      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:28.360273      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:29.360820      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:30.361474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:30.985: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27c80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27cc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006a27cf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:31.362048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:32.362443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:33.363085      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:34.363484      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:35.363669      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:35.985: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004927278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049272f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004927350), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:36.364500      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:37.365116      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:38.365995      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:39.366452      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:40.366865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:40.987: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fa1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fa228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fa318), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:41.367768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:42.368543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:43.369359      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:44.369749      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:45.370388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:45.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004927c08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004927c68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004927ce0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:46.371320      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:47.371899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:48.372693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:49.373164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:50.373550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:50.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417a138), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417a180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417a1c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:51.373712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:52.374096      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:53.374912      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:54.375250      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:55.375526      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:23:55.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417a5b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417a618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417a660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:23:56.376033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:57.376618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:58.377282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:23:59.377686      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:00.378085      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:00.987: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417a9c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417aa08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417aa80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:01.378844      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:02.379503      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:03.380307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:04.381346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:05.381967      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:05.987: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417aeb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417af30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417afd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:06.383075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:07.383664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:08.384488      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:09.384764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:10.385040      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:10.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fab28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fab88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fabd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:11.386070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:12.386409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:13.387091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:14.387873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:15.388207      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:15.985: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fb020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fb098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fb0c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:16.388438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:17.388558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:18.389326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:19.389727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:20.389913      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:20.987: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417b6f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417b758), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417b7b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:21.390253      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:22.390569      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:23.390779      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:24.391276      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:25.391805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:25.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417bb90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417bbd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00417bc38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:26.391984      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:27.392536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:28.393313      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:29.393560      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:30.393879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:30.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fb878), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fb908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0037fba58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:31.395576      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:32.395063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:33.396169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:34.396538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:35.397101      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:35.988: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000392798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0003928a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000392930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:36.397164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:37.397690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:38.398063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:39.398481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:40.399508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:40.985: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e366a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e36708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e36750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:41.399508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:42.400098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:43.401144      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:44.401423      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:45.404709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:45.988: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c101e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:46.402440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:47.403045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:48.403750      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:49.403885      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:50.404437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:50.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c104c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:51.404504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:52.404701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:53.405600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:54.405896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:55.406424      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:24:55.986: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c107c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c107f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:24:56.406564      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:57.407255      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:58.407862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:24:59.408060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:00.408512      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:25:00.987: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9pzlj", GenerateName:"", Namespace:"resourcequota-2415", SelfLink:"", UID:"04b36cde-b2d8-43ff-bdd7-51998a9b2305", ResourceVersion:"25684", Generation:0, CreationTimestamp:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9pzlj"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10a08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10a38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 18, 9, 23, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006c10a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0618 09:25:01.408736      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:02.409260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:03.409841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:04.410204      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:05.410612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:25:05.985: INFO: ResourceQuota "e2e-rq-status-9pzlj" Spec was unchanged and /status reset
  Jun 18 09:25:05.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2415" for this suite. @ 06/18/24 09:25:05.991
• [110.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/18/24 09:25:05.997
  Jun 18 09:25:05.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:25:06
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:06.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:06.017
  STEP: set up a multi version CRD @ 06/18/24 09:25:06.021
  Jun 18 09:25:06.022: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:25:06.410922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:07.411370      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:08.412011      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:09.412261      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 06/18/24 09:25:09.762
  STEP: check the new version name is served @ 06/18/24 09:25:09.778
  E0618 09:25:10.413457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 06/18/24 09:25:10.682
  E0618 09:25:11.413858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 06/18/24 09:25:11.43
  E0618 09:25:12.413987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:13.414378      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:14.415206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:25:14.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4137" for this suite. @ 06/18/24 09:25:14.477
• [8.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/18/24 09:25:14.486
  Jun 18 09:25:14.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename gc @ 06/18/24 09:25:14.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:14.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:14.503
  Jun 18 09:25:14.541: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"6f267d8b-7d5f-498e-8b56-98d7434454b1", Controller:(*bool)(0xc004cf6a96), BlockOwnerDeletion:(*bool)(0xc004cf6a97)}}
  Jun 18 09:25:14.549: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"1d72e09b-4176-4b88-b735-9fa2ca83bbe8", Controller:(*bool)(0xc004cf6cbe), BlockOwnerDeletion:(*bool)(0xc004cf6cbf)}}
  Jun 18 09:25:14.554: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"944dd022-0de5-484e-b3d1-82e952bc4b89", Controller:(*bool)(0xc001ed8396), BlockOwnerDeletion:(*bool)(0xc001ed8397)}}
  E0618 09:25:15.415753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:16.415977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:17.416612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:18.416879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:19.416916      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:25:19.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-774" for this suite. @ 06/18/24 09:25:19.569
• [5.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/18/24 09:25:19.576
  Jun 18 09:25:19.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename ingressclass @ 06/18/24 09:25:19.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:19.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:19.6
  STEP: getting /apis @ 06/18/24 09:25:19.606
  STEP: getting /apis/networking.k8s.io @ 06/18/24 09:25:19.612
  STEP: getting /apis/networking.k8s.iov1 @ 06/18/24 09:25:19.614
  STEP: creating @ 06/18/24 09:25:19.616
  STEP: getting @ 06/18/24 09:25:19.636
  STEP: listing @ 06/18/24 09:25:19.64
  STEP: watching @ 06/18/24 09:25:19.643
  Jun 18 09:25:19.643: INFO: starting watch
  STEP: patching @ 06/18/24 09:25:19.645
  STEP: updating @ 06/18/24 09:25:19.649
  Jun 18 09:25:19.653: INFO: waiting for watch events with expected annotations
  Jun 18 09:25:19.653: INFO: saw patched and updated annotations
  STEP: deleting @ 06/18/24 09:25:19.653
  STEP: deleting a collection @ 06/18/24 09:25:19.663
  Jun 18 09:25:19.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4093" for this suite. @ 06/18/24 09:25:19.682
• [0.113 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/18/24 09:25:19.689
  Jun 18 09:25:19.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:25:19.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:19.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:19.708
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/18/24 09:25:19.712
  E0618 09:25:20.417266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:21.418092      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:22.418714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:23.419422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:25:23.735
  Jun 18 09:25:23.737: INFO: Trying to get logs from node ck-129-worker-1 pod pod-3edb6546-8e18-4151-afae-7a2568173a45 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:25:23.752
  Jun 18 09:25:23.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-446" for this suite. @ 06/18/24 09:25:23.771
• [4.088 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/18/24 09:25:23.778
  Jun 18 09:25:23.778: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:25:23.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:23.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:23.794
  STEP: Setting up server cert @ 06/18/24 09:25:23.812
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:25:24.179
  STEP: Deploying the webhook pod @ 06/18/24 09:25:24.187
  STEP: Wait for the deployment to be ready @ 06/18/24 09:25:24.197
  Jun 18 09:25:24.202: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0618 09:25:24.420613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:25.421460      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:25:26.213
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:25:26.224
  E0618 09:25:26.422556      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:25:27.225: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/18/24 09:25:27.276
  STEP: Creating a configMap that should be mutated @ 06/18/24 09:25:27.292
  STEP: Deleting the collection of validation webhooks @ 06/18/24 09:25:27.322
  STEP: Creating a configMap that should not be mutated @ 06/18/24 09:25:27.352
  Jun 18 09:25:27.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1085" for this suite. @ 06/18/24 09:25:27.398
  STEP: Destroying namespace "webhook-markers-9463" for this suite. @ 06/18/24 09:25:27.404
• [3.631 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/18/24 09:25:27.411
  Jun 18 09:25:27.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:25:27.413
  E0618 09:25:27.423081      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:27.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:27.428
  STEP: creating a secret @ 06/18/24 09:25:27.431
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/18/24 09:25:27.435
  STEP: patching the secret @ 06/18/24 09:25:27.437
  STEP: deleting the secret using a LabelSelector @ 06/18/24 09:25:27.445
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/18/24 09:25:27.449
  Jun 18 09:25:27.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1388" for this suite. @ 06/18/24 09:25:27.455
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/18/24 09:25:27.46
  Jun 18 09:25:27.460: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 09:25:27.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:27.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:27.481
  E0618 09:25:28.423642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:29.424521      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:30.425429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:31.425718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:25:31.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9549" for this suite. @ 06/18/24 09:25:31.504
• [4.050 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/18/24 09:25:31.511
  Jun 18 09:25:31.511: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 09:25:31.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:31.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:31.538
  Jun 18 09:25:31.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:25:32.426493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:33.426967      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:34.427738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:25:34.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7880" for this suite. @ 06/18/24 09:25:34.677
• [3.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/18/24 09:25:34.683
  Jun 18 09:25:34.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename gc @ 06/18/24 09:25:34.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:25:34.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:25:34.696
  STEP: create the rc @ 06/18/24 09:25:34.703
  W0618 09:25:34.707259      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0618 09:25:35.428617      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:36.429434      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:37.429851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:38.431422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:39.432013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:40.432047      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/18/24 09:25:40.711
  STEP: wait for the rc to be deleted @ 06/18/24 09:25:40.715
  E0618 09:25:41.433039      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:42.433856      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:43.434316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:44.434614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:45.435387      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/18/24 09:25:45.719
  E0618 09:25:46.436335      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:47.437416      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:48.437837      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:49.438729      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:50.439338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:51.439448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:52.439860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:53.440260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:54.440460      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:55.440732      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:56.441001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:57.441592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:58.441927      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:25:59.442238      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:00.442438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:01.442697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:02.443402      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:03.443874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:04.444958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:05.445377      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:06.445618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:07.445802      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:08.445935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:09.446441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:10.446788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:11.446890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:12.447616      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:13.447952      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:14.448503      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:15.449128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/18/24 09:26:15.745
  Jun 18 09:26:15.902: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 09:26:15.902: INFO: Deleting pod "simpletest.rc-2752v" in namespace "gc-7176"
  Jun 18 09:26:15.915: INFO: Deleting pod "simpletest.rc-2cxlb" in namespace "gc-7176"
  Jun 18 09:26:15.940: INFO: Deleting pod "simpletest.rc-2rrsh" in namespace "gc-7176"
  Jun 18 09:26:15.952: INFO: Deleting pod "simpletest.rc-2zlwn" in namespace "gc-7176"
  Jun 18 09:26:15.960: INFO: Deleting pod "simpletest.rc-4vjmp" in namespace "gc-7176"
  Jun 18 09:26:15.976: INFO: Deleting pod "simpletest.rc-5h28s" in namespace "gc-7176"
  Jun 18 09:26:15.990: INFO: Deleting pod "simpletest.rc-5ht8f" in namespace "gc-7176"
  Jun 18 09:26:16.010: INFO: Deleting pod "simpletest.rc-5l4bd" in namespace "gc-7176"
  Jun 18 09:26:16.024: INFO: Deleting pod "simpletest.rc-5n26t" in namespace "gc-7176"
  Jun 18 09:26:16.038: INFO: Deleting pod "simpletest.rc-5x8pp" in namespace "gc-7176"
  Jun 18 09:26:16.049: INFO: Deleting pod "simpletest.rc-5xpcl" in namespace "gc-7176"
  Jun 18 09:26:16.058: INFO: Deleting pod "simpletest.rc-6pvrm" in namespace "gc-7176"
  Jun 18 09:26:16.075: INFO: Deleting pod "simpletest.rc-7psz4" in namespace "gc-7176"
  Jun 18 09:26:16.098: INFO: Deleting pod "simpletest.rc-7q9lh" in namespace "gc-7176"
  Jun 18 09:26:16.111: INFO: Deleting pod "simpletest.rc-7wkfg" in namespace "gc-7176"
  Jun 18 09:26:16.125: INFO: Deleting pod "simpletest.rc-82h2n" in namespace "gc-7176"
  Jun 18 09:26:16.143: INFO: Deleting pod "simpletest.rc-89gfj" in namespace "gc-7176"
  Jun 18 09:26:16.162: INFO: Deleting pod "simpletest.rc-8g8fl" in namespace "gc-7176"
  Jun 18 09:26:16.175: INFO: Deleting pod "simpletest.rc-92kn8" in namespace "gc-7176"
  Jun 18 09:26:16.199: INFO: Deleting pod "simpletest.rc-95lc9" in namespace "gc-7176"
  Jun 18 09:26:16.219: INFO: Deleting pod "simpletest.rc-9j5d4" in namespace "gc-7176"
  Jun 18 09:26:16.238: INFO: Deleting pod "simpletest.rc-9kmcp" in namespace "gc-7176"
  Jun 18 09:26:16.262: INFO: Deleting pod "simpletest.rc-9v2ld" in namespace "gc-7176"
  Jun 18 09:26:16.280: INFO: Deleting pod "simpletest.rc-9v7fb" in namespace "gc-7176"
  Jun 18 09:26:16.302: INFO: Deleting pod "simpletest.rc-9ws4k" in namespace "gc-7176"
  Jun 18 09:26:16.322: INFO: Deleting pod "simpletest.rc-b24j9" in namespace "gc-7176"
  Jun 18 09:26:16.333: INFO: Deleting pod "simpletest.rc-b5hmz" in namespace "gc-7176"
  Jun 18 09:26:16.370: INFO: Deleting pod "simpletest.rc-b9p9s" in namespace "gc-7176"
  Jun 18 09:26:16.395: INFO: Deleting pod "simpletest.rc-bcfcj" in namespace "gc-7176"
  Jun 18 09:26:16.423: INFO: Deleting pod "simpletest.rc-ch69d" in namespace "gc-7176"
  E0618 09:26:16.449968      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:16.477: INFO: Deleting pod "simpletest.rc-clt8w" in namespace "gc-7176"
  Jun 18 09:26:16.531: INFO: Deleting pod "simpletest.rc-d4pzr" in namespace "gc-7176"
  Jun 18 09:26:16.574: INFO: Deleting pod "simpletest.rc-dpkr9" in namespace "gc-7176"
  Jun 18 09:26:16.603: INFO: Deleting pod "simpletest.rc-dxvz8" in namespace "gc-7176"
  Jun 18 09:26:16.651: INFO: Deleting pod "simpletest.rc-ffb9w" in namespace "gc-7176"
  Jun 18 09:26:16.692: INFO: Deleting pod "simpletest.rc-fnqq4" in namespace "gc-7176"
  Jun 18 09:26:16.740: INFO: Deleting pod "simpletest.rc-hxjnb" in namespace "gc-7176"
  Jun 18 09:26:16.766: INFO: Deleting pod "simpletest.rc-hz524" in namespace "gc-7176"
  Jun 18 09:26:16.807: INFO: Deleting pod "simpletest.rc-jw4c2" in namespace "gc-7176"
  Jun 18 09:26:16.836: INFO: Deleting pod "simpletest.rc-kvmwl" in namespace "gc-7176"
  Jun 18 09:26:16.863: INFO: Deleting pod "simpletest.rc-l49rn" in namespace "gc-7176"
  Jun 18 09:26:16.883: INFO: Deleting pod "simpletest.rc-l4x4v" in namespace "gc-7176"
  Jun 18 09:26:16.915: INFO: Deleting pod "simpletest.rc-lbxvt" in namespace "gc-7176"
  Jun 18 09:26:16.947: INFO: Deleting pod "simpletest.rc-lmzgx" in namespace "gc-7176"
  Jun 18 09:26:16.972: INFO: Deleting pod "simpletest.rc-lqdh7" in namespace "gc-7176"
  Jun 18 09:26:16.997: INFO: Deleting pod "simpletest.rc-lxm5m" in namespace "gc-7176"
  Jun 18 09:26:17.022: INFO: Deleting pod "simpletest.rc-lztqw" in namespace "gc-7176"
  Jun 18 09:26:17.040: INFO: Deleting pod "simpletest.rc-m545q" in namespace "gc-7176"
  Jun 18 09:26:17.080: INFO: Deleting pod "simpletest.rc-mf5g7" in namespace "gc-7176"
  Jun 18 09:26:17.097: INFO: Deleting pod "simpletest.rc-mm9ng" in namespace "gc-7176"
  Jun 18 09:26:17.115: INFO: Deleting pod "simpletest.rc-mmw85" in namespace "gc-7176"
  Jun 18 09:26:17.174: INFO: Deleting pod "simpletest.rc-n2dwh" in namespace "gc-7176"
  Jun 18 09:26:17.188: INFO: Deleting pod "simpletest.rc-n4644" in namespace "gc-7176"
  Jun 18 09:26:17.215: INFO: Deleting pod "simpletest.rc-n9k2n" in namespace "gc-7176"
  Jun 18 09:26:17.267: INFO: Deleting pod "simpletest.rc-nb7xp" in namespace "gc-7176"
  Jun 18 09:26:17.287: INFO: Deleting pod "simpletest.rc-nflc9" in namespace "gc-7176"
  Jun 18 09:26:17.310: INFO: Deleting pod "simpletest.rc-pl5h4" in namespace "gc-7176"
  Jun 18 09:26:17.338: INFO: Deleting pod "simpletest.rc-psn8l" in namespace "gc-7176"
  Jun 18 09:26:17.357: INFO: Deleting pod "simpletest.rc-q6ccl" in namespace "gc-7176"
  Jun 18 09:26:17.387: INFO: Deleting pod "simpletest.rc-q7qhg" in namespace "gc-7176"
  Jun 18 09:26:17.409: INFO: Deleting pod "simpletest.rc-q8m6h" in namespace "gc-7176"
  Jun 18 09:26:17.431: INFO: Deleting pod "simpletest.rc-qsgj9" in namespace "gc-7176"
  E0618 09:26:17.450987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:17.452: INFO: Deleting pod "simpletest.rc-qsjcw" in namespace "gc-7176"
  Jun 18 09:26:17.473: INFO: Deleting pod "simpletest.rc-r4gtg" in namespace "gc-7176"
  Jun 18 09:26:17.492: INFO: Deleting pod "simpletest.rc-rfcp8" in namespace "gc-7176"
  Jun 18 09:26:17.513: INFO: Deleting pod "simpletest.rc-rpb5z" in namespace "gc-7176"
  Jun 18 09:26:17.562: INFO: Deleting pod "simpletest.rc-rrkcj" in namespace "gc-7176"
  Jun 18 09:26:17.605: INFO: Deleting pod "simpletest.rc-rt9rt" in namespace "gc-7176"
  Jun 18 09:26:17.639: INFO: Deleting pod "simpletest.rc-s28hm" in namespace "gc-7176"
  Jun 18 09:26:17.692: INFO: Deleting pod "simpletest.rc-s2r8x" in namespace "gc-7176"
  Jun 18 09:26:17.740: INFO: Deleting pod "simpletest.rc-s6l29" in namespace "gc-7176"
  Jun 18 09:26:17.763: INFO: Deleting pod "simpletest.rc-s8shh" in namespace "gc-7176"
  Jun 18 09:26:17.797: INFO: Deleting pod "simpletest.rc-s8wb5" in namespace "gc-7176"
  Jun 18 09:26:17.816: INFO: Deleting pod "simpletest.rc-sc9lk" in namespace "gc-7176"
  Jun 18 09:26:17.840: INFO: Deleting pod "simpletest.rc-snst2" in namespace "gc-7176"
  Jun 18 09:26:17.882: INFO: Deleting pod "simpletest.rc-sqz9z" in namespace "gc-7176"
  Jun 18 09:26:17.941: INFO: Deleting pod "simpletest.rc-stdgj" in namespace "gc-7176"
  Jun 18 09:26:18.020: INFO: Deleting pod "simpletest.rc-t2w7n" in namespace "gc-7176"
  Jun 18 09:26:18.079: INFO: Deleting pod "simpletest.rc-tmf4q" in namespace "gc-7176"
  Jun 18 09:26:18.137: INFO: Deleting pod "simpletest.rc-tr44z" in namespace "gc-7176"
  Jun 18 09:26:18.197: INFO: Deleting pod "simpletest.rc-v8bbm" in namespace "gc-7176"
  Jun 18 09:26:18.236: INFO: Deleting pod "simpletest.rc-v9n56" in namespace "gc-7176"
  Jun 18 09:26:18.277: INFO: Deleting pod "simpletest.rc-vd4lk" in namespace "gc-7176"
  Jun 18 09:26:18.318: INFO: Deleting pod "simpletest.rc-vl545" in namespace "gc-7176"
  Jun 18 09:26:18.353: INFO: Deleting pod "simpletest.rc-vn2n4" in namespace "gc-7176"
  Jun 18 09:26:18.372: INFO: Deleting pod "simpletest.rc-vpmhg" in namespace "gc-7176"
  Jun 18 09:26:18.390: INFO: Deleting pod "simpletest.rc-vslmw" in namespace "gc-7176"
  Jun 18 09:26:18.414: INFO: Deleting pod "simpletest.rc-wb466" in namespace "gc-7176"
  Jun 18 09:26:18.443: INFO: Deleting pod "simpletest.rc-wc5z4" in namespace "gc-7176"
  E0618 09:26:18.451536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:18.470: INFO: Deleting pod "simpletest.rc-wdsdz" in namespace "gc-7176"
  Jun 18 09:26:18.495: INFO: Deleting pod "simpletest.rc-wl4qg" in namespace "gc-7176"
  Jun 18 09:26:18.513: INFO: Deleting pod "simpletest.rc-wz2q5" in namespace "gc-7176"
  Jun 18 09:26:18.528: INFO: Deleting pod "simpletest.rc-wzsdl" in namespace "gc-7176"
  Jun 18 09:26:18.560: INFO: Deleting pod "simpletest.rc-xc4mv" in namespace "gc-7176"
  Jun 18 09:26:18.581: INFO: Deleting pod "simpletest.rc-xnq6g" in namespace "gc-7176"
  Jun 18 09:26:18.604: INFO: Deleting pod "simpletest.rc-z2rfc" in namespace "gc-7176"
  Jun 18 09:26:18.629: INFO: Deleting pod "simpletest.rc-z6nxd" in namespace "gc-7176"
  Jun 18 09:26:18.650: INFO: Deleting pod "simpletest.rc-z9kqf" in namespace "gc-7176"
  Jun 18 09:26:18.669: INFO: Deleting pod "simpletest.rc-zvj5g" in namespace "gc-7176"
  Jun 18 09:26:18.703: INFO: Deleting pod "simpletest.rc-zxczg" in namespace "gc-7176"
  Jun 18 09:26:18.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7176" for this suite. @ 06/18/24 09:26:18.73
• [44.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/18/24 09:26:18.744
  Jun 18 09:26:18.744: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename chunking @ 06/18/24 09:26:18.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:26:18.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:26:18.779
  STEP: creating a large number of resources @ 06/18/24 09:26:18.784
  E0618 09:26:19.451926      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:20.452575      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:21.453092      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:22.454076      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:23.454857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:24.454900      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:25.455734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:26.456299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:27.456926      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:28.457318      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:29.458298      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:30.458847      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:31.459851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:32.460732      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:33.461289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:34.461738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:35.462530      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 06/18/24 09:26:36.452
  E0618 09:26:36.463224      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:36.502: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 18 09:26:36.550: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 18 09:26:36.601: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 18 09:26:36.651: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 18 09:26:36.700: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 18 09:26:36.752: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 18 09:26:36.802: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 18 09:26:36.852: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 18 09:26:36.900: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 18 09:26:36.952: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 18 09:26:37.002: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 18 09:26:37.052: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 18 09:26:37.101: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 18 09:26:37.151: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 18 09:26:37.201: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 18 09:26:37.251: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 18 09:26:37.300: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 18 09:26:37.351: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 18 09:26:37.402: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 18 09:26:37.451: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  E0618 09:26:37.463385      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:37.502: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 18 09:26:37.553: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 18 09:26:37.602: INFO: Retrieved 17/17 results with rv 29104 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 18 09:26:37.651: INFO: Retrieved 9/17 results with rv 29104 and continue 
  Jun 18 09:26:37.702: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 18 09:26:37.750: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 18 09:26:37.806: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 18 09:26:37.851: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 18 09:26:37.901: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 18 09:26:37.951: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 18 09:26:38.001: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 18 09:26:38.051: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 18 09:26:38.100: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 18 09:26:38.151: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 18 09:26:38.200: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 18 09:26:38.251: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 18 09:26:38.300: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 18 09:26:38.351: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 18 09:26:38.401: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 18 09:26:38.451: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  E0618 09:26:38.463983      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:38.501: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 18 09:26:38.552: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 18 09:26:38.602: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 18 09:26:38.651: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 18 09:26:38.702: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 18 09:26:38.751: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 18 09:26:38.802: INFO: Retrieved 17/17 results with rv 29105 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 18 09:26:38.850: INFO: Retrieved 9/17 results with rv 29105 and continue 
  Jun 18 09:26:38.901: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 18 09:26:38.951: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 18 09:26:39.000: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 18 09:26:39.058: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 18 09:26:39.101: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 18 09:26:39.151: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 18 09:26:39.201: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 18 09:26:39.251: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 18 09:26:39.303: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 18 09:26:39.352: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 18 09:26:39.401: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 18 09:26:39.451: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  E0618 09:26:39.464935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:39.500: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 18 09:26:39.551: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 18 09:26:39.601: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 18 09:26:39.650: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 18 09:26:39.700: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 18 09:26:39.750: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 18 09:26:39.801: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 18 09:26:39.851: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 18 09:26:39.901: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 18 09:26:39.951: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 18 09:26:40.000: INFO: Retrieved 17/17 results with rv 29106 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjkxMDYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 18 09:26:40.050: INFO: Retrieved 9/17 results with rv 29106 and continue 
  STEP: retrieving those results all at once @ 06/18/24 09:26:40.05
  Jun 18 09:26:40.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-658" for this suite. @ 06/18/24 09:26:40.152
• [21.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/18/24 09:26:40.203
  Jun 18 09:26:40.203: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:26:40.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:26:40.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:26:40.226
  STEP: Counting existing ResourceQuota @ 06/18/24 09:26:40.23
  E0618 09:26:40.465847      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:41.466282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:42.467367      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:43.467480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:44.467910      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 09:26:45.234
  STEP: Ensuring resource quota status is calculated @ 06/18/24 09:26:45.242
  E0618 09:26:45.468680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:46.469428      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 06/18/24 09:26:47.248
  STEP: Ensuring resource quota status captures replication controller creation @ 06/18/24 09:26:47.267
  E0618 09:26:47.469664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:48.469836      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 06/18/24 09:26:49.271
  STEP: Ensuring resource quota status released usage @ 06/18/24 09:26:49.276
  E0618 09:26:49.470728      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:50.471084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:26:51.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6800" for this suite. @ 06/18/24 09:26:51.286
• [11.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/18/24 09:26:51.294
  Jun 18 09:26:51.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:26:51.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:26:51.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:26:51.313
  E0618 09:26:51.471275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:52.471945      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:53.472640      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:54.473127      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:26:55.371
  Jun 18 09:26:55.374: INFO: Trying to get logs from node ck-129-worker-1 pod client-envvars-8975b542-2d2b-4fc6-8e9a-2eb552c6be00 container env3cont: <nil>
  STEP: delete the pod @ 06/18/24 09:26:55.396
  Jun 18 09:26:55.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8922" for this suite. @ 06/18/24 09:26:55.414
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/18/24 09:26:55.422
  Jun 18 09:26:55.422: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename subpath @ 06/18/24 09:26:55.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:26:55.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:26:55.44
  STEP: Setting up data @ 06/18/24 09:26:55.444
  STEP: Creating pod pod-subpath-test-configmap-b7tc @ 06/18/24 09:26:55.451
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 09:26:55.451
  E0618 09:26:55.474260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:56.475204      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:57.475542      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:58.476097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:26:59.476672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:00.477091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:01.477228      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:02.478134      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:03.478625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:04.478794      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:05.480063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:06.480678      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:07.480670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:08.480931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:09.481120      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:10.481593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:11.481863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:12.481843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:13.482339      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:14.482493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:15.482784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:16.483270      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:17.484326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:27:17.523
  Jun 18 09:27:17.527: INFO: Trying to get logs from node ck-129-worker-1 pod pod-subpath-test-configmap-b7tc container test-container-subpath-configmap-b7tc: <nil>
  STEP: delete the pod @ 06/18/24 09:27:17.535
  STEP: Deleting pod pod-subpath-test-configmap-b7tc @ 06/18/24 09:27:17.549
  Jun 18 09:27:17.549: INFO: Deleting pod "pod-subpath-test-configmap-b7tc" in namespace "subpath-9245"
  Jun 18 09:27:17.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9245" for this suite. @ 06/18/24 09:27:17.561
• [22.144 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/18/24 09:27:17.567
  Jun 18 09:27:17.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 09:27:17.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:17.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:17.586
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/18/24 09:27:17.589
  Jun 18 09:27:17.597: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5210  631cb4ef-45ce-490c-bbd7-56f63aa96e86 29683 0 2024-06-18 09:27:17 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-18 09:27:17 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tkqr8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tkqr8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0618 09:27:18.485042      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:19.485696      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/18/24 09:27:19.605
  Jun 18 09:27:19.606: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5210 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:27:19.606: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:27:19.607: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:27:19.607: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5210/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/18/24 09:27:19.682
  Jun 18 09:27:19.682: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5210 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:27:19.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:27:19.685: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:27:19.686: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-5210/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 09:27:19.742: INFO: Deleting pod test-dns-nameservers...
  Jun 18 09:27:19.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5210" for this suite. @ 06/18/24 09:27:19.76
• [2.201 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/18/24 09:27:19.768
  Jun 18 09:27:19.768: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/18/24 09:27:19.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:19.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:19.788
  STEP: mirroring a new custom Endpoint @ 06/18/24 09:27:19.809
  Jun 18 09:27:19.820: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0618 09:27:20.486669      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:21.488299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 06/18/24 09:27:21.827
  Jun 18 09:27:21.834: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0618 09:27:22.489829      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:23.489233      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 06/18/24 09:27:23.838
  Jun 18 09:27:23.846: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0618 09:27:24.489874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:25.490075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:27:25.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1310" for this suite. @ 06/18/24 09:27:25.856
• [6.094 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/18/24 09:27:25.863
  Jun 18 09:27:25.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 09:27:25.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:25.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:25.88
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/18/24 09:27:25.884
  E0618 09:27:26.491425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:27.491519      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 06/18/24 09:27:27.902
  STEP: Then the orphan pod is adopted @ 06/18/24 09:27:27.907
  E0618 09:27:28.491750      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 06/18/24 09:27:28.915
  Jun 18 09:27:28.918: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/18/24 09:27:28.928
  E0618 09:27:29.492127      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:27:29.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5321" for this suite. @ 06/18/24 09:27:29.945
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/18/24 09:27:29.954
  Jun 18 09:27:29.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 09:27:29.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:29.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:29.974
  STEP: Performing setup for networking test in namespace pod-network-test-3408 @ 06/18/24 09:27:29.978
  STEP: creating a selector @ 06/18/24 09:27:29.978
  STEP: Creating the service pods in kubernetes @ 06/18/24 09:27:29.978
  Jun 18 09:27:29.978: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0618 09:27:30.492865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:31.493089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:32.493260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:33.493960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:34.494555      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:35.494777      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:36.495351      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:37.495299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:38.495458      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:39.495703      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:40.495981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:41.496160      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/18/24 09:27:42.049
  E0618 09:27:42.496564      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:43.496884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:27:44.077: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 09:27:44.077: INFO: Going to poll 172.16.61.194 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 09:27:44.080: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.61.194:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3408 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:27:44.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:27:44.083: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:27:44.083: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3408/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.61.194%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 09:27:44.146: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 18 09:27:44.146: INFO: Going to poll 172.16.240.79 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 09:27:44.149: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.240.79:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3408 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:27:44.149: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:27:44.150: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:27:44.150: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3408/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.240.79%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 09:27:44.196: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 18 09:27:44.196: INFO: Going to poll 172.16.8.92 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 18 09:27:44.199: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.8.92:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3408 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:27:44.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:27:44.200: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:27:44.200: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3408/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.8.92%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 18 09:27:44.246: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 18 09:27:44.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3408" for this suite. @ 06/18/24 09:27:44.252
• [14.303 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/18/24 09:27:44.257
  Jun 18 09:27:44.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 09:27:44.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:44.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:44.276
  STEP: Read namespace status @ 06/18/24 09:27:44.279
  Jun 18 09:27:44.283: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/18/24 09:27:44.283
  Jun 18 09:27:44.287: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/18/24 09:27:44.287
  Jun 18 09:27:44.295: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun 18 09:27:44.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4355" for this suite. @ 06/18/24 09:27:44.301
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/18/24 09:27:44.308
  Jun 18 09:27:44.308: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 09:27:44.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:44.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:44.326
  STEP: Creating a pod to test substitution in volume subpath @ 06/18/24 09:27:44.33
  E0618 09:27:44.497666      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:45.498310      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:46.498769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:47.498958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:27:48.351
  Jun 18 09:27:48.354: INFO: Trying to get logs from node ck-129-worker-2 pod var-expansion-21479263-026c-4812-a187-2b6fbc611649 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 09:27:48.375
  Jun 18 09:27:48.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2083" for this suite. @ 06/18/24 09:27:48.393
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/18/24 09:27:48.404
  Jun 18 09:27:48.404: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 09:27:48.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:48.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:48.422
  STEP: Creating a test headless service @ 06/18/24 09:27:48.426
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2170.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2170.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/18/24 09:27:48.431
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2170.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2170.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/18/24 09:27:48.431
  STEP: creating a pod to probe DNS @ 06/18/24 09:27:48.431
  STEP: submitting the pod to kubernetes @ 06/18/24 09:27:48.431
  E0618 09:27:48.499330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:49.499782      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 09:27:50.452
  STEP: looking for the results for each expected name from probers @ 06/18/24 09:27:50.454
  Jun 18 09:27:50.466: INFO: DNS probes using dns-2170/dns-test-ef72f717-91cb-4529-8e8f-320d5106e1fd succeeded

  STEP: deleting the pod @ 06/18/24 09:27:50.466
  STEP: deleting the test headless service @ 06/18/24 09:27:50.479
  Jun 18 09:27:50.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 09:27:50.500445      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-2170" for this suite. @ 06/18/24 09:27:50.503
• [2.107 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/18/24 09:27:50.511
  Jun 18 09:27:50.511: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:27:50.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:50.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:50.528
  Jun 18 09:27:50.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:27:51.501545      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/18/24 09:27:51.995
  Jun 18 09:27:51.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 create -f -'
  Jun 18 09:27:52.151: INFO: stderr: ""
  Jun 18 09:27:52.151: INFO: stdout: "e2e-test-crd-publish-openapi-871-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 18 09:27:52.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 delete e2e-test-crd-publish-openapi-871-crds test-foo'
  Jun 18 09:27:52.240: INFO: stderr: ""
  Jun 18 09:27:52.240: INFO: stdout: "e2e-test-crd-publish-openapi-871-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun 18 09:27:52.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 apply -f -'
  Jun 18 09:27:52.343: INFO: stderr: ""
  Jun 18 09:27:52.343: INFO: stdout: "e2e-test-crd-publish-openapi-871-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 18 09:27:52.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 delete e2e-test-crd-publish-openapi-871-crds test-foo'
  Jun 18 09:27:52.432: INFO: stderr: ""
  Jun 18 09:27:52.432: INFO: stdout: "e2e-test-crd-publish-openapi-871-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/18/24 09:27:52.432
  Jun 18 09:27:52.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 create -f -'
  E0618 09:27:52.502077      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:27:52.520: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/18/24 09:27:52.52
  Jun 18 09:27:52.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 create -f -'
  Jun 18 09:27:52.611: INFO: rc: 1
  Jun 18 09:27:52.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 apply -f -'
  Jun 18 09:27:52.703: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/18/24 09:27:52.703
  Jun 18 09:27:52.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 create -f -'
  Jun 18 09:27:52.788: INFO: rc: 1
  Jun 18 09:27:52.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 --namespace=crd-publish-openapi-5433 apply -f -'
  Jun 18 09:27:52.891: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/18/24 09:27:52.891
  Jun 18 09:27:52.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 explain e2e-test-crd-publish-openapi-871-crds'
  Jun 18 09:27:52.980: INFO: stderr: ""
  Jun 18 09:27:52.980: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-871-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/18/24 09:27:52.98
  Jun 18 09:27:52.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 explain e2e-test-crd-publish-openapi-871-crds.metadata'
  Jun 18 09:27:53.071: INFO: stderr: ""
  Jun 18 09:27:53.071: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-871-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun 18 09:27:53.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 explain e2e-test-crd-publish-openapi-871-crds.spec'
  Jun 18 09:27:53.152: INFO: stderr: ""
  Jun 18 09:27:53.152: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-871-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun 18 09:27:53.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 explain e2e-test-crd-publish-openapi-871-crds.spec.bars'
  Jun 18 09:27:53.242: INFO: stderr: ""
  Jun 18 09:27:53.242: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-871-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/18/24 09:27:53.243
  Jun 18 09:27:53.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-5433 explain e2e-test-crd-publish-openapi-871-crds.spec.bars2'
  Jun 18 09:27:53.321: INFO: rc: 1
  E0618 09:27:53.502259      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:54.503043      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:27:54.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5433" for this suite. @ 06/18/24 09:27:54.759
• [4.255 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/18/24 09:27:54.766
  Jun 18 09:27:54.766: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:27:54.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:54.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:54.789
  STEP: Creating secret with name secret-test-0d840a2d-8e38-49bd-96c9-8fbbe874574d @ 06/18/24 09:27:54.792
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:27:54.795
  E0618 09:27:55.503833      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:56.504418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:57.504590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:27:58.505849      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:27:58.816
  Jun 18 09:27:58.821: INFO: Trying to get logs from node ck-129-worker-1 pod pod-secrets-6fccdf99-8496-4061-8304-5fe09eb0d47b container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:27:58.829
  Jun 18 09:27:58.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1483" for this suite. @ 06/18/24 09:27:58.849
• [4.091 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/18/24 09:27:58.857
  Jun 18 09:27:58.857: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 09:27:58.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:27:58.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:27:58.874
  E0618 09:27:59.506369      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:00.507268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:00.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8892" for this suite. @ 06/18/24 09:28:00.906
• [2.055 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/18/24 09:28:00.913
  Jun 18 09:28:00.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:28:00.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:28:00.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:28:00.929
  STEP: Starting the proxy @ 06/18/24 09:28:00.933
  Jun 18 09:28:00.934: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-4140 proxy --unix-socket=/tmp/kubectl-proxy-unix2792468681/test'
  STEP: retrieving proxy /api/ output @ 06/18/24 09:28:00.998
  Jun 18 09:28:01.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4140" for this suite. @ 06/18/24 09:28:01.005
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/18/24 09:28:01.013
  Jun 18 09:28:01.013: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 09:28:01.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:28:01.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:28:01.03
  Jun 18 09:28:01.041: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0618 09:28:01.507935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:02.508626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:03.508998      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:04.509264      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:05.509451      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:06.048: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 09:28:06.048
  Jun 18 09:28:06.048: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/18/24 09:28:06.058
  Jun 18 09:28:06.070: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17fd5af0-6c1f-4a94-a3d3-f99965ed972a",
      ResourceVersion: (string) (len=5) "30186",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299686,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 09:28:06.092: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88def611-f45c-4fae-a113-7f67150d94a3",
      ResourceVersion: (string) (len=5) "30190",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299686,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "17fd5af0-6c1f-4a94-a3d3-f99965ed972a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 37 66 64 35 61  66 30 2d 36 63 31 66 2d  |\"17fd5af0-6c1f-|
              00000120  34 61 39 34 2d 61 33 64  33 2d 66 39 39 39 36 35  |4a94-a3d3-f99965|
              00000130  65 64 39 37 32 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ed972a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:28:06.093: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun 18 09:28:06.094: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d7bc1a5-63e5-41ad-8ca0-62c8f50245ab",
      ResourceVersion: (string) (len=5) "30189",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299681,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "17fd5af0-6c1f-4a94-a3d3-f99965ed972a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299681,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299682,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 37 66 64 35 61 66  |"uid\":\"17fd5af|
              00000040  30 2d 36 63 31 66 2d 34  61 39 34 2d 61 33 64 33  |0-6c1f-4a94-a3d3|
              00000050  2d 66 39 39 39 36 35 65  64 39 37 32 61 5c 22 7d  |-f99965ed972a\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:28:06.107: INFO: Pod "test-cleanup-controller-cjvzx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-cjvzx",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e59fe78-c46d-45fe-bda7-f8418b197b41",
      ResourceVersion: (string) (len=5) "30162",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299681,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.252/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "852e417985495ed56edbb4504e4ad253bf96ccf96d38da950305f118c247eacb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.252/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "2d7bc1a5-63e5-41ad-8ca0-62c8f50245ab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299681,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299681,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  32 64 37 62 63 31 61 35  |uid\":\"2d7bc1a5|
              00000080  2d 36 33 65 35 2d 34 31  61 64 2d 38 63 61 30 2d  |-63e5-41ad-8ca0-|
              00000090  36 32 63 38 66 35 30 32  34 35 61 62 5c 22 7d 22  |62c8f50245ab\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299682,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 36 31 2e  32 35 32 5c 22 7d 22 3a  |2.16.61.252\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zf2rq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zf2rq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299682,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299681,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299682,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299682,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299681,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=13) "172.16.61.252",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.61.252"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299681,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854299681,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://868fb0e1c82346de43dc9104f9a4a797ca6f9ceb033f0efe575c4d0717d44631",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:28:06.111: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-s2bb4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-s2bb4",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-7362",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f104ff4-c180-4b91-b166-5a1b1350bf44",
      ResourceVersion: (string) (len=5) "30194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854299686,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "88def611-f45c-4fae-a113-7f67150d94a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 38  64 65 66 36 31 31 2d 66  |d\":\"88def611-f|
              00000090  34 35 63 2d 34 66 61 65  2d 61 31 31 33 2d 37 66  |45c-4fae-a113-7f|
              000000a0  36 37 31 35 30 64 39 34  61 33 5c 22 7d 22 3a 7b  |67150d94a3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-89bw5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-89bw5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854299686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:28:06.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7362" for this suite. @ 06/18/24 09:28:06.118
• [5.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/18/24 09:28:06.126
  Jun 18 09:28:06.126: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 09:28:06.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:28:06.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:28:06.144
  STEP: Creating simple DaemonSet "daemon-set" @ 06/18/24 09:28:06.174
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 09:28:06.18
  Jun 18 09:28:06.188: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:28:06.193: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:28:06.193: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:28:06.509859      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:07.186: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:28:07.189: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 09:28:07.189: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:28:07.510885      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:08.186: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:28:08.191: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 09:28:08.191: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/18/24 09:28:08.194
  Jun 18 09:28:08.218: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:28:08.224: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 09:28:08.224: INFO: Node ck-129-worker-3 is running 0 daemon pod, expected 1
  E0618 09:28:08.511225      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:09.217: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:28:09.221: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 09:28:09.221: INFO: Node ck-129-worker-3 is running 0 daemon pod, expected 1
  E0618 09:28:09.511358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:10.216: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:28:10.220: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 09:28:10.220: INFO: Node ck-129-worker-3 is running 0 daemon pod, expected 1
  E0618 09:28:10.511399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:11.216: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:28:11.220: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 09:28:11.220: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 09:28:11.223
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2876, will wait for the garbage collector to delete the pods @ 06/18/24 09:28:11.223
  Jun 18 09:28:11.281: INFO: Deleting DaemonSet.extensions daemon-set took: 5.56334ms
  Jun 18 09:28:11.382: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.680488ms
  E0618 09:28:11.511565      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:12.512064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:13.512513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:28:13.586: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:28:13.586: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 09:28:13.588: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30346"},"items":null}

  Jun 18 09:28:13.590: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30346"},"items":null}

  Jun 18 09:28:13.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2876" for this suite. @ 06/18/24 09:28:13.605
• [7.483 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/18/24 09:28:13.609
  Jun 18 09:28:13.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:28:13.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:28:13.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:28:13.627
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:28:13.63
  E0618 09:28:14.512852      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:15.513346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:16.513675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:17.514723      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:28:17.651
  Jun 18 09:28:17.654: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-a030733a-2c67-45b5-80d2-9744e9d0584d container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:28:17.665
  Jun 18 09:28:17.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7850" for this suite. @ 06/18/24 09:28:17.699
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/18/24 09:28:17.719
  Jun 18 09:28:17.719: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 09:28:17.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:28:17.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:28:17.756
  Jun 18 09:28:17.769: INFO: Waiting up to 1m0s for all nodes to be ready
  E0618 09:28:18.514935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:19.515460      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:20.515726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:21.516463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:22.517429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:23.518041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:24.518262      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:25.518359      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:26.519018      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:27.519969      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:28.520895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:29.521356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:30.522429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:31.522534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:32.522986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:33.523219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:34.523235      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:35.523908      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:36.524097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:37.525001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:38.525637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:39.525850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:40.526518      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:41.526717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:42.526762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:43.527214      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:44.527412      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:45.527722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:46.528142      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:47.528627      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:48.529162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:49.529625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:50.529761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:51.530110      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:52.530851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:53.531309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:54.531354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:55.531473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:56.531914      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:57.532652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:58.533314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:28:59.533715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:00.534546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:01.534876      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:02.535015      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:03.535573      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:04.536113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:05.536441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:06.536911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:07.537694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:08.537874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:09.538379      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:10.538666      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:11.538598      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:12.538787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:13.539387      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:14.539593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:15.539862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:16.540438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:17.540570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:29:17.775: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/18/24 09:29:17.779
  Jun 18 09:29:17.799: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 18 09:29:17.804: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 18 09:29:17.822: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 18 09:29:17.831: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 18 09:29:17.847: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 18 09:29:17.854: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/18/24 09:29:17.854
  E0618 09:29:18.541317      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:19.541768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/18/24 09:29:19.886
  E0618 09:29:20.541997      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:21.542594      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:22.543633      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:23.544689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:29:23.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1961" for this suite. @ 06/18/24 09:29:23.987
• [66.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/18/24 09:29:23.994
  Jun 18 09:29:23.994: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:29:23.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:29:24.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:29:24.015
  STEP: Creating configMap with name projected-configmap-test-volume-0dfa7d24-216e-466b-b6f2-5f073ce9e63d @ 06/18/24 09:29:24.018
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:29:24.022
  E0618 09:29:24.544674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:25.544918      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:29:26.04
  Jun 18 09:29:26.042: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-configmaps-e143eca9-a883-4d23-bb25-3bbac36cea15 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:29:26.052
  Jun 18 09:29:26.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3645" for this suite. @ 06/18/24 09:29:26.071
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/18/24 09:29:26.079
  Jun 18 09:29:26.079: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:29:26.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:29:26.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:29:26.099
  STEP: Creating a ResourceQuota with best effort scope @ 06/18/24 09:29:26.104
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 09:29:26.11
  E0618 09:29:26.545027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:27.545652      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 06/18/24 09:29:28.115
  STEP: Ensuring ResourceQuota status is calculated @ 06/18/24 09:29:28.122
  E0618 09:29:28.545841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:29.547541      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 06/18/24 09:29:30.127
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/18/24 09:29:30.137
  E0618 09:29:30.546860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:31.547092      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/18/24 09:29:32.142
  E0618 09:29:32.547841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:33.548331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 09:29:34.147
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 09:29:34.159
  E0618 09:29:34.548552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:35.548916      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 06/18/24 09:29:36.162
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/18/24 09:29:36.172
  E0618 09:29:36.549317      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:37.549318      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/18/24 09:29:38.184
  E0618 09:29:38.549673      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:39.549802      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/18/24 09:29:40.189
  STEP: Ensuring resource quota status released the pod usage @ 06/18/24 09:29:40.205
  E0618 09:29:40.550776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:41.551286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:29:42.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8818" for this suite. @ 06/18/24 09:29:42.216
• [16.144 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/18/24 09:29:42.224
  Jun 18 09:29:42.224: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:29:42.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:29:42.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:29:42.244
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 09:29:42.248
  Jun 18 09:29:42.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2614 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun 18 09:29:42.363: INFO: stderr: ""
  Jun 18 09:29:42.363: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/18/24 09:29:42.363
  Jun 18 09:29:42.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2614 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun 18 09:29:42.442: INFO: stderr: ""
  Jun 18 09:29:42.442: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 09:29:42.442
  Jun 18 09:29:42.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-2614 delete pods e2e-test-httpd-pod'
  E0618 09:29:42.552268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:43.552436      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:29:43.747: INFO: stderr: ""
  Jun 18 09:29:43.747: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 18 09:29:43.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2614" for this suite. @ 06/18/24 09:29:43.751
• [1.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/18/24 09:29:43.757
  Jun 18 09:29:43.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename disruption @ 06/18/24 09:29:43.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:29:43.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:29:43.772
  STEP: Waiting for the pdb to be processed @ 06/18/24 09:29:43.779
  E0618 09:29:44.552788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:45.553147      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 06/18/24 09:29:45.783
  STEP: Waiting for all pods to be running @ 06/18/24 09:29:45.79
  Jun 18 09:29:45.793: INFO: running pods: 0 < 1
  E0618 09:29:46.553700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:47.553690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/18/24 09:29:47.795
  STEP: Waiting for the pdb to be processed @ 06/18/24 09:29:47.804
  STEP: Patching PodDisruptionBudget status @ 06/18/24 09:29:47.811
  STEP: Waiting for the pdb to be processed @ 06/18/24 09:29:47.819
  Jun 18 09:29:47.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5163" for this suite. @ 06/18/24 09:29:47.826
• [4.076 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/18/24 09:29:47.833
  Jun 18 09:29:47.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:29:47.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:29:47.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:29:47.849
  Jun 18 09:29:47.854: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:29:48.554731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/18/24 09:29:49.296
  Jun 18 09:29:49.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-2413 --namespace=crd-publish-openapi-2413 create -f -'
  Jun 18 09:29:49.394: INFO: stderr: ""
  Jun 18 09:29:49.394: INFO: stdout: "e2e-test-crd-publish-openapi-5794-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 18 09:29:49.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-2413 --namespace=crd-publish-openapi-2413 delete e2e-test-crd-publish-openapi-5794-crds test-cr'
  Jun 18 09:29:49.490: INFO: stderr: ""
  Jun 18 09:29:49.490: INFO: stdout: "e2e-test-crd-publish-openapi-5794-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun 18 09:29:49.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-2413 --namespace=crd-publish-openapi-2413 apply -f -'
  E0618 09:29:49.555232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:29:49.574: INFO: stderr: ""
  Jun 18 09:29:49.574: INFO: stdout: "e2e-test-crd-publish-openapi-5794-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 18 09:29:49.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-2413 --namespace=crd-publish-openapi-2413 delete e2e-test-crd-publish-openapi-5794-crds test-cr'
  Jun 18 09:29:49.660: INFO: stderr: ""
  Jun 18 09:29:49.660: INFO: stdout: "e2e-test-crd-publish-openapi-5794-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/18/24 09:29:49.66
  Jun 18 09:29:49.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-2413 explain e2e-test-crd-publish-openapi-5794-crds'
  Jun 18 09:29:49.746: INFO: stderr: ""
  Jun 18 09:29:49.746: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5794-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0618 09:29:50.555470      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:29:51.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2413" for this suite. @ 06/18/24 09:29:51.175
• [3.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/18/24 09:29:51.183
  Jun 18 09:29:51.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename gc @ 06/18/24 09:29:51.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:29:51.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:29:51.198
  STEP: create the deployment @ 06/18/24 09:29:51.201
  W0618 09:29:51.206033      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/18/24 09:29:51.206
  E0618 09:29:51.556413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/18/24 09:29:51.71
  STEP: wait for all rs to be garbage collected @ 06/18/24 09:29:51.717
  STEP: expected 0 rs, got 1 rs @ 06/18/24 09:29:51.723
  STEP: expected 0 pods, got 2 pods @ 06/18/24 09:29:51.727
  STEP: Gathering metrics @ 06/18/24 09:29:52.227
  Jun 18 09:29:52.351: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 09:29:52.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8993" for this suite. @ 06/18/24 09:29:52.359
• [1.185 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/18/24 09:29:52.368
  Jun 18 09:29:52.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 09:29:52.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:29:52.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:29:52.385
  STEP: Creating service test in namespace statefulset-6446 @ 06/18/24 09:29:52.389
  STEP: Creating statefulset ss in namespace statefulset-6446 @ 06/18/24 09:29:52.394
  Jun 18 09:29:52.404: INFO: Found 0 stateful pods, waiting for 1
  E0618 09:29:52.556575      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:53.557230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:54.557612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:55.558813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:56.558577      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:57.559149      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:58.559338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:29:59.559552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:00.559875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:01.560273      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:02.408: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/18/24 09:30:02.416
  STEP: updating a scale subresource @ 06/18/24 09:30:02.421
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/18/24 09:30:02.428
  STEP: Patch a scale subresource @ 06/18/24 09:30:02.432
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/18/24 09:30:02.444
  Jun 18 09:30:02.448: INFO: Deleting all statefulset in ns statefulset-6446
  Jun 18 09:30:02.451: INFO: Scaling statefulset ss to 0
  E0618 09:30:02.560716      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:03.562040      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:04.562693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:05.563131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:06.563264      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:07.564459      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:08.564576      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:09.565042      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:10.565129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:11.565945      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:12.464: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 09:30:12.467: INFO: Deleting statefulset ss
  Jun 18 09:30:12.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6446" for this suite. @ 06/18/24 09:30:12.487
• [20.124 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/18/24 09:30:12.493
  Jun 18 09:30:12.493: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pod-network-test @ 06/18/24 09:30:12.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:30:12.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:30:12.518
  STEP: Performing setup for networking test in namespace pod-network-test-1441 @ 06/18/24 09:30:12.523
  STEP: creating a selector @ 06/18/24 09:30:12.523
  STEP: Creating the service pods in kubernetes @ 06/18/24 09:30:12.523
  Jun 18 09:30:12.524: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0618 09:30:12.566690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:13.567119      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:14.567977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:15.568481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:16.568573      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:17.569851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:18.569917      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:19.570704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:20.570986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:21.571246      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:22.571880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:23.572717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:24.573098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:25.573491      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:26.573908      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:27.574973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:28.575566      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:29.575789      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:30.576121      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:31.576609      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:32.576517      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:33.576771      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:34.576851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/18/24 09:30:34.629
  E0618 09:30:35.577270      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:36.577648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:36.645: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 18 09:30:36.645: INFO: Breadth first check of 172.16.61.205 on host 192.168.190.169...
  Jun 18 09:30:36.649: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.61.233:9080/dial?request=hostname&protocol=http&host=172.16.61.205&port=8083&tries=1'] Namespace:pod-network-test-1441 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:30:36.649: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:30:36.651: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:30:36.651: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1441/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.61.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.61.205%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 09:30:36.722: INFO: Waiting for responses: map[]
  Jun 18 09:30:36.722: INFO: reached 172.16.61.205 after 0/1 tries
  Jun 18 09:30:36.722: INFO: Breadth first check of 172.16.240.106 on host 192.168.190.166...
  Jun 18 09:30:36.727: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.61.233:9080/dial?request=hostname&protocol=http&host=172.16.240.106&port=8083&tries=1'] Namespace:pod-network-test-1441 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:30:36.727: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:30:36.728: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:30:36.728: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1441/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.61.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.240.106%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 09:30:36.774: INFO: Waiting for responses: map[]
  Jun 18 09:30:36.774: INFO: reached 172.16.240.106 after 0/1 tries
  Jun 18 09:30:36.774: INFO: Breadth first check of 172.16.8.96 on host 192.168.190.167...
  Jun 18 09:30:36.778: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.61.233:9080/dial?request=hostname&protocol=http&host=172.16.8.96&port=8083&tries=1'] Namespace:pod-network-test-1441 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:30:36.778: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:30:36.779: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:30:36.779: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1441/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.61.233%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.8.96%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 18 09:30:36.832: INFO: Waiting for responses: map[]
  Jun 18 09:30:36.832: INFO: reached 172.16.8.96 after 0/1 tries
  Jun 18 09:30:36.832: INFO: Going to retry 0 out of 3 pods....
  Jun 18 09:30:36.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1441" for this suite. @ 06/18/24 09:30:36.838
• [24.349 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/18/24 09:30:36.843
  Jun 18 09:30:36.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:30:36.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:30:36.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:30:36.862
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:30:36.866
  E0618 09:30:37.578040      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:38.578341      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:39.579326      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:40.579850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:30:40.887
  Jun 18 09:30:40.890: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-9cec1e05-636d-467e-bcf9-bab0b0755eed container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:30:40.897
  Jun 18 09:30:40.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6987" for this suite. @ 06/18/24 09:30:40.915
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/18/24 09:30:40.921
  Jun 18 09:30:40.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 09:30:40.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:30:40.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:30:40.94
  STEP: Creating pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577 @ 06/18/24 09:30:40.943
  E0618 09:30:41.579924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:42.580988      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 09:30:42.96
  Jun 18 09:30:42.963: INFO: Initial restart count of pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e is 0
  Jun 18 09:30:42.965: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:43.581492      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:44.582148      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:44.970: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:45.582693      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:46.584939      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:46.976: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:47.585463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:48.585999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:48.982: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:49.586483      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:50.586699      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:50.987: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:51.587032      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:52.587428      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:52.994: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:53.587466      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:54.588021      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:54.999: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:55.588495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:56.589008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:57.004: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:57.589402      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:30:58.589825      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:30:59.009: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:30:59.590169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:00.590401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:01.016: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:01.591557      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:02.592267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:03.022: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:03.593394      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:04.597740      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:05.029: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:05.597873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:06.598304      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:07.033: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:07.598929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:08.599404      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:09.038: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:09.599449      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:10.599772      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:11.042: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:11.599911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:12.600333      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:13.048: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:13.600591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:14.601269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:15.053: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:15.601413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:16.602268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:17.057: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:17.602571      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:18.603336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:19.063: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:19.603795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:20.604006      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:21.067: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:21.604142      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:22.605000      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:23.073: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:23.605098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:24.605419      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:25.078: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:25.606391      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:26.606682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:27.083: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:27.606894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:28.607275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:29.088: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:29.607329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:30.607602      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:31.094: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  E0618 09:31:31.608525      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:32.608993      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:33.099: INFO: Get pod busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e in namespace container-probe-3577
  Jun 18 09:31:33.099: INFO: Restart count of pod container-probe-3577/busybox-97aec1c6-075e-445c-8f33-f63e827e1d8e is now 1 (50.136552103s elapsed)
  STEP: deleting the pod @ 06/18/24 09:31:33.1
  Jun 18 09:31:33.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3577" for this suite. @ 06/18/24 09:31:33.115
• [52.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/18/24 09:31:33.121
  Jun 18 09:31:33.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename proxy @ 06/18/24 09:31:33.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:33.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:33.137
  STEP: starting an echo server on multiple ports @ 06/18/24 09:31:33.153
  STEP: creating replication controller proxy-service-d8h9d in namespace proxy-8138 @ 06/18/24 09:31:33.153
  I0618 09:31:33.161532      17 runners.go:197] Created replication controller with name: proxy-service-d8h9d, namespace: proxy-8138, replica count: 1
  E0618 09:31:33.610118      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 09:31:34.212744      17 runners.go:197] proxy-service-d8h9d Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 09:31:34.217: INFO: setup took 1.076344531s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/18/24 09:31:34.217
  Jun 18 09:31:34.224: INFO: (0) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.587901ms)
  Jun 18 09:31:34.225: INFO: (0) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.576298ms)
  Jun 18 09:31:34.226: INFO: (0) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 9.017732ms)
  Jun 18 09:31:34.226: INFO: (0) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 8.98356ms)
  Jun 18 09:31:34.227: INFO: (0) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 9.217845ms)
  Jun 18 09:31:34.227: INFO: (0) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 9.871838ms)
  Jun 18 09:31:34.227: INFO: (0) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 9.584729ms)
  Jun 18 09:31:34.227: INFO: (0) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 9.574239ms)
  Jun 18 09:31:34.227: INFO: (0) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 9.623377ms)
  Jun 18 09:31:34.228: INFO: (0) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 10.25441ms)
  Jun 18 09:31:34.228: INFO: (0) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 10.401585ms)
  Jun 18 09:31:34.230: INFO: (0) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 12.567336ms)
  Jun 18 09:31:34.234: INFO: (0) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 16.360102ms)
  Jun 18 09:31:34.234: INFO: (0) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 17.222669ms)
  Jun 18 09:31:34.235: INFO: (0) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 17.39662ms)
  Jun 18 09:31:34.235: INFO: (0) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 18.244417ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 5.671192ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 5.802354ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 6.455982ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 5.613845ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 6.685202ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.702605ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 5.86748ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.11594ms)
  Jun 18 09:31:34.242: INFO: (1) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.724505ms)
  Jun 18 09:31:34.243: INFO: (1) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.708101ms)
  Jun 18 09:31:34.243: INFO: (1) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 6.650132ms)
  Jun 18 09:31:34.243: INFO: (1) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 8.108261ms)
  Jun 18 09:31:34.244: INFO: (1) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 8.169176ms)
  Jun 18 09:31:34.244: INFO: (1) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 7.889024ms)
  Jun 18 09:31:34.244: INFO: (1) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 8.155446ms)
  Jun 18 09:31:34.245: INFO: (1) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.453738ms)
  Jun 18 09:31:34.250: INFO: (2) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 5.334912ms)
  Jun 18 09:31:34.251: INFO: (2) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 5.70129ms)
  Jun 18 09:31:34.251: INFO: (2) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 5.814455ms)
  Jun 18 09:31:34.251: INFO: (2) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 5.889524ms)
  Jun 18 09:31:34.251: INFO: (2) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 5.891375ms)
  Jun 18 09:31:34.251: INFO: (2) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 6.110917ms)
  Jun 18 09:31:34.251: INFO: (2) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.125264ms)
  Jun 18 09:31:34.252: INFO: (2) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 6.339249ms)
  Jun 18 09:31:34.253: INFO: (2) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 7.790284ms)
  Jun 18 09:31:34.253: INFO: (2) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 7.532284ms)
  Jun 18 09:31:34.253: INFO: (2) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 7.646217ms)
  Jun 18 09:31:34.253: INFO: (2) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 7.63716ms)
  Jun 18 09:31:34.253: INFO: (2) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 7.608705ms)
  Jun 18 09:31:34.253: INFO: (2) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 7.959625ms)
  Jun 18 09:31:34.253: INFO: (2) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.851295ms)
  Jun 18 09:31:34.254: INFO: (2) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 8.666577ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 5.980005ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 6.048874ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.34859ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.108108ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.338498ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 6.570849ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 6.594726ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 6.919929ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 7.379851ms)
  Jun 18 09:31:34.261: INFO: (3) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.551543ms)
  Jun 18 09:31:34.262: INFO: (3) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 8.274942ms)
  Jun 18 09:31:34.262: INFO: (3) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 8.014423ms)
  Jun 18 09:31:34.263: INFO: (3) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.737143ms)
  Jun 18 09:31:34.263: INFO: (3) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 8.705184ms)
  Jun 18 09:31:34.263: INFO: (3) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 8.901865ms)
  Jun 18 09:31:34.264: INFO: (3) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 9.774666ms)
  Jun 18 09:31:34.267: INFO: (4) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 3.613155ms)
  Jun 18 09:31:34.270: INFO: (4) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.235304ms)
  Jun 18 09:31:34.270: INFO: (4) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.12744ms)
  Jun 18 09:31:34.275: INFO: (4) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 10.947251ms)
  Jun 18 09:31:34.275: INFO: (4) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 10.922856ms)
  Jun 18 09:31:34.275: INFO: (4) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 11.014391ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 11.129171ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 11.290948ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 11.097559ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 11.203547ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 11.19303ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 11.210833ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 11.182973ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 11.463415ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 11.952957ms)
  Jun 18 09:31:34.276: INFO: (4) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 11.811996ms)
  Jun 18 09:31:34.282: INFO: (5) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 6.083534ms)
  Jun 18 09:31:34.283: INFO: (5) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.956502ms)
  Jun 18 09:31:34.283: INFO: (5) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 6.420285ms)
  Jun 18 09:31:34.284: INFO: (5) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.961399ms)
  Jun 18 09:31:34.285: INFO: (5) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.884827ms)
  Jun 18 09:31:34.285: INFO: (5) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.973976ms)
  Jun 18 09:31:34.285: INFO: (5) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 8.009566ms)
  Jun 18 09:31:34.285: INFO: (5) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 8.154033ms)
  Jun 18 09:31:34.287: INFO: (5) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 10.488226ms)
  Jun 18 09:31:34.287: INFO: (5) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 10.435437ms)
  Jun 18 09:31:34.287: INFO: (5) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 10.38828ms)
  Jun 18 09:31:34.287: INFO: (5) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 10.278455ms)
  Jun 18 09:31:34.287: INFO: (5) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 10.487534ms)
  Jun 18 09:31:34.287: INFO: (5) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 10.296306ms)
  Jun 18 09:31:34.288: INFO: (5) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 11.124658ms)
  Jun 18 09:31:34.289: INFO: (5) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 12.359718ms)
  Jun 18 09:31:34.293: INFO: (6) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 3.213213ms)
  Jun 18 09:31:34.293: INFO: (6) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 3.434137ms)
  Jun 18 09:31:34.296: INFO: (6) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 6.507217ms)
  Jun 18 09:31:34.296: INFO: (6) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 6.78982ms)
  Jun 18 09:31:34.296: INFO: (6) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.597125ms)
  Jun 18 09:31:34.296: INFO: (6) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.433484ms)
  Jun 18 09:31:34.296: INFO: (6) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 6.817729ms)
  Jun 18 09:31:34.296: INFO: (6) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 6.899839ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 7.415224ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 7.213908ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 7.928947ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.40617ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 7.834356ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 7.945017ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 7.619039ms)
  Jun 18 09:31:34.297: INFO: (6) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.664178ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 6.220719ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.158104ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.279558ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 6.333604ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 6.477302ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 6.669958ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.584804ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.934644ms)
  Jun 18 09:31:34.304: INFO: (7) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 6.916851ms)
  Jun 18 09:31:34.305: INFO: (7) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 7.911951ms)
  Jun 18 09:31:34.307: INFO: (7) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 9.829332ms)
  Jun 18 09:31:34.308: INFO: (7) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 10.571439ms)
  Jun 18 09:31:34.308: INFO: (7) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 10.917251ms)
  Jun 18 09:31:34.308: INFO: (7) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 10.684648ms)
  Jun 18 09:31:34.308: INFO: (7) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 10.825966ms)
  Jun 18 09:31:34.308: INFO: (7) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 10.735953ms)
  Jun 18 09:31:34.315: INFO: (8) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 5.935617ms)
  Jun 18 09:31:34.316: INFO: (8) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 7.254801ms)
  Jun 18 09:31:34.316: INFO: (8) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 7.365981ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 8.900079ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 8.891221ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 8.863358ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 9.24601ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 8.815283ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 8.910578ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 8.983792ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 8.931821ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 9.193429ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 9.459575ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 9.477897ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 9.803283ms)
  Jun 18 09:31:34.318: INFO: (8) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 9.76773ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.328305ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 5.977642ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 6.278174ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 5.923771ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 5.861694ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 6.447595ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 6.11982ms)
  Jun 18 09:31:34.325: INFO: (9) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.568798ms)
  Jun 18 09:31:34.326: INFO: (9) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 6.75023ms)
  Jun 18 09:31:34.326: INFO: (9) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 7.564158ms)
  Jun 18 09:31:34.327: INFO: (9) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.144468ms)
  Jun 18 09:31:34.328: INFO: (9) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 8.646977ms)
  Jun 18 09:31:34.328: INFO: (9) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 8.79922ms)
  Jun 18 09:31:34.328: INFO: (9) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 8.37425ms)
  Jun 18 09:31:34.328: INFO: (9) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 8.620589ms)
  Jun 18 09:31:34.328: INFO: (9) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 8.815257ms)
  Jun 18 09:31:34.335: INFO: (10) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.642561ms)
  Jun 18 09:31:34.335: INFO: (10) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.380864ms)
  Jun 18 09:31:34.335: INFO: (10) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.431918ms)
  Jun 18 09:31:34.336: INFO: (10) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.588967ms)
  Jun 18 09:31:34.336: INFO: (10) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 8.071248ms)
  Jun 18 09:31:34.336: INFO: (10) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 8.17305ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 8.508247ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 8.505837ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.667395ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 8.519745ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 8.686092ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 9.157694ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 9.135375ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 9.319176ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 9.387966ms)
  Jun 18 09:31:34.337: INFO: (10) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 9.308141ms)
  Jun 18 09:31:34.344: INFO: (11) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 6.719546ms)
  Jun 18 09:31:34.344: INFO: (11) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.865898ms)
  Jun 18 09:31:34.344: INFO: (11) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.773741ms)
  Jun 18 09:31:34.345: INFO: (11) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 6.802488ms)
  Jun 18 09:31:34.345: INFO: (11) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 6.699564ms)
  Jun 18 09:31:34.345: INFO: (11) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 7.346016ms)
  Jun 18 09:31:34.345: INFO: (11) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 7.183415ms)
  Jun 18 09:31:34.345: INFO: (11) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.363872ms)
  Jun 18 09:31:34.345: INFO: (11) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 7.296526ms)
  Jun 18 09:31:34.346: INFO: (11) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 8.022079ms)
  Jun 18 09:31:34.346: INFO: (11) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.861407ms)
  Jun 18 09:31:34.346: INFO: (11) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 8.118709ms)
  Jun 18 09:31:34.346: INFO: (11) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.129375ms)
  Jun 18 09:31:34.347: INFO: (11) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 9.546315ms)
  Jun 18 09:31:34.348: INFO: (11) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 9.754562ms)
  Jun 18 09:31:34.348: INFO: (11) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 10.226456ms)
  Jun 18 09:31:34.352: INFO: (12) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 4.157431ms)
  Jun 18 09:31:34.352: INFO: (12) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 4.2219ms)
  Jun 18 09:31:34.356: INFO: (12) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 7.475142ms)
  Jun 18 09:31:34.356: INFO: (12) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.558096ms)
  Jun 18 09:31:34.356: INFO: (12) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.432612ms)
  Jun 18 09:31:34.356: INFO: (12) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 7.618095ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 8.316058ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 8.486971ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 8.410716ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 8.365535ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 8.389625ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.949009ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 8.798541ms)
  Jun 18 09:31:34.357: INFO: (12) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 8.893732ms)
  Jun 18 09:31:34.358: INFO: (12) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 9.454148ms)
  Jun 18 09:31:34.358: INFO: (12) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 9.702008ms)
  Jun 18 09:31:34.364: INFO: (13) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 6.278036ms)
  Jun 18 09:31:34.364: INFO: (13) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 6.376952ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.672111ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.512113ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.67312ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.746057ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 6.623752ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.613624ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 6.683124ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 6.66617ms)
  Jun 18 09:31:34.365: INFO: (13) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 7.052599ms)
  Jun 18 09:31:34.367: INFO: (13) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 8.726007ms)
  Jun 18 09:31:34.367: INFO: (13) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 9.203038ms)
  Jun 18 09:31:34.368: INFO: (13) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 9.259901ms)
  Jun 18 09:31:34.368: INFO: (13) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 9.311885ms)
  Jun 18 09:31:34.368: INFO: (13) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 9.442136ms)
  Jun 18 09:31:34.373: INFO: (14) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 5.604488ms)
  Jun 18 09:31:34.373: INFO: (14) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 5.435759ms)
  Jun 18 09:31:34.373: INFO: (14) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 5.272647ms)
  Jun 18 09:31:34.374: INFO: (14) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 5.445031ms)
  Jun 18 09:31:34.374: INFO: (14) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.385459ms)
  Jun 18 09:31:34.374: INFO: (14) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.295973ms)
  Jun 18 09:31:34.374: INFO: (14) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 6.466557ms)
  Jun 18 09:31:34.375: INFO: (14) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.009495ms)
  Jun 18 09:31:34.375: INFO: (14) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 7.56219ms)
  Jun 18 09:31:34.375: INFO: (14) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 7.099057ms)
  Jun 18 09:31:34.375: INFO: (14) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 7.413388ms)
  Jun 18 09:31:34.376: INFO: (14) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 7.380636ms)
  Jun 18 09:31:34.376: INFO: (14) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 7.710982ms)
  Jun 18 09:31:34.376: INFO: (14) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 8.106933ms)
  Jun 18 09:31:34.377: INFO: (14) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.540467ms)
  Jun 18 09:31:34.377: INFO: (14) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 8.445477ms)
  Jun 18 09:31:34.382: INFO: (15) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 4.789257ms)
  Jun 18 09:31:34.382: INFO: (15) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 5.06375ms)
  Jun 18 09:31:34.382: INFO: (15) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 4.681406ms)
  Jun 18 09:31:34.387: INFO: (15) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 9.307279ms)
  Jun 18 09:31:34.387: INFO: (15) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 8.929773ms)
  Jun 18 09:31:34.389: INFO: (15) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 10.274046ms)
  Jun 18 09:31:34.389: INFO: (15) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 11.82638ms)
  Jun 18 09:31:34.389: INFO: (15) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 10.569369ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 11.476884ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 12.076128ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 11.775269ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 11.148114ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 10.871098ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 11.479348ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 10.982941ms)
  Jun 18 09:31:34.390: INFO: (15) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 12.912439ms)
  Jun 18 09:31:34.397: INFO: (16) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.392176ms)
  Jun 18 09:31:34.397: INFO: (16) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 6.259525ms)
  Jun 18 09:31:34.397: INFO: (16) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 6.514061ms)
  Jun 18 09:31:34.397: INFO: (16) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.866221ms)
  Jun 18 09:31:34.397: INFO: (16) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.879075ms)
  Jun 18 09:31:34.397: INFO: (16) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.795093ms)
  Jun 18 09:31:34.397: INFO: (16) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.903788ms)
  Jun 18 09:31:34.398: INFO: (16) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 7.51164ms)
  Jun 18 09:31:34.398: INFO: (16) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 7.446065ms)
  Jun 18 09:31:34.399: INFO: (16) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 8.015254ms)
  Jun 18 09:31:34.399: INFO: (16) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 8.100385ms)
  Jun 18 09:31:34.399: INFO: (16) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 8.245094ms)
  Jun 18 09:31:34.399: INFO: (16) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 8.554562ms)
  Jun 18 09:31:34.399: INFO: (16) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 8.846146ms)
  Jun 18 09:31:34.399: INFO: (16) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 8.668143ms)
  Jun 18 09:31:34.399: INFO: (16) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 8.85608ms)
  Jun 18 09:31:34.402: INFO: (17) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 3.183887ms)
  Jun 18 09:31:34.403: INFO: (17) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 3.856953ms)
  Jun 18 09:31:34.404: INFO: (17) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 4.309464ms)
  Jun 18 09:31:34.406: INFO: (17) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 6.761058ms)
  Jun 18 09:31:34.406: INFO: (17) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 6.845361ms)
  Jun 18 09:31:34.406: INFO: (17) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.756833ms)
  Jun 18 09:31:34.406: INFO: (17) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 7.1999ms)
  Jun 18 09:31:34.407: INFO: (17) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 7.050662ms)
  Jun 18 09:31:34.407: INFO: (17) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 7.123171ms)
  Jun 18 09:31:34.407: INFO: (17) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.131105ms)
  Jun 18 09:31:34.407: INFO: (17) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 7.145865ms)
  Jun 18 09:31:34.407: INFO: (17) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 7.186981ms)
  Jun 18 09:31:34.409: INFO: (17) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 9.434419ms)
  Jun 18 09:31:34.409: INFO: (17) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 9.175386ms)
  Jun 18 09:31:34.409: INFO: (17) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 9.280653ms)
  Jun 18 09:31:34.409: INFO: (17) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 9.608401ms)
  Jun 18 09:31:34.418: INFO: (18) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 8.446484ms)
  Jun 18 09:31:34.419: INFO: (18) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 9.602461ms)
  Jun 18 09:31:34.420: INFO: (18) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 10.447025ms)
  Jun 18 09:31:34.420: INFO: (18) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 10.351909ms)
  Jun 18 09:31:34.420: INFO: (18) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 10.751382ms)
  Jun 18 09:31:34.420: INFO: (18) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 10.667675ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 11.926561ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 12.007415ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 12.127279ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 11.881881ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 12.461251ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 11.828009ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 12.569353ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 12.846973ms)
  Jun 18 09:31:34.422: INFO: (18) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 12.505956ms)
  Jun 18 09:31:34.424: INFO: (18) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 14.819344ms)
  Jun 18 09:31:34.431: INFO: (19) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq/proxy/rewriteme">test</a> (200; 6.986239ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname1/proxy/: foo (200; 7.454216ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:462/proxy/: tls qux (200; 7.453522ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">... (200; 7.570134ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:1080/proxy/rewriteme">test<... (200; 7.481589ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:460/proxy/: tls baz (200; 7.634958ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.610972ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname2/proxy/: bar (200; 7.762014ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.703247ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:162/proxy/: bar (200; 7.847291ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname2/proxy/: tls qux (200; 7.946117ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/: <a href="/api/v1/namespaces/proxy-8138/pods/https:proxy-service-d8h9d-xcxqq:443/proxy/tlsrewritem... (200; 7.823345ms)
  Jun 18 09:31:34.432: INFO: (19) /api/v1/namespaces/proxy-8138/pods/http:proxy-service-d8h9d-xcxqq:160/proxy/: foo (200; 7.931366ms)
  Jun 18 09:31:34.435: INFO: (19) /api/v1/namespaces/proxy-8138/services/http:proxy-service-d8h9d:portname1/proxy/: foo (200; 10.228055ms)
  Jun 18 09:31:34.435: INFO: (19) /api/v1/namespaces/proxy-8138/services/https:proxy-service-d8h9d:tlsportname1/proxy/: tls baz (200; 10.239323ms)
  Jun 18 09:31:34.435: INFO: (19) /api/v1/namespaces/proxy-8138/services/proxy-service-d8h9d:portname2/proxy/: bar (200; 10.258066ms)
  STEP: deleting ReplicationController proxy-service-d8h9d in namespace proxy-8138, will wait for the garbage collector to delete the pods @ 06/18/24 09:31:34.435
  Jun 18 09:31:34.494: INFO: Deleting ReplicationController proxy-service-d8h9d took: 5.582815ms
  Jun 18 09:31:34.595: INFO: Terminating ReplicationController proxy-service-d8h9d pods took: 100.607476ms
  E0618 09:31:34.610869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:35.611939      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:36.612870      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:37.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8138" for this suite. @ 06/18/24 09:31:37.101
• [3.986 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/18/24 09:31:37.108
  Jun 18 09:31:37.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:31:37.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:37.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:37.127
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/18/24 09:31:37.13
  E0618 09:31:37.613787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:38.614235      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:39.615138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:40.615487      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:31:41.151
  Jun 18 09:31:41.155: INFO: Trying to get logs from node ck-129-worker-1 pod pod-80e196c7-ea3e-4a5d-b026-8f98d3090a7e container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:31:41.165
  Jun 18 09:31:41.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9440" for this suite. @ 06/18/24 09:31:41.183
• [4.081 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/18/24 09:31:41.193
  Jun 18 09:31:41.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/18/24 09:31:41.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:41.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:41.21
  STEP: creating @ 06/18/24 09:31:41.214
  STEP: getting @ 06/18/24 09:31:41.23
  STEP: listing in namespace @ 06/18/24 09:31:41.233
  STEP: patching @ 06/18/24 09:31:41.235
  STEP: deleting @ 06/18/24 09:31:41.246
  Jun 18 09:31:41.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7287" for this suite. @ 06/18/24 09:31:41.26
• [0.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/18/24 09:31:41.265
  Jun 18 09:31:41.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:31:41.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:41.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:41.28
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/18/24 09:31:41.283
  E0618 09:31:41.616536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:42.617417      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:31:43.299
  Jun 18 09:31:43.302: INFO: Trying to get logs from node ck-129-worker-1 pod pod-382d3676-e3b1-4063-b634-6d6270ae7f74 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:31:43.309
  Jun 18 09:31:43.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6711" for this suite. @ 06/18/24 09:31:43.327
• [2.068 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/18/24 09:31:43.333
  Jun 18 09:31:43.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 09:31:43.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:43.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:43.349
  Jun 18 09:31:43.352: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0618 09:31:43.617634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/18/24 09:31:44.369
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/18/24 09:31:44.373
  E0618 09:31:44.618231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/18/24 09:31:45.381
  Jun 18 09:31:45.392: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/18/24 09:31:45.392
  E0618 09:31:45.618475      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:31:46.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2484" for this suite. @ 06/18/24 09:31:46.407
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/18/24 09:31:46.415
  Jun 18 09:31:46.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 09:31:46.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:46.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:46.431
  STEP: Creating a pod to test substitution in container's args @ 06/18/24 09:31:46.434
  E0618 09:31:46.619068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:47.620080      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:48.620684      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:49.620896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:31:50.453
  Jun 18 09:31:50.457: INFO: Trying to get logs from node ck-129-worker-1 pod var-expansion-cd003fa6-b1a9-4acc-82d1-5414132ab748 container dapi-container: <nil>
  STEP: delete the pod @ 06/18/24 09:31:50.471
  Jun 18 09:31:50.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3157" for this suite. @ 06/18/24 09:31:50.502
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/18/24 09:31:50.508
  Jun 18 09:31:50.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:31:50.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:50.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:50.534
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:31:50.537
  E0618 09:31:50.621455      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:51.622321      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:52.622866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:53.623959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:31:54.561
  Jun 18 09:31:54.565: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-9d71fa4c-2517-4d1b-8025-f753d1a7add6 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:31:54.572
  Jun 18 09:31:54.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1044" for this suite. @ 06/18/24 09:31:54.589
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/18/24 09:31:54.598
  Jun 18 09:31:54.598: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:31:54.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:54.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:54.621
  E0618 09:31:54.623975      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating projection with secret that has name projected-secret-test-map-4d466443-9018-4d2a-932b-fb8019f732c5 @ 06/18/24 09:31:54.625
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:31:54.629
  E0618 09:31:55.624291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:56.624681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:57.624743      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:31:58.625096      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:31:58.647
  Jun 18 09:31:58.650: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-secrets-9cbf0855-fb41-4a81-90fb-dd1ebec02194 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:31:58.663
  Jun 18 09:31:58.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3165" for this suite. @ 06/18/24 09:31:58.687
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/18/24 09:31:58.696
  Jun 18 09:31:58.696: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 09:31:58.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:31:58.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:31:58.718
  STEP: Creating a pod to test service account token:  @ 06/18/24 09:31:58.723
  E0618 09:31:59.625474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:00.626510      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:01.626973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:02.626888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:32:02.745
  Jun 18 09:32:02.749: INFO: Trying to get logs from node ck-129-worker-1 pod test-pod-da6fd0af-35fb-48cb-83bb-a3175a2ee181 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:32:02.756
  Jun 18 09:32:02.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5045" for this suite. @ 06/18/24 09:32:02.769
• [4.076 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/18/24 09:32:02.773
  Jun 18 09:32:02.773: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/18/24 09:32:02.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:32:02.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:32:02.787
  STEP: Setting up the test @ 06/18/24 09:32:02.79
  STEP: Creating hostNetwork=false pod @ 06/18/24 09:32:02.79
  E0618 09:32:03.627452      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:04.628252      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 06/18/24 09:32:04.806
  E0618 09:32:05.628534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:06.628908      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 06/18/24 09:32:06.824
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/18/24 09:32:06.824
  Jun 18 09:32:06.824: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:06.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:06.825: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:06.825: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 09:32:06.870: INFO: Exec stderr: ""
  Jun 18 09:32:06.870: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:06.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:06.871: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:06.871: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 09:32:06.915: INFO: Exec stderr: ""
  Jun 18 09:32:06.915: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:06.915: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:06.916: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:06.916: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 09:32:06.953: INFO: Exec stderr: ""
  Jun 18 09:32:06.953: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:06.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:06.954: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:06.954: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 09:32:06.995: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/18/24 09:32:06.995
  Jun 18 09:32:06.995: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:06.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:06.995: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:06.996: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 18 09:32:07.037: INFO: Exec stderr: ""
  Jun 18 09:32:07.037: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:07.037: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:07.038: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:07.038: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 18 09:32:07.074: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/18/24 09:32:07.074
  Jun 18 09:32:07.074: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:07.074: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:07.074: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:07.074: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 09:32:07.123: INFO: Exec stderr: ""
  Jun 18 09:32:07.123: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:07.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:07.124: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:07.124: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 18 09:32:07.160: INFO: Exec stderr: ""
  Jun 18 09:32:07.160: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:07.160: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:07.161: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:07.161: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 09:32:07.197: INFO: Exec stderr: ""
  Jun 18 09:32:07.197: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2597 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 18 09:32:07.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  Jun 18 09:32:07.199: INFO: ExecWithOptions: Clientset creation
  Jun 18 09:32:07.199: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2597/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 18 09:32:07.237: INFO: Exec stderr: ""
  Jun 18 09:32:07.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2597" for this suite. @ 06/18/24 09:32:07.243
• [4.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/18/24 09:32:07.253
  Jun 18 09:32:07.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:32:07.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:32:07.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:32:07.275
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:32:07.278
  E0618 09:32:07.629755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:08.630344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:09.630929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:10.631264      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:32:11.298
  Jun 18 09:32:11.301: INFO: Trying to get logs from node ck-129-worker-3 pod downwardapi-volume-13e7d449-1608-4431-bac2-d1acb0de949f container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:32:11.311
  Jun 18 09:32:11.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9056" for this suite. @ 06/18/24 09:32:11.331
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/18/24 09:32:11.336
  Jun 18 09:32:11.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename apf @ 06/18/24 09:32:11.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:32:11.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:32:11.351
  STEP: getting /apis @ 06/18/24 09:32:11.356
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/18/24 09:32:11.361
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/18/24 09:32:11.362
  STEP: creating @ 06/18/24 09:32:11.364
  STEP: getting @ 06/18/24 09:32:11.378
  STEP: listing @ 06/18/24 09:32:11.38
  STEP: watching @ 06/18/24 09:32:11.382
  Jun 18 09:32:11.382: INFO: starting watch
  STEP: patching @ 06/18/24 09:32:11.384
  STEP: updating @ 06/18/24 09:32:11.392
  Jun 18 09:32:11.403: INFO: waiting for watch events with expected annotations
  Jun 18 09:32:11.403: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 06/18/24 09:32:11.403
  STEP: patching /status @ 06/18/24 09:32:11.407
  STEP: updating /status @ 06/18/24 09:32:11.414
  STEP: deleting @ 06/18/24 09:32:11.443
  STEP: deleting a collection @ 06/18/24 09:32:11.472
  Jun 18 09:32:11.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9463" for this suite. @ 06/18/24 09:32:11.507
• [0.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/18/24 09:32:11.525
  Jun 18 09:32:11.525: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 09:32:11.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:32:11.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:32:11.544
  E0618 09:32:11.631645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:12.632752      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 06/18/24 09:32:13.571
  Jun 18 09:32:13.572: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5410 pod-service-account-82c5972b-e9a1-4339-b0a2-e74f5bcf9205 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E0618 09:32:13.632977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 06/18/24 09:32:13.726
  Jun 18 09:32:13.726: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5410 pod-service-account-82c5972b-e9a1-4339-b0a2-e74f5bcf9205 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/18/24 09:32:13.859
  Jun 18 09:32:13.859: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5410 pod-service-account-82c5972b-e9a1-4339-b0a2-e74f5bcf9205 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun 18 09:32:13.980: INFO: Got root ca configmap in namespace "svcaccounts-5410"
  Jun 18 09:32:13.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5410" for this suite. @ 06/18/24 09:32:13.987
• [2.468 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/18/24 09:32:13.993
  Jun 18 09:32:13.993: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:32:13.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:32:14.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:32:14.009
  Jun 18 09:32:14.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9479 create -f -'
  Jun 18 09:32:14.192: INFO: stderr: ""
  Jun 18 09:32:14.192: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun 18 09:32:14.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9479 create -f -'
  Jun 18 09:32:14.345: INFO: stderr: ""
  Jun 18 09:32:14.345: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/18/24 09:32:14.345
  E0618 09:32:14.633882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:32:15.351: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 09:32:15.351: INFO: Found 1 / 1
  Jun 18 09:32:15.351: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 18 09:32:15.355: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 18 09:32:15.355: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 18 09:32:15.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9479 describe pod agnhost-primary-wjplv'
  Jun 18 09:32:15.457: INFO: stderr: ""
  Jun 18 09:32:15.457: INFO: stdout: "Name:             agnhost-primary-wjplv\nNamespace:        kubectl-9479\nPriority:         0\nService Account:  default\nNode:             ck-129-worker-1/192.168.190.169\nStart Time:       Tue, 18 Jun 2024 09:32:14 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: e411607d030701ad948223ed61e1233c2ac63f5b7dc00be219a4e821f34ea16d\n                  cni.projectcalico.org/podIP: 172.16.61.221/32\n                  cni.projectcalico.org/podIPs: 172.16.61.221/32\nStatus:           Running\nIP:               172.16.61.221\nIPs:\n  IP:           172.16.61.221\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://cc5130c1a0239b83ef5509ea5f4ced4c3ce55ca0abaf4fbca08b2b62b7d71573\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 18 Jun 2024 09:32:14 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-bgcgz (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-bgcgz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9479/agnhost-primary-wjplv to ck-129-worker-1\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jun 18 09:32:15.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9479 describe rc agnhost-primary'
  Jun 18 09:32:15.560: INFO: stderr: ""
  Jun 18 09:32:15.560: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9479\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-wjplv\n"
  Jun 18 09:32:15.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9479 describe service agnhost-primary'
  E0618 09:32:15.635023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:32:15.653: INFO: stderr: ""
  Jun 18 09:32:15.653: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9479\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.103.88.198\nIPs:               10.103.88.198\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.16.61.221:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun 18 09:32:15.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9479 describe node ck-129-master'
  Jun 18 09:32:15.783: INFO: stderr: ""
  Jun 18 09:32:15.783: INFO: stdout: "Name:               ck-129-master\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ck-129-master\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.190.151/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 172.16.166.64\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 18 Jun 2024 08:09:53 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ck-129-master\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 18 Jun 2024 09:32:11 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 18 Jun 2024 08:12:12 +0000   Tue, 18 Jun 2024 08:12:12 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 18 Jun 2024 09:31:35 +0000   Tue, 18 Jun 2024 08:09:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 18 Jun 2024 09:31:35 +0000   Tue, 18 Jun 2024 08:09:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 18 Jun 2024 09:31:35 +0000   Tue, 18 Jun 2024 08:09:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 18 Jun 2024 09:31:35 +0000   Tue, 18 Jun 2024 08:09:53 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.190.151\n  Hostname:    ck-129-master\nCapacity:\n  cpu:                4\n  ephemeral-storage:  103714796Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16117492Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  95583555836\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16015092Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 37ca1cdf6f55442187f28112da093ab0\n  System UUID:                37ca1cdf-6f55-4421-87f2-8112da093ab0\n  Boot ID:                    894ede83-0ee5-4456-aeec-5d6c9a6fcb1a\n  Kernel Version:             5.14.0-284.11.1.el9_2.x86_64\n  OS Image:                   Rocky Linux 9.2 (Blue Onyx)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.31.0\n  Kubelet Version:            v1.29.6\n  Kube-Proxy Version:         v1.29.6\nNon-terminated Pods:          (10 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-2jxds                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         80m\n  kube-system                 coredns-76f75df574-84pln                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (1%)     82m\n  kube-system                 coredns-76f75df574-kvbtj                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (1%)     82m\n  kube-system                 etcd-ck-129-master                                         100m (2%)     0 (0%)      100Mi (0%)       0 (0%)         82m\n  kube-system                 kube-apiserver-ck-129-master                               250m (6%)     0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                 kube-controller-manager-ck-129-master                      200m (5%)     0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                 kube-proxy-bdhj4                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\n  kube-system                 kube-scheduler-ck-129-master                               100m (2%)     0 (0%)      0 (0%)           0 (0%)         82m\n  secloudit                   secloudit-registry-agent-mbq7f                             0 (0%)        0 (0%)      0 (0%)           0 (0%)         73m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-0f35d744353e4661-27sw2    0 (0%)        0 (0%)      0 (0%)           0 (0%)         69m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1100m (27%)  0 (0%)\n  memory             240Mi (1%)   340Mi (2%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:              <none>\n"
  Jun 18 09:32:15.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9479 describe namespace kubectl-9479'
  Jun 18 09:32:15.881: INFO: stderr: ""
  Jun 18 09:32:15.881: INFO: stdout: "Name:         kubectl-9479\nLabels:       e2e-framework=kubectl\n              e2e-run=c48b9130-3e60-4593-94b6-a4fc8e3735c8\n              kubernetes.io/metadata.name=kubectl-9479\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun 18 09:32:15.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9479" for this suite. @ 06/18/24 09:32:15.886
• [1.898 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/18/24 09:32:15.892
  Jun 18 09:32:15.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 09:32:15.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:32:15.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:32:15.907
  STEP: Creating a ForbidConcurrent cronjob @ 06/18/24 09:32:15.91
  STEP: Ensuring a job is scheduled @ 06/18/24 09:32:15.915
  E0618 09:32:16.635789      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:17.636789      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:18.637744      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:19.638416      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:20.638497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:21.638808      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:22.639296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:23.639635      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:24.639764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:25.640125      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:26.640593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:27.641755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:28.642853      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:29.643361      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:30.643747      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:31.644460      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:32.644554      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:33.644815      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:34.644879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:35.645169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:36.646797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:37.645544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:38.645780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:39.646132      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:40.646422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:41.647092      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:42.647211      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:43.647527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:44.648538      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:45.648885      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:46.649263      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:47.650230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:48.650732      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:49.651301      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:50.652164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:51.652788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:52.652899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:53.653443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:54.653199      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:55.653927      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:56.654662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:57.655473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:58.656296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:32:59.657302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:00.658126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:01.658575      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/18/24 09:33:01.92
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/18/24 09:33:01.924
  STEP: Ensuring no more jobs are scheduled @ 06/18/24 09:33:01.929
  E0618 09:33:02.658750      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:03.659093      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:04.659354      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:05.659785      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:06.660626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:07.661502      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:08.661747      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:09.662478      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:10.662927      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:11.663159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:12.663734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:13.664522      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:14.664614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:15.667479      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:16.665356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:17.665987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:18.666570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:19.667299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:20.667966      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:21.668429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:22.668975      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:23.668888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:24.669946      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:25.669911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:26.671041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:27.671666      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:28.671921      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:29.672112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:30.672217      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:31.672363      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:32.673219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:33.673559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:34.673864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:35.674403      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:36.675358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:37.676153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:38.676453      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:39.677152      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:40.677215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:41.677645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:42.677804      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:43.677911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:44.678048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:45.678634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:46.679534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:47.680234      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:48.680587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:49.681064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:50.681034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:51.681385      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:52.684031      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:53.683397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:54.683874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:55.684332      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:56.684930      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:57.685921      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:58.686465      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:33:59.686765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:00.687307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:01.687701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:02.687864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:03.688225      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:04.688490      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:05.689027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:06.690038      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:07.690867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:08.692050      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:09.692196      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:10.692879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:11.693142      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:12.693807      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:13.694513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:14.694706      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:15.695266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:16.695749      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:17.696300      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:18.696765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:19.696895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:20.697135      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:21.697698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:22.697745      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:23.697994      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:24.698744      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:25.699105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:26.699158      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:27.699734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:28.700302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:29.700757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:30.701773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:31.702119      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:32.702457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:33.702790      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:34.703122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:35.703493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:36.704044      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:37.704791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:38.705605      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:39.706019      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:40.706597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:41.707572      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:42.707606      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:43.708146      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:44.709132      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:45.709442      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:46.710039      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:47.711000      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:48.712075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:49.712387      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:50.712508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:51.713111      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:52.714035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:53.714495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:54.715420      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:55.715764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:56.716143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:57.716865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:58.717903      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:34:59.718519      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:00.718338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:01.718707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:02.719837      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:03.720425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:04.720578      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:05.721036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:06.722033      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:07.723113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:08.723463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:09.723891      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:10.724504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:11.725496      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:12.726385      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:13.726670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:14.727020      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:15.727651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:16.728135      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:17.729019      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:18.729639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:19.729752      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:20.730662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:21.731026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:22.732051      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:23.732494      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:24.732809      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:25.733247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:26.734122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:27.734246      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:28.734490      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:29.734760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:30.734933      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:31.735620      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:32.736579      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:33.736821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:34.737321      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:35.737707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:36.738149      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:37.738584      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:38.738764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:39.739125      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:40.739653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:41.739742      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:42.740809      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:43.741231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:44.741802      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:45.742356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:46.742592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:47.742762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:48.743860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:49.744392      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:50.744581      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:51.744780      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:52.744873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:53.746438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:54.745901      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:55.746013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:56.746995      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:57.747700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:58.747813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:35:59.748036      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:00.748468      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:01.748421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:02.748604      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:03.748965      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:04.749578      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:05.750042      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:06.750590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:07.751295      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:08.751691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:09.752098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:10.752102      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:11.753249      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:12.753219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:13.753430      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:14.754037      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:15.754486      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:16.755495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:17.755880      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:18.756500      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:19.756962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:20.757001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:21.757161      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:22.758270      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:23.758649      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:24.758980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:25.759400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:26.760323      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:27.761020      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:28.761551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:29.761695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:30.762638      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:31.762969      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:32.763804      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:33.764003      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:34.764169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:35.764364      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:36.765006      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:37.765929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:38.767023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:39.767557      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:40.767757      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:41.770271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:42.768103      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:43.768509      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:44.769209      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:45.769377      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:46.770061      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:47.770973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:48.771372      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:49.771558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:50.772347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:51.772709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:52.773690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:53.774244      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:54.774346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:55.775319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:56.776059      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:57.776864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:58.781697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:36:59.781054      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:00.781838      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:01.782125      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:02.782385      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:03.783143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:04.783851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:05.784592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:06.785590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:07.786705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:08.786715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:09.787311      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:10.787299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:11.787863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:12.788151      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:13.788425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:14.788664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:15.789166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:16.789651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:17.789813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:18.789949      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:19.791094      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:20.791287      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:21.791531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:22.792861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:23.793232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:24.793383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:25.793739      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:26.794157      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:27.794882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:28.795234      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:29.795524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:30.796207      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:31.796535      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:32.796753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:33.797106      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:34.797485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:35.797867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:36.797903      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:37.798775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:38.799729      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:39.799875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:40.800443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:41.800743      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:42.801153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:43.801581      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:44.801654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:45.801853      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:46.801962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:47.802705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:48.802865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:49.803456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:50.803462      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:51.803642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:52.803892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:53.804450      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:54.804851      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:55.804830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:56.805049      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:57.806003      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:58.805975      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:37:59.806440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:00.806639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:01.806967      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/18/24 09:38:01.936
  Jun 18 09:38:01.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2721" for this suite. @ 06/18/24 09:38:01.946
• [346.059 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/18/24 09:38:01.953
  Jun 18 09:38:01.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 09:38:01.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:01.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:01.977
  STEP: creating a ServiceAccount @ 06/18/24 09:38:01.98
  STEP: watching for the ServiceAccount to be added @ 06/18/24 09:38:01.988
  STEP: patching the ServiceAccount @ 06/18/24 09:38:01.991
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/18/24 09:38:01.999
  STEP: deleting the ServiceAccount @ 06/18/24 09:38:02.005
  Jun 18 09:38:02.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4929" for this suite. @ 06/18/24 09:38:02.022
• [0.075 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/18/24 09:38:02.027
  Jun 18 09:38:02.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 09:38:02.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:02.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:02.046
  STEP: Creating a test namespace @ 06/18/24 09:38:02.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:02.06
  STEP: Creating a pod in the namespace @ 06/18/24 09:38:02.063
  STEP: Waiting for the pod to have running status @ 06/18/24 09:38:02.076
  E0618 09:38:02.807947      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:03.808480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 06/18/24 09:38:04.085
  STEP: Waiting for the namespace to be removed. @ 06/18/24 09:38:04.091
  E0618 09:38:04.808770      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:05.809418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:06.809797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:07.809882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:08.810143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:09.810863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:10.811525      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:11.811813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:12.812744      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:13.813795      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:14.814043      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/18/24 09:38:15.097
  STEP: Verifying there are no pods in the namespace @ 06/18/24 09:38:15.113
  Jun 18 09:38:15.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8650" for this suite. @ 06/18/24 09:38:15.124
  STEP: Destroying namespace "nsdeletetest-1759" for this suite. @ 06/18/24 09:38:15.13
  Jun 18 09:38:15.133: INFO: Namespace nsdeletetest-1759 was already deleted
  STEP: Destroying namespace "nsdeletetest-4405" for this suite. @ 06/18/24 09:38:15.133
• [13.110 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/18/24 09:38:15.139
  Jun 18 09:38:15.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:38:15.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:15.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:15.158
  STEP: Creating the pod @ 06/18/24 09:38:15.161
  E0618 09:38:15.814445      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:16.815356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:38:17.731: INFO: Successfully updated pod "labelsupdate68f7e436-d655-455d-b33a-9b078e9071c8"
  E0618 09:38:17.815347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:18.815772      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:19.816653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:20.817101      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:38:21.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3635" for this suite. @ 06/18/24 09:38:21.763
• [6.630 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/18/24 09:38:21.769
  Jun 18 09:38:21.769: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:38:21.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:21.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:21.789
  E0618 09:38:21.817520      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:22.817893      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:23.818415      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:24.818595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:25.819134      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:26.819453      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:27.820158      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:28.821031      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:29.821156      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:30.821894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:31.822828      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:32.823761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:33.824647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:34.825003      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:35.825281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:36.826454      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:37.826956      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/18/24 09:38:38.796
  E0618 09:38:38.827105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:39.828254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:40.828911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:41.829592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:42.830426      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 09:38:43.801
  STEP: Ensuring resource quota status is calculated @ 06/18/24 09:38:43.806
  E0618 09:38:43.831128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:44.831534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/18/24 09:38:45.812
  STEP: Ensuring resource quota status captures configMap creation @ 06/18/24 09:38:45.822
  E0618 09:38:45.832419      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:46.833150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/18/24 09:38:47.827
  E0618 09:38:47.833411      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 06/18/24 09:38:47.833
  E0618 09:38:48.833663      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:49.833865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:38:49.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5922" for this suite. @ 06/18/24 09:38:49.847
• [28.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/18/24 09:38:49.855
  Jun 18 09:38:49.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:38:49.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:49.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:49.881
  Jun 18 09:38:49.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1279" for this suite. @ 06/18/24 09:38:49.928
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/18/24 09:38:49.934
  Jun 18 09:38:49.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 09:38:49.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:49.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:49.951
  STEP: Create a ReplicaSet @ 06/18/24 09:38:49.955
  STEP: Verify that the required pods have come up @ 06/18/24 09:38:49.96
  Jun 18 09:38:49.963: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0618 09:38:50.834768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:51.835414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:52.836075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:53.836689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:54.836773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:38:54.969: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/18/24 09:38:54.969
  Jun 18 09:38:54.973: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/18/24 09:38:54.973
  STEP: DeleteCollection of the ReplicaSets @ 06/18/24 09:38:54.977
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/18/24 09:38:54.988
  Jun 18 09:38:54.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9839" for this suite. @ 06/18/24 09:38:54.997
• [5.069 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/18/24 09:38:55.004
  Jun 18 09:38:55.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename csi-storageclass @ 06/18/24 09:38:55.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:55.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:55.035
  STEP: Creating a StorageClass @ 06/18/24 09:38:55.039
  STEP: Get StorageClass "e2e-bkdpr" @ 06/18/24 09:38:55.045
  STEP: Patching the StorageClass "e2e-bkdpr" @ 06/18/24 09:38:55.047
  STEP: Delete StorageClass "e2e-bkdpr" @ 06/18/24 09:38:55.057
  STEP: Confirm deletion of StorageClass "e2e-bkdpr" @ 06/18/24 09:38:55.064
  STEP: Create a replacement StorageClass @ 06/18/24 09:38:55.068
  STEP: Updating StorageClass "e2e-v2-2lj5g" @ 06/18/24 09:38:55.071
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-2lj5g=updated" @ 06/18/24 09:38:55.077
  STEP: Deleting StorageClass "e2e-v2-2lj5g" via DeleteCollection @ 06/18/24 09:38:55.08
  STEP: Confirm deletion of StorageClass "e2e-v2-2lj5g" @ 06/18/24 09:38:55.084
  Jun 18 09:38:55.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4374" for this suite. @ 06/18/24 09:38:55.091
• [0.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/18/24 09:38:55.097
  Jun 18 09:38:55.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 09:38:55.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:38:55.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:38:55.119
  STEP: Creating service test in namespace statefulset-8020 @ 06/18/24 09:38:55.123
  STEP: Creating statefulset ss in namespace statefulset-8020 @ 06/18/24 09:38:55.135
  Jun 18 09:38:55.144: INFO: Found 0 stateful pods, waiting for 1
  E0618 09:38:55.837381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:56.838107      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:57.838942      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:58.839447      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:38:59.839719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:00.839954      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:01.840310      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:02.840928      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:03.841139      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:04.841896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:39:05.150: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/18/24 09:39:05.157
  STEP: Getting /status @ 06/18/24 09:39:05.173
  Jun 18 09:39:05.179: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/18/24 09:39:05.179
  Jun 18 09:39:05.188: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/18/24 09:39:05.189
  Jun 18 09:39:05.191: INFO: Observed &StatefulSet event: ADDED
  Jun 18 09:39:05.191: INFO: Found Statefulset ss in namespace statefulset-8020 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 09:39:05.191: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/18/24 09:39:05.191
  Jun 18 09:39:05.191: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 18 09:39:05.199: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/18/24 09:39:05.199
  Jun 18 09:39:05.201: INFO: Observed &StatefulSet event: ADDED
  Jun 18 09:39:05.202: INFO: Deleting all statefulset in ns statefulset-8020
  Jun 18 09:39:05.206: INFO: Scaling statefulset ss to 0
  E0618 09:39:05.842137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:06.842344      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:07.843078      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:08.843132      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:09.843646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:10.844267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:11.844614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:12.845249      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:13.845565      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:14.846063      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:39:15.221: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 09:39:15.226: INFO: Deleting statefulset ss
  Jun 18 09:39:15.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8020" for this suite. @ 06/18/24 09:39:15.243
• [20.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/18/24 09:39:15.25
  Jun 18 09:39:15.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 09:39:15.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:39:15.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:39:15.268
  STEP: create the container @ 06/18/24 09:39:15.275
  W0618 09:39:15.284928      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/18/24 09:39:15.285
  E0618 09:39:15.846169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:16.847863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:17.847245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/18/24 09:39:18.304
  STEP: the container should be terminated @ 06/18/24 09:39:18.307
  STEP: the termination message should be set @ 06/18/24 09:39:18.307
  Jun 18 09:39:18.307: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/18/24 09:39:18.307
  Jun 18 09:39:18.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4051" for this suite. @ 06/18/24 09:39:18.325
• [3.080 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/18/24 09:39:18.331
  Jun 18 09:39:18.331: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename cronjob @ 06/18/24 09:39:18.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:39:18.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:39:18.345
  STEP: Creating a cronjob @ 06/18/24 09:39:18.349
  STEP: Ensuring more than one job is running at a time @ 06/18/24 09:39:18.356
  E0618 09:39:18.847770      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:19.848358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:20.848480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:21.848913      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:22.849925      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:23.850373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:24.850360      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:25.851283      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:26.851825      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:27.852513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:28.853550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:29.853984      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:30.854453      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:31.854564      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:32.855188      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:33.855524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:34.855619      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:35.855947      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:36.856653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:37.857314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:38.857569      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:39.858065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:40.858781      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:41.859209      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:42.859346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:43.859882      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:44.861087      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:45.861464      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:46.862618      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:47.862842      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:48.863410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:49.863989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:50.864363      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:51.864948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:52.865050      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:53.865476      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:54.865696      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:55.866108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:56.866708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:57.867143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:58.868140      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:39:59.868425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:00.869405      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:01.869705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:02.870399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:03.870528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:04.871407      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:05.872135      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:06.872580      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:07.873462      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:08.874375      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:09.874726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:10.875497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:11.875819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:12.876565      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:13.876867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:14.877970      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:15.878307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:16.879341      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:17.880232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:18.880291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:19.880421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:20.881513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:21.882035      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:22.882531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:23.882571      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:24.883163      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:25.883673      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:26.884286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:27.885027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:28.886146      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:29.886659      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:30.887058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:31.887301      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:32.887976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:33.888380      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:34.888854      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:35.889045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:36.889722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:37.890550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:38.890942      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:39.891544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:40.892046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:41.892362      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:42.893007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:43.893319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:44.893568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:45.894230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:46.894685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:47.895168      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:48.895864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:49.896034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:50.896544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:51.896955      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:52.897331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:53.897403      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:54.897649      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:55.897994      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:56.898169      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:57.898904      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:58.899497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:40:59.899473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/18/24 09:41:00.361
  STEP: Removing cronjob @ 06/18/24 09:41:00.364
  Jun 18 09:41:00.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8378" for this suite. @ 06/18/24 09:41:00.373
• [102.047 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/18/24 09:41:00.378
  Jun 18 09:41:00.378: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:41:00.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:00.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:00.408
  STEP: Creating configMap with name projected-configmap-test-volume-map-a51ae466-ea80-4cf2-afbe-f7e1e791a76e @ 06/18/24 09:41:00.412
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:41:00.417
  E0618 09:41:00.899798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:01.900162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:02.900929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:03.901078      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:41:04.44
  Jun 18 09:41:04.445: INFO: Trying to get logs from node ck-129-worker-2 pod pod-projected-configmaps-0ee25f95-1c7c-4dd0-80b8-aaaec9b51cd9 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:41:04.473
  Jun 18 09:41:04.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4326" for this suite. @ 06/18/24 09:41:04.496
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/18/24 09:41:04.504
  Jun 18 09:41:04.504: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:41:04.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:04.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:04.531
  STEP: Create a pod @ 06/18/24 09:41:04.535
  E0618 09:41:04.901633      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:05.901970      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/18/24 09:41:06.555
  Jun 18 09:41:06.567: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun 18 09:41:06.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5180" for this suite. @ 06/18/24 09:41:06.574
• [2.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/18/24 09:41:06.579
  Jun 18 09:41:06.579: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename apf @ 06/18/24 09:41:06.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:06.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:06.598
  STEP: getting /apis @ 06/18/24 09:41:06.602
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/18/24 09:41:06.609
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/18/24 09:41:06.611
  STEP: creating @ 06/18/24 09:41:06.613
  STEP: getting @ 06/18/24 09:41:06.626
  STEP: listing @ 06/18/24 09:41:06.629
  STEP: watching @ 06/18/24 09:41:06.632
  Jun 18 09:41:06.632: INFO: starting watch
  STEP: patching @ 06/18/24 09:41:06.634
  STEP: updating @ 06/18/24 09:41:06.64
  Jun 18 09:41:06.647: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/18/24 09:41:06.648
  STEP: patching /status @ 06/18/24 09:41:06.651
  STEP: updating /status @ 06/18/24 09:41:06.655
  STEP: deleting @ 06/18/24 09:41:06.663
  STEP: deleting a collection @ 06/18/24 09:41:06.672
  Jun 18 09:41:06.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4848" for this suite. @ 06/18/24 09:41:06.691
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/18/24 09:41:06.698
  Jun 18 09:41:06.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pv @ 06/18/24 09:41:06.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:06.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:06.717
  STEP: Creating initial PV and PVC @ 06/18/24 09:41:06.722
  Jun 18 09:41:06.722: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2692" @ 06/18/24 09:41:06.736
  STEP: Listing PVCs in namespace "pv-2692" @ 06/18/24 09:41:06.739
  STEP: Reading "pvc-rgrvs" Status @ 06/18/24 09:41:06.742
  STEP: Reading "pv-2692-9vr8b" Status @ 06/18/24 09:41:06.747
  STEP: Patching "pvc-rgrvs" Status @ 06/18/24 09:41:06.759
  STEP: Patching "pv-2692-9vr8b" Status @ 06/18/24 09:41:06.765
  STEP: Updating "pvc-rgrvs" Status @ 06/18/24 09:41:06.78
  STEP: Updating "pv-2692-9vr8b" Status @ 06/18/24 09:41:06.791
  Jun 18 09:41:06.798: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 18 09:41:06.798: INFO: Deleting PersistentVolumeClaim "pvc-rgrvs"
  Jun 18 09:41:06.802: INFO: Deleting PersistentVolume "pv-2692-9vr8b"
  Jun 18 09:41:06.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2692" for this suite. @ 06/18/24 09:41:06.812
• [0.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/18/24 09:41:06.818
  Jun 18 09:41:06.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 09:41:06.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:06.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:06.836
  STEP: Creating service test in namespace statefulset-516 @ 06/18/24 09:41:06.839
  STEP: Looking for a node to schedule stateful set and pod @ 06/18/24 09:41:06.843
  STEP: Creating pod with conflicting port in namespace statefulset-516 @ 06/18/24 09:41:06.848
  STEP: Waiting until pod test-pod will start running in namespace statefulset-516 @ 06/18/24 09:41:06.855
  E0618 09:41:06.902139      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:07.902121      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-516 @ 06/18/24 09:41:08.863
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-516 @ 06/18/24 09:41:08.87
  Jun 18 09:41:08.886: INFO: Observed stateful pod in namespace: statefulset-516, name: ss-0, uid: 2fb1d817-ac2c-4eec-928e-c47f8841c3ff, status phase: Pending. Waiting for statefulset controller to delete.
  Jun 18 09:41:08.899: INFO: Observed stateful pod in namespace: statefulset-516, name: ss-0, uid: 2fb1d817-ac2c-4eec-928e-c47f8841c3ff, status phase: Failed. Waiting for statefulset controller to delete.
  E0618 09:41:08.902066      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:08.923: INFO: Observed stateful pod in namespace: statefulset-516, name: ss-0, uid: 2fb1d817-ac2c-4eec-928e-c47f8841c3ff, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 18 09:41:08.925: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-516
  STEP: Removing pod with conflicting port in namespace statefulset-516 @ 06/18/24 09:41:08.925
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-516 and will be in running state @ 06/18/24 09:41:08.944
  E0618 09:41:09.902254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:10.902654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:11.903579      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:12.903961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:12.956: INFO: Deleting all statefulset in ns statefulset-516
  Jun 18 09:41:12.959: INFO: Scaling statefulset ss to 0
  E0618 09:41:13.904017      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:14.904493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:15.904656      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:16.905323      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:17.906527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:18.906987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:19.907358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:20.907760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:21.908137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:22.909268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:22.972: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 18 09:41:22.975: INFO: Deleting statefulset ss
  Jun 18 09:41:22.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-516" for this suite. @ 06/18/24 09:41:22.991
• [16.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/18/24 09:41:22.997
  Jun 18 09:41:22.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 09:41:22.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:23.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:23.019
  STEP: Create a Replicaset @ 06/18/24 09:41:23.025
  STEP: Verify that the required pods have come up. @ 06/18/24 09:41:23.03
  Jun 18 09:41:23.033: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0618 09:41:23.909620      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:24.910208      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:25.910458      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:26.911235      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:27.912126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:28.037: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 09:41:28.037
  STEP: Getting /status @ 06/18/24 09:41:28.037
  Jun 18 09:41:28.043: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/18/24 09:41:28.043
  Jun 18 09:41:28.051: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/18/24 09:41:28.051
  Jun 18 09:41:28.054: INFO: Observed &ReplicaSet event: ADDED
  Jun 18 09:41:28.054: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 09:41:28.054: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 09:41:28.054: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 09:41:28.054: INFO: Found replicaset test-rs in namespace replicaset-9601 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 09:41:28.054: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/18/24 09:41:28.054
  Jun 18 09:41:28.054: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 18 09:41:28.060: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/18/24 09:41:28.06
  Jun 18 09:41:28.062: INFO: Observed &ReplicaSet event: ADDED
  Jun 18 09:41:28.063: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 09:41:28.063: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 09:41:28.063: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 09:41:28.063: INFO: Observed replicaset test-rs in namespace replicaset-9601 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 18 09:41:28.064: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 18 09:41:28.064: INFO: Found replicaset test-rs in namespace replicaset-9601 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun 18 09:41:28.064: INFO: Replicaset test-rs has a patched status
  Jun 18 09:41:28.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9601" for this suite. @ 06/18/24 09:41:28.07
• [5.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/18/24 09:41:28.076
  Jun 18 09:41:28.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:41:28.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:28.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:28.09
  STEP: Creating secret with name secret-test-map-ea47f599-3c96-44ba-bd31-2da02bcc8798 @ 06/18/24 09:41:28.094
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:41:28.098
  E0618 09:41:28.912896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:29.913507      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:30.914495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:31.914887      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:41:32.121
  Jun 18 09:41:32.124: INFO: Trying to get logs from node ck-129-worker-1 pod pod-secrets-94ba38cc-2442-4041-88f6-f45007311d2f container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:41:32.14
  Jun 18 09:41:32.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4387" for this suite. @ 06/18/24 09:41:32.158
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/18/24 09:41:32.164
  Jun 18 09:41:32.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 09:41:32.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:32.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:32.185
  STEP: Creating simple DaemonSet "daemon-set" @ 06/18/24 09:41:32.21
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 09:41:32.216
  Jun 18 09:41:32.221: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:41:32.224: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:41:32.224: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:41:32.915639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:33.223: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:41:33.227: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 09:41:33.227: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:41:33.915816      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:34.223: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:41:34.228: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 09:41:34.228: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/18/24 09:41:34.232
  Jun 18 09:41:34.236: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/18/24 09:41:34.236
  Jun 18 09:41:34.247: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/18/24 09:41:34.247
  Jun 18 09:41:34.250: INFO: Observed &DaemonSet event: ADDED
  Jun 18 09:41:34.251: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.251: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.251: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.251: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.251: INFO: Found daemon set daemon-set in namespace daemonsets-2865 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 09:41:34.251: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/18/24 09:41:34.252
  STEP: watching for the daemon set status to be patched @ 06/18/24 09:41:34.26
  Jun 18 09:41:34.263: INFO: Observed &DaemonSet event: ADDED
  Jun 18 09:41:34.264: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.264: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.264: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.264: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.264: INFO: Observed daemon set daemon-set in namespace daemonsets-2865 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 18 09:41:34.265: INFO: Observed &DaemonSet event: MODIFIED
  Jun 18 09:41:34.265: INFO: Found daemon set daemon-set in namespace daemonsets-2865 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun 18 09:41:34.265: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 09:41:34.27
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2865, will wait for the garbage collector to delete the pods @ 06/18/24 09:41:34.27
  Jun 18 09:41:34.329: INFO: Deleting DaemonSet.extensions daemon-set took: 6.203441ms
  Jun 18 09:41:34.430: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.645092ms
  E0618 09:41:34.916278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:35.916931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:36.834: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:41:36.834: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 09:41:36.837: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33748"},"items":null}

  Jun 18 09:41:36.840: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33748"},"items":null}

  Jun 18 09:41:36.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2865" for this suite. @ 06/18/24 09:41:36.86
• [4.701 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/18/24 09:41:36.867
  Jun 18 09:41:36.867: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:41:36.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:36.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:36.89
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:41:36.894
  E0618 09:41:36.917569      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:37.918359      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:38.919425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:39.919550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:41:40.915
  Jun 18 09:41:40.918: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-44bf9e89-0f06-4bf5-bc29-79e3066a51c4 container client-container: <nil>
  E0618 09:41:40.919952      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 06/18/24 09:41:40.926
  Jun 18 09:41:40.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-666" for this suite. @ 06/18/24 09:41:40.945
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/18/24 09:41:40.956
  Jun 18 09:41:40.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename watch @ 06/18/24 09:41:40.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:40.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:40.973
  STEP: getting a starting resourceVersion @ 06/18/24 09:41:40.977
  STEP: starting a background goroutine to produce watch events @ 06/18/24 09:41:40.98
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/18/24 09:41:40.98
  E0618 09:41:41.920051      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:42.920681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:43.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6059" for this suite. @ 06/18/24 09:41:43.815
• [2.908 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/18/24 09:41:43.865
  Jun 18 09:41:43.865: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubelet-test @ 06/18/24 09:41:43.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:43.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:43.88
  E0618 09:41:43.921010      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:44.921667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:45.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4152" for this suite. @ 06/18/24 09:41:45.91
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/18/24 09:41:45.92
  Jun 18 09:41:45.920: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:41:45.922
  E0618 09:41:45.922347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:45.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:45.937
  STEP: Creating secret with name secret-test-c702e44b-f5dd-4ce3-8f46-6fcae685cef3 @ 06/18/24 09:41:45.94
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:41:45.944
  E0618 09:41:46.922785      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:47.923497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:48.924672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:49.925664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:41:49.965
  Jun 18 09:41:49.968: INFO: Trying to get logs from node ck-129-worker-1 pod pod-secrets-2048a68f-0919-442a-aa83-1f6c1394be9c container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:41:49.974
  Jun 18 09:41:49.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7332" for this suite. @ 06/18/24 09:41:49.993
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/18/24 09:41:50
  Jun 18 09:41:50.000: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 09:41:50.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:50.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:50.018
  Jun 18 09:41:50.021: INFO: Creating simple deployment test-new-deployment
  Jun 18 09:41:50.033: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0618 09:41:50.925951      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:51.926418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 06/18/24 09:41:52.045
  STEP: updating a scale subresource @ 06/18/24 09:41:52.048
  STEP: verifying the deployment Spec.Replicas was modified @ 06/18/24 09:41:52.053
  STEP: Patch a scale subresource @ 06/18/24 09:41:52.055
  Jun 18 09:41:52.071: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-47",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9994356d-6e05-4921-9266-1a37a552227b",
      ResourceVersion: (string) (len=5) "34022",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 09:41:52.089: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-47",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38685611-d07d-4701-a681-9e558d05a02c",
      ResourceVersion: (string) (len=5) "34027",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "9994356d-6e05-4921-9266-1a37a552227b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 39 34 33 35  36 64 2d 36 65 30 35 2d  |\"9994356d-6e05-|
              00000120  34 39 32 31 2d 39 32 36  36 2d 31 61 33 37 61 35  |4921-9266-1a37a5|
              00000130  35 32 32 32 37 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |52227b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:41:52.098: INFO: Pod "test-new-deployment-557759b7c7-f7942" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-f7942",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=13) "deployment-47",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02718737-9fa3-454d-bd64-e6c7cd11f6c4",
      ResourceVersion: (string) (len=5) "34031",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "38685611-d07d-4701-a681-9e558d05a02c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  36 38 35 36 31 31 2d 64  |d\":\"38685611-d|
              00000090  30 37 64 2d 34 37 30 31  2d 61 36 38 31 2d 39 65  |07d-4701-a681-9e|
              000000a0  35 35 38 64 30 35 61 30  32 63 5c 22 7d 22 3a 7b  |558d05a02c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppmf7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppmf7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:41:52.102: INFO: Pod "test-new-deployment-557759b7c7-nf89k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-nf89k",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=13) "deployment-47",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d280d108-2afb-4ee4-8b00-591e24d1b8d9",
      ResourceVersion: (string) (len=5) "34008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8481b63c6f7abd938627bf3c18b702139ecaa9cb6227b2dda022b176d54cbff2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.244/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.244/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "38685611-d07d-4701-a681-9e558d05a02c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  36 38 35 36 31 31 2d 64  |d\":\"38685611-d|
              00000090  30 37 64 2d 34 37 30 31  2d 61 36 38 31 2d 39 65  |07d-4701-a681-9e|
              000000a0  35 35 38 64 30 35 61 30  32 63 5c 22 7d 22 3a 7b  |558d05a02c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 36 31 2e  32 34 34 5c 22 7d 22 3a  |2.16.61.244\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bn5ds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bn5ds",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=13) "172.16.61.244",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.61.244"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854300510,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://adae7dcf8eb92c0ea2d509306c4f8352768ea86d0b817a9105748f52e7a6f091",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:41:52.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-47" for this suite. @ 06/18/24 09:41:52.124
• [2.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/18/24 09:41:52.136
  Jun 18 09:41:52.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:41:52.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:52.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:52.157
  STEP: Creating the pod @ 06/18/24 09:41:52.161
  E0618 09:41:52.926860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:53.927440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:54.709: INFO: Successfully updated pod "labelsupdate547410c8-5148-4c68-a110-cc4709cb175d"
  E0618 09:41:54.927769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:55.928262      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:56.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6877" for this suite. @ 06/18/24 09:41:56.729
• [4.598 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/18/24 09:41:56.734
  Jun 18 09:41:56.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:41:56.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:41:56.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:41:56.749
  STEP: creating all guestbook components @ 06/18/24 09:41:56.753
  Jun 18 09:41:56.753: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun 18 09:41:56.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 create -f -'
  E0618 09:41:56.928797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:41:56.937: INFO: stderr: ""
  Jun 18 09:41:56.937: INFO: stdout: "service/agnhost-replica created\n"
  Jun 18 09:41:56.937: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun 18 09:41:56.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 create -f -'
  Jun 18 09:41:57.101: INFO: stderr: ""
  Jun 18 09:41:57.101: INFO: stdout: "service/agnhost-primary created\n"
  Jun 18 09:41:57.102: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun 18 09:41:57.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 create -f -'
  Jun 18 09:41:57.267: INFO: stderr: ""
  Jun 18 09:41:57.267: INFO: stdout: "service/frontend created\n"
  Jun 18 09:41:57.267: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun 18 09:41:57.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 create -f -'
  Jun 18 09:41:57.383: INFO: stderr: ""
  Jun 18 09:41:57.383: INFO: stdout: "deployment.apps/frontend created\n"
  Jun 18 09:41:57.383: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 18 09:41:57.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 create -f -'
  Jun 18 09:41:57.501: INFO: stderr: ""
  Jun 18 09:41:57.501: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun 18 09:41:57.501: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 18 09:41:57.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 create -f -'
  Jun 18 09:41:57.611: INFO: stderr: ""
  Jun 18 09:41:57.611: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/18/24 09:41:57.611
  Jun 18 09:41:57.611: INFO: Waiting for all frontend pods to be Running.
  E0618 09:41:57.929258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:58.929586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:41:59.929898      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:00.930258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:01.930440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:02.662: INFO: Waiting for frontend to serve content.
  Jun 18 09:42:02.677: INFO: Trying to add a new entry to the guestbook.
  Jun 18 09:42:02.691: INFO: Verifying that added entry can be retrieved.
  Jun 18 09:42:02.700: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
  E0618 09:42:02.930772      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:03.931444      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:04.931820      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:05.932198      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:06.932894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 06/18/24 09:42:07.711
  Jun 18 09:42:07.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 delete --grace-period=0 --force -f -'
  Jun 18 09:42:07.808: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 09:42:07.808: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 09:42:07.808
  Jun 18 09:42:07.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 delete --grace-period=0 --force -f -'
  Jun 18 09:42:07.903: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 09:42:07.904: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 09:42:07.904
  Jun 18 09:42:07.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 delete --grace-period=0 --force -f -'
  E0618 09:42:07.933248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:08.003: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 09:42:08.003: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 09:42:08.004
  Jun 18 09:42:08.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 delete --grace-period=0 --force -f -'
  Jun 18 09:42:08.085: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 09:42:08.085: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 09:42:08.085
  Jun 18 09:42:08.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 delete --grace-period=0 --force -f -'
  Jun 18 09:42:08.175: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 09:42:08.175: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/18/24 09:42:08.175
  Jun 18 09:42:08.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-579 delete --grace-period=0 --force -f -'
  Jun 18 09:42:08.266: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 09:42:08.266: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun 18 09:42:08.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-579" for this suite. @ 06/18/24 09:42:08.273
• [11.547 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/18/24 09:42:08.282
  Jun 18 09:42:08.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 09:42:08.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:42:08.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:42:08.316
  STEP: Creating a test headless service @ 06/18/24 09:42:08.32
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local;sleep 1; done
   @ 06/18/24 09:42:08.326
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2190.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local;sleep 1; done
   @ 06/18/24 09:42:08.326
  STEP: creating a pod to probe DNS @ 06/18/24 09:42:08.326
  STEP: submitting the pod to kubernetes @ 06/18/24 09:42:08.326
  E0618 09:42:08.933375      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:09.933793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 09:42:10.351
  STEP: looking for the results for each expected name from probers @ 06/18/24 09:42:10.354
  Jun 18 09:42:10.359: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.362: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.365: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.368: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.371: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.376: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.379: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.383: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:10.383: INFO: Lookups using dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local]

  Jun 18 09:42:10.388: INFO: Pod client logs for webserver: 
  Jun 18 09:42:10.393: INFO: Pod client logs for querier: 
  Jun 18 09:42:10.398: INFO: Pod client logs for jessie-querier: 
  E0618 09:42:10.934401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:11.934712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:12.934862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:13.935875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:14.936064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:15.361: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.365: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.369: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.372: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.375: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.379: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.382: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.386: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:15.386: INFO: Lookups using dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local]

  Jun 18 09:42:15.392: INFO: Pod client logs for webserver: 
  Jun 18 09:42:15.398: INFO: Pod client logs for querier: 
  Jun 18 09:42:15.404: INFO: Pod client logs for jessie-querier: 
  E0618 09:42:15.936890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:16.941474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:17.937257      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:18.937539      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:19.938765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:20.359: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.363: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.366: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.374: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.377: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.381: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.384: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.386: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:20.387: INFO: Lookups using dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local]

  Jun 18 09:42:20.392: INFO: Pod client logs for webserver: 
  Jun 18 09:42:20.397: INFO: Pod client logs for querier: 
  Jun 18 09:42:20.402: INFO: Pod client logs for jessie-querier: 
  E0618 09:42:20.937752      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:21.938820      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:22.939624      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:23.939957      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:24.940352      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:25.360: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.363: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.366: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.369: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.371: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.375: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.377: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.380: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:25.380: INFO: Lookups using dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local]

  Jun 18 09:42:25.385: INFO: Pod client logs for webserver: 
  Jun 18 09:42:25.390: INFO: Pod client logs for querier: 
  Jun 18 09:42:25.395: INFO: Pod client logs for jessie-querier: 
  E0618 09:42:25.940760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:26.941265      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:27.941550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:28.942038      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:29.942510      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:30.360: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.364: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.368: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.371: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.375: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.378: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.381: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.385: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:30.385: INFO: Lookups using dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local]

  Jun 18 09:42:30.391: INFO: Pod client logs for webserver: 
  Jun 18 09:42:30.397: INFO: Pod client logs for querier: 
  Jun 18 09:42:30.402: INFO: Pod client logs for jessie-querier: 
  E0618 09:42:30.942597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:31.942930      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:32.943516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:33.943968      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:34.944435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:35.359: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.362: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.367: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.370: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.372: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.379: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.381: INFO: Unable to read jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.384: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local from pod dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade: the server could not find the requested resource (get pods dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade)
  Jun 18 09:42:35.384: INFO: Lookups using dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2190.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2190.svc.cluster.local jessie_udp@dns-test-service-2.dns-2190.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2190.svc.cluster.local]

  Jun 18 09:42:35.389: INFO: Pod client logs for webserver: 
  Jun 18 09:42:35.395: INFO: Pod client logs for querier: 
  Jun 18 09:42:35.400: INFO: Pod client logs for jessie-querier: 
  E0618 09:42:35.945292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:36.945963      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:37.946357      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:38.946661      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:39.946761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:40.383: INFO: DNS probes using dns-2190/dns-test-9ef9a69c-114f-4e5f-94f8-9cb319b8dade succeeded

  STEP: deleting the pod @ 06/18/24 09:42:40.384
  STEP: deleting the test headless service @ 06/18/24 09:42:40.404
  Jun 18 09:42:40.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2190" for this suite. @ 06/18/24 09:42:40.423
• [32.148 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/18/24 09:42:40.431
  Jun 18 09:42:40.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:42:40.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:42:40.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:42:40.449
  STEP: creating the pod @ 06/18/24 09:42:40.452
  STEP: submitting the pod to kubernetes @ 06/18/24 09:42:40.453
  W0618 09:42:40.458782      17 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0618 09:42:40.946869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:41.947480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/18/24 09:42:42.469
  STEP: updating the pod @ 06/18/24 09:42:42.472
  E0618 09:42:42.948191      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:42.983: INFO: Successfully updated pod "pod-update-activedeadlineseconds-f1076e3e-c32b-44c6-8204-2a3b9700b29f"
  E0618 09:42:43.948812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:44.949241      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:45.949477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:46.950351      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:46.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4049" for this suite. @ 06/18/24 09:42:47.003
• [6.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/18/24 09:42:47.012
  Jun 18 09:42:47.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename watch @ 06/18/24 09:42:47.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:42:47.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:42:47.028
  STEP: creating a watch on configmaps @ 06/18/24 09:42:47.031
  STEP: creating a new configmap @ 06/18/24 09:42:47.032
  STEP: modifying the configmap once @ 06/18/24 09:42:47.035
  STEP: closing the watch once it receives two notifications @ 06/18/24 09:42:47.04
  Jun 18 09:42:47.041: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6018  2e04ec4a-33ea-4e1a-994b-ad17c37331a1 34572 0 2024-06-18 09:42:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 09:42:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 09:42:47.041: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6018  2e04ec4a-33ea-4e1a-994b-ad17c37331a1 34573 0 2024-06-18 09:42:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 09:42:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/18/24 09:42:47.041
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/18/24 09:42:47.047
  STEP: deleting the configmap @ 06/18/24 09:42:47.048
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/18/24 09:42:47.052
  Jun 18 09:42:47.052: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6018  2e04ec4a-33ea-4e1a-994b-ad17c37331a1 34574 0 2024-06-18 09:42:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 09:42:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 09:42:47.052: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-6018  2e04ec4a-33ea-4e1a-994b-ad17c37331a1 34575 0 2024-06-18 09:42:47 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-18 09:42:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 18 09:42:47.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6018" for this suite. @ 06/18/24 09:42:47.057
• [0.050 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/18/24 09:42:47.062
  Jun 18 09:42:47.062: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename deployment @ 06/18/24 09:42:47.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:42:47.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:42:47.077
  Jun 18 09:42:47.087: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0618 09:42:47.951321      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:48.952496      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:49.952946      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:50.953150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:51.953402      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:52.093: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 09:42:52.093
  Jun 18 09:42:52.093: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0618 09:42:52.954347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:53.954861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:54.098: INFO: Creating deployment "test-rollover-deployment"
  Jun 18 09:42:54.104: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0618 09:42:54.955156      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:55.956131      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:56.112: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun 18 09:42:56.117: INFO: Ensure that both replica sets have 1 created replica
  Jun 18 09:42:56.122: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun 18 09:42:56.130: INFO: Updating deployment test-rollover-deployment
  Jun 18 09:42:56.130: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0618 09:42:56.957303      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:57.958049      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:42:58.138: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun 18 09:42:58.144: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun 18 09:42:58.151: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 09:42:58.151: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 09:42:58.958649      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:42:59.959074      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:00.159: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 09:43:00.159: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 09:43:00.959330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:01.959846      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:02.160: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 09:43:02.161: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 09:43:02.960133      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:03.960632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:04.159: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 09:43:04.159: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 09:43:04.960992      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:05.961527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:06.161: INFO: all replica sets need to contain the pod-template-hash label
  Jun 18 09:43:06.161: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 18, 9, 42, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 18, 9, 42, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0618 09:43:06.961625      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:07.962123      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:08.160: INFO: 
  Jun 18 09:43:08.160: INFO: Ensure that both old replica sets have no replicas
  Jun 18 09:43:08.174: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bca0a246-aa51-4fdc-9fc7-b7509028bca0",
      ResourceVersion: (string) (len=5) "34713",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300574,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300574,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 18 09:43:08.183: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff6414f3-5d40-4c14-9b0a-a90425a56e21",
      ResourceVersion: (string) (len=5) "34703",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300576,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bca0a246-aa51-4fdc-9fc7-b7509028bca0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 61 30 61 32  34 36 2d 61 61 35 31 2d  |\"bca0a246-aa51-|
              00000120  34 66 64 63 2d 39 66 63  37 2d 62 37 35 30 39 30  |4fdc-9fc7-b75090|
              00000130  32 38 62 63 61 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |28bca0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:43:08.184: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun 18 09:43:08.184: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4002e257-264e-4cc4-872a-a14891d5fff4",
      ResourceVersion: (string) (len=5) "34712",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300567,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bca0a246-aa51-4fdc-9fc7-b7509028bca0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300567,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  62 63 61 30 61 32 34 36  2d 61 61 35 31 2d 34 66  |bca0a246-aa51-4f|
              000000c0  64 63 2d 39 66 63 37 2d  62 37 35 30 39 30 32 38  |dc-9fc7-b7509028|
              000000d0  62 63 61 30 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bca0\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300587,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:43:08.187: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bcab4ca2-f741-4357-8918-7a65c6c831bc",
      ResourceVersion: (string) (len=5) "34668",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300574,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "bca0a246-aa51-4fdc-9fc7-b7509028bca0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 61 30 61 32  34 36 2d 61 61 35 31 2d  |\"bca0a246-aa51-|
              00000120  34 66 64 63 2d 39 66 63  37 2d 62 37 35 30 39 30  |4fdc-9fc7-b75090|
              00000130  32 38 62 63 61 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |28bca0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 18 09:43:08.202: INFO: Pod "test-rollover-deployment-68774655d5-mhn4q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-mhn4q",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0365797-1344-485e-8658-94e38f8e94b4",
      ResourceVersion: (string) (len=5) "34681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300576,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.61.225/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.61.225/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4fc723766d2f45375defefe73cb1fa91fc8386c4f98f91d7d778be1e30476595"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "ff6414f3-5d40-4c14-9b0a-a90425a56e21",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 66  36 34 31 34 66 33 2d 35  |d\":\"ff6414f3-5|
              00000090  64 34 30 2d 34 63 31 34  2d 39 62 30 61 2d 61 39  |d40-4c14-9b0a-a9|
              000000a0  30 34 32 35 61 35 36 65  32 31 5c 22 7d 22 3a 7b  |0425a56e21\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 36 31 2e  32 32 35 5c 22 7d 22 3a  |2.16.61.225\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6qr97",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6qr97",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ck-129-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854300576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=13) "172.16.61.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.61.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854300576,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854300576,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://2450be83faa142f0cfb398f0addef051a665c1664b4cfb89ef91e653b6370d2a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 18 09:43:08.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9090" for this suite. @ 06/18/24 09:43:08.221
• [21.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/18/24 09:43:08.239
  Jun 18 09:43:08.239: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 09:43:08.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:43:08.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:43:08.278
  E0618 09:43:08.962423      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:09.963468      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:10.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9253" for this suite. @ 06/18/24 09:43:10.327
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/18/24 09:43:10.337
  Jun 18 09:43:10.337: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:43:10.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:43:10.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:43:10.358
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:43:10.363
  E0618 09:43:10.964549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:11.964878      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:12.965112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:13.966052      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:43:14.383
  Jun 18 09:43:14.389: INFO: Trying to get logs from node ck-129-worker-2 pod downwardapi-volume-52cad221-d5d1-4946-a4a1-1d5b2e47e316 container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:43:14.405
  Jun 18 09:43:14.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7099" for this suite. @ 06/18/24 09:43:14.424
• [4.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/18/24 09:43:14.431
  Jun 18 09:43:14.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:43:14.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:43:14.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:43:14.449
  Jun 18 09:43:14.454: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:43:14.967051      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:15.967473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/18/24 09:43:15.996
  Jun 18 09:43:15.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 create -f -'
  Jun 18 09:43:16.104: INFO: stderr: ""
  Jun 18 09:43:16.104: INFO: stdout: "e2e-test-crd-publish-openapi-1780-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 18 09:43:16.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 delete e2e-test-crd-publish-openapi-1780-crds test-cr'
  Jun 18 09:43:16.186: INFO: stderr: ""
  Jun 18 09:43:16.186: INFO: stdout: "e2e-test-crd-publish-openapi-1780-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun 18 09:43:16.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 apply -f -'
  Jun 18 09:43:16.272: INFO: stderr: ""
  Jun 18 09:43:16.272: INFO: stdout: "e2e-test-crd-publish-openapi-1780-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 18 09:43:16.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-6609 --namespace=crd-publish-openapi-6609 delete e2e-test-crd-publish-openapi-1780-crds test-cr'
  Jun 18 09:43:16.367: INFO: stderr: ""
  Jun 18 09:43:16.367: INFO: stdout: "e2e-test-crd-publish-openapi-1780-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/18/24 09:43:16.367
  Jun 18 09:43:16.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=crd-publish-openapi-6609 explain e2e-test-crd-publish-openapi-1780-crds'
  Jun 18 09:43:16.449: INFO: stderr: ""
  Jun 18 09:43:16.449: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1780-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0618 09:43:16.968332      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:17.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6609" for this suite. @ 06/18/24 09:43:17.914
• [3.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/18/24 09:43:17.923
  Jun 18 09:43:17.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 09:43:17.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:43:17.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:43:17.955
  E0618 09:43:17.968409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:43:17.976: INFO: created pod pod-service-account-defaultsa
  Jun 18 09:43:17.976: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun 18 09:43:17.981: INFO: created pod pod-service-account-mountsa
  Jun 18 09:43:17.981: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun 18 09:43:17.988: INFO: created pod pod-service-account-nomountsa
  Jun 18 09:43:17.989: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun 18 09:43:17.996: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun 18 09:43:17.996: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun 18 09:43:18.006: INFO: created pod pod-service-account-mountsa-mountspec
  Jun 18 09:43:18.006: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun 18 09:43:18.017: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun 18 09:43:18.017: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun 18 09:43:18.028: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun 18 09:43:18.028: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun 18 09:43:18.035: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun 18 09:43:18.035: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun 18 09:43:18.045: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun 18 09:43:18.045: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun 18 09:43:18.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7216" for this suite. @ 06/18/24 09:43:18.057
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/18/24 09:43:18.069
  Jun 18 09:43:18.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-watch @ 06/18/24 09:43:18.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:43:18.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:43:18.091
  Jun 18 09:43:18.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:43:18.968563      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:19.968754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 06/18/24 09:43:20.643
  Jun 18 09:43:20.648: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T09:43:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T09:43:20Z]] name:name1 resourceVersion:34908 uid:19186c62-833a-42a0-8b07-a55554ca982a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 09:43:20.969535      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:21.969746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:22.970764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:23.975920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:24.972162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:25.972979      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:26.975323      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:27.973687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:28.974153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:29.974291      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 06/18/24 09:43:30.651
  Jun 18 09:43:30.659: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T09:43:30Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T09:43:30Z]] name:name2 resourceVersion:35003 uid:0a36effd-325c-45e6-b3dc-4262c26de9be] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 09:43:30.974879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:31.975418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:32.976199      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:33.976463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:34.976936      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:35.977452      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:36.978437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:37.978978      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:38.979345      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:39.979495      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 06/18/24 09:43:40.661
  Jun 18 09:43:40.668: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T09:43:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T09:43:40Z]] name:name1 resourceVersion:35022 uid:19186c62-833a-42a0-8b07-a55554ca982a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 09:43:40.980260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:41.980698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:42.989218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:43.987723      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:44.988261      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:45.989081      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:46.990319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:47.991112      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:48.991724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:49.992124      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 06/18/24 09:43:50.669
  Jun 18 09:43:50.677: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T09:43:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T09:43:50Z]] name:name2 resourceVersion:35039 uid:0a36effd-325c-45e6-b3dc-4262c26de9be] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 09:43:50.992493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:51.992850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:52.993401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:53.993740      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:54.994552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:55.994931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:56.995562      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:57.996329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:58.996674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:43:59.997003      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 06/18/24 09:44:00.677
  Jun 18 09:44:00.686: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T09:43:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T09:43:40Z]] name:name1 resourceVersion:35058 uid:19186c62-833a-42a0-8b07-a55554ca982a] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 09:44:00.997615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:01.998053      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:02.998670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:03.998986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:04.999392      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:05.999647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:07.000250      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:08.001623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:09.000935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:10.001368      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 06/18/24 09:44:10.686
  Jun 18 09:44:10.694: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-18T09:43:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-18T09:43:50Z]] name:name2 resourceVersion:35075 uid:0a36effd-325c-45e6-b3dc-4262c26de9be] num:map[num1:9223372036854775807 num2:1000000]]}
  E0618 09:44:11.001383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:12.001746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:13.001920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:14.002231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:15.002590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:16.002792      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:17.003521      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:18.004068      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:19.004342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:20.004698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:21.004813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:44:21.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4964" for this suite. @ 06/18/24 09:44:21.214
• [63.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/18/24 09:44:21.228
  Jun 18 09:44:21.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:44:21.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:44:21.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:44:21.248
  STEP: creating a collection of services @ 06/18/24 09:44:21.253
  Jun 18 09:44:21.253: INFO: Creating e2e-svc-a-tgmcs
  Jun 18 09:44:21.268: INFO: Creating e2e-svc-b-ztx7g
  Jun 18 09:44:21.281: INFO: Creating e2e-svc-c-bt9wq
  STEP: deleting service collection @ 06/18/24 09:44:21.306
  Jun 18 09:44:21.340: INFO: Collection of services has been deleted
  Jun 18 09:44:21.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1252" for this suite. @ 06/18/24 09:44:21.344
• [0.122 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/18/24 09:44:21.351
  Jun 18 09:44:21.351: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/18/24 09:44:21.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:44:21.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:44:21.367
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/18/24 09:44:21.371
  Jun 18 09:44:21.373: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:44:22.005897      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:23.006403      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:24.007431      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:25.007424      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:26.007746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:27.007813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/18/24 09:44:27.209
  Jun 18 09:44:27.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:44:28.008638      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:44:28.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:44:29.009559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:30.009839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:31.010055      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:32.010872      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:33.014232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:34.014724      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:44:34.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3168" for this suite. @ 06/18/24 09:44:34.455
• [13.112 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/18/24 09:44:34.462
  Jun 18 09:44:34.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename downward-api @ 06/18/24 09:44:34.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:44:34.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:44:34.48
  STEP: Creating a pod to test downward API volume plugin @ 06/18/24 09:44:34.485
  E0618 09:44:35.015507      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:36.015559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:44:36.504
  Jun 18 09:44:36.507: INFO: Trying to get logs from node ck-129-worker-1 pod downwardapi-volume-ca9d549d-3c1e-46de-9e30-be7c8393173d container client-container: <nil>
  STEP: delete the pod @ 06/18/24 09:44:36.533
  Jun 18 09:44:36.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7837" for this suite. @ 06/18/24 09:44:36.551
• [2.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/18/24 09:44:36.558
  Jun 18 09:44:36.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 09:44:36.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:44:36.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:44:36.577
  STEP: creating the pod with failed condition @ 06/18/24 09:44:36.581
  E0618 09:44:37.015635      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:38.016053      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:39.016240      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:40.017305      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:41.018316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:42.018702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:43.019407      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:44.019425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:45.020288      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:46.020660      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:47.021414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:48.022353      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:49.023308      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:50.024004      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:51.024441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:52.024736      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:53.025435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:54.025710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:55.026384      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:56.026717      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:57.027776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:58.028082      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:44:59.028289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:00.029038      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:01.029499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:02.030087      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:03.031158      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:04.031765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:05.032089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:06.032505      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:07.033262      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:08.034373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:09.035284      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:10.035663      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:11.036288      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:12.036697      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:13.036994      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:14.037482      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:15.038586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:16.038985      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:17.039909      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:18.040701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:19.040823      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:20.041257      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:21.042313      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:22.042775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:23.043476      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:24.043906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:25.044137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:26.044806      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:27.045359      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:28.046287      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:29.047370      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:30.047705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:31.048890      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:32.049302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:33.050100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:34.050413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:35.051894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:36.052287      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:37.052736      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:38.053100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:39.053248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:40.053632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:41.054269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:42.055224      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:43.055281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:44.055592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:45.055836      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:46.056215      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:47.057293      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:48.058088      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:49.058379      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:50.059031      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:51.059082      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:52.059558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:53.060455      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:54.060860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:55.061709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:56.062018      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:57.062281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:58.062393      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:45:59.063336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:00.063527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:01.064488      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:02.064694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:03.064895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:04.065030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:05.066116      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:06.066721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:07.067397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:08.067544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:09.068636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:10.069167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:11.069626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:12.070167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:13.070279      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:14.070668      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:15.070876      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:16.071592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:17.071771      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:18.072439      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:19.073549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:20.073664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:21.074869      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:22.075066      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:23.075911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:24.076314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:25.076373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:26.076593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:27.077597      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:28.079737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:29.079361      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:30.079412      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:31.079922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:32.080281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:33.080369      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:34.081571      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:35.082102      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:36.082480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 06/18/24 09:46:36.59
  E0618 09:46:37.082854      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:46:37.105: INFO: Successfully updated pod "var-expansion-494c79cd-78c8-42a0-b026-36134d30f464"
  STEP: waiting for pod running @ 06/18/24 09:46:37.105
  E0618 09:46:38.082932      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:39.083346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/18/24 09:46:39.115
  Jun 18 09:46:39.115: INFO: Deleting pod "var-expansion-494c79cd-78c8-42a0-b026-36134d30f464" in namespace "var-expansion-9705"
  Jun 18 09:46:39.122: INFO: Wait up to 5m0s for pod "var-expansion-494c79cd-78c8-42a0-b026-36134d30f464" to be fully deleted
  E0618 09:46:40.083602      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:41.083929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:42.084214      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:43.084682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:44.084768      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:45.085253      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:46.085387      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:47.086239      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:48.086474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:49.086775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:50.087564      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:51.088231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:52.088477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:53.088647      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:54.088896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:55.089669      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:56.090126      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:57.090829      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:58.091108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:46:59.091274      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:00.091763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:01.092331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:02.092429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:03.093417      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:04.093680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:05.093836      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:06.094260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:07.094969      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:08.095763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:09.095975      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:10.096213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:11.096611      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:47:11.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9705" for this suite. @ 06/18/24 09:47:11.211
• [154.663 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/18/24 09:47:11.221
  Jun 18 09:47:11.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename subpath @ 06/18/24 09:47:11.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:47:11.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:47:11.248
  STEP: Setting up data @ 06/18/24 09:47:11.253
  STEP: Creating pod pod-subpath-test-configmap-gr66 @ 06/18/24 09:47:11.262
  STEP: Creating a pod to test atomic-volume-subpath @ 06/18/24 09:47:11.262
  E0618 09:47:12.096773      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:13.096917      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:14.098002      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:15.098266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:16.098395      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:17.099448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:18.100025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:19.101341      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:20.100603      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:21.101144      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:22.101546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:23.101707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:24.101855      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:25.102090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:26.102544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:27.103433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:28.103839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:29.104397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:30.104654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:31.104861      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:32.105204      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:33.105950      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:34.106473      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:35.106879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:47:35.331
  Jun 18 09:47:35.334: INFO: Trying to get logs from node ck-129-worker-1 pod pod-subpath-test-configmap-gr66 container test-container-subpath-configmap-gr66: <nil>
  STEP: delete the pod @ 06/18/24 09:47:35.365
  STEP: Deleting pod pod-subpath-test-configmap-gr66 @ 06/18/24 09:47:35.38
  Jun 18 09:47:35.380: INFO: Deleting pod "pod-subpath-test-configmap-gr66" in namespace "subpath-9912"
  Jun 18 09:47:35.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9912" for this suite. @ 06/18/24 09:47:35.389
• [24.174 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/18/24 09:47:35.396
  Jun 18 09:47:35.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:47:35.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:47:35.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:47:35.42
  STEP: creating secret secrets-2740/secret-test-8bf6afce-7af5-4984-bb41-88b909ec8100 @ 06/18/24 09:47:35.426
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:47:35.433
  E0618 09:47:36.107247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:37.107375      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:38.108521      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:39.109162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:47:39.456
  Jun 18 09:47:39.461: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-e6f01665-a335-4e06-8f4a-de69e80d9006 container env-test: <nil>
  STEP: delete the pod @ 06/18/24 09:47:39.469
  Jun 18 09:47:39.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2740" for this suite. @ 06/18/24 09:47:39.486
• [4.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/18/24 09:47:39.492
  Jun 18 09:47:39.493: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename gc @ 06/18/24 09:47:39.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:47:39.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:47:39.514
  STEP: create the rc @ 06/18/24 09:47:39.518
  W0618 09:47:39.524858      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0618 09:47:40.110989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:41.111336      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:42.111765      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:43.112531      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:44.113220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/18/24 09:47:44.53
  STEP: wait for all pods to be garbage collected @ 06/18/24 09:47:44.534
  E0618 09:47:45.113709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:46.114790      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:47.115539      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:48.116100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:49.116310      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/18/24 09:47:49.54
  Jun 18 09:47:49.670: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 09:47:49.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7014" for this suite. @ 06/18/24 09:47:49.675
• [10.188 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/18/24 09:47:49.681
  Jun 18 09:47:49.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename statefulset @ 06/18/24 09:47:49.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:47:49.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:47:49.698
  STEP: Creating service test in namespace statefulset-5310 @ 06/18/24 09:47:49.701
  Jun 18 09:47:49.718: INFO: Found 0 stateful pods, waiting for 1
  E0618 09:47:50.116629      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:51.117001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:52.117567      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:53.117977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:54.118607      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:55.119383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:56.119827      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:57.120682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:58.121469      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:47:59.121956      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:47:59.722: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/18/24 09:47:59.731
  W0618 09:47:59.740502      17 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun 18 09:47:59.752: INFO: Found 1 stateful pods, waiting for 2
  E0618 09:48:00.123104      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:01.123626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:02.123905      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:03.124528      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:04.124685      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:05.125750      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:06.126250      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:07.127170      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:08.128289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:09.128683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:09.752: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 18 09:48:09.752: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/18/24 09:48:09.76
  STEP: Delete all of the StatefulSets @ 06/18/24 09:48:09.763
  STEP: Verify that StatefulSets have been deleted @ 06/18/24 09:48:09.77
  Jun 18 09:48:09.773: INFO: Deleting all statefulset in ns statefulset-5310
  Jun 18 09:48:09.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5310" for this suite. @ 06/18/24 09:48:09.79
• [20.121 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/18/24 09:48:09.802
  Jun 18 09:48:09.803: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 09:48:09.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:48:09.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:48:09.831
  STEP: Creating pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815 @ 06/18/24 09:48:09.836
  E0618 09:48:10.129550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:11.130431      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 09:48:11.853
  Jun 18 09:48:11.856: INFO: Initial restart count of pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 is 0
  Jun 18 09:48:11.859: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:12.131206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:13.132371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:13.864: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:14.132530      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:15.133408      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:15.869: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:16.133448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:17.134471      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:17.876: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:18.134646      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:19.134805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:19.883: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:20.134866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:21.135459      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:21.888: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:22.135987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:23.136962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:23.892: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:24.138052      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:25.138999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:25.897: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:26.139710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:27.139836      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:27.901: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:28.140574      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:29.141371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:29.906: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:30.141950      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:31.142377      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:31.910: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:32.143477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:33.144378      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:33.918: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:34.143998      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:35.144976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:35.923: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:36.145981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:37.147005      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:37.928: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:38.147113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:39.147426      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:39.933: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:40.147862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:41.148636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:41.937: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:42.148931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:43.149893      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:43.942: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:44.150040      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:45.151097      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:45.947: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:46.151299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:47.152236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:47.953: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:48.152366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:49.152816      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:49.957: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:50.152914      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:51.153370      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:51.962: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:52.154242      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:53.154950      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:53.967: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:54.155268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:55.155353      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:55.970: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:56.156358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:57.157087      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:57.974: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:48:58.158076      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:48:59.158751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:48:59.980: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:00.159333      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:01.159863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:01.986: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:02.160897      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:03.161602      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:03.992: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:04.162623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:05.162956      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:05.997: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:06.162953      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:07.163497      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:08.002: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:08.164603      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:09.165043      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:10.008: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:10.165763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:11.166080      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:12.013: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:12.167006      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:13.167694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:14.018: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:14.168408      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:15.169388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:16.022: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:16.170513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:17.171361      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:18.030: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:18.172062      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:19.172388      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:20.036: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:20.173144      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:21.173672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:22.042: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:22.173979      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:23.174525      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:24.047: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:24.174648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:25.174963      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:26.052: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:26.175986      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:27.176520      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:28.058: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:28.177219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:29.177708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:30.063: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:30.177714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:31.178111      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:32.068: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:32.178992      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:33.180150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:34.073: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:34.180712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:35.181288      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:36.078: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:36.182391      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:37.183338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:38.082: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:38.184444      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:39.184881      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:40.087: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:40.185376      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:41.185677      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:42.092: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:42.186352      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:43.187285      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:44.096: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:44.187872      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:45.188069      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:46.100: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:46.189000      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:47.189543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:48.105: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:48.189965      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:49.190139      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:50.110: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:50.190585      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:51.190725      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:52.115: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:52.191338      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:53.191755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:54.120: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:54.192866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:55.193358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:56.126: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:56.194307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:57.194273      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:49:58.132: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:49:58.194916      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:49:59.195376      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:00.139: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:00.196113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:01.196123      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:02.144: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:02.196576      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:03.197311      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:04.149: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:04.197924      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:05.198503      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:06.154: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:06.199572      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:07.200409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:08.160: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:08.201330      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:09.201614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:10.167: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:10.202651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:11.203054      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:12.171: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:12.204224      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:13.205084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:14.176: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:14.205609      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:15.205982      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:16.182: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:16.206384      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:17.207007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:18.187: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:18.207216      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:19.208116      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:20.193: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:20.208456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:21.209026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:22.197: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:22.209928      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:23.210755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:24.202: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:24.211409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:25.211803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:26.207: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:26.212039      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:27.212533      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:28.211: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:28.213371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:29.213989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:30.214927      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:30.217: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:31.215415      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:32.215730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:32.222: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:33.216864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:34.219130      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:34.228: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:35.219987      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:36.219875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:36.234: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:37.220420      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:38.221902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:38.240: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:39.222118      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:40.222511      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:40.248: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:41.223535      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:42.224016      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:42.256: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:43.224708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:44.225046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:44.260: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:45.225558      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:46.226474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:46.265: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:47.226448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:48.226731      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:48.271: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:49.226934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:50.227441      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:50.278: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:51.228154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:52.228651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:52.282: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:53.229359      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:54.229589      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:54.288: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:55.229729      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:56.230015      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:56.293: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:57.230318      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:50:58.230447      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:50:58.297: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:50:59.231332      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:00.231544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:00.303: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:01.231650      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:02.232060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:02.309: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:03.232227      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:04.232751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:04.315: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:05.232555      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:06.233038      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:06.320: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:07.233993      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:08.234088      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:08.324: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:09.234586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:10.234961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:10.330: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:11.235223      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:12.235832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:12.334: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:13.236744      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:14.237612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:14.339: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:15.237906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:16.238080      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:16.343: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:17.238472      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:18.238508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:18.347: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:19.238556      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:20.238991      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:20.354: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:21.239929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:22.240111      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:22.359: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:23.241304      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:24.241895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:24.364: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:25.242448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:26.242347      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:26.370: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:27.242417      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:28.242692      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:28.375: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:29.243002      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:30.243403      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:30.380: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:31.243591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:32.244513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:32.384: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:33.244464      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:34.244857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:34.388: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:35.245563      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:36.245898      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:36.393: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:37.246692      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:38.247533      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:38.398: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:39.248098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:40.249382      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:40.403: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:41.249377      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:42.249817      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:42.408: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:43.253670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:44.251299      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:44.415: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:45.253683      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:46.254222      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:46.420: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:47.254479      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:48.256722      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:48.425: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:49.255812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:50.256003      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:50.430: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:51.256958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:52.257276      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:52.434: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:53.257237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:54.257733      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:54.439: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:55.258013      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:56.258327      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:56.444: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:57.259372      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:51:58.269421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:51:58.448: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:51:59.266070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:00.267491      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:00.454: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:52:01.266523      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:02.266760      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:02.458: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:52:03.266803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:04.267866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:04.463: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:52:05.267485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:06.267921      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:06.469: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:52:07.268575      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:08.269499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:08.474: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:52:09.269653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:10.270225      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:10.480: INFO: Get pod busybox-c1be43fc-0348-4382-8d75-fc92eaac2fa1 in namespace container-probe-815
  E0618 09:52:11.271240      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:12.271363      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/18/24 09:52:12.482
  Jun 18 09:52:12.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-815" for this suite. @ 06/18/24 09:52:12.503
• [242.706 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/18/24 09:52:12.509
  Jun 18 09:52:12.509: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename conformance-tests @ 06/18/24 09:52:12.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:12.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:12.53
  STEP: Getting node addresses @ 06/18/24 09:52:12.538
  Jun 18 09:52:12.538: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun 18 09:52:12.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4699" for this suite. @ 06/18/24 09:52:12.551
• [0.048 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/18/24 09:52:12.558
  Jun 18 09:52:12.558: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename events @ 06/18/24 09:52:12.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:12.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:12.576
  STEP: Create set of events @ 06/18/24 09:52:12.579
  Jun 18 09:52:12.583: INFO: created test-event-1
  Jun 18 09:52:12.587: INFO: created test-event-2
  Jun 18 09:52:12.590: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/18/24 09:52:12.59
  STEP: delete collection of events @ 06/18/24 09:52:12.593
  Jun 18 09:52:12.593: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/18/24 09:52:12.605
  Jun 18 09:52:12.605: INFO: requesting list of events to confirm quantity
  Jun 18 09:52:12.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8838" for this suite. @ 06/18/24 09:52:12.613
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/18/24 09:52:12.62
  Jun 18 09:52:12.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:52:12.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:12.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:12.639
  STEP: Creating configMap with name projected-configmap-test-volume-map-3c1fbc02-1da9-4a81-b67d-058a38f6f216 @ 06/18/24 09:52:12.642
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:52:12.647
  E0618 09:52:13.272411      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:14.273085      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:52:14.661
  Jun 18 09:52:14.663: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-configmaps-a07b990d-2aca-4659-86d9-bb90d129d0b2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:52:14.682
  Jun 18 09:52:14.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6993" for this suite. @ 06/18/24 09:52:14.7
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/18/24 09:52:14.709
  Jun 18 09:52:14.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename svcaccounts @ 06/18/24 09:52:14.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:14.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:14.727
  Jun 18 09:52:14.732: INFO: Got root ca configmap in namespace "svcaccounts-3876"
  Jun 18 09:52:14.736: INFO: Deleted root ca configmap in namespace "svcaccounts-3876"
  STEP: waiting for a new root ca configmap created @ 06/18/24 09:52:15.239
  Jun 18 09:52:15.250: INFO: Recreated root ca configmap in namespace "svcaccounts-3876"
  Jun 18 09:52:15.260: INFO: Updated root ca configmap in namespace "svcaccounts-3876"
  E0618 09:52:15.273570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 06/18/24 09:52:15.76
  Jun 18 09:52:15.765: INFO: Reconciled root ca configmap in namespace "svcaccounts-3876"
  Jun 18 09:52:15.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3876" for this suite. @ 06/18/24 09:52:15.772
• [1.068 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/18/24 09:52:15.778
  Jun 18 09:52:15.778: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename limitrange @ 06/18/24 09:52:15.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:15.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:15.794
  STEP: Creating a LimitRange @ 06/18/24 09:52:15.798
  STEP: Setting up watch @ 06/18/24 09:52:15.798
  STEP: Submitting a LimitRange @ 06/18/24 09:52:15.9
  STEP: Verifying LimitRange creation was observed @ 06/18/24 09:52:15.907
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/18/24 09:52:15.907
  Jun 18 09:52:15.909: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 18 09:52:15.910: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/18/24 09:52:15.91
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/18/24 09:52:15.916
  Jun 18 09:52:15.920: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 18 09:52:15.920: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/18/24 09:52:15.92
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/18/24 09:52:15.925
  Jun 18 09:52:15.929: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun 18 09:52:15.929: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/18/24 09:52:15.93
  STEP: Failing to create a Pod with more than max resources @ 06/18/24 09:52:15.932
  STEP: Updating a LimitRange @ 06/18/24 09:52:15.934
  STEP: Verifying LimitRange updating is effective @ 06/18/24 09:52:15.939
  E0618 09:52:16.274645      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:17.275535      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 06/18/24 09:52:17.945
  STEP: Failing to create a Pod with more than max resources @ 06/18/24 09:52:17.953
  STEP: Deleting a LimitRange @ 06/18/24 09:52:17.956
  STEP: Verifying the LimitRange was deleted @ 06/18/24 09:52:17.966
  E0618 09:52:18.275659      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:19.275977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:20.276427      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:21.276786      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:22.277042      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:22.970: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/18/24 09:52:22.97
  Jun 18 09:52:22.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5151" for this suite. @ 06/18/24 09:52:22.984
• [7.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/18/24 09:52:22.995
  Jun 18 09:52:22.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:52:22.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:23.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:23.015
  STEP: Creating configMap with name projected-configmap-test-volume-map-a0a3df27-1875-4423-97bf-159b9f53e43f @ 06/18/24 09:52:23.019
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:52:23.023
  E0618 09:52:23.277278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:24.277939      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:52:25.039
  Jun 18 09:52:25.042: INFO: Trying to get logs from node ck-129-worker-2 pod pod-projected-configmaps-64ef63e8-c74c-438e-8670-700b7ad0ac63 container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:52:25.063
  Jun 18 09:52:25.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1320" for this suite. @ 06/18/24 09:52:25.078
• [2.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/18/24 09:52:25.083
  Jun 18 09:52:25.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename job @ 06/18/24 09:52:25.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:25.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:25.1
  STEP: Creating a job @ 06/18/24 09:52:25.103
  STEP: Ensuring job reaches completions @ 06/18/24 09:52:25.111
  E0618 09:52:25.278021      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:26.278477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:27.278456      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:28.279118      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:29.279424      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:30.279775      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:31.280746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:32.281296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:33.281485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:34.281800      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:35.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7135" for this suite. @ 06/18/24 09:52:35.12
• [10.042 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/18/24 09:52:35.125
  Jun 18 09:52:35.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 09:52:35.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:35.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:35.144
  STEP: Creating configMap with name projected-configmap-test-volume-71416af5-482a-4574-b782-181e971d7493 @ 06/18/24 09:52:35.148
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:52:35.151
  E0618 09:52:35.281887      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:36.282895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:37.283797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:38.284457      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:52:39.171
  Jun 18 09:52:39.174: INFO: Trying to get logs from node ck-129-worker-1 pod pod-projected-configmaps-89749870-6b5e-4cd1-b3d8-328ef8a83b1c container agnhost-container: <nil>
  STEP: delete the pod @ 06/18/24 09:52:39.182
  Jun 18 09:52:39.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5999" for this suite. @ 06/18/24 09:52:39.199
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/18/24 09:52:39.205
  Jun 18 09:52:39.206: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:52:39.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:39.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:39.227
  STEP: Setting up server cert @ 06/18/24 09:52:39.248
  E0618 09:52:39.284764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:52:39.669
  STEP: Deploying the webhook pod @ 06/18/24 09:52:39.677
  STEP: Wait for the deployment to be ready @ 06/18/24 09:52:39.689
  Jun 18 09:52:39.695: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0618 09:52:40.285422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:41.285797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:52:41.707
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:52:41.721
  E0618 09:52:42.286075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:42.721: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/18/24 09:52:42.728
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/18/24 09:52:42.749
  STEP: Creating a dummy validating-webhook-configuration object @ 06/18/24 09:52:42.765
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/18/24 09:52:42.775
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/18/24 09:52:42.781
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/18/24 09:52:42.79
  Jun 18 09:52:42.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9907" for this suite. @ 06/18/24 09:52:42.84
  STEP: Destroying namespace "webhook-markers-5839" for this suite. @ 06/18/24 09:52:42.845
• [3.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/18/24 09:52:42.85
  Jun 18 09:52:42.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename secrets @ 06/18/24 09:52:42.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:42.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:42.865
  STEP: Creating secret with name secret-test-map-8fefa5ae-b8c8-44d3-92e2-7c55112fd426 @ 06/18/24 09:52:42.868
  STEP: Creating a pod to test consume secrets @ 06/18/24 09:52:42.872
  E0618 09:52:43.286850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:44.287745      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:45.288366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:46.288997      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:52:46.896
  Jun 18 09:52:46.901: INFO: Trying to get logs from node ck-129-worker-1 pod pod-secrets-f0ac21c8-766b-4ea9-8a82-6355a887d170 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:52:46.91
  Jun 18 09:52:46.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1525" for this suite. @ 06/18/24 09:52:46.93
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/18/24 09:52:46.937
  Jun 18 09:52:46.937: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:52:46.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:46.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:46.958
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/18/24 09:52:46.963
  E0618 09:52:47.289657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:48.290511      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:49.290579      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:50.291286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:52:50.985
  Jun 18 09:52:50.989: INFO: Trying to get logs from node ck-129-worker-1 pod pod-f3edb908-4f2a-4391-8253-a663a2a5257f container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:52:51
  Jun 18 09:52:51.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2029" for this suite. @ 06/18/24 09:52:51.022
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/18/24 09:52:51.03
  Jun 18 09:52:51.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 09:52:51.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:52:51.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:52:51.052
  STEP: Creating a test headless service @ 06/18/24 09:52:51.056
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6939 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6939;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6939 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6939;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6939.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6939.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6939.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6939.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6939.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6939.svc;check="$$(dig +notcp +noall +answer +search 116.153.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.153.116_udp@PTR;check="$$(dig +tcp +noall +answer +search 116.153.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.153.116_tcp@PTR;sleep 1; done
   @ 06/18/24 09:52:51.074
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6939 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6939;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6939 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6939;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6939.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6939.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6939.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6939.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6939.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6939.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6939.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6939.svc;check="$$(dig +notcp +noall +answer +search 116.153.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.153.116_udp@PTR;check="$$(dig +tcp +noall +answer +search 116.153.98.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.98.153.116_tcp@PTR;sleep 1; done
   @ 06/18/24 09:52:51.074
  STEP: creating a pod to probe DNS @ 06/18/24 09:52:51.074
  STEP: submitting the pod to kubernetes @ 06/18/24 09:52:51.074
  E0618 09:52:51.291541      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:52.292108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 09:52:53.093
  STEP: looking for the results for each expected name from probers @ 06/18/24 09:52:53.097
  Jun 18 09:52:53.102: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.105: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.109: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.113: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.115: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.118: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.121: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.124: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.137: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.140: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.143: INFO: Unable to read jessie_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.145: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.148: INFO: Unable to read jessie_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.150: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.152: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.156: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:53.167: INFO: Lookups using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6939 wheezy_tcp@dns-test-service.dns-6939 wheezy_udp@dns-test-service.dns-6939.svc wheezy_tcp@dns-test-service.dns-6939.svc wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6939 jessie_tcp@dns-test-service.dns-6939 jessie_udp@dns-test-service.dns-6939.svc jessie_tcp@dns-test-service.dns-6939.svc jessie_udp@_http._tcp.dns-test-service.dns-6939.svc jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc]

  Jun 18 09:52:53.172: INFO: Pod client logs for webserver: 
  Jun 18 09:52:53.177: INFO: Pod client logs for querier: 
  Jun 18 09:52:53.182: INFO: Pod client logs for jessie-querier: 
  E0618 09:52:53.292855      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:54.293086      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:55.293843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:56.294210      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:57.295150      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:52:58.102: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.106: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.110: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.114: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.118: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.123: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.127: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.130: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.144: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.147: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.150: INFO: Unable to read jessie_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.153: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.156: INFO: Unable to read jessie_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.158: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.163: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.166: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:52:58.180: INFO: Lookups using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6939 wheezy_tcp@dns-test-service.dns-6939 wheezy_udp@dns-test-service.dns-6939.svc wheezy_tcp@dns-test-service.dns-6939.svc wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6939 jessie_tcp@dns-test-service.dns-6939 jessie_udp@dns-test-service.dns-6939.svc jessie_tcp@dns-test-service.dns-6939.svc jessie_udp@_http._tcp.dns-test-service.dns-6939.svc jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc]

  Jun 18 09:52:58.188: INFO: Pod client logs for webserver: 
  Jun 18 09:52:58.195: INFO: Pod client logs for querier: 
  Jun 18 09:52:58.202: INFO: Pod client logs for jessie-querier: 
  E0618 09:52:58.295642      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:52:59.295996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:00.296324      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:01.296450      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:02.296850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:03.102: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.106: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.112: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.117: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.122: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.128: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.132: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.135: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.151: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.154: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.158: INFO: Unable to read jessie_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.161: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.164: INFO: Unable to read jessie_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.167: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.171: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.174: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:03.185: INFO: Lookups using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6939 wheezy_tcp@dns-test-service.dns-6939 wheezy_udp@dns-test-service.dns-6939.svc wheezy_tcp@dns-test-service.dns-6939.svc wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6939 jessie_tcp@dns-test-service.dns-6939 jessie_udp@dns-test-service.dns-6939.svc jessie_tcp@dns-test-service.dns-6939.svc jessie_udp@_http._tcp.dns-test-service.dns-6939.svc jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc]

  Jun 18 09:53:03.191: INFO: Pod client logs for webserver: 
  Jun 18 09:53:03.197: INFO: Pod client logs for querier: 
  Jun 18 09:53:03.201: INFO: Pod client logs for jessie-querier: 
  E0618 09:53:03.297146      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:04.297544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:05.297550      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:06.297943      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:07.298502      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:08.103: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.108: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.112: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.116: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.120: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.125: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.129: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.133: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.151: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.154: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.158: INFO: Unable to read jessie_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.161: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.165: INFO: Unable to read jessie_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.169: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.178: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.182: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:08.196: INFO: Lookups using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6939 wheezy_tcp@dns-test-service.dns-6939 wheezy_udp@dns-test-service.dns-6939.svc wheezy_tcp@dns-test-service.dns-6939.svc wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6939 jessie_tcp@dns-test-service.dns-6939 jessie_udp@dns-test-service.dns-6939.svc jessie_tcp@dns-test-service.dns-6939.svc jessie_udp@_http._tcp.dns-test-service.dns-6939.svc jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc]

  Jun 18 09:53:08.202: INFO: Pod client logs for webserver: 
  Jun 18 09:53:08.208: INFO: Pod client logs for querier: 
  Jun 18 09:53:08.217: INFO: Pod client logs for jessie-querier: 
  E0618 09:53:08.299248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:09.299579      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:10.300240      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:11.300713      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:12.301065      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:13.102: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.106: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.110: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.114: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.118: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.124: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.127: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.131: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.148: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.152: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.156: INFO: Unable to read jessie_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.159: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.166: INFO: Unable to read jessie_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.169: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.172: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.176: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:13.190: INFO: Lookups using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6939 wheezy_tcp@dns-test-service.dns-6939 wheezy_udp@dns-test-service.dns-6939.svc wheezy_tcp@dns-test-service.dns-6939.svc wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6939 jessie_tcp@dns-test-service.dns-6939 jessie_udp@dns-test-service.dns-6939.svc jessie_tcp@dns-test-service.dns-6939.svc jessie_udp@_http._tcp.dns-test-service.dns-6939.svc jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc]

  Jun 18 09:53:13.196: INFO: Pod client logs for webserver: 
  Jun 18 09:53:13.201: INFO: Pod client logs for querier: 
  Jun 18 09:53:13.207: INFO: Pod client logs for jessie-querier: 
  E0618 09:53:13.301695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:14.302158      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:15.302557      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:16.302906      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:17.303230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:18.102: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.107: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.110: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.113: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.116: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.119: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.121: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.125: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.146: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.151: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.155: INFO: Unable to read jessie_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.159: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.163: INFO: Unable to read jessie_udp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.166: INFO: Unable to read jessie_tcp@dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.170: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.174: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:18.195: INFO: Lookups using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6939 wheezy_tcp@dns-test-service.dns-6939 wheezy_udp@dns-test-service.dns-6939.svc wheezy_tcp@dns-test-service.dns-6939.svc wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6939 jessie_tcp@dns-test-service.dns-6939 jessie_udp@dns-test-service.dns-6939.svc jessie_tcp@dns-test-service.dns-6939.svc jessie_udp@_http._tcp.dns-test-service.dns-6939.svc jessie_tcp@_http._tcp.dns-test-service.dns-6939.svc]

  Jun 18 09:53:18.202: INFO: Pod client logs for webserver: 
  Jun 18 09:53:18.209: INFO: Pod client logs for querier: 
  Jun 18 09:53:18.221: INFO: Pod client logs for jessie-querier: 
  E0618 09:53:18.303754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:19.303728      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:20.303977      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:21.304639      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:22.304879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:23.104: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:23.107: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:23.111: INFO: Unable to read wheezy_udp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:23.115: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6939 from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:23.127: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:23.130: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc from pod dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450: the server could not find the requested resource (get pods dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450)
  Jun 18 09:53:23.187: INFO: Lookups using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6939 wheezy_tcp@dns-test-service.dns-6939 wheezy_udp@_http._tcp.dns-test-service.dns-6939.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6939.svc]

  Jun 18 09:53:23.195: INFO: Pod client logs for webserver: 
  Jun 18 09:53:23.200: INFO: Pod client logs for querier: 
  Jun 18 09:53:23.206: INFO: Pod client logs for jessie-querier: 
  E0618 09:53:23.305231      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:24.305506      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:25.306012      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:26.306424      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:27.307423      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:28.191: INFO: DNS probes using dns-6939/dns-test-16ef0ccb-10f2-44b1-ac95-dd93aba7e450 succeeded

  STEP: deleting the pod @ 06/18/24 09:53:28.192
  STEP: deleting the test service @ 06/18/24 09:53:28.221
  STEP: deleting the test headless service @ 06/18/24 09:53:28.287
  Jun 18 09:53:28.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6939" for this suite. @ 06/18/24 09:53:28.306
  E0618 09:53:28.307465      17 retrywatcher.go:129] "Watch failed" err="context canceled"
• [37.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/18/24 09:53:28.316
  Jun 18 09:53:28.317: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:53:28.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:28.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:28.338
  STEP: creating service in namespace services-1212 @ 06/18/24 09:53:28.343
  STEP: creating service affinity-nodeport in namespace services-1212 @ 06/18/24 09:53:28.343
  STEP: creating replication controller affinity-nodeport in namespace services-1212 @ 06/18/24 09:53:28.358
  I0618 09:53:28.365817      17 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1212, replica count: 3
  E0618 09:53:29.307896      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:30.308553      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:31.309606      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 09:53:31.417357      17 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 09:53:31.429: INFO: Creating new exec pod
  E0618 09:53:32.310309      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:33.311247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:34.311623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:34.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-1212 exec execpod-affinity982m7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun 18 09:53:34.583: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun 18 09:53:34.583: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:53:34.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-1212 exec execpod-affinity982m7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.141.237 80'
  Jun 18 09:53:34.699: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.141.237 80\nConnection to 10.111.141.237 80 port [tcp/http] succeeded!\n"
  Jun 18 09:53:34.699: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:53:34.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-1212 exec execpod-affinity982m7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 30316'
  Jun 18 09:53:34.822: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 30316\nConnection to 192.168.190.169 30316 port [tcp/*] succeeded!\n"
  Jun 18 09:53:34.823: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:53:34.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-1212 exec execpod-affinity982m7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 30316'
  Jun 18 09:53:34.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 30316\nConnection to 192.168.190.167 30316 port [tcp/*] succeeded!\n"
  Jun 18 09:53:34.961: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 18 09:53:34.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-1212 exec execpod-affinity982m7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:30316/ ; done'
  Jun 18 09:53:35.162: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30316/\n"
  Jun 18 09:53:35.162: INFO: stdout: "\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl\naffinity-nodeport-2t4hl"
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Received response from host: affinity-nodeport-2t4hl
  Jun 18 09:53:35.162: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1212, will wait for the garbage collector to delete the pods @ 06/18/24 09:53:35.173
  Jun 18 09:53:35.233: INFO: Deleting ReplicationController affinity-nodeport took: 6.311633ms
  E0618 09:53:35.312747      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:35.335: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.240453ms
  E0618 09:53:36.313551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:37.314137      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:38.315570      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:38.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1212" for this suite. @ 06/18/24 09:53:38.771
• [10.462 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/18/24 09:53:38.779
  Jun 18 09:53:38.779: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:53:38.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:38.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:38.801
  STEP: Counting existing ResourceQuota @ 06/18/24 09:53:38.806
  E0618 09:53:39.316405      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:40.316523      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:41.316958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:42.317132      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:43.317254      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/18/24 09:53:43.809
  STEP: Ensuring resource quota status is calculated @ 06/18/24 09:53:43.815
  E0618 09:53:44.318307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:45.318232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 06/18/24 09:53:45.819
  STEP: Ensuring resource quota status captures replicaset creation @ 06/18/24 09:53:45.83
  E0618 09:53:46.318653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:47.318990      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 06/18/24 09:53:47.834
  STEP: Ensuring resource quota status released usage @ 06/18/24 09:53:47.839
  E0618 09:53:48.319573      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:49.319989      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:49.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1204" for this suite. @ 06/18/24 09:53:49.855
• [11.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/18/24 09:53:49.866
  Jun 18 09:53:49.866: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename field-validation @ 06/18/24 09:53:49.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:49.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:49.888
  Jun 18 09:53:49.892: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:53:50.320791      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:51.320938      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:52.321481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:53.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8197" for this suite. @ 06/18/24 09:53:53.013
• [3.155 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/18/24 09:53:53.021
  Jun 18 09:53:53.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename resourcequota @ 06/18/24 09:53:53.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:53.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:53.044
  STEP: Creating a ResourceQuota @ 06/18/24 09:53:53.048
  STEP: Getting a ResourceQuota @ 06/18/24 09:53:53.052
  STEP: Updating a ResourceQuota @ 06/18/24 09:53:53.055
  STEP: Verifying a ResourceQuota was modified @ 06/18/24 09:53:53.061
  STEP: Deleting a ResourceQuota @ 06/18/24 09:53:53.064
  STEP: Verifying the deleted ResourceQuota @ 06/18/24 09:53:53.071
  Jun 18 09:53:53.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3040" for this suite. @ 06/18/24 09:53:53.079
• [0.064 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/18/24 09:53:53.085
  Jun 18 09:53:53.085: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 09:53:53.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:53.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:53.108
  E0618 09:53:53.322518      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:54.323302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:55.324510      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:56.325032      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:57.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-245" for this suite. @ 06/18/24 09:53:57.14
• [4.060 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/18/24 09:53:57.145
  Jun 18 09:53:57.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename namespaces @ 06/18/24 09:53:57.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:57.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:57.16
  STEP: Updating Namespace "namespaces-9734" @ 06/18/24 09:53:57.165
  Jun 18 09:53:57.172: INFO: Namespace "namespaces-9734" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"c48b9130-3e60-4593-94b6-a4fc8e3735c8", "kubernetes.io/metadata.name":"namespaces-9734", "namespaces-9734":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun 18 09:53:57.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9734" for this suite. @ 06/18/24 09:53:57.178
• [0.038 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/18/24 09:53:57.184
  Jun 18 09:53:57.185: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename pods @ 06/18/24 09:53:57.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:57.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:57.205
  STEP: creating the pod @ 06/18/24 09:53:57.208
  STEP: submitting the pod to kubernetes @ 06/18/24 09:53:57.209
  E0618 09:53:57.325695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:53:58.326525      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/18/24 09:53:59.234
  STEP: updating the pod @ 06/18/24 09:53:59.237
  E0618 09:53:59.327142      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:53:59.753: INFO: Successfully updated pod "pod-update-7cf226af-5406-4938-bdb2-060f7b47184a"
  STEP: verifying the updated pod is in kubernetes @ 06/18/24 09:53:59.758
  Jun 18 09:53:59.762: INFO: Pod update OK
  Jun 18 09:53:59.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7879" for this suite. @ 06/18/24 09:53:59.769
• [2.592 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/18/24 09:53:59.778
  Jun 18 09:53:59.778: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 09:53:59.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:53:59.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:53:59.796
  Jun 18 09:53:59.811: INFO: Waiting up to 1m0s for all nodes to be ready
  E0618 09:54:00.327667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:01.328316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:02.328421      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:03.328694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:04.329737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:05.329875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:06.330675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:07.331737      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:08.332542      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:09.333029      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:10.333154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:11.333576      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:12.334574      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:13.334770      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:14.334891      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:15.335258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:16.335937      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:17.336106      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:18.337146      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:19.337524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:20.337714      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:21.338218      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:22.338317      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:23.338995      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:24.339973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:25.340463      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:26.340534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:27.341319      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:28.341440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:29.341805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:30.342557      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:31.342937      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:32.343425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:33.344016      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:34.344458      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:35.344843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:36.345331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:37.345929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:38.346995      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:39.347364      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:40.348356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:41.348736      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:42.349050      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:43.349661      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:44.350680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:45.351045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:46.351117      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:47.351626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:48.352109      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:49.352349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:50.352535      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:51.352666      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:52.352973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:53.353604      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:54.354608      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:55.355011      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:56.355167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:57.355807      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:58.356419      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:54:59.356864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:54:59.819: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/18/24 09:54:59.823
  Jun 18 09:54:59.823: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/18/24 09:54:59.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:54:59.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:54:59.842
  STEP: Finding an available node @ 06/18/24 09:54:59.846
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/18/24 09:54:59.846
  E0618 09:55:00.357750      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:01.358214      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/18/24 09:55:01.864
  Jun 18 09:55:01.873: INFO: found a healthy node: ck-129-worker-1
  E0618 09:55:02.358884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:03.359778      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:04.360432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:05.360672      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:06.361508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:07.361648      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:07.931: INFO: pods created so far: [1 1 1]
  Jun 18 09:55:07.931: INFO: length of pods created so far: 3
  E0618 09:55:08.362086      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:09.362852      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:09.942: INFO: pods created so far: [2 2 1]
  E0618 09:55:10.362905      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:11.363761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:12.363400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:13.364143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:14.364562      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:15.365145      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:16.365964      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:17.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4445" for this suite. @ 06/18/24 09:55:17.019
  Jun 18 09:55:17.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3782" for this suite. @ 06/18/24 09:55:17.031
• [77.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/18/24 09:55:17.039
  Jun 18 09:55:17.040: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-runtime @ 06/18/24 09:55:17.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:55:17.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:55:17.063
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/18/24 09:55:17.078
  E0618 09:55:17.366719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:18.367001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:19.367637      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:20.368471      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:21.368681      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:22.369727      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:23.370055      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:24.370704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:25.370894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:26.371875      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:27.371900      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:28.372972      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:29.373324      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:30.373948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:31.374598      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:32.375608      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:33.376702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:34.377609      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/18/24 09:55:35.169
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/18/24 09:55:35.173
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/18/24 09:55:35.178
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/18/24 09:55:35.179
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/18/24 09:55:35.2
  E0618 09:55:35.377951      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:36.379045      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/18/24 09:55:37.217
  E0618 09:55:37.379676      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:38.380520      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/18/24 09:55:39.237
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/18/24 09:55:39.247
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/18/24 09:55:39.247
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/18/24 09:55:39.266
  E0618 09:55:39.380966      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/18/24 09:55:40.274
  E0618 09:55:40.381100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:41.381937      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/18/24 09:55:42.287
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/18/24 09:55:42.294
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/18/24 09:55:42.295
  Jun 18 09:55:42.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6176" for this suite. @ 06/18/24 09:55:42.321
• [25.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/18/24 09:55:42.33
  Jun 18 09:55:42.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename podtemplate @ 06/18/24 09:55:42.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:55:42.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:55:42.354
  E0618 09:55:42.382157      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:42.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6964" for this suite. @ 06/18/24 09:55:42.389
• [0.063 seconds]
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/18/24 09:55:42.394
  Jun 18 09:55:42.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 09:55:42.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:55:42.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:55:42.41
  Jun 18 09:55:42.413: INFO: Creating ReplicaSet my-hostname-basic-606d14ae-4396-4264-99cc-65b328861fa7
  Jun 18 09:55:42.424: INFO: Pod name my-hostname-basic-606d14ae-4396-4264-99cc-65b328861fa7: Found 0 pods out of 1
  E0618 09:55:43.382433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:44.382900      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:45.383443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:46.383504      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:47.384488      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:47.430: INFO: Pod name my-hostname-basic-606d14ae-4396-4264-99cc-65b328861fa7: Found 1 pods out of 1
  Jun 18 09:55:47.430: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-606d14ae-4396-4264-99cc-65b328861fa7" is running
  Jun 18 09:55:47.434: INFO: Pod "my-hostname-basic-606d14ae-4396-4264-99cc-65b328861fa7-pldbv" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:55:43 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:55:42 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:55:43 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:55:43 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:55:42 +0000 UTC Reason: Message:}])
  Jun 18 09:55:47.434: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/18/24 09:55:47.434
  Jun 18 09:55:47.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5232" for this suite. @ 06/18/24 09:55:47.453
• [5.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/18/24 09:55:47.461
  Jun 18 09:55:47.465: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:55:47.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:55:47.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:55:47.482
  STEP: Setting up server cert @ 06/18/24 09:55:47.504
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:55:47.877
  STEP: Deploying the webhook pod @ 06/18/24 09:55:47.885
  STEP: Wait for the deployment to be ready @ 06/18/24 09:55:47.895
  Jun 18 09:55:47.902: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 09:55:48.385501      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:49.386064      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:55:49.915
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:55:49.927
  E0618 09:55:50.386232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:50.928: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/18/24 09:55:50.936
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/18/24 09:55:50.961
  STEP: Creating a configMap that should not be mutated @ 06/18/24 09:55:50.968
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/18/24 09:55:50.981
  STEP: Creating a configMap that should be mutated @ 06/18/24 09:55:50.988
  Jun 18 09:55:51.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9122" for this suite. @ 06/18/24 09:55:51.074
  STEP: Destroying namespace "webhook-markers-4862" for this suite. @ 06/18/24 09:55:51.082
• [3.625 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/18/24 09:55:51.088
  Jun 18 09:55:51.088: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename crd-webhook @ 06/18/24 09:55:51.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:55:51.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:55:51.109
  STEP: Setting up server cert @ 06/18/24 09:55:51.114
  E0618 09:55:51.386990      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/18/24 09:55:51.888
  STEP: Deploying the custom resource conversion webhook pod @ 06/18/24 09:55:51.894
  STEP: Wait for the deployment to be ready @ 06/18/24 09:55:51.906
  Jun 18 09:55:51.915: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0618 09:55:52.387410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:53.388275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:55:53.925
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:55:53.937
  E0618 09:55:54.388467      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:54.938: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 18 09:55:54.945: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:55:55.389569      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:56.390359      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:55:57.391008      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/18/24 09:55:57.515
  STEP: v2 custom resource should be converted @ 06/18/24 09:55:57.519
  Jun 18 09:55:58.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5567" for this suite. @ 06/18/24 09:55:58.071
• [6.990 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/18/24 09:55:58.078
  Jun 18 09:55:58.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:55:58.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:55:58.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:55:58.093
  STEP: creating a replication controller @ 06/18/24 09:55:58.097
  Jun 18 09:55:58.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 create -f -'
  Jun 18 09:55:58.263: INFO: stderr: ""
  Jun 18 09:55:58.263: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/18/24 09:55:58.263
  Jun 18 09:55:58.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 09:55:58.371: INFO: stderr: ""
  Jun 18 09:55:58.371: INFO: stdout: "update-demo-nautilus-9x8lx update-demo-nautilus-kh5k5 "
  Jun 18 09:55:58.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods update-demo-nautilus-9x8lx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0618 09:55:58.391115      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:55:58.459: INFO: stderr: ""
  Jun 18 09:55:58.459: INFO: stdout: ""
  Jun 18 09:55:58.459: INFO: update-demo-nautilus-9x8lx is created but not running
  E0618 09:55:59.392095      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:00.392515      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:01.393166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:02.393674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:03.393702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:03.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 18 09:56:03.543: INFO: stderr: ""
  Jun 18 09:56:03.544: INFO: stdout: "update-demo-nautilus-9x8lx update-demo-nautilus-kh5k5 "
  Jun 18 09:56:03.544: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods update-demo-nautilus-9x8lx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 09:56:03.623: INFO: stderr: ""
  Jun 18 09:56:03.623: INFO: stdout: "true"
  Jun 18 09:56:03.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods update-demo-nautilus-9x8lx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 09:56:03.698: INFO: stderr: ""
  Jun 18 09:56:03.698: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 09:56:03.698: INFO: validating pod update-demo-nautilus-9x8lx
  Jun 18 09:56:03.705: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 09:56:03.705: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 09:56:03.705: INFO: update-demo-nautilus-9x8lx is verified up and running
  Jun 18 09:56:03.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods update-demo-nautilus-kh5k5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 18 09:56:03.783: INFO: stderr: ""
  Jun 18 09:56:03.783: INFO: stdout: "true"
  Jun 18 09:56:03.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods update-demo-nautilus-kh5k5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 18 09:56:03.863: INFO: stderr: ""
  Jun 18 09:56:03.863: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 18 09:56:03.864: INFO: validating pod update-demo-nautilus-kh5k5
  Jun 18 09:56:03.869: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 18 09:56:03.869: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 18 09:56:03.869: INFO: update-demo-nautilus-kh5k5 is verified up and running
  STEP: using delete to clean up resources @ 06/18/24 09:56:03.869
  Jun 18 09:56:03.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 delete --grace-period=0 --force -f -'
  Jun 18 09:56:03.946: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 18 09:56:03.946: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 18 09:56:03.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get rc,svc -l name=update-demo --no-headers'
  Jun 18 09:56:04.044: INFO: stderr: "No resources found in kubectl-1692 namespace.\n"
  Jun 18 09:56:04.044: INFO: stdout: ""
  Jun 18 09:56:04.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-1692 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 18 09:56:04.146: INFO: stderr: ""
  Jun 18 09:56:04.146: INFO: stdout: ""
  Jun 18 09:56:04.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1692" for this suite. @ 06/18/24 09:56:04.154
• [6.085 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/18/24 09:56:04.164
  Jun 18 09:56:04.164: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:56:04.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:04.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:04.184
  STEP: create deployment with httpd image @ 06/18/24 09:56:04.188
  Jun 18 09:56:04.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9780 create -f -'
  Jun 18 09:56:04.311: INFO: stderr: ""
  Jun 18 09:56:04.311: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/18/24 09:56:04.311
  Jun 18 09:56:04.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9780 diff -f -'
  E0618 09:56:04.394577      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:04.453: INFO: rc: 1
  Jun 18 09:56:04.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-9780 delete -f -'
  Jun 18 09:56:04.531: INFO: stderr: ""
  Jun 18 09:56:04.531: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun 18 09:56:04.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9780" for this suite. @ 06/18/24 09:56:04.536
• [0.382 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/18/24 09:56:04.548
  Jun 18 09:56:04.548: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename var-expansion @ 06/18/24 09:56:04.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:04.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:04.565
  E0618 09:56:05.395088      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:06.395784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:06.584: INFO: Deleting pod "var-expansion-834d07a0-8df5-43c4-a7e4-304550306169" in namespace "var-expansion-4122"
  Jun 18 09:56:06.590: INFO: Wait up to 5m0s for pod "var-expansion-834d07a0-8df5-43c4-a7e4-304550306169" to be fully deleted
  E0618 09:56:07.397144      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:08.397067      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:08.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4122" for this suite. @ 06/18/24 09:56:08.605
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/18/24 09:56:08.615
  Jun 18 09:56:08.615: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:56:08.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:08.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:08.635
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/18/24 09:56:08.642
  E0618 09:56:09.397804      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:10.398475      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:11.398578      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:12.399139      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:56:12.665
  Jun 18 09:56:12.668: INFO: Trying to get logs from node ck-129-worker-1 pod pod-2655e247-10fb-4bbc-a3cf-b4bf095f12df container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:56:12.685
  Jun 18 09:56:12.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4075" for this suite. @ 06/18/24 09:56:12.706
• [4.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/18/24 09:56:12.713
  Jun 18 09:56:12.713: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 09:56:12.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:12.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:12.734
  E0618 09:56:13.400166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:14.400327      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:15.401288      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:16.404889      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:16.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3175" for this suite. @ 06/18/24 09:56:16.767
• [4.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/18/24 09:56:16.772
  Jun 18 09:56:16.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename security-context-test @ 06/18/24 09:56:16.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:16.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:16.79
  E0618 09:56:17.403892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:18.404413      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:19.404676      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:20.405559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:20.827: INFO: Got logs for pod "busybox-privileged-false-b7c6aa21-f2be-41c1-a5a2-ab1ae3611654": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun 18 09:56:20.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1503" for this suite. @ 06/18/24 09:56:20.836
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/18/24 09:56:20.844
  Jun 18 09:56:20.844: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename gc @ 06/18/24 09:56:20.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:20.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:20.878
  STEP: create the rc @ 06/18/24 09:56:20.888
  W0618 09:56:20.893670      17 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0618 09:56:21.408396      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:22.408895      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:23.410521      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:24.412091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:25.411241      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:26.411584      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/18/24 09:56:26.898
  STEP: wait for the rc to be deleted @ 06/18/24 09:56:26.903
  E0618 09:56:27.412527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:27.963: INFO: 80 pods remaining
  Jun 18 09:56:27.963: INFO: 80 pods has nil DeletionTimestamp
  Jun 18 09:56:27.963: INFO: 
  E0618 09:56:28.413373      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:28.926: INFO: 71 pods remaining
  Jun 18 09:56:28.926: INFO: 70 pods has nil DeletionTimestamp
  Jun 18 09:56:28.926: INFO: 
  E0618 09:56:29.413435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:29.917: INFO: 60 pods remaining
  Jun 18 09:56:29.917: INFO: 60 pods has nil DeletionTimestamp
  Jun 18 09:56:29.917: INFO: 
  E0618 09:56:30.413613      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:30.920: INFO: 40 pods remaining
  Jun 18 09:56:30.920: INFO: 40 pods has nil DeletionTimestamp
  Jun 18 09:56:30.920: INFO: 
  E0618 09:56:31.413934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:31.934: INFO: 31 pods remaining
  Jun 18 09:56:31.934: INFO: 30 pods has nil DeletionTimestamp
  Jun 18 09:56:31.934: INFO: 
  E0618 09:56:32.414136      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:32.913: INFO: 20 pods remaining
  Jun 18 09:56:32.913: INFO: 20 pods has nil DeletionTimestamp
  Jun 18 09:56:32.913: INFO: 
  E0618 09:56:33.416507      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/18/24 09:56:33.91
  Jun 18 09:56:34.037: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 18 09:56:34.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9377" for this suite. @ 06/18/24 09:56:34.041
• [13.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/18/24 09:56:34.051
  Jun 18 09:56:34.051: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename configmap @ 06/18/24 09:56:34.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:34.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:34.067
  STEP: Creating configMap with name configmap-test-volume-da663452-de87-4f5d-9830-9093fc909b9b @ 06/18/24 09:56:34.07
  STEP: Creating a pod to test consume configMaps @ 06/18/24 09:56:34.075
  E0618 09:56:34.417351      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:35.417467      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:36.417577      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:37.418206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:56:38.095
  Jun 18 09:56:38.098: INFO: Trying to get logs from node ck-129-worker-1 pod pod-configmaps-23a20693-4c61-40ed-8705-6b0ad8805d5c container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 09:56:38.103
  Jun 18 09:56:38.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2629" for this suite. @ 06/18/24 09:56:38.118
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/18/24 09:56:38.125
  Jun 18 09:56:38.125: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/18/24 09:56:38.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:38.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:38.196
  Jun 18 09:56:38.199: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:56:38.418884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:39.418959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:40.419609      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:41.419695      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:42.420232      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:43.421070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:44.422221      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:44.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5079" for this suite. @ 06/18/24 09:56:44.437
• [6.321 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/18/24 09:56:44.447
  Jun 18 09:56:44.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename services @ 06/18/24 09:56:44.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:44.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:44.466
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5144 @ 06/18/24 09:56:44.469
  STEP: changing the ExternalName service to type=ClusterIP @ 06/18/24 09:56:44.473
  STEP: creating replication controller externalname-service in namespace services-5144 @ 06/18/24 09:56:44.489
  I0618 09:56:44.497665      17 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5144, replica count: 2
  E0618 09:56:45.422514      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:46.422632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:47.423416      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0618 09:56:47.549837      17 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 18 09:56:47.549: INFO: Creating new exec pod
  E0618 09:56:48.424568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:49.425751      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:56:50.426427      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:50.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5144 exec execpodtx2gh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun 18 09:56:50.722: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 18 09:56:50.722: INFO: stdout: "externalname-service-59fjz"
  Jun 18 09:56:50.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=services-5144 exec execpodtx2gh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.143.226 80'
  Jun 18 09:56:50.836: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.143.226 80\nConnection to 10.107.143.226 80 port [tcp/http] succeeded!\n"
  Jun 18 09:56:50.836: INFO: stdout: "externalname-service-59fjz"
  Jun 18 09:56:50.836: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun 18 09:56:50.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5144" for this suite. @ 06/18/24 09:56:50.858
• [6.416 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/18/24 09:56:50.863
  Jun 18 09:56:50.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename daemonsets @ 06/18/24 09:56:50.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:56:50.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:56:50.88
  Jun 18 09:56:50.899: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/18/24 09:56:50.903
  Jun 18 09:56:50.907: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:56:50.910: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:56:50.910: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:56:51.427098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:51.910: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:56:51.913: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 18 09:56:51.913: INFO: Node ck-129-worker-1 is running 0 daemon pod, expected 1
  E0618 09:56:52.427830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:52.910: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:56:52.913: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 09:56:52.913: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/18/24 09:56:52.924
  STEP: Check that daemon pods images are updated. @ 06/18/24 09:56:52.934
  Jun 18 09:56:52.937: INFO: Wrong image for pod: daemon-set-5vsq4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:52.937: INFO: Wrong image for pod: daemon-set-cdn6w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:52.937: INFO: Wrong image for pod: daemon-set-jqzz6. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:52.944: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 09:56:53.428422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:53.940: INFO: Wrong image for pod: daemon-set-5vsq4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:53.940: INFO: Wrong image for pod: daemon-set-cdn6w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:53.944: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 09:56:54.428715      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:54.939: INFO: Wrong image for pod: daemon-set-5vsq4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:54.939: INFO: Wrong image for pod: daemon-set-cdn6w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:54.939: INFO: Pod daemon-set-n6h5q is not available
  Jun 18 09:56:54.943: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 09:56:55.429879      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:55.938: INFO: Wrong image for pod: daemon-set-5vsq4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 18 09:56:55.938: INFO: Pod daemon-set-nmpph is not available
  Jun 18 09:56:55.942: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 09:56:56.429894      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:56.943: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0618 09:56:57.430353      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:57.939: INFO: Pod daemon-set-xr9zd is not available
  Jun 18 09:56:57.943: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/18/24 09:56:57.943
  Jun 18 09:56:57.947: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:56:57.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 18 09:56:57.954: INFO: Node ck-129-worker-2 is running 0 daemon pod, expected 1
  E0618 09:56:58.430609      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:56:58.949: INFO: DaemonSet pods can't tolerate node ck-129-master with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jun 18 09:56:58.952: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 18 09:56:58.952: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/18/24 09:56:58.965
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2581, will wait for the garbage collector to delete the pods @ 06/18/24 09:56:58.965
  Jun 18 09:56:59.027: INFO: Deleting DaemonSet.extensions daemon-set took: 8.911416ms
  Jun 18 09:56:59.128: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.811907ms
  E0618 09:56:59.431002      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:00.431487      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:57:01.132: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 18 09:57:01.132: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 18 09:57:01.135: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41055"},"items":null}

  Jun 18 09:57:01.137: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41055"},"items":null}

  Jun 18 09:57:01.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2581" for this suite. @ 06/18/24 09:57:01.151
• [10.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/18/24 09:57:01.158
  Jun 18 09:57:01.159: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename emptydir @ 06/18/24 09:57:01.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:57:01.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:57:01.181
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/18/24 09:57:01.184
  E0618 09:57:01.432571      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:02.433606      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:57:03.198
  Jun 18 09:57:03.201: INFO: Trying to get logs from node ck-129-worker-1 pod pod-05ccb4d2-411e-4635-b510-80b0eb91bfc9 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:57:03.207
  Jun 18 09:57:03.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9450" for this suite. @ 06/18/24 09:57:03.223
• [2.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/18/24 09:57:03.235
  Jun 18 09:57:03.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replicaset @ 06/18/24 09:57:03.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:57:03.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:57:03.252
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/18/24 09:57:03.255
  Jun 18 09:57:03.262: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0618 09:57:03.433870      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:04.434691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:05.435387      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:06.435813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:07.436796      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:57:08.272: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/18/24 09:57:08.272
  STEP: getting scale subresource @ 06/18/24 09:57:08.272
  STEP: updating a scale subresource @ 06/18/24 09:57:08.277
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/18/24 09:57:08.283
  STEP: Patch a scale subresource @ 06/18/24 09:57:08.286
  Jun 18 09:57:08.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2262" for this suite. @ 06/18/24 09:57:08.307
• [5.082 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/18/24 09:57:08.318
  Jun 18 09:57:08.318: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-preemption @ 06/18/24 09:57:08.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:57:08.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:57:08.339
  Jun 18 09:57:08.353: INFO: Waiting up to 1m0s for all nodes to be ready
  E0618 09:57:08.437643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:09.437948      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:10.438812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:11.439417      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:12.439853      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:13.440075      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:14.440798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:15.441237      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:16.441513      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:17.442503      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:18.442999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:19.443423      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:20.444129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:21.444850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:22.445221      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:23.446116      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:24.446355      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:25.446710      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:26.447726      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:27.448821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:28.448820      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:29.449078      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:30.449511      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:31.449845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:32.450133      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:33.450322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:34.451243      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:35.452874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:36.452995      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:37.453961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:38.454973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:39.455043      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:40.455505      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:41.455998      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:42.456934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:43.457455      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:44.458414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:45.458784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:46.459448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:47.460011      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:48.461030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:49.461358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:50.462310      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:51.462762      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:52.463247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:53.463943      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:54.464395      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:55.464864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:56.465867      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:57.466651      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:58.467305      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:57:59.467658      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:00.467610      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:01.468207      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:02.468790      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:03.469477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:04.469546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:05.470089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:06.470754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:07.471440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:58:08.360: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/18/24 09:58:08.363
  Jun 18 09:58:08.364: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/18/24 09:58:08.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:58:08.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:58:08.38
  Jun 18 09:58:08.396: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun 18 09:58:08.398: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun 18 09:58:08.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2640" for this suite. @ 06/18/24 09:58:08.469
  E0618 09:58:08.471899      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:58:08.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4855" for this suite. @ 06/18/24 09:58:08.48
• [60.167 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/18/24 09:58:08.486
  Jun 18 09:58:08.486: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename webhook @ 06/18/24 09:58:08.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:58:08.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:58:08.505
  STEP: Setting up server cert @ 06/18/24 09:58:08.531
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/18/24 09:58:09.176
  STEP: Deploying the webhook pod @ 06/18/24 09:58:09.184
  STEP: Wait for the deployment to be ready @ 06/18/24 09:58:09.198
  Jun 18 09:58:09.206: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0618 09:58:09.472219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:10.472787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/18/24 09:58:11.219
  STEP: Verifying the service has paired with the endpoint @ 06/18/24 09:58:11.231
  E0618 09:58:11.472928      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:58:12.231: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 18 09:58:12.239: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  E0618 09:58:12.473222      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-712-crds.webhook.example.com via the AdmissionRegistration API @ 06/18/24 09:58:12.753
  STEP: Creating a custom resource while v1 is storage version @ 06/18/24 09:58:12.771
  E0618 09:58:13.473962      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:14.474383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/18/24 09:58:14.822
  STEP: Patching the custom resource while v2 is storage version @ 06/18/24 09:58:14.852
  Jun 18 09:58:15.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0618 09:58:15.474409      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-7230" for this suite. @ 06/18/24 09:58:15.481
  STEP: Destroying namespace "webhook-markers-2493" for this suite. @ 06/18/24 09:58:15.487
• [7.007 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/18/24 09:58:15.494
  Jun 18 09:58:15.494: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename security-context @ 06/18/24 09:58:15.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:58:15.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:58:15.516
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/18/24 09:58:15.52
  E0618 09:58:16.474657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:17.475784      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:18.476551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:19.476878      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 09:58:19.546
  Jun 18 09:58:19.549: INFO: Trying to get logs from node ck-129-worker-1 pod security-context-bc783ebf-296c-4218-bd15-83b3e317d2c2 container test-container: <nil>
  STEP: delete the pod @ 06/18/24 09:58:19.559
  Jun 18 09:58:19.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1050" for this suite. @ 06/18/24 09:58:19.577
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/18/24 09:58:19.582
  Jun 18 09:58:19.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename kubectl @ 06/18/24 09:58:19.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:58:19.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:58:19.6
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/18/24 09:58:19.604
  Jun 18 09:58:19.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-465 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun 18 09:58:19.700: INFO: stderr: ""
  Jun 18 09:58:19.700: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/18/24 09:58:19.7
  Jun 18 09:58:19.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2275596349 --namespace=kubectl-465 delete pods e2e-test-httpd-pod'
  E0618 09:58:20.477438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:58:21.257: INFO: stderr: ""
  Jun 18 09:58:21.257: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 18 09:58:21.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-465" for this suite. @ 06/18/24 09:58:21.262
• [1.687 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/18/24 09:58:21.27
  Jun 18 09:58:21.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename replication-controller @ 06/18/24 09:58:21.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:58:21.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:58:21.289
  STEP: Creating replication controller my-hostname-basic-bf29e390-1003-468b-9a1c-fefe69c943e9 @ 06/18/24 09:58:21.293
  Jun 18 09:58:21.310: INFO: Pod name my-hostname-basic-bf29e390-1003-468b-9a1c-fefe69c943e9: Found 0 pods out of 1
  E0618 09:58:21.477850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:22.478728      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:23.479206      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:24.479514      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:25.479709      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:58:26.314: INFO: Pod name my-hostname-basic-bf29e390-1003-468b-9a1c-fefe69c943e9: Found 1 pods out of 1
  Jun 18 09:58:26.314: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-bf29e390-1003-468b-9a1c-fefe69c943e9" are running
  Jun 18 09:58:26.317: INFO: Pod "my-hostname-basic-bf29e390-1003-468b-9a1c-fefe69c943e9-xwljr" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:58:22 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:58:21 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:58:22 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:58:22 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-18 09:58:21 +0000 UTC Reason: Message:}])
  Jun 18 09:58:26.317: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/18/24 09:58:26.317
  Jun 18 09:58:26.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3510" for this suite. @ 06/18/24 09:58:26.34
• [5.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/18/24 09:58:26.349
  Jun 18 09:58:26.349: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename chunking @ 06/18/24 09:58:26.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 09:58:26.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 09:58:26.366
  STEP: creating a large number of resources @ 06/18/24 09:58:26.37
  E0618 09:58:26.480766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:27.481776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:28.482393      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:29.483312      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:30.484241      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:31.485151      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:32.486091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:33.486829      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:34.487868      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:35.488520      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:36.488860      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:37.489629      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:38.490296      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:39.491015      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:40.491626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:41.491982      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:42.492411      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:43.492738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 06/18/24 09:58:44.057
  Jun 18 09:58:44.111: INFO: Retrieved 40/40 results with rv 41944 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/18/24 09:58:44.111
  E0618 09:58:44.493766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:45.494561      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:46.495219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:47.496104      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:48.496348      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:49.496552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:50.497102      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:51.497448      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:52.497970      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:53.498522      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:54.498868      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:55.499259      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:56.499789      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:57.500144      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:58.500766      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:58:59.501166      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:00.501472      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:01.501897      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:02.502633      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:03.502919      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:59:04.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 09:59:04.503873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:05.504154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:06.504491      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:07.505499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:08.505935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:09.506029      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:10.506536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:11.507123      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:12.508039      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:13.508636      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:14.509090      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:15.509436      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:16.512502      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:17.513612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:18.513738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:19.514046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:20.514484      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:21.514595      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:22.515527      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:23.515865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:59:24.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 09:59:24.516650      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:25.516971      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:26.517393      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:27.518356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:28.518552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:29.519084      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:30.519517      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:31.519862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:32.520664      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:33.521547      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:34.521973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:35.522329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:36.522785      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:37.522822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:38.523657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:39.523999      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:40.526316      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:41.526313      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:42.527260      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:43.527835      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 09:59:44.118: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 09:59:44.528650      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:45.528980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:46.529397      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:47.529582      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:48.529961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:49.530432      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:50.530739      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:51.531245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:52.532015      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:53.532202      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:54.532622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:55.532940      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:56.533104      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:57.533833      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:58.534256      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 09:59:59.534665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:00.535107      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:01.536048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:02.536928      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:03.537464      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:00:04.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:00:04.537512      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:05.537818      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:06.538213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:07.539028      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:08.539376      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:09.539963      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:10.540393      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:11.540813      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:12.541586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:13.541952      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:14.542694      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:15.543098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:16.543519      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:17.543821      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:18.544360      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:19.544830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:20.546960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:21.547302      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:22.548162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:23.548612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:00:24.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:00:24.549614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:25.550164      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:26.550819      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:27.551738      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:28.552444      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:29.552911      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:30.553163      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:31.553607      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:32.553716      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:33.553833      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:34.553982      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:35.555060      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:36.555402      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:37.555585      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:38.555960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:39.556480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:40.557058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:41.557680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:42.558469      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:43.559284      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:00:44.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:00:44.559582      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:45.560053      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:46.559984      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:47.560355      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:48.560877      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:49.561155      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:50.561667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:51.561837      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:52.562549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:53.562852      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:54.563070      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:55.563476      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:56.564029      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:57.564657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:58.565046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:00:59.565426      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:00.565712      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:01.566048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:02.566590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:03.566797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:01:04.118: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:01:04.572203      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:05.571489      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:06.571767      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:07.572128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:08.573541      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:09.572849      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:10.573465      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:11.573931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:12.574803      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:13.575436      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:14.575822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:15.575935      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:16.576313      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:17.576522      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:18.576719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:19.577265      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:20.578108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:21.579343      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:22.579147      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:23.579521      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:01:24.120: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:01:24.580362      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:25.580785      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:26.581156      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:27.581746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:28.582009      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:29.582440      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:30.582587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:31.582940      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:32.583690      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:33.583929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:34.584568      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:35.584881      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:36.585108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:37.585797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:38.586141      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:39.586520      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:40.586829      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:41.589786      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:42.590873      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:43.591221      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:01:44.118: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:01:44.591719      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:45.592236      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:46.592615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:47.592856      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:48.593058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:49.593516      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:50.593839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:51.594022      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:52.594622      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:53.594835      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:54.595451      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:55.595917      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:56.596325      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:57.597145      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:58.597540      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:01:59.597830      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:00.598307      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:01.600399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:02.599832      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:03.599954      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:02:04.120: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:02:04.600270      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:05.600680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:06.601079      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:07.602026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:08.602136      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:09.602600      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:10.603057      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:11.603261      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:12.604034      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:13.604275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:14.604552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:15.605153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:16.605493      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:17.606331      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:18.606481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:19.606901      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:20.607292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:21.607480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:22.608167      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:23.608682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:02:24.118: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:02:24.608900      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:25.609489      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:26.609958      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:27.611079      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:28.611168      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:29.612116      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:30.612739      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:31.613249      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:32.613808      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:33.614217      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:34.614368      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:35.614730      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:36.615142      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:37.615435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:38.616007      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:39.616467      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:40.616769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:41.617312      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:42.618103      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:43.618480      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:02:44.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:02:44.619544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:45.619845      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:46.620114      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:47.620983      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:48.621378      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:49.622462      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:50.623046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:51.623492      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:52.624342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:53.625128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:54.625508      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:55.625798      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:56.626122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:57.627071      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:58.627670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:02:59.628147      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:00.628632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:01.628929      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:02.629705      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:03.630257      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:03:04.120: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:03:04.630342      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:05.630801      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:06.631315      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:07.632533      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:08.632990      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:09.633563      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:10.634050      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:11.634481      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:12.634725      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:13.635095      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:14.635586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:15.636220      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:16.636615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:17.637267      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:18.637623      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:19.638287      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:20.638700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:21.639014      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:22.639629      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:23.639920      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:03:24.117: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:03:24.640739      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:25.641129      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:26.641263      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:27.642165      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:28.642638      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:29.643407      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:30.643805      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:31.644311      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:32.645067      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:33.645991      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:34.646665      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:35.647277      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:36.647627      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:37.648732      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:38.649329      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:39.649931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:40.650701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:41.651072      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:42.651578      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:43.652314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:03:44.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:03:44.652424      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:45.652701      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:46.653306      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:47.653812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:48.654030      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:49.654389      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:50.654561      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:51.654976      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:52.655877      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:53.656247      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:54.656524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:55.656797      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:56.657466      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:57.659133      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:58.658607      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:03:59.659078      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:00.659498      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:01.660471      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:02.661159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:03.661536      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:04:04.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:04:04.662544      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:05.663098      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:06.663921      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:07.666753      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:08.665101      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:09.665474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:10.665902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:11.666312      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:12.667018      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:13.667422      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:14.667858      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:15.668256      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:16.669055      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:17.669951      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:18.670865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:19.671168      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:20.671593      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:21.672099      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:22.672864      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:23.673266      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:04:24.117: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:04:24.674001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:25.674460      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:26.675051      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:27.675881      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:28.676320      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:29.676674      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:30.677028      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:31.677399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:32.678245      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:33.678571      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:34.678973      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:35.679461      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:36.680132      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:37.680614      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:38.680937      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:39.681289      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:40.681700      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:41.682025      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:42.682913      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:43.683399      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:04:44.119: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE5NDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0618 10:04:44.684429      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:45.684755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:46.685355      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:47.686230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:48.686691      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:49.687027      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:50.687364      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:51.687621      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:52.688286      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:53.688814      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:54.689282      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:55.689704      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:56.690323      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:57.690946      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:58.691362      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:04:59.691662      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:00.691983      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:01.692322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:02.692941      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:03.693358      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:04.116: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun 18 10:05:04.116: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/18/24 10:05:04.116
  STEP: retrieving all remaining pages @ 06/18/24 10:05:04.122
  Jun 18 10:05:04.128: INFO: Retrieved 40/40 results with rv 42568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jun 18 10:05:04.135: INFO: Retrieved 40/40 results with rv 42568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jun 18 10:05:04.141: INFO: Retrieved 40/40 results with rv 42568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jun 18 10:05:04.145: INFO: Retrieved 40/40 results with rv 42568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jun 18 10:05:04.150: INFO: Retrieved 40/40 results with rv 42568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jun 18 10:05:04.155: INFO: Retrieved 40/40 results with rv 42568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jun 18 10:05:04.161: INFO: Retrieved 40/40 results with rv 42568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jun 18 10:05:04.165: INFO: Retrieved 40/40 results with rv 42568 and continue 
  Jun 18 10:05:04.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7808" for this suite. @ 06/18/24 10:05:04.173
• [397.831 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/18/24 10:05:04.18
  Jun 18 10:05:04.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename projected @ 06/18/24 10:05:04.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 10:05:04.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 10:05:04.199
  STEP: Creating configMap with name configmap-projected-all-test-volume-8346cebc-06c1-4870-813b-ee1f7aae7b69 @ 06/18/24 10:05:04.202
  STEP: Creating secret with name secret-projected-all-test-volume-9448620b-a968-4643-bf16-8d597ca6b2fb @ 06/18/24 10:05:04.207
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/18/24 10:05:04.212
  E0618 10:05:04.694278      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:05.694734      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:06.695812      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:07.696239      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/18/24 10:05:08.238
  Jun 18 10:05:08.241: INFO: Trying to get logs from node ck-129-worker-1 pod projected-volume-8ca64cd5-08da-42c9-8269-5826a9a70f45 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/18/24 10:05:08.267
  Jun 18 10:05:08.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9828" for this suite. @ 06/18/24 10:05:08.285
• [4.113 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/18/24 10:05:08.293
  Jun 18 10:05:08.293: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename dns @ 06/18/24 10:05:08.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 10:05:08.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 10:05:08.308
  STEP: Creating a test headless service @ 06/18/24 10:05:08.311
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3198.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3198.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3198.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3198.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 215.83.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.83.215_udp@PTR;check="$$(dig +tcp +noall +answer +search 215.83.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.83.215_tcp@PTR;sleep 1; done
   @ 06/18/24 10:05:08.331
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3198.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3198.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3198.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3198.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3198.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 215.83.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.83.215_udp@PTR;check="$$(dig +tcp +noall +answer +search 215.83.104.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.104.83.215_tcp@PTR;sleep 1; done
   @ 06/18/24 10:05:08.331
  STEP: creating a pod to probe DNS @ 06/18/24 10:05:08.331
  STEP: submitting the pod to kubernetes @ 06/18/24 10:05:08.331
  E0618 10:05:08.696981      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:09.697384      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/18/24 10:05:10.351
  STEP: looking for the results for each expected name from probers @ 06/18/24 10:05:10.353
  Jun 18 10:05:10.358: INFO: Unable to read wheezy_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.362: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.366: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.369: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.384: INFO: Unable to read jessie_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.387: INFO: Unable to read jessie_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.390: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.393: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:10.406: INFO: Lookups using dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2 failed for: [wheezy_udp@dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_udp@dns-test-service.dns-3198.svc.cluster.local jessie_tcp@dns-test-service.dns-3198.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local]

  Jun 18 10:05:10.411: INFO: Pod client logs for webserver: 
  Jun 18 10:05:10.416: INFO: Pod client logs for querier: 
  Jun 18 10:05:10.421: INFO: Pod client logs for jessie-querier: 
  E0618 10:05:10.698067      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:11.698471      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:12.699374      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:13.699477      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:14.699708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:15.360: INFO: Unable to read wheezy_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.363: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.367: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.370: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.386: INFO: Unable to read jessie_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.389: INFO: Unable to read jessie_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.393: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.396: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:15.409: INFO: Lookups using dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2 failed for: [wheezy_udp@dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_udp@dns-test-service.dns-3198.svc.cluster.local jessie_tcp@dns-test-service.dns-3198.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local]

  Jun 18 10:05:15.414: INFO: Pod client logs for webserver: 
  Jun 18 10:05:15.418: INFO: Pod client logs for querier: 
  Jun 18 10:05:15.424: INFO: Pod client logs for jessie-querier: 
  E0618 10:05:15.700437      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:16.701588      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:17.702414      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:18.702799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:19.703252      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:20.360: INFO: Unable to read wheezy_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.365: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.369: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.373: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.394: INFO: Unable to read jessie_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.399: INFO: Unable to read jessie_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.403: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.407: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:20.424: INFO: Lookups using dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2 failed for: [wheezy_udp@dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_udp@dns-test-service.dns-3198.svc.cluster.local jessie_tcp@dns-test-service.dns-3198.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local]

  Jun 18 10:05:20.431: INFO: Pod client logs for webserver: 
  Jun 18 10:05:20.437: INFO: Pod client logs for querier: 
  Jun 18 10:05:20.442: INFO: Pod client logs for jessie-querier: 
  E0618 10:05:20.703213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:21.703606      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:22.704258      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:23.704590      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:24.705038      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:25.358: INFO: Unable to read wheezy_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.362: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.366: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.370: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.387: INFO: Unable to read jessie_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.392: INFO: Unable to read jessie_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.395: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.398: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:25.411: INFO: Lookups using dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2 failed for: [wheezy_udp@dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_udp@dns-test-service.dns-3198.svc.cluster.local jessie_tcp@dns-test-service.dns-3198.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local]

  Jun 18 10:05:25.418: INFO: Pod client logs for webserver: 
  Jun 18 10:05:25.424: INFO: Pod client logs for querier: 
  Jun 18 10:05:25.430: INFO: Pod client logs for jessie-querier: 
  E0618 10:05:25.705682      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:26.706352      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:27.706974      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:28.707438      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:29.707866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:30.359: INFO: Unable to read wheezy_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.363: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.367: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.370: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.389: INFO: Unable to read jessie_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.393: INFO: Unable to read jessie_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.396: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.400: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:30.414: INFO: Lookups using dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2 failed for: [wheezy_udp@dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_udp@dns-test-service.dns-3198.svc.cluster.local jessie_tcp@dns-test-service.dns-3198.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local]

  Jun 18 10:05:30.420: INFO: Pod client logs for webserver: 
  Jun 18 10:05:30.426: INFO: Pod client logs for querier: 
  Jun 18 10:05:30.433: INFO: Pod client logs for jessie-querier: 
  E0618 10:05:30.708959      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:31.709410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:32.710058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:33.710407      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:34.710953      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:35.358: INFO: Unable to read wheezy_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.362: INFO: Unable to read wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.366: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.370: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.384: INFO: Unable to read jessie_udp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.388: INFO: Unable to read jessie_tcp@dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.391: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.394: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local from pod dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2: the server could not find the requested resource (get pods dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2)
  Jun 18 10:05:35.405: INFO: Lookups using dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2 failed for: [wheezy_udp@dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@dns-test-service.dns-3198.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_udp@dns-test-service.dns-3198.svc.cluster.local jessie_tcp@dns-test-service.dns-3198.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3198.svc.cluster.local]

  Jun 18 10:05:35.411: INFO: Pod client logs for webserver: 
  Jun 18 10:05:35.417: INFO: Pod client logs for querier: 
  Jun 18 10:05:35.423: INFO: Pod client logs for jessie-querier: 
  E0618 10:05:35.711464      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:36.712542      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:37.713586      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:38.714100      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:39.714559      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:40.413: INFO: DNS probes using dns-3198/dns-test-fb2d5d08-fa6f-4b1b-b7ca-043329448ad2 succeeded

  STEP: deleting the pod @ 06/18/24 10:05:40.413
  STEP: deleting the test service @ 06/18/24 10:05:40.432
  STEP: deleting the test headless service @ 06/18/24 10:05:40.462
  Jun 18 10:05:40.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3198" for this suite. @ 06/18/24 10:05:40.477
• [32.188 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/18/24 10:05:40.482
  Jun 18 10:05:40.482: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename container-probe @ 06/18/24 10:05:40.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 10:05:40.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 10:05:40.499
  STEP: Creating pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638 @ 06/18/24 10:05:40.502
  E0618 10:05:40.715524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:41.716356      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/18/24 10:05:42.521
  Jun 18 10:05:42.524: INFO: Initial restart count of pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 is 0
  Jun 18 10:05:42.527: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:42.716485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:43.716607      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:44.531: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:44.716626      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:45.717248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:46.535: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:46.717376      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:47.717654      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:48.542: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:48.718598      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:49.718839      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:50.548: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:50.719919      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:51.720574      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:52.554: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:52.721028      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:53.721401      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:54.560: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:54.721943      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:55.722323      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:56.565: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:56.722732      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:57.722930      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:05:58.569: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:05:58.724024      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:05:59.724366      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:00.575: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:00.725108      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:01.725657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:02.581: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:02.726165      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:03.726670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:04.587: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:04.727552      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:05.728040      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:06.591: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:06.729048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:07.729546      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:08.595: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:08.730403      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:09.730904      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:10.600: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:10.731058      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:11.731507      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:12.606: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:12.732521      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:13.732862      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:14.611: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:14.733592      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:15.734350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:16.616: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:16.735044      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:17.735903      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:18.621: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:18.736761      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:19.737292      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:20.626: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:20.738143      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:21.738405      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:22.633: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:22.738433      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:23.738826      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:24.637: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:24.738884      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:25.739374      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:26.642: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:26.739687      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:27.739892      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:28.647: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:28.740923      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:29.741653      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:30.653: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:30.742518      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:31.742841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:32.658: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:32.743752      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:33.744281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:34.665: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:34.744217      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:35.744680      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:36.671: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:36.749435      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:37.747383      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:38.676: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:38.747713      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:39.748062      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:40.682: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:40.748790      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:41.749130      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:42.687: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:42.749841      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:43.750073      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:44.693: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:44.751300      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:45.751264      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:46.698: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:46.751902      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:47.752671      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:48.702: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:48.753057      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:49.753357      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:50.708: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:50.754041      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:51.754404      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:52.714: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:52.755378      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:53.755565      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:54.718: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:54.755667      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:55.755850      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:56.723: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:56.756297      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:57.756988      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:06:58.728: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:06:58.757023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:06:59.757151      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:00.732: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:00.757702      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:01.758248      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:02.738: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:02.759113      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:03.759615      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:04.743: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:04.760462      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:05.760857      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:06.748: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:06.761322      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:07.762023      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:08.753: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:08.762226      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:09.762534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:10.757: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:10.762885      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:11.763460      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:12.762: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:12.763587      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:13.763921      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:14.763961      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:14.769: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:15.764698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:16.765314      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:16.774: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:17.765763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:18.766334      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:18.778: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:19.767250      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:20.767549      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:20.783: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:21.767918      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:22.768787      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:22.789: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:23.769048      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:24.769410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:24.794: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:25.769776      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:26.770372      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:26.799: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:27.771091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:28.771415      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:28.803: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:29.771721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:30.772128      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:30.809: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:31.772239      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:32.772996      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:32.814: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:33.773764      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:34.774371      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:34.820: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:35.775446      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:36.776053      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:36.825: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:37.777002      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:38.777381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:38.831: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:39.778114      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:40.778492      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:40.837: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:41.779524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:42.779799      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:42.844: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:43.780670      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:44.780418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:44.849: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:45.781389      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:46.782275      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:46.857: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:47.783313      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:48.783474      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:48.862: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:49.784272      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:50.784230      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:50.867: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:51.785219      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:52.786303      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:52.874: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:53.786763      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:54.787122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:54.877: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:55.787866      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:56.788842      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:56.882: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:57.789675      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:07:58.790089      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:07:58.887: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:07:59.790418      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:00.790843      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:00.893: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:01.791055      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:02.791822      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:02.898: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:03.792147      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:04.792485      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:04.902: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:05.792698      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:06.793566      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:06.908: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:07.793643      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:08.794162      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:08.913: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:09.794991      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:10.795159      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:10.919: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:11.796067      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:12.796863      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:12.924: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:13.797425      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:14.797772      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:14.929: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:15.798091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:16.798888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:16.934: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:17.798980      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:18.799532      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:18.939: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:19.799914      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:20.800320      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:20.947: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:21.800708      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:22.801486      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:22.952: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:23.801632      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:24.801931      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:24.957: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:25.802410      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:26.802443      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:26.961: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:27.802718      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:28.803091      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:28.967: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:29.803960      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:30.804369      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:30.972: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:31.804551      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:32.805153      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:32.977: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:33.805361      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:34.805746      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:34.982: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:35.806721      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:36.807349      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:36.987: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:37.807759      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:38.808136      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:38.992: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:39.809290      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:40.809689      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:41.000: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:41.810026      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:42.810788      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:43.006: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:43.811001      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:44.811390      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:45.010: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:45.812138      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:46.812774      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:47.015: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:47.814346      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:48.814836      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:49.019: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:49.815657      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:50.816046      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:51.025: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:51.816228      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:52.817042      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:53.029: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:53.817105      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:54.817499      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:55.034: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:55.817922      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:56.818534      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:57.038: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:57.818793      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:08:58.819281      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:08:59.044: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:08:59.819745      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:00.820103      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:01.051: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:01.820888      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:02.821707      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:03.056: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:03.822122      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:04.822524      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:05.061: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:05.823271      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:06.824067      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:07.066: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:07.824865      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:08.825372      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:09.073: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:09.825381      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:10.825769      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:11.078: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:11.826630      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:12.827213      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:13.082: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:13.827612      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:14.828337      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:15.088: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:15.828616      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:16.829408      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:17.094: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:17.830540      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:18.830934      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:19.099: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:19.831916      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:20.832392      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:21.106: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:21.833350      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:22.834276      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:23.111: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:23.835154      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:24.835554      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:25.116: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:25.836014      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:26.836591      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:27.121: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:27.837315      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:28.837755      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:29.127: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:29.838110      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:30.838543      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:31.133: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:31.838634      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:32.839337      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:33.138: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:33.839500      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:34.839874      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:35.143: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:35.840400      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:36.841268      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:37.147: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:37.841345      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:38.841754      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:39.152: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:39.842269      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:40.843334      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 18 10:09:41.158: INFO: Get pod test-webserver-1dcd8f6e-4309-47c7-ae67-e27e346428f6 in namespace container-probe-638
  E0618 10:09:41.843488      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0618 10:09:42.844367      17 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/18/24 10:09:43.161
  Jun 18 10:09:43.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-638" for this suite. @ 06/18/24 10:09:43.185
• [242.708 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/18/24 10:09:43.19
  Jun 18 10:09:43.190: INFO: >>> kubeConfig: /tmp/kubeconfig-2275596349
  STEP: Building a namespace api object, basename runtimeclass @ 06/18/24 10:09:43.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/18/24 10:09:43.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/18/24 10:09:43.209
  Jun 18 10:09:43.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-625" for this suite. @ 06/18/24 10:09:43.228
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun 18 10:09:43.239: INFO: Running AfterSuite actions on node 1
  Jun 18 10:09:43.239: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.095 seconds]
------------------------------

Ran 388 of 7408 Specs in 6395.541 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h46m36.744038315s
Test Suite Passed
