  I0827 23:08:06.802515      19 e2e.go:117] Starting e2e run "e6c29178-78d2-42b6-a3e7-d67e287e2050" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1724800085 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Aug 27 23:08:07.349: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:08:07.351: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Aug 27 23:08:07.594: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Aug 27 23:08:07.616: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Aug 27 23:08:07.616: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Aug 27 23:08:07.616: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'nodelocaldns' (0 seconds elapsed)
  Aug 27 23:08:07.616: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'vsphere-cloud-controller-manager' (0 seconds elapsed)
  Aug 27 23:08:07.616: INFO: 6 / 6 pods ready in namespace 'kube-system' in daemonset 'vsphere-csi-node' (0 seconds elapsed)
  Aug 27 23:08:07.616: INFO: e2e test version: v1.29.5
  Aug 27 23:08:07.619: INFO: kube-apiserver version: v1.29.5
  Aug 27 23:08:07.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:08:07.637: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.289 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 08/27/24 23:08:07.968
  Aug 27 23:08:07.968: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:08:07.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:08:08.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:08:08.031
  STEP: Creating secret with name projected-secret-test-a4814b79-05b8-4434-a1ae-f4c07b4cbb1a @ 08/27/24 23:08:08.04
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:08:08.053
  STEP: Saw pod success @ 08/27/24 23:08:14.133
  Aug 27 23:08:14.139: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-595d17a5-7ec8-4474-9312-65e6b3aace22 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:08:14.167
  Aug 27 23:08:14.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8122" for this suite. @ 08/27/24 23:08:14.221
• [6.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 08/27/24 23:08:14.234
  Aug 27 23:08:14.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/27/24 23:08:14.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:08:14.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:08:14.296
  STEP: Creating 50 configmaps @ 08/27/24 23:08:14.3
  STEP: Creating RC which spawns configmap-volume pods @ 08/27/24 23:08:14.919
  Aug 27 23:08:14.960: INFO: Pod name wrapped-volume-race-d3de7129-3c88-4f16-af3d-59db60a4909d: Found 0 pods out of 5
  Aug 27 23:08:19.989: INFO: Pod name wrapped-volume-race-d3de7129-3c88-4f16-af3d-59db60a4909d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/27/24 23:08:19.989
  STEP: Creating RC which spawns configmap-volume pods @ 08/27/24 23:08:20.07
  Aug 27 23:08:20.145: INFO: Pod name wrapped-volume-race-dbd58f60-bf68-4627-991d-cf235b0ba2be: Found 0 pods out of 5
  Aug 27 23:08:25.162: INFO: Pod name wrapped-volume-race-dbd58f60-bf68-4627-991d-cf235b0ba2be: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/27/24 23:08:25.163
  STEP: Creating RC which spawns configmap-volume pods @ 08/27/24 23:08:25.226
  Aug 27 23:08:25.283: INFO: Pod name wrapped-volume-race-539cbacf-cab9-46b3-9a3f-8fdb356479ca: Found 0 pods out of 5
  Aug 27 23:08:30.305: INFO: Pod name wrapped-volume-race-539cbacf-cab9-46b3-9a3f-8fdb356479ca: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/27/24 23:08:30.305
  STEP: deleting ReplicationController wrapped-volume-race-539cbacf-cab9-46b3-9a3f-8fdb356479ca in namespace emptydir-wrapper-2185, will wait for the garbage collector to delete the pods @ 08/27/24 23:08:30.344
  Aug 27 23:08:30.424: INFO: Deleting ReplicationController wrapped-volume-race-539cbacf-cab9-46b3-9a3f-8fdb356479ca took: 20.909185ms
  Aug 27 23:08:30.624: INFO: Terminating ReplicationController wrapped-volume-race-539cbacf-cab9-46b3-9a3f-8fdb356479ca pods took: 200.84016ms
  STEP: deleting ReplicationController wrapped-volume-race-dbd58f60-bf68-4627-991d-cf235b0ba2be in namespace emptydir-wrapper-2185, will wait for the garbage collector to delete the pods @ 08/27/24 23:08:33.626
  Aug 27 23:08:33.704: INFO: Deleting ReplicationController wrapped-volume-race-dbd58f60-bf68-4627-991d-cf235b0ba2be took: 17.498701ms
  Aug 27 23:08:33.904: INFO: Terminating ReplicationController wrapped-volume-race-dbd58f60-bf68-4627-991d-cf235b0ba2be pods took: 200.217919ms
  STEP: deleting ReplicationController wrapped-volume-race-d3de7129-3c88-4f16-af3d-59db60a4909d in namespace emptydir-wrapper-2185, will wait for the garbage collector to delete the pods @ 08/27/24 23:08:36.405
  Aug 27 23:08:36.485: INFO: Deleting ReplicationController wrapped-volume-race-d3de7129-3c88-4f16-af3d-59db60a4909d took: 19.105324ms
  Aug 27 23:08:36.686: INFO: Terminating ReplicationController wrapped-volume-race-d3de7129-3c88-4f16-af3d-59db60a4909d pods took: 201.177652ms
  STEP: Cleaning up the configMaps @ 08/27/24 23:08:39.588
  Aug 27 23:08:40.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2185" for this suite. @ 08/27/24 23:08:40.47
• [26.263 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 08/27/24 23:08:40.498
  Aug 27 23:08:40.498: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename dns @ 08/27/24 23:08:40.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:08:40.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:08:40.568
  STEP: Creating a test headless service @ 08/27/24 23:08:40.574
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 195.36.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.36.195_udp@PTR;check="$$(dig +tcp +noall +answer +search 195.36.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.36.195_tcp@PTR;sleep 1; done
   @ 08/27/24 23:08:40.622
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8480.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8480.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8480.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8480.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 195.36.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.36.195_udp@PTR;check="$$(dig +tcp +noall +answer +search 195.36.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.36.195_tcp@PTR;sleep 1; done
   @ 08/27/24 23:08:40.622
  STEP: creating a pod to probe DNS @ 08/27/24 23:08:40.622
  STEP: submitting the pod to kubernetes @ 08/27/24 23:08:40.622
  STEP: retrieving the pod @ 08/27/24 23:08:44.707
  STEP: looking for the results for each expected name from probers @ 08/27/24 23:08:44.718
  Aug 27 23:08:44.730: INFO: Unable to read wheezy_udp@dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.740: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.750: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.764: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.813: INFO: Unable to read jessie_udp@dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.822: INFO: Unable to read jessie_tcp@dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.836: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.844: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local from pod dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006: the server could not find the requested resource (get pods dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006)
  Aug 27 23:08:44.890: INFO: Lookups using dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006 failed for: [wheezy_udp@dns-test-service.dns-8480.svc.cluster.local wheezy_tcp@dns-test-service.dns-8480.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local jessie_udp@dns-test-service.dns-8480.svc.cluster.local jessie_tcp@dns-test-service.dns-8480.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8480.svc.cluster.local]

  Aug 27 23:08:44.918: INFO: Pod client logs for webserver: 
  Aug 27 23:08:44.944: INFO: Pod client logs for querier: 
  Aug 27 23:08:44.968: INFO: Pod client logs for jessie-querier: 
  Aug 27 23:08:49.934: INFO: DNS probes using dns-8480/dns-test-aad578bb-78ec-4a38-ac44-f8fecde69006 succeeded

  STEP: deleting the pod @ 08/27/24 23:08:49.935
  STEP: deleting the test service @ 08/27/24 23:08:49.983
  STEP: deleting the test headless service @ 08/27/24 23:08:50.096
  Aug 27 23:08:50.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8480" for this suite. @ 08/27/24 23:08:50.149
• [9.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 08/27/24 23:08:50.171
  Aug 27 23:08:50.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/27/24 23:08:50.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:08:50.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:08:50.246
  STEP: Creating pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526 @ 08/27/24 23:08:50.255
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/27/24 23:08:52.312
  Aug 27 23:08:52.324: INFO: Initial restart count of pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e is 0
  Aug 27 23:08:52.333: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:08:54.344: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:08:56.355: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:08:58.364: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:00.377: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:02.394: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:04.418: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:06.428: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:08.440: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:10.455: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:12.483: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:12.483: INFO: Restart count of pod container-probe-9526/liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e is now 1 (20.159250403s elapsed)
  Aug 27 23:09:14.494: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:16.512: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:18.522: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:20.533: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:22.548: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:24.558: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:26.567: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:28.576: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:30.585: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:32.597: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:32.597: INFO: Restart count of pod container-probe-9526/liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e is now 2 (40.272502182s elapsed)
  Aug 27 23:09:34.614: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:36.624: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:38.644: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:40.655: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:42.666: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:44.675: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:46.686: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:48.698: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:50.709: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:52.720: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:52.720: INFO: Restart count of pod container-probe-9526/liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e is now 3 (1m0.39573885s elapsed)
  Aug 27 23:09:54.728: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:56.735: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:09:58.748: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:00.759: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:02.768: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:04.787: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:06.795: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:08.804: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:10.820: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:12.837: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:12.837: INFO: Restart count of pod container-probe-9526/liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e is now 4 (1m20.513002787s elapsed)
  Aug 27 23:10:14.845: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:16.858: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:18.872: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:20.884: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:22.928: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:24.937: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:26.948: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:28.960: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:30.969: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:32.996: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:35.009: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:37.019: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:39.028: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:41.037: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:43.047: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:45.058: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:47.074: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:49.083: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:51.095: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:53.108: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:55.117: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:57.128: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:10:59.138: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:01.155: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:03.164: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:05.175: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:07.183: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:09.195: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:11.206: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:13.215: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:15.224: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:17.240: INFO: Get pod liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e in namespace container-probe-9526
  Aug 27 23:11:17.240: INFO: Restart count of pod container-probe-9526/liveness-99dc1d8f-dca9-4f06-b8af-1f00331e4e1e is now 5 (2m24.91569673s elapsed)
  STEP: deleting the pod @ 08/27/24 23:11:17.24
  Aug 27 23:11:17.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9526" for this suite. @ 08/27/24 23:11:17.309
• [147.156 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 08/27/24 23:11:17.328
  Aug 27 23:11:17.328: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/27/24 23:11:17.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:11:17.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:11:17.406
  STEP: creating a Deployment @ 08/27/24 23:11:17.423
  STEP: waiting for Deployment to be created @ 08/27/24 23:11:17.444
  STEP: waiting for all Replicas to be Ready @ 08/27/24 23:11:17.45
  Aug 27 23:11:17.454: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:17.454: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:17.524: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:17.524: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:17.594: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:17.594: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:17.807: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:17.807: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 27 23:11:19.553: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 27 23:11:19.553: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 27 23:11:20.080: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 08/27/24 23:11:20.081
  Aug 27 23:11:20.131: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 08/27/24 23:11:20.131
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 0
  Aug 27 23:11:20.137: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:20.138: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:20.138: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.138: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.138: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.139: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.162: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.162: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.204: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.204: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:20.248: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:20.248: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:20.324: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:20.324: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:22.196: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:22.196: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:22.313: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  STEP: listing Deployments @ 08/27/24 23:11:22.313
  Aug 27 23:11:22.329: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 08/27/24 23:11:22.329
  Aug 27 23:11:22.357: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 08/27/24 23:11:22.357
  Aug 27 23:11:22.374: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:22.462: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:22.562: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:22.657: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:22.727: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:24.596: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:24.662: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:24.786: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:24.818: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 27 23:11:26.167: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 08/27/24 23:11:26.23
  STEP: fetching the DeploymentStatus @ 08/27/24 23:11:26.25
  Aug 27 23:11:26.270: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:26.270: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:26.271: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:26.271: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:26.271: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 1
  Aug 27 23:11:26.271: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:26.272: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 3
  Aug 27 23:11:26.272: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 3
  Aug 27 23:11:26.272: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 2
  Aug 27 23:11:26.272: INFO: observed Deployment test-deployment in namespace deployment-1242 with ReadyReplicas 3
  STEP: deleting the Deployment @ 08/27/24 23:11:26.273
  Aug 27 23:11:26.299: INFO: observed event type MODIFIED
  Aug 27 23:11:26.299: INFO: observed event type MODIFIED
  Aug 27 23:11:26.299: INFO: observed event type MODIFIED
  Aug 27 23:11:26.300: INFO: observed event type MODIFIED
  Aug 27 23:11:26.300: INFO: observed event type MODIFIED
  Aug 27 23:11:26.300: INFO: observed event type MODIFIED
  Aug 27 23:11:26.300: INFO: observed event type MODIFIED
  Aug 27 23:11:26.301: INFO: observed event type MODIFIED
  Aug 27 23:11:26.301: INFO: observed event type MODIFIED
  Aug 27 23:11:26.301: INFO: observed event type MODIFIED
  Aug 27 23:11:26.307: INFO: observed event type MODIFIED
  Aug 27 23:11:26.307: INFO: observed event type MODIFIED
  Aug 27 23:11:26.307: INFO: observed event type MODIFIED
  Aug 27 23:11:26.318: INFO: Log out all the ReplicaSets if there is no deployment created
  Aug 27 23:11:26.332: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1242",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5bbf9a35-24b4-4209-8a93-4598312dac8c",
      ResourceVersion: (string) (len=8) "38891877",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8879feca-45ae-44ef-a97a-e33324bb0627",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 38 37 39  66 65 63 61 2d 34 35 61  |":\"8879feca-45a|
              00000130  65 2d 34 34 65 66 2d 61  39 37 61 2d 65 33 33 33  |e-44ef-a97a-e333|
              00000140  32 34 62 62 30 36 32 37  5c 22 7d 22 3a 7b 7d 7d  |24bb0627\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 27 23:11:26.348: INFO: pod: "test-deployment-64fd565c98-bxgjg":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-bxgjg",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1242",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "706f7987-6d38-48e9-92b0-cfedf8861c9b",
      ResourceVersion: (string) (len=8) "38891873",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397088,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7e78bbc7904eaab907a4d9a8f92d9d9a12f307d6c5ad88a4c048f38378a3c800",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.233.118.9/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.233.118.9/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "5bbf9a35-24b4-4209-8a93-4598312dac8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 62 62 66 39 61 33 35  |uid\":\"5bbf9a35|
              000000a0  2d 32 34 62 34 2d 34 32  30 39 2d 38 61 39 33 2d  |-24b4-4209-8a93-|
              000000b0  34 35 39 38 33 31 32 64  61 63 38 63 5c 22 7d 22  |4598312dac8c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 39 5c 22 7d 22 3a 7b  |.233.118.9\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tccvc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tccvc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=12) "10.233.118.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.118.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860397081,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=71) "sha256:e6f1816883972d4be47bd48879a08919b96afcd344132622e4d444987919323c",
          ContainerID: (string) (len=77) "containerd://7d49d6cbf6d72d4b71adab4b698e91cb5a84d56c6966360a015e387782767634",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 27 23:11:26.366: INFO: pod: "test-deployment-64fd565c98-tfcjj":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-tfcjj",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-1242",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be6a856b-5ecf-47ff-9a77-d9e4f93f94cc",
      ResourceVersion: (string) (len=8) "38891843",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397086,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1e6e337277a894ba03c882c675900b21de65bdd7deb55e316f7aea805296f3b6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "5bbf9a35-24b4-4209-8a93-4598312dac8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 62 62 66 39 61 33 35  |uid\":\"5bbf9a35|
              000000a0  2d 32 34 62 34 2d 34 32  30 39 2d 38 61 39 33 2d  |-24b4-4209-8a93-|
              000000b0  34 35 39 38 33 31 32 64  61 63 38 63 5c 22 7d 22  |4598312dac8c\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 35 33 5c 22 7d 22 3a  |.233.76.153\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x8bk4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x8bk4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860397083,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=71) "sha256:e6f1816883972d4be47bd48879a08919b96afcd344132622e4d444987919323c",
          ContainerID: (string) (len=77) "containerd://1f5e7385a8b1c41d43511eef075b2e4b909db75096af332bec432eb89fddd6d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 27 23:11:26.369: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1242",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8d1d09f-9703-410c-9e8b-6793f94535b4",
      ResourceVersion: (string) (len=8) "38891869",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8879feca-45ae-44ef-a97a-e33324bb0627",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 38 37 39  66 65 63 61 2d 34 35 61  |":\"8879feca-45a|
              00000130  65 2d 34 34 65 66 2d 61  39 37 61 2d 65 33 33 33  |e-44ef-a97a-e333|
              00000140  32 34 62 62 30 36 32 37  5c 22 7d 22 3a 7b 7d 7d  |24bb0627\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 27 23:11:26.400: INFO: pod: "test-deployment-79ff746c4-hhsm2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-hhsm2",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1242",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1db97554-00f3-4c56-9a06-3b5f04a257d9",
      ResourceVersion: (string) (len=8) "38891868",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1bf90cf9e124606ec805c4e99f1f67c541d706698540dccfcad89f191a0c9112",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.57/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.57/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "b8d1d09f-9703-410c-9e8b-6793f94535b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 38 64 31 64 30 39 66  |uid\":\"b8d1d09f|
              000000a0  2d 39 37 30 33 2d 34 31  30 63 2d 39 65 38 62 2d  |-9703-410c-9e8b-|
              000000b0  36 37 39 33 66 39 34 35  33 35 62 34 5c 22 7d 22  |6793f94535b4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397085,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 35 37 5c 22 7d 22 3a  |.233.118.57\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n296g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n296g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397086,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860397085,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9b2b1353fe0268138faa120bee42700100fb6e1ab88a26d2cc85a4577ea53d52",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 27 23:11:26.406: INFO: pod: "test-deployment-79ff746c4-v4jb2":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-v4jb2",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-1242",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c50486b9-19f6-41a5-b5d4-7e594696ee3e",
      ResourceVersion: (string) (len=8) "38891836",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.175/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "695c058971821c0cf2186ff26c190f8e0a014e1c6c8eec01fc577706a8a6b424",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.175/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "b8d1d09f-9703-410c-9e8b-6793f94535b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 38 64 31 64 30 39 66  |uid\":\"b8d1d09f|
              000000a0  2d 39 37 30 33 2d 34 31  30 63 2d 39 65 38 62 2d  |-9703-410c-9e8b-|
              000000b0  36 37 39 33 66 39 34 35  33 35 62 34 5c 22 7d 22  |6793f94535b4\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397083,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 37 35 5c 22 7d 22 3a  |.233.76.175\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d9zdt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d9zdt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397084,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397082,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860397084,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://161b06041d75754657aa38afec13faa813f60dd1fd668b63b1c46d1af5ed4dc6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 27 23:11:26.411: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1242",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bff1f671-e945-4390-a3c1-866484725ae5",
      ResourceVersion: (string) (len=8) "38891759",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "8879feca-45ae-44ef-a97a-e33324bb0627",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 38 37 39  66 65 63 61 2d 34 35 61  |":\"8879feca-45a|
              00000130  65 2d 34 34 65 66 2d 61  39 37 61 2d 65 33 33 33  |e-44ef-a97a-e333|
              00000140  32 34 62 62 30 36 32 37  5c 22 7d 22 3a 7b 7d 7d  |24bb0627\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 27 23:11:26.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1242" for this suite. @ 08/27/24 23:11:26.437
• [9.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 08/27/24 23:11:26.47
  Aug 27 23:11:26.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename dns @ 08/27/24 23:11:26.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:11:26.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:11:26.516
  STEP: Creating a test headless service @ 08/27/24 23:11:26.521
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9949.svc.cluster.local;sleep 1; done
   @ 08/27/24 23:11:26.558
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9949.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9949.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9949.svc.cluster.local;sleep 1; done
   @ 08/27/24 23:11:26.558
  STEP: creating a pod to probe DNS @ 08/27/24 23:11:26.558
  STEP: submitting the pod to kubernetes @ 08/27/24 23:11:26.558
  STEP: retrieving the pod @ 08/27/24 23:11:28.61
  STEP: looking for the results for each expected name from probers @ 08/27/24 23:11:28.619
  Aug 27 23:11:28.631: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.642: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.663: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.676: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.687: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.697: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.706: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.717: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:28.717: INFO: Lookups using dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9949.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9949.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local jessie_udp@dns-test-service-2.dns-9949.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9949.svc.cluster.local]

  Aug 27 23:11:28.750: INFO: Pod client logs for webserver: 
  Aug 27 23:11:28.764: INFO: Pod client logs for querier: 
  Aug 27 23:11:28.778: INFO: Pod client logs for jessie-querier: 
  Aug 27 23:11:33.626: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.632: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.640: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.652: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.663: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.675: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.684: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.694: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9949.svc.cluster.local from pod dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162: the server could not find the requested resource (get pods dns-test-b49c105a-e384-45ff-84da-48e05408c162)
  Aug 27 23:11:33.694: INFO: Lookups using dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9949.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9949.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9949.svc.cluster.local jessie_udp@dns-test-service-2.dns-9949.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9949.svc.cluster.local]

  Aug 27 23:11:33.711: INFO: Pod client logs for webserver: 
  Aug 27 23:11:33.726: INFO: Pod client logs for querier: 
  Aug 27 23:11:33.764: INFO: Pod client logs for jessie-querier: 
  Aug 27 23:11:38.721: INFO: DNS probes using dns-9949/dns-test-b49c105a-e384-45ff-84da-48e05408c162 succeeded

  STEP: deleting the pod @ 08/27/24 23:11:38.723
  STEP: deleting the test headless service @ 08/27/24 23:11:38.816
  Aug 27 23:11:38.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9949" for this suite. @ 08/27/24 23:11:38.909
• [12.477 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 08/27/24 23:11:38.948
  Aug 27 23:11:38.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/27/24 23:11:38.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:11:39.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:11:39.019
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 08/27/24 23:11:39.028
  Aug 27 23:11:39.029: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 08/27/24 23:11:58.341
  Aug 27 23:11:58.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:12:08.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:12:29.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4945" for this suite. @ 08/27/24 23:12:29.988
• [51.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 08/27/24 23:12:30.012
  Aug 27 23:12:30.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:12:30.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:12:30.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:12:30.117
  STEP: Creating configMap configmap-3692/configmap-test-99f6d576-0515-4780-827a-6d08881e70dc @ 08/27/24 23:12:30.124
  STEP: Creating a pod to test consume configMaps @ 08/27/24 23:12:30.133
  STEP: Saw pod success @ 08/27/24 23:12:34.197
  Aug 27 23:12:34.202: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-9d081149-ad3e-4d3c-897a-5bbf45ce32d0 container env-test: <nil>
  STEP: delete the pod @ 08/27/24 23:12:34.23
  Aug 27 23:12:34.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3692" for this suite. @ 08/27/24 23:12:34.302
• [4.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 08/27/24 23:12:34.332
  Aug 27 23:12:34.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replicaset @ 08/27/24 23:12:34.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:12:34.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:12:34.392
  STEP: Create a ReplicaSet @ 08/27/24 23:12:34.398
  STEP: Verify that the required pods have come up @ 08/27/24 23:12:34.428
  Aug 27 23:12:34.463: INFO: Pod name sample-pod: Found 1 pods out of 3
  Aug 27 23:12:39.488: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 08/27/24 23:12:39.488
  Aug 27 23:12:39.499: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 08/27/24 23:12:39.499
  STEP: DeleteCollection of the ReplicaSets @ 08/27/24 23:12:39.516
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 08/27/24 23:12:39.559
  Aug 27 23:12:39.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6830" for this suite. @ 08/27/24 23:12:39.609
• [5.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 08/27/24 23:12:39.686
  Aug 27 23:12:39.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:12:39.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:12:39.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:12:39.831
  Aug 27 23:12:39.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-587" for this suite. @ 08/27/24 23:12:39.99
• [0.329 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 08/27/24 23:12:40.016
  Aug 27 23:12:40.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename daemonsets @ 08/27/24 23:12:40.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:12:40.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:12:40.08
  STEP: Creating simple DaemonSet "daemon-set" @ 08/27/24 23:12:40.149
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/27/24 23:12:40.168
  Aug 27 23:12:40.184: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:40.184: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:40.184: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:40.203: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 27 23:12:40.203: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:12:41.180: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:41.180: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:41.180: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:41.191: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 27 23:12:41.191: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:12:42.184: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:42.184: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:42.184: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:42.206: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 27 23:12:42.206: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:12:43.185: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:43.186: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:43.186: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:43.194: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 27 23:12:43.194: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 08/27/24 23:12:43.201
  Aug 27 23:12:43.241: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:43.241: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:43.241: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:43.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 27 23:12:43.254: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  Aug 27 23:12:44.241: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:44.241: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:44.241: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:44.249: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 27 23:12:44.249: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  Aug 27 23:12:45.246: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:45.246: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:45.246: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:45.256: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 27 23:12:45.256: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  Aug 27 23:12:46.245: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:46.245: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:46.246: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:46.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 27 23:12:46.272: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  Aug 27 23:12:47.243: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:47.243: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:47.243: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:47.252: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 27 23:12:47.252: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  Aug 27 23:12:48.245: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:48.245: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:48.245: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:12:48.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 27 23:12:48.254: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/27/24 23:12:48.264
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-457, will wait for the garbage collector to delete the pods @ 08/27/24 23:12:48.264
  Aug 27 23:12:48.336: INFO: Deleting DaemonSet.extensions daemon-set took: 13.140837ms
  Aug 27 23:12:48.437: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.624228ms
  Aug 27 23:12:51.346: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 27 23:12:51.346: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 27 23:12:51.361: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38892584"},"items":null}

  Aug 27 23:12:51.369: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38892584"},"items":null}

  Aug 27 23:12:51.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-457" for this suite. @ 08/27/24 23:12:51.416
• [11.418 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 08/27/24 23:12:51.435
  Aug 27 23:12:51.435: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/27/24 23:12:51.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:12:51.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:12:51.487
  STEP: Creating a ResourceQuota with terminating scope @ 08/27/24 23:12:51.496
  STEP: Ensuring ResourceQuota status is calculated @ 08/27/24 23:12:51.507
  STEP: Creating a ResourceQuota with not terminating scope @ 08/27/24 23:12:53.521
  STEP: Ensuring ResourceQuota status is calculated @ 08/27/24 23:12:53.531
  STEP: Creating a long running pod @ 08/27/24 23:12:55.542
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 08/27/24 23:12:55.583
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 08/27/24 23:12:57.59
  STEP: Deleting the pod @ 08/27/24 23:12:59.601
  STEP: Ensuring resource quota status released the pod usage @ 08/27/24 23:12:59.648
  STEP: Creating a terminating pod @ 08/27/24 23:13:01.66
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 08/27/24 23:13:01.69
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 08/27/24 23:13:03.699
  STEP: Deleting the pod @ 08/27/24 23:13:05.709
  STEP: Ensuring resource quota status released the pod usage @ 08/27/24 23:13:05.739
  Aug 27 23:13:07.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3702" for this suite. @ 08/27/24 23:13:07.771
• [16.351 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 08/27/24 23:13:07.787
  Aug 27 23:13:07.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/27/24 23:13:07.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:13:07.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:13:07.89
  Aug 27 23:13:09.971: INFO: Deleting pod "var-expansion-89982da0-0c69-420f-9c8d-15da5b0a26f2" in namespace "var-expansion-9084"
  Aug 27 23:13:09.989: INFO: Wait up to 5m0s for pod "var-expansion-89982da0-0c69-420f-9c8d-15da5b0a26f2" to be fully deleted
  Aug 27 23:13:14.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9084" for this suite. @ 08/27/24 23:13:14.049
• [6.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 08/27/24 23:13:14.121
  Aug 27 23:13:14.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:13:14.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:13:14.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:13:14.195
  STEP: Creating configMap that has name configmap-test-emptyKey-3ac12b47-ad47-4a31-abb0-7e17ea50d773 @ 08/27/24 23:13:14.223
  Aug 27 23:13:14.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4658" for this suite. @ 08/27/24 23:13:14.255
• [0.172 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 08/27/24 23:13:14.296
  Aug 27 23:13:14.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename dns @ 08/27/24 23:13:14.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:13:14.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:13:14.381
  STEP: Creating a test externalName service @ 08/27/24 23:13:14.389
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-687.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-687.svc.cluster.local; sleep 1; done
   @ 08/27/24 23:13:14.404
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-687.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-687.svc.cluster.local; sleep 1; done
   @ 08/27/24 23:13:14.404
  STEP: creating a pod to probe DNS @ 08/27/24 23:13:14.404
  STEP: submitting the pod to kubernetes @ 08/27/24 23:13:14.404
  STEP: retrieving the pod @ 08/27/24 23:13:16.484
  STEP: looking for the results for each expected name from probers @ 08/27/24 23:13:16.493
  Aug 27 23:13:16.512: INFO: DNS probes using dns-test-794896a5-d384-48c8-aeb0-2245ef97cafd succeeded

  STEP: changing the externalName to bar.example.com @ 08/27/24 23:13:16.513
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-687.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-687.svc.cluster.local; sleep 1; done
   @ 08/27/24 23:13:16.531
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-687.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-687.svc.cluster.local; sleep 1; done
   @ 08/27/24 23:13:16.532
  STEP: creating a second pod to probe DNS @ 08/27/24 23:13:16.532
  STEP: submitting the pod to kubernetes @ 08/27/24 23:13:16.533
  STEP: retrieving the pod @ 08/27/24 23:13:20.584
  STEP: looking for the results for each expected name from probers @ 08/27/24 23:13:20.595
  Aug 27 23:13:20.629: INFO: DNS probes using dns-test-49edbc64-e649-4e59-8796-5c644b89035a succeeded

  STEP: changing the service to type=ClusterIP @ 08/27/24 23:13:20.629
  W0827 23:13:20.670187      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-687.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-687.svc.cluster.local; sleep 1; done
   @ 08/27/24 23:13:20.67
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-687.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-687.svc.cluster.local; sleep 1; done
   @ 08/27/24 23:13:20.67
  STEP: creating a third pod to probe DNS @ 08/27/24 23:13:20.67
  STEP: submitting the pod to kubernetes @ 08/27/24 23:13:20.691
  STEP: retrieving the pod @ 08/27/24 23:13:22.783
  STEP: looking for the results for each expected name from probers @ 08/27/24 23:13:22.798
  Aug 27 23:13:22.845: INFO: DNS probes using dns-test-9a28c866-84af-45d9-9edd-2503ae5ec30a succeeded

  STEP: deleting the pod @ 08/27/24 23:13:22.845
  STEP: deleting the pod @ 08/27/24 23:13:22.969
  STEP: deleting the pod @ 08/27/24 23:13:23.036
  STEP: deleting the test externalName service @ 08/27/24 23:13:23.134
  Aug 27 23:13:23.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-687" for this suite. @ 08/27/24 23:13:23.24
• [8.980 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 08/27/24 23:13:23.276
  Aug 27 23:13:23.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/27/24 23:13:23.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:13:23.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:13:23.361
  STEP: Creating projection with secret that has name secret-emptykey-test-28787f04-e005-49b9-85d2-52dfd6c1674e @ 08/27/24 23:13:23.371
  Aug 27 23:13:23.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2934" for this suite. @ 08/27/24 23:13:23.39
• [0.148 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 08/27/24 23:13:23.424
  Aug 27 23:13:23.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename gc @ 08/27/24 23:13:23.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:13:23.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:13:23.524
  STEP: create the deployment @ 08/27/24 23:13:23.535
  W0827 23:13:23.552879      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/27/24 23:13:23.553
  STEP: delete the deployment @ 08/27/24 23:13:24.066
  STEP: wait for all rs to be garbage collected @ 08/27/24 23:13:24.097
  STEP: expected 0 pods, got 2 pods @ 08/27/24 23:13:24.152
  STEP: Gathering metrics @ 08/27/24 23:13:24.627
  Aug 27 23:13:24.821: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 27 23:13:24.821: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-504" for this suite. @ 08/27/24 23:13:24.838
• [1.430 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 08/27/24 23:13:24.854
  Aug 27 23:13:24.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename taint-single-pod @ 08/27/24 23:13:24.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:13:24.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:13:24.901
  Aug 27 23:13:24.906: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 27 23:14:24.907: INFO: Waiting for terminating namespaces to be deleted...
  Aug 27 23:14:24.914: INFO: Starting informer...
  STEP: Starting pod... @ 08/27/24 23:14:24.914
  Aug 27 23:14:25.148: INFO: Pod is running on env1-test-worker-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/27/24 23:14:25.149
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/27/24 23:14:25.185
  STEP: Waiting short time to make sure Pod is queued for deletion @ 08/27/24 23:14:25.198
  Aug 27 23:14:25.198: INFO: Pod wasn't evicted. Proceeding
  Aug 27 23:14:25.198: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/27/24 23:14:25.263
  STEP: Waiting some time to make sure that toleration time passed. @ 08/27/24 23:14:25.281
  Aug 27 23:15:40.284: INFO: Pod wasn't evicted. Test successful
  Aug 27 23:15:40.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3926" for this suite. @ 08/27/24 23:15:40.298
• [135.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 08/27/24 23:15:40.311
  Aug 27 23:15:40.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/27/24 23:15:40.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:15:40.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:15:40.371
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/27/24 23:15:40.385
  STEP: Saw pod success @ 08/27/24 23:15:44.445
  Aug 27 23:15:44.458: INFO: Trying to get logs from node env1-test-worker-2 pod pod-04541dcb-b358-4da2-b5c6-17376b33a302 container test-container: <nil>
  STEP: delete the pod @ 08/27/24 23:15:44.493
  Aug 27 23:15:44.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2003" for this suite. @ 08/27/24 23:15:44.539
• [4.250 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 08/27/24 23:15:44.561
  Aug 27 23:15:44.561: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/27/24 23:15:44.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:15:44.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:15:44.621
  STEP: create the container to handle the HTTPGet hook request. @ 08/27/24 23:15:44.645
  STEP: create the pod with lifecycle hook @ 08/27/24 23:15:48.719
  STEP: delete the pod with lifecycle hook @ 08/27/24 23:15:52.767
  STEP: check prestop hook @ 08/27/24 23:15:54.864
  Aug 27 23:15:54.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4857" for this suite. @ 08/27/24 23:15:54.902
• [10.361 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 08/27/24 23:15:54.922
  Aug 27 23:15:54.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/27/24 23:15:54.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:15:54.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:15:54.977
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 08/27/24 23:15:54.985
  Aug 27 23:15:54.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:16:04.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:16:25.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5519" for this suite. @ 08/27/24 23:16:25.271
• [30.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 08/27/24 23:16:25.296
  Aug 27 23:16:25.296: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replicaset @ 08/27/24 23:16:25.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:16:25.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:16:25.376
  Aug 27 23:16:25.427: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 27 23:16:30.448: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/27/24 23:16:30.448
  STEP: Scaling up "test-rs" replicaset @ 08/27/24 23:16:30.448
  Aug 27 23:16:30.482: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 08/27/24 23:16:30.482
  Aug 27 23:16:30.531: INFO: observed ReplicaSet test-rs in namespace replicaset-6353 with ReadyReplicas 1, AvailableReplicas 1
  Aug 27 23:16:30.582: INFO: observed ReplicaSet test-rs in namespace replicaset-6353 with ReadyReplicas 1, AvailableReplicas 1
  Aug 27 23:16:30.714: INFO: observed ReplicaSet test-rs in namespace replicaset-6353 with ReadyReplicas 1, AvailableReplicas 1
  Aug 27 23:16:30.765: INFO: observed ReplicaSet test-rs in namespace replicaset-6353 with ReadyReplicas 1, AvailableReplicas 1
  Aug 27 23:16:32.402: INFO: observed ReplicaSet test-rs in namespace replicaset-6353 with ReadyReplicas 2, AvailableReplicas 2
  Aug 27 23:16:33.269: INFO: observed Replicaset test-rs in namespace replicaset-6353 with ReadyReplicas 3 found true
  Aug 27 23:16:33.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6353" for this suite. @ 08/27/24 23:16:33.29
• [8.029 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 08/27/24 23:16:33.325
  Aug 27 23:16:33.325: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename job @ 08/27/24 23:16:33.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:16:33.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:16:33.391
  STEP: Creating a job @ 08/27/24 23:16:33.396
  STEP: Ensuring active pods == parallelism @ 08/27/24 23:16:33.412
  STEP: delete a job @ 08/27/24 23:16:35.422
  STEP: deleting Job.batch foo in namespace job-1995, will wait for the garbage collector to delete the pods @ 08/27/24 23:16:35.422
  Aug 27 23:16:35.533: INFO: Deleting Job.batch foo took: 51.927964ms
  Aug 27 23:16:35.634: INFO: Terminating Job.batch foo pods took: 100.982214ms
  STEP: Ensuring job was deleted @ 08/27/24 23:16:39.234
  Aug 27 23:16:39.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1995" for this suite. @ 08/27/24 23:16:39.261
• [5.955 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 08/27/24 23:16:39.28
  Aug 27 23:16:39.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename field-validation @ 08/27/24 23:16:39.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:16:39.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:16:39.371
  STEP: apply creating a deployment @ 08/27/24 23:16:39.377
  Aug 27 23:16:39.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1821" for this suite. @ 08/27/24 23:16:39.443
• [0.183 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 08/27/24 23:16:39.464
  Aug 27 23:16:39.464: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pv @ 08/27/24 23:16:39.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:16:39.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:16:39.548
  STEP: Creating initial PV and PVC @ 08/27/24 23:16:39.554
  Aug 27 23:16:39.554: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8571" @ 08/27/24 23:16:39.584
  STEP: Listing PVCs in namespace "pv-8571" @ 08/27/24 23:16:39.6
  STEP: Reading "pvc-9cs24" Status @ 08/27/24 23:16:39.616
  STEP: Reading "pv-8571-ltmdv" Status @ 08/27/24 23:16:39.635
  STEP: Patching "pvc-9cs24" Status @ 08/27/24 23:16:39.656
  STEP: Patching "pv-8571-ltmdv" Status @ 08/27/24 23:16:39.672
  STEP: Updating "pvc-9cs24" Status @ 08/27/24 23:16:39.734
  STEP: Updating "pv-8571-ltmdv" Status @ 08/27/24 23:16:39.765
  Aug 27 23:16:39.795: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Aug 27 23:16:39.795: INFO: Deleting PersistentVolumeClaim "pvc-9cs24"
  Aug 27 23:16:39.809: INFO: Deleting PersistentVolume "pv-8571-ltmdv"
  Aug 27 23:16:39.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8571" for this suite. @ 08/27/24 23:16:39.84
• [0.396 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 08/27/24 23:16:39.86
  Aug 27 23:16:39.860: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename watch @ 08/27/24 23:16:39.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:16:39.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:16:39.934
  STEP: creating a watch on configmaps with label A @ 08/27/24 23:16:39.941
  STEP: creating a watch on configmaps with label B @ 08/27/24 23:16:39.944
  STEP: creating a watch on configmaps with label A or B @ 08/27/24 23:16:39.947
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 08/27/24 23:16:39.951
  Aug 27 23:16:39.961: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894206 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 27 23:16:39.962: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894206 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 08/27/24 23:16:39.962
  Aug 27 23:16:39.990: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894209 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 27 23:16:39.990: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894209 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 08/27/24 23:16:39.991
  Aug 27 23:16:40.009: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894210 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 27 23:16:40.009: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894210 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 08/27/24 23:16:40.01
  Aug 27 23:16:40.022: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894211 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 27 23:16:40.023: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3875  6cc288d8-5037-4ce2-b253-fa3961171b28 38894211 0 2024-08-27 23:16:39 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 08/27/24 23:16:40.024
  Aug 27 23:16:40.049: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3875  f295b5b4-12be-42ee-8bd7-8b7c3cb36e2d 38894213 0 2024-08-27 23:16:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 27 23:16:40.049: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3875  f295b5b4-12be-42ee-8bd7-8b7c3cb36e2d 38894213 0 2024-08-27 23:16:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 08/27/24 23:16:50.05
  Aug 27 23:16:50.069: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3875  f295b5b4-12be-42ee-8bd7-8b7c3cb36e2d 38894291 0 2024-08-27 23:16:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 27 23:16:50.069: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3875  f295b5b4-12be-42ee-8bd7-8b7c3cb36e2d 38894291 0 2024-08-27 23:16:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-08-27 23:16:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 27 23:17:00.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3875" for this suite. @ 08/27/24 23:17:00.089
• [20.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 08/27/24 23:17:00.108
  Aug 27 23:17:00.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename conformance-tests @ 08/27/24 23:17:00.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:17:00.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:17:00.167
  STEP: Getting node addresses @ 08/27/24 23:17:00.172
  Aug 27 23:17:00.173: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Aug 27 23:17:00.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5118" for this suite. @ 08/27/24 23:17:00.212
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 08/27/24 23:17:00.242
  Aug 27 23:17:00.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename tables @ 08/27/24 23:17:00.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:17:00.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:17:00.329
  Aug 27 23:17:00.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1647" for this suite. @ 08/27/24 23:17:00.353
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 08/27/24 23:17:00.386
  Aug 27 23:17:00.386: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/27/24 23:17:00.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:17:00.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:17:00.491
  STEP: set up a multi version CRD @ 08/27/24 23:17:00.498
  Aug 27 23:17:00.499: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: mark a version not serverd @ 08/27/24 23:17:14.786
  STEP: check the unserved version gets removed @ 08/27/24 23:17:14.82
  STEP: check the other version is not changed @ 08/27/24 23:17:18.787
  Aug 27 23:17:26.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7064" for this suite. @ 08/27/24 23:17:26.427
• [26.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 08/27/24 23:17:26.462
  Aug 27 23:17:26.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/27/24 23:17:26.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:17:26.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:17:26.566
  STEP: Setting up server cert @ 08/27/24 23:17:26.642
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/27/24 23:17:27.926
  STEP: Deploying the webhook pod @ 08/27/24 23:17:27.955
  STEP: Wait for the deployment to be ready @ 08/27/24 23:17:27.998
  Aug 27 23:17:28.046: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/27/24 23:17:30.105
  STEP: Verifying the service has paired with the endpoint @ 08/27/24 23:17:30.138
  Aug 27 23:17:31.138: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 27 23:17:31.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4246-crds.webhook.example.com via the AdmissionRegistration API @ 08/27/24 23:17:36.696
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/27/24 23:17:36.735
  Aug 27 23:17:39.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8347" for this suite. @ 08/27/24 23:17:39.672
  STEP: Destroying namespace "webhook-markers-6629" for this suite. @ 08/27/24 23:17:39.693
• [13.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 08/27/24 23:17:39.716
  Aug 27 23:17:39.716: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/27/24 23:17:39.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:17:39.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:17:39.783
  STEP: Creating a pod to test downward api env vars @ 08/27/24 23:17:39.795
  STEP: Saw pod success @ 08/27/24 23:17:43.853
  Aug 27 23:17:43.860: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-66842e5a-1135-4962-87f7-cbd2ddc90be4 container dapi-container: <nil>
  STEP: delete the pod @ 08/27/24 23:17:43.891
  Aug 27 23:17:43.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7035" for this suite. @ 08/27/24 23:17:43.944
• [4.245 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 08/27/24 23:17:43.963
  Aug 27 23:17:43.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:17:43.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:17:44.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:17:44.028
  STEP: creating all guestbook components @ 08/27/24 23:17:44.035
  Aug 27 23:17:44.035: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Aug 27 23:17:44.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 create -f -'
  Aug 27 23:17:44.312: INFO: stderr: ""
  Aug 27 23:17:44.312: INFO: stdout: "service/agnhost-replica created\n"
  Aug 27 23:17:44.312: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Aug 27 23:17:44.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 create -f -'
  Aug 27 23:17:44.657: INFO: stderr: ""
  Aug 27 23:17:44.657: INFO: stdout: "service/agnhost-primary created\n"
  Aug 27 23:17:44.657: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Aug 27 23:17:44.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 create -f -'
  Aug 27 23:17:44.941: INFO: stderr: ""
  Aug 27 23:17:44.941: INFO: stdout: "service/frontend created\n"
  Aug 27 23:17:44.941: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Aug 27 23:17:44.942: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 create -f -'
  Aug 27 23:17:45.195: INFO: stderr: ""
  Aug 27 23:17:45.195: INFO: stdout: "deployment.apps/frontend created\n"
  Aug 27 23:17:45.196: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 27 23:17:45.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 create -f -'
  Aug 27 23:17:45.430: INFO: stderr: ""
  Aug 27 23:17:45.430: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Aug 27 23:17:45.431: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 27 23:17:45.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 create -f -'
  Aug 27 23:17:45.682: INFO: stderr: ""
  Aug 27 23:17:45.682: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 08/27/24 23:17:45.682
  Aug 27 23:17:45.682: INFO: Waiting for all frontend pods to be Running.
  Aug 27 23:17:50.734: INFO: Waiting for frontend to serve content.
  Aug 27 23:17:50.769: INFO: Trying to add a new entry to the guestbook.
  Aug 27 23:17:50.802: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 08/27/24 23:17:50.83
  Aug 27 23:17:50.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 delete --grace-period=0 --force -f -'
  Aug 27 23:17:51.053: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:17:51.053: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 08/27/24 23:17:51.053
  Aug 27 23:17:51.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 delete --grace-period=0 --force -f -'
  Aug 27 23:17:51.353: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:17:51.353: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/27/24 23:17:51.353
  Aug 27 23:17:51.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 delete --grace-period=0 --force -f -'
  Aug 27 23:17:51.577: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:17:51.577: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/27/24 23:17:51.577
  Aug 27 23:17:51.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 delete --grace-period=0 --force -f -'
  Aug 27 23:17:51.766: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:17:51.766: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/27/24 23:17:51.766
  Aug 27 23:17:51.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 delete --grace-period=0 --force -f -'
  Aug 27 23:17:52.004: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:17:52.004: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/27/24 23:17:52.004
  Aug 27 23:17:52.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-7646 delete --grace-period=0 --force -f -'
  Aug 27 23:17:52.218: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:17:52.218: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Aug 27 23:17:52.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7646" for this suite. @ 08/27/24 23:17:52.229
• [8.281 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 08/27/24 23:17:52.242
  Aug 27 23:17:52.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/27/24 23:17:52.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:17:52.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:17:52.353
  STEP: creating service endpoint-test2 in namespace services-8897 @ 08/27/24 23:17:52.383
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8897 to expose endpoints map[] @ 08/27/24 23:17:52.423
  Aug 27 23:17:52.451: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Aug 27 23:17:53.476: INFO: successfully validated that service endpoint-test2 in namespace services-8897 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8897 @ 08/27/24 23:17:53.476
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8897 to expose endpoints map[pod1:[80]] @ 08/27/24 23:17:55.551
  Aug 27 23:17:55.575: INFO: successfully validated that service endpoint-test2 in namespace services-8897 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 08/27/24 23:17:55.575
  Aug 27 23:17:55.575: INFO: Creating new exec pod
  Aug 27 23:17:58.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-8897 exec execpodsl4b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 27 23:17:58.948: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 27 23:17:58.948: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 27 23:17:58.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-8897 exec execpodsl4b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.246 80'
  Aug 27 23:17:59.195: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.246 80\nConnection to 10.233.53.246 80 port [tcp/http] succeeded!\n"
  Aug 27 23:17:59.195: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8897 @ 08/27/24 23:17:59.195
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8897 to expose endpoints map[pod1:[80] pod2:[80]] @ 08/27/24 23:18:01.242
  Aug 27 23:18:01.295: INFO: successfully validated that service endpoint-test2 in namespace services-8897 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 08/27/24 23:18:01.295
  Aug 27 23:18:02.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-8897 exec execpodsl4b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 27 23:18:02.715: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 27 23:18:02.715: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 27 23:18:02.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-8897 exec execpodsl4b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.246 80'
  Aug 27 23:18:03.079: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.246 80\nConnection to 10.233.53.246 80 port [tcp/http] succeeded!\n"
  Aug 27 23:18:03.079: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8897 @ 08/27/24 23:18:03.079
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8897 to expose endpoints map[pod2:[80]] @ 08/27/24 23:18:03.109
  Aug 27 23:18:04.188: INFO: successfully validated that service endpoint-test2 in namespace services-8897 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 08/27/24 23:18:04.188
  Aug 27 23:18:05.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-8897 exec execpodsl4b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 27 23:18:05.503: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 27 23:18:05.503: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 27 23:18:05.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-8897 exec execpodsl4b9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.246 80'
  Aug 27 23:18:05.799: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.246 80\nConnection to 10.233.53.246 80 port [tcp/http] succeeded!\n"
  Aug 27 23:18:05.799: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8897 @ 08/27/24 23:18:05.799
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8897 to expose endpoints map[] @ 08/27/24 23:18:05.829
  Aug 27 23:18:06.869: INFO: successfully validated that service endpoint-test2 in namespace services-8897 exposes endpoints map[]
  Aug 27 23:18:06.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8897" for this suite. @ 08/27/24 23:18:06.918
• [14.693 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 08/27/24 23:18:06.937
  Aug 27 23:18:06.937: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename dns @ 08/27/24 23:18:06.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:07.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:07.03
  STEP: Creating a test headless service @ 08/27/24 23:18:07.04
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7020.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7020.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 08/27/24 23:18:07.061
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7020.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7020.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 08/27/24 23:18:07.062
  STEP: creating a pod to probe DNS @ 08/27/24 23:18:07.062
  STEP: submitting the pod to kubernetes @ 08/27/24 23:18:07.062
  STEP: retrieving the pod @ 08/27/24 23:18:11.13
  STEP: looking for the results for each expected name from probers @ 08/27/24 23:18:11.141
  Aug 27 23:18:11.181: INFO: DNS probes using dns-7020/dns-test-0e8da600-3f09-4c24-8998-d936295aeee3 succeeded

  STEP: deleting the pod @ 08/27/24 23:18:11.185
  STEP: deleting the test headless service @ 08/27/24 23:18:11.237
  Aug 27 23:18:11.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7020" for this suite. @ 08/27/24 23:18:11.317
• [4.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 08/27/24 23:18:11.354
  Aug 27 23:18:11.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/27/24 23:18:11.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:11.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:11.396
  Aug 27 23:18:11.403: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Aug 27 23:18:11.439: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 27 23:18:16.453: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/27/24 23:18:16.453
  Aug 27 23:18:16.453: INFO: Creating deployment "test-rolling-update-deployment"
  Aug 27 23:18:16.465: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Aug 27 23:18:16.476: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Aug 27 23:18:18.491: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Aug 27 23:18:18.502: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 18, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 18, 16, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 18, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 18, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 27 23:18:20.509: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Aug 27 23:18:20.531: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3793",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7844493-9c6f-4843-88c4-1f6d3f7ba1e4",
      ResourceVersion: (string) (len=8) "38895206",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 27 23:18:20.568: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3793",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e13b1e4-dfc8-4bee-8766-36cdf540ff8c",
      ResourceVersion: (string) (len=8) "38895194",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b7844493-9c6f-4843-88c4-1f6d3f7ba1e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 37 38 34 34 34  39 33 2d 39 63 36 66 2d  |\"b7844493-9c6f-|
              00000120  34 38 34 33 2d 38 38 63  34 2d 31 66 36 64 33 66  |4843-88c4-1f6d3f|
              00000130  37 62 61 31 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7ba1e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 27 23:18:20.573: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Aug 27 23:18:20.573: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3793",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "869e6199-5976-4678-ab1b-d9486f8b13c8",
      ResourceVersion: (string) (len=8) "38895203",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "b7844493-9c6f-4843-88c4-1f6d3f7ba1e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 62 37 38 34 34 34 39  |"uid\":\"b784449|
              000000b0  33 2d 39 63 36 66 2d 34  38 34 33 2d 38 38 63 34  |3-9c6f-4843-88c4|
              000000c0  2d 31 66 36 64 33 66 37  62 61 31 65 34 5c 22 7d  |-1f6d3f7ba1e4\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 27 23:18:20.593: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-q6b5r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-q6b5r",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-3793",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28b1f8b5-9c8a-4fee-9808-216aa91f5335",
      ResourceVersion: (string) (len=8) "38895193",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3c3071823c3fef429fc6de6e389a16d8a53a720e962b246c6fe165ba402d6673",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.157/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.157/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "4e13b1e4-dfc8-4bee-8766-36cdf540ff8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  31 33 62 31 65 34 2d 64  |d\":\"4e13b1e4-d|
              00000090  66 63 38 2d 34 62 65 65  2d 38 37 36 36 2d 33 36  |fc8-4bee-8766-36|
              000000a0  63 64 66 35 34 30 66 66  38 63 5c 22 7d 22 3a 7b  |cdf540ff8c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 35 37 5c 22 7d 22 3a  |.233.76.157\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z85mh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z85mh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860397496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860397496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860397497,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://ae07aa6f17512cdf9a5dcb98b9b274145cf901458f5351be1901f5438a50b491",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 27 23:18:20.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3793" for this suite. @ 08/27/24 23:18:20.611
• [9.273 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 08/27/24 23:18:20.628
  Aug 27 23:18:20.628: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename job @ 08/27/24 23:18:20.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:20.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:20.713
  STEP: Creating a suspended job @ 08/27/24 23:18:20.728
  STEP: Patching the Job @ 08/27/24 23:18:20.739
  STEP: Watching for Job to be patched @ 08/27/24 23:18:20.774
  Aug 27 23:18:20.778: INFO: Event ADDED observed for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-job-label:e2e-2fdn4] and annotations: map[]
  Aug 27 23:18:20.778: INFO: Event MODIFIED found for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[]
  STEP: Updating the job @ 08/27/24 23:18:20.778
  STEP: Watching for Job to be updated @ 08/27/24 23:18:20.817
  Aug 27 23:18:20.820: INFO: Event MODIFIED found for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[updated:true]
  Aug 27 23:18:20.821: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 08/27/24 23:18:20.821
  Aug 27 23:18:20.840: INFO: Job: e2e-2fdn4 as labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4]
  STEP: Waiting for job to complete @ 08/27/24 23:18:20.84
  STEP: Delete a job collection with a labelselector @ 08/27/24 23:18:30.851
  STEP: Watching for Job to be deleted @ 08/27/24 23:18:30.874
  Aug 27 23:18:30.877: INFO: Event MODIFIED observed for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[updated:true]
  Aug 27 23:18:30.878: INFO: Event MODIFIED observed for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[updated:true]
  Aug 27 23:18:30.879: INFO: Event MODIFIED observed for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[updated:true]
  Aug 27 23:18:30.879: INFO: Event MODIFIED observed for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[updated:true]
  Aug 27 23:18:30.880: INFO: Event MODIFIED observed for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[updated:true]
  Aug 27 23:18:30.880: INFO: Event DELETED found for Job e2e-2fdn4 in namespace job-9444 with labels: map[e2e-2fdn4:patched e2e-job-label:e2e-2fdn4] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 08/27/24 23:18:30.881
  Aug 27 23:18:30.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9444" for this suite. @ 08/27/24 23:18:30.939
• [10.377 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 08/27/24 23:18:31.007
  Aug 27 23:18:31.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/27/24 23:18:31.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:31.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:31.095
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6895 @ 08/27/24 23:18:31.102
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/27/24 23:18:31.182
  STEP: creating service externalsvc in namespace services-6895 @ 08/27/24 23:18:31.182
  STEP: creating replication controller externalsvc in namespace services-6895 @ 08/27/24 23:18:31.223
  I0827 23:18:31.251270      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6895, replica count: 2
  I0827 23:18:34.302231      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 08/27/24 23:18:34.314
  Aug 27 23:18:34.377: INFO: Creating new exec pod
  Aug 27 23:18:36.435: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-6895 exec execpod9z2g7 -- /bin/sh -x -c nslookup nodeport-service.services-6895.svc.cluster.local'
  Aug 27 23:18:36.750: INFO: stderr: "+ nslookup nodeport-service.services-6895.svc.cluster.local\n"
  Aug 27 23:18:36.750: INFO: stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nnodeport-service.services-6895.svc.cluster.local\tcanonical name = externalsvc.services-6895.svc.cluster.local.\nName:\texternalsvc.services-6895.svc.cluster.local\nAddress: 10.233.62.146\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6895, will wait for the garbage collector to delete the pods @ 08/27/24 23:18:36.75
  Aug 27 23:18:36.836: INFO: Deleting ReplicationController externalsvc took: 18.681603ms
  Aug 27 23:18:36.936: INFO: Terminating ReplicationController externalsvc pods took: 100.362694ms
  Aug 27 23:18:40.295: INFO: Cleaning up the NodePort to ExternalName test service
  Aug 27 23:18:40.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6895" for this suite. @ 08/27/24 23:18:40.396
• [9.424 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 08/27/24 23:18:40.438
  Aug 27 23:18:40.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:18:40.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:40.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:40.53
  STEP: Creating configMap with name configmap-test-volume-map-f4aa28f5-61cc-4dd9-a716-77d9e1e8bbab @ 08/27/24 23:18:40.536
  STEP: Creating a pod to test consume configMaps @ 08/27/24 23:18:40.548
  STEP: Saw pod success @ 08/27/24 23:18:44.606
  Aug 27 23:18:44.616: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-77a99849-2dad-4e43-b905-455ad303d2a6 container agnhost-container: <nil>
  STEP: delete the pod @ 08/27/24 23:18:44.64
  Aug 27 23:18:44.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3703" for this suite. @ 08/27/24 23:18:44.71
• [4.309 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 08/27/24 23:18:44.747
  Aug 27 23:18:44.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:18:44.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:44.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:44.822
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:18:44.831
  STEP: Saw pod success @ 08/27/24 23:18:48.933
  Aug 27 23:18:48.947: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-00953464-1292-4297-b992-e6d042b3946e container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:18:48.962
  Aug 27 23:18:48.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9120" for this suite. @ 08/27/24 23:18:49.012
• [4.276 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 08/27/24 23:18:49.026
  Aug 27 23:18:49.027: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename prestop @ 08/27/24 23:18:49.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:49.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:49.082
  STEP: Creating server pod server in namespace prestop-7002 @ 08/27/24 23:18:49.089
  STEP: Waiting for pods to come up. @ 08/27/24 23:18:49.105
  STEP: Creating tester pod tester in namespace prestop-7002 @ 08/27/24 23:18:51.163
  STEP: Deleting pre-stop pod @ 08/27/24 23:18:53.21
  Aug 27 23:18:58.244: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 08/27/24 23:18:58.25
  Aug 27 23:18:58.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7002" for this suite. @ 08/27/24 23:18:58.306
• [9.313 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 08/27/24 23:18:58.342
  Aug 27 23:18:58.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename dns @ 08/27/24 23:18:58.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:18:58.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:18:58.416
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2164.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2164.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 08/27/24 23:18:58.422
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2164.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2164.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 08/27/24 23:18:58.422
  STEP: creating a pod to probe /etc/hosts @ 08/27/24 23:18:58.422
  STEP: submitting the pod to kubernetes @ 08/27/24 23:18:58.422
  STEP: retrieving the pod @ 08/27/24 23:19:02.493
  STEP: looking for the results for each expected name from probers @ 08/27/24 23:19:02.502
  Aug 27 23:19:02.557: INFO: DNS probes using dns-2164/dns-test-737af5f8-f5cb-465c-a3d3-f0557c3c43b8 succeeded

  STEP: deleting the pod @ 08/27/24 23:19:02.56
  Aug 27 23:19:02.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2164" for this suite. @ 08/27/24 23:19:02.619
• [4.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 08/27/24 23:19:02.642
  Aug 27 23:19:02.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:19:02.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:02.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:02.74
  STEP: create deployment with httpd image @ 08/27/24 23:19:02.749
  Aug 27 23:19:02.749: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-3729 create -f -'
  Aug 27 23:19:03.007: INFO: stderr: ""
  Aug 27 23:19:03.007: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 08/27/24 23:19:03.007
  Aug 27 23:19:03.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-3729 diff -f -'
  Aug 27 23:19:07.931: INFO: rc: 1
  Aug 27 23:19:07.943: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-3729 delete -f -'
  Aug 27 23:19:08.080: INFO: stderr: ""
  Aug 27 23:19:08.080: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Aug 27 23:19:08.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3729" for this suite. @ 08/27/24 23:19:08.102
• [5.499 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 08/27/24 23:19:08.141
  Aug 27 23:19:08.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename chunking @ 08/27/24 23:19:08.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:08.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:08.216
  STEP: creating a large number of resources @ 08/27/24 23:19:08.226
  STEP: retrieving those results in paged fashion several times @ 08/27/24 23:19:25.858
  Aug 27 23:19:25.903: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Aug 27 23:19:25.958: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Aug 27 23:19:26.004: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Aug 27 23:19:26.054: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Aug 27 23:19:26.104: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Aug 27 23:19:26.159: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Aug 27 23:19:26.205: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Aug 27 23:19:26.252: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Aug 27 23:19:26.301: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Aug 27 23:19:26.354: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Aug 27 23:19:26.401: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Aug 27 23:19:26.455: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Aug 27 23:19:26.502: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Aug 27 23:19:26.553: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Aug 27 23:19:26.602: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Aug 27 23:19:26.652: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Aug 27 23:19:26.704: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Aug 27 23:19:26.751: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Aug 27 23:19:26.803: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Aug 27 23:19:26.853: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Aug 27 23:19:26.902: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Aug 27 23:19:26.951: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Aug 27 23:19:27.000: INFO: Retrieved 17/17 results with rv 38896326 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMjYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Aug 27 23:19:27.051: INFO: Retrieved 9/17 results with rv 38896326 and continue 
  Aug 27 23:19:27.102: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Aug 27 23:19:27.155: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Aug 27 23:19:27.203: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Aug 27 23:19:27.251: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Aug 27 23:19:27.306: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Aug 27 23:19:27.355: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Aug 27 23:19:27.408: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Aug 27 23:19:27.453: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Aug 27 23:19:27.514: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Aug 27 23:19:27.555: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Aug 27 23:19:27.603: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Aug 27 23:19:27.662: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Aug 27 23:19:27.711: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Aug 27 23:19:27.762: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Aug 27 23:19:27.807: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Aug 27 23:19:27.867: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Aug 27 23:19:27.904: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Aug 27 23:19:27.958: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Aug 27 23:19:28.009: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Aug 27 23:19:28.053: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Aug 27 23:19:28.103: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Aug 27 23:19:28.153: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Aug 27 23:19:28.203: INFO: Retrieved 17/17 results with rv 38896331 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Aug 27 23:19:28.256: INFO: Retrieved 9/17 results with rv 38896331 and continue 
  Aug 27 23:19:28.302: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Aug 27 23:19:28.354: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Aug 27 23:19:28.404: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Aug 27 23:19:28.453: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Aug 27 23:19:28.506: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Aug 27 23:19:28.559: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Aug 27 23:19:28.601: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Aug 27 23:19:28.664: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Aug 27 23:19:28.704: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Aug 27 23:19:28.758: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Aug 27 23:19:28.800: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Aug 27 23:19:28.853: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Aug 27 23:19:28.901: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Aug 27 23:19:28.954: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Aug 27 23:19:29.004: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Aug 27 23:19:29.052: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Aug 27 23:19:29.101: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Aug 27 23:19:29.151: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Aug 27 23:19:29.200: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Aug 27 23:19:29.249: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Aug 27 23:19:29.301: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Aug 27 23:19:29.354: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Aug 27 23:19:29.401: INFO: Retrieved 17/17 results with rv 38896335 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTYzMzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Aug 27 23:19:29.454: INFO: Retrieved 9/17 results with rv 38896335 and continue 
  STEP: retrieving those results all at once @ 08/27/24 23:19:29.454
  Aug 27 23:19:29.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1848" for this suite. @ 08/27/24 23:19:29.608
• [21.499 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 08/27/24 23:19:29.641
  Aug 27 23:19:29.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubelet-test @ 08/27/24 23:19:29.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:29.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:29.749
  Aug 27 23:19:31.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3310" for this suite. @ 08/27/24 23:19:31.839
• [2.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 08/27/24 23:19:31.864
  Aug 27 23:19:31.864: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename field-validation @ 08/27/24 23:19:31.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:31.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:31.926
  Aug 27 23:19:31.933: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  W0827 23:19:39.545594      19 warnings.go:70] unknown field "alpha"
  W0827 23:19:39.545649      19 warnings.go:70] unknown field "beta"
  W0827 23:19:39.545658      19 warnings.go:70] unknown field "delta"
  W0827 23:19:39.545667      19 warnings.go:70] unknown field "epsilon"
  W0827 23:19:39.545676      19 warnings.go:70] unknown field "gamma"
  Aug 27 23:19:40.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-949" for this suite. @ 08/27/24 23:19:40.23
• [8.393 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 08/27/24 23:19:40.258
  Aug 27 23:19:40.258: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:19:40.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:40.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:40.324
  STEP: starting the proxy server @ 08/27/24 23:19:40.332
  Aug 27 23:19:40.332: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-2436 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 08/27/24 23:19:40.43
  Aug 27 23:19:40.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2436" for this suite. @ 08/27/24 23:19:40.478
• [0.257 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 08/27/24 23:19:40.515
  Aug 27 23:19:40.515: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sysctl @ 08/27/24 23:19:40.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:40.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:40.565
  STEP: Creating a pod with one valid and two invalid sysctls @ 08/27/24 23:19:40.585
  Aug 27 23:19:40.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4225" for this suite. @ 08/27/24 23:19:40.636
• [0.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 08/27/24 23:19:40.67
  Aug 27 23:19:40.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/27/24 23:19:40.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:40.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:40.773
  STEP: Setting up server cert @ 08/27/24 23:19:40.85
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/27/24 23:19:41.68
  STEP: Deploying the webhook pod @ 08/27/24 23:19:41.696
  STEP: Wait for the deployment to be ready @ 08/27/24 23:19:41.725
  Aug 27 23:19:41.775: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/27/24 23:19:43.811
  STEP: Verifying the service has paired with the endpoint @ 08/27/24 23:19:43.839
  Aug 27 23:19:44.840: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 27 23:19:44.852: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 08/27/24 23:19:50.37
  STEP: Creating a custom resource that should be denied by the webhook @ 08/27/24 23:19:50.414
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 08/27/24 23:19:52.506
  STEP: Updating the custom resource with disallowed data should be denied @ 08/27/24 23:19:52.523
  STEP: Deleting the custom resource should be denied @ 08/27/24 23:19:52.558
  STEP: Remove the offending key and value from the custom resource data @ 08/27/24 23:19:52.584
  STEP: Deleting the updated custom resource should be successful @ 08/27/24 23:19:52.612
  Aug 27 23:19:53.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7564" for this suite. @ 08/27/24 23:19:53.609
  STEP: Destroying namespace "webhook-markers-5095" for this suite. @ 08/27/24 23:19:53.638
• [13.016 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 08/27/24 23:19:53.688
  Aug 27 23:19:53.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replication-controller @ 08/27/24 23:19:53.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:19:53.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:19:53.783
  STEP: Given a ReplicationController is created @ 08/27/24 23:19:53.791
  STEP: When the matched label of one of its pods change @ 08/27/24 23:19:53.82
  Aug 27 23:19:53.828: INFO: Pod name pod-release: Found 0 pods out of 1
  Aug 27 23:19:58.844: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/27/24 23:19:58.884
  Aug 27 23:19:59.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4448" for this suite. @ 08/27/24 23:19:59.92
• [6.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 08/27/24 23:19:59.953
  Aug 27 23:19:59.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:19:59.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:00.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:00.042
  STEP: creating the pod @ 08/27/24 23:20:00.073
  Aug 27 23:20:00.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 create -f -'
  Aug 27 23:20:00.452: INFO: stderr: ""
  Aug 27 23:20:00.452: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 08/27/24 23:20:02.507
  Aug 27 23:20:02.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 label pods pause testing-label=testing-label-value'
  Aug 27 23:20:02.758: INFO: stderr: ""
  Aug 27 23:20:02.758: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 08/27/24 23:20:02.758
  Aug 27 23:20:02.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 get pod pause -L testing-label'
  Aug 27 23:20:03.009: INFO: stderr: ""
  Aug 27 23:20:03.009: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 08/27/24 23:20:03.01
  Aug 27 23:20:03.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 label pods pause testing-label-'
  Aug 27 23:20:03.234: INFO: stderr: ""
  Aug 27 23:20:03.234: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 08/27/24 23:20:03.234
  Aug 27 23:20:03.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 get pod pause -L testing-label'
  Aug 27 23:20:03.406: INFO: stderr: ""
  Aug 27 23:20:03.406: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 08/27/24 23:20:03.406
  Aug 27 23:20:03.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 delete --grace-period=0 --force -f -'
  Aug 27 23:20:03.613: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:20:03.613: INFO: stdout: "pod \"pause\" force deleted\n"
  Aug 27 23:20:03.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 get rc,svc -l name=pause --no-headers'
  Aug 27 23:20:03.798: INFO: stderr: "No resources found in kubectl-506 namespace.\n"
  Aug 27 23:20:03.798: INFO: stdout: ""
  Aug 27 23:20:03.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-506 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 27 23:20:03.955: INFO: stderr: ""
  Aug 27 23:20:03.955: INFO: stdout: ""
  Aug 27 23:20:03.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-506" for this suite. @ 08/27/24 23:20:03.98
• [4.054 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 08/27/24 23:20:04.007
  Aug 27 23:20:04.007: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:20:04.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:04.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:04.127
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:20:04.137
  STEP: Saw pod success @ 08/27/24 23:20:10.301
  Aug 27 23:20:10.317: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-45274ddc-ea4b-48ec-accb-b365fac035f0 container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:20:10.342
  Aug 27 23:20:10.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1441" for this suite. @ 08/27/24 23:20:10.476
• [6.516 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 08/27/24 23:20:10.524
  Aug 27 23:20:10.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename events @ 08/27/24 23:20:10.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:10.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:10.592
  STEP: creating a test event @ 08/27/24 23:20:10.612
  STEP: listing all events in all namespaces @ 08/27/24 23:20:10.635
  STEP: patching the test event @ 08/27/24 23:20:10.673
  STEP: fetching the test event @ 08/27/24 23:20:10.697
  STEP: updating the test event @ 08/27/24 23:20:10.712
  STEP: getting the test event @ 08/27/24 23:20:10.754
  STEP: deleting the test event @ 08/27/24 23:20:10.766
  STEP: listing all events in all namespaces @ 08/27/24 23:20:10.795
  Aug 27 23:20:10.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9194" for this suite. @ 08/27/24 23:20:10.839
• [0.346 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 08/27/24 23:20:10.872
  Aug 27 23:20:10.872: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename server-version @ 08/27/24 23:20:10.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:10.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:10.961
  STEP: Request ServerVersion @ 08/27/24 23:20:10.969
  STEP: Confirm major version @ 08/27/24 23:20:10.972
  Aug 27 23:20:10.972: INFO: Major version: 1
  STEP: Confirm minor version @ 08/27/24 23:20:10.972
  Aug 27 23:20:10.972: INFO: cleanMinorVersion: 29
  Aug 27 23:20:10.972: INFO: Minor version: 29
  Aug 27 23:20:10.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7738" for this suite. @ 08/27/24 23:20:10.989
• [0.163 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 08/27/24 23:20:11.036
  Aug 27 23:20:11.036: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename controllerrevisions @ 08/27/24 23:20:11.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:11.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:11.131
  STEP: Creating DaemonSet "e2e-gpspl-daemon-set" @ 08/27/24 23:20:11.254
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/27/24 23:20:11.275
  Aug 27 23:20:11.291: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:11.291: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:11.291: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:11.309: INFO: Number of nodes with available pods controlled by daemonset e2e-gpspl-daemon-set: 0
  Aug 27 23:20:11.309: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:20:12.298: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:12.298: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:12.298: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:12.319: INFO: Number of nodes with available pods controlled by daemonset e2e-gpspl-daemon-set: 0
  Aug 27 23:20:12.319: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:20:13.318: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:13.319: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:13.319: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:13.344: INFO: Number of nodes with available pods controlled by daemonset e2e-gpspl-daemon-set: 1
  Aug 27 23:20:13.344: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:20:14.312: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:14.312: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:14.313: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:14.327: INFO: Number of nodes with available pods controlled by daemonset e2e-gpspl-daemon-set: 3
  Aug 27 23:20:14.328: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-gpspl-daemon-set
  STEP: Confirm DaemonSet "e2e-gpspl-daemon-set" successfully created with "daemonset-name=e2e-gpspl-daemon-set" label @ 08/27/24 23:20:14.343
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-gpspl-daemon-set" @ 08/27/24 23:20:14.383
  Aug 27 23:20:14.401: INFO: Located ControllerRevision: "e2e-gpspl-daemon-set-6b697d544c"
  STEP: Patching ControllerRevision "e2e-gpspl-daemon-set-6b697d544c" @ 08/27/24 23:20:14.43
  Aug 27 23:20:14.451: INFO: e2e-gpspl-daemon-set-6b697d544c has been patched
  STEP: Create a new ControllerRevision @ 08/27/24 23:20:14.451
  Aug 27 23:20:14.469: INFO: Created ControllerRevision: e2e-gpspl-daemon-set-546fd9b5d7
  STEP: Confirm that there are two ControllerRevisions @ 08/27/24 23:20:14.469
  Aug 27 23:20:14.470: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 27 23:20:14.484: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-gpspl-daemon-set-6b697d544c" @ 08/27/24 23:20:14.484
  STEP: Confirm that there is only one ControllerRevision @ 08/27/24 23:20:14.499
  Aug 27 23:20:14.499: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 27 23:20:14.508: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-gpspl-daemon-set-546fd9b5d7" @ 08/27/24 23:20:14.518
  Aug 27 23:20:14.541: INFO: e2e-gpspl-daemon-set-546fd9b5d7 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 08/27/24 23:20:14.541
  W0827 23:20:14.558594      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 08/27/24 23:20:14.559
  Aug 27 23:20:14.559: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 27 23:20:15.559: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 27 23:20:15.569: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-gpspl-daemon-set-546fd9b5d7=updated" @ 08/27/24 23:20:15.57
  STEP: Confirm that there is only one ControllerRevision @ 08/27/24 23:20:15.588
  Aug 27 23:20:15.588: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 27 23:20:15.595: INFO: Found 1 ControllerRevisions
  Aug 27 23:20:15.605: INFO: ControllerRevision "e2e-gpspl-daemon-set-56468cd5fd" has revision 3
  STEP: Deleting DaemonSet "e2e-gpspl-daemon-set" @ 08/27/24 23:20:15.621
  STEP: deleting DaemonSet.extensions e2e-gpspl-daemon-set in namespace controllerrevisions-5778, will wait for the garbage collector to delete the pods @ 08/27/24 23:20:15.621
  Aug 27 23:20:15.699: INFO: Deleting DaemonSet.extensions e2e-gpspl-daemon-set took: 20.697255ms
  Aug 27 23:20:15.800: INFO: Terminating DaemonSet.extensions e2e-gpspl-daemon-set pods took: 100.351074ms
  Aug 27 23:20:18.423: INFO: Number of nodes with available pods controlled by daemonset e2e-gpspl-daemon-set: 0
  Aug 27 23:20:18.424: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-gpspl-daemon-set
  Aug 27 23:20:18.467: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38897290"},"items":null}

  Aug 27 23:20:18.476: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38897290"},"items":null}

  Aug 27 23:20:18.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5778" for this suite. @ 08/27/24 23:20:18.653
• [7.652 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 08/27/24 23:20:18.689
  Aug 27 23:20:18.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/27/24 23:20:18.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:18.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:18.787
  STEP: Cleaning up the secret @ 08/27/24 23:20:20.87
  STEP: Cleaning up the configmap @ 08/27/24 23:20:20.889
  STEP: Cleaning up the pod @ 08/27/24 23:20:20.91
  Aug 27 23:20:20.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5203" for this suite. @ 08/27/24 23:20:21.044
• [2.489 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 08/27/24 23:20:21.181
  Aug 27 23:20:21.181: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename endpointslice @ 08/27/24 23:20:21.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:21.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:21.26
  Aug 27 23:20:25.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1726" for this suite. @ 08/27/24 23:20:26.026
• [4.975 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 08/27/24 23:20:26.157
  Aug 27 23:20:26.157: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/27/24 23:20:26.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:26.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:26.427
  STEP: creating @ 08/27/24 23:20:26.446
  STEP: getting @ 08/27/24 23:20:26.626
  STEP: listing in namespace @ 08/27/24 23:20:26.642
  STEP: patching @ 08/27/24 23:20:26.66
  STEP: deleting @ 08/27/24 23:20:26.681
  Aug 27 23:20:26.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5791" for this suite. @ 08/27/24 23:20:26.761
• [0.645 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 08/27/24 23:20:26.807
  Aug 27 23:20:26.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/27/24 23:20:26.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:26.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:26.886
  Aug 27 23:20:26.897: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: creating the pod @ 08/27/24 23:20:26.898
  STEP: submitting the pod to kubernetes @ 08/27/24 23:20:26.898
  Aug 27 23:20:31.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1795" for this suite. @ 08/27/24 23:20:31.175
• [4.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 08/27/24 23:20:31.204
  Aug 27 23:20:31.204: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:20:31.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:31.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:31.274
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:20:31.286
  STEP: Saw pod success @ 08/27/24 23:20:35.383
  Aug 27 23:20:35.396: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-849418a4-9072-4855-9af0-1877fbda0a96 container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:20:35.418
  Aug 27 23:20:35.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7651" for this suite. @ 08/27/24 23:20:35.478
• [4.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 08/27/24 23:20:35.492
  Aug 27 23:20:35.493: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/27/24 23:20:35.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:35.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:35.57
  STEP: Creating the pod @ 08/27/24 23:20:35.576
  Aug 27 23:20:40.230: INFO: Successfully updated pod "labelsupdate7e5051b7-8ee4-4be7-a4fd-7f3eba906875"
  Aug 27 23:20:42.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1173" for this suite. @ 08/27/24 23:20:42.316
• [6.856 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 08/27/24 23:20:42.35
  Aug 27 23:20:42.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/27/24 23:20:42.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:42.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:42.539
  STEP: Counting existing ResourceQuota @ 08/27/24 23:20:42.552
  STEP: Creating a ResourceQuota @ 08/27/24 23:20:47.571
  STEP: Ensuring resource quota status is calculated @ 08/27/24 23:20:47.588
  STEP: Creating a ReplicaSet @ 08/27/24 23:20:49.598
  STEP: Ensuring resource quota status captures replicaset creation @ 08/27/24 23:20:49.635
  STEP: Deleting a ReplicaSet @ 08/27/24 23:20:51.645
  STEP: Ensuring resource quota status released usage @ 08/27/24 23:20:51.676
  Aug 27 23:20:53.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8313" for this suite. @ 08/27/24 23:20:53.698
• [11.366 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 08/27/24 23:20:53.717
  Aug 27 23:20:53.717: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/27/24 23:20:53.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:53.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:53.774
  STEP: Setting up server cert @ 08/27/24 23:20:53.857
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/27/24 23:20:54.407
  STEP: Deploying the webhook pod @ 08/27/24 23:20:54.422
  STEP: Wait for the deployment to be ready @ 08/27/24 23:20:54.463
  Aug 27 23:20:54.492: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/27/24 23:20:56.513
  STEP: Verifying the service has paired with the endpoint @ 08/27/24 23:20:56.551
  Aug 27 23:20:57.553: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 08/27/24 23:20:57.571
  STEP: create a pod that should be updated by the webhook @ 08/27/24 23:20:57.604
  Aug 27 23:20:57.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7235" for this suite. @ 08/27/24 23:20:57.906
  STEP: Destroying namespace "webhook-markers-8344" for this suite. @ 08/27/24 23:20:57.954
• [4.256 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 08/27/24 23:20:57.975
  Aug 27 23:20:57.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename daemonsets @ 08/27/24 23:20:57.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:20:58.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:20:58.112
  STEP: Creating simple DaemonSet "daemon-set" @ 08/27/24 23:20:58.244
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/27/24 23:20:58.264
  Aug 27 23:20:58.275: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:58.275: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:58.275: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:58.287: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 27 23:20:58.287: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:20:59.284: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:59.284: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:59.285: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:20:59.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 27 23:20:59.299: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:21:00.287: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:21:00.287: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:21:00.288: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:21:00.308: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 27 23:21:00.308: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  Aug 27 23:21:01.281: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:21:01.281: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:21:01.281: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 27 23:21:01.294: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 27 23:21:01.294: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 08/27/24 23:21:01.303
  STEP: DeleteCollection of the DaemonSets @ 08/27/24 23:21:01.312
  STEP: Verify that ReplicaSets have been deleted @ 08/27/24 23:21:01.339
  Aug 27 23:21:01.385: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38897760"},"items":null}

  Aug 27 23:21:01.431: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38897764"},"items":[{"metadata":{"name":"daemon-set-2s7fb","generateName":"daemon-set-","namespace":"daemonsets-734","uid":"8dd1d6be-3479-45ea-8ed5-51edc8b32872","resourceVersion":"38897761","creationTimestamp":"2024-08-27T23:20:58Z","deletionTimestamp":"2024-08-27T23:21:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a8306e3581adfd7ec84e8d28647c53c5526acb6c84578b2f93fc43177c648806","cni.projectcalico.org/podIP":"10.233.76.146/32","cni.projectcalico.org/podIPs":"10.233.76.146/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"69aa9b5b-2fac-4895-a461-e4d2113f289d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:20:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"69aa9b5b-2fac-4895-a461-e4d2113f289d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:20:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:21:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.76.146\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-98p8g","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-98p8g","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:20:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:20:58Z"}],"hostIP":"10.61.1.202","hostIPs":[{"ip":"10.61.1.202"}],"podIP":"10.233.76.146","podIPs":[{"ip":"10.233.76.146"}],"startTime":"2024-08-27T23:20:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-08-27T23:20:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9bebeded9e4ac44b61083f97041f24b16357f636ab8b15756dfeb694dc6d689a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kbjcq","generateName":"daemon-set-","namespace":"daemonsets-734","uid":"94c6827c-1e0c-4b88-91cd-ca3f273a0630","resourceVersion":"38897764","creationTimestamp":"2024-08-27T23:20:58Z","deletionTimestamp":"2024-08-27T23:21:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"c0940adb4ed97505d9afb7421b8149ddf65140fc2f350dba35b1e6215ce851c9","cni.projectcalico.org/podIP":"10.233.118.55/32","cni.projectcalico.org/podIPs":"10.233.118.55/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"69aa9b5b-2fac-4895-a461-e4d2113f289d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:20:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"69aa9b5b-2fac-4895-a461-e4d2113f289d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:20:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:21:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.118.55\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-f2dlh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-f2dlh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:20:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:20:58Z"}],"hostIP":"10.61.1.200","hostIPs":[{"ip":"10.61.1.200"}],"podIP":"10.233.118.55","podIPs":[{"ip":"10.233.118.55"}],"startTime":"2024-08-27T23:20:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-08-27T23:20:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9aeea2577ac8a82610d642978da9d0c54ae662296f87e4c109f0f39d9c2150ef","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-z9fjw","generateName":"daemon-set-","namespace":"daemonsets-734","uid":"ed384ffd-5ac5-4381-a113-6e5dc96e062b","resourceVersion":"38897762","creationTimestamp":"2024-08-27T23:20:58Z","deletionTimestamp":"2024-08-27T23:21:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"c7702bab8a058e596f573c5abc68f91bd8861741d8eaffd0134d46e4c8d67e67","cni.projectcalico.org/podIP":"10.233.87.127/32","cni.projectcalico.org/podIPs":"10.233.87.127/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"69aa9b5b-2fac-4895-a461-e4d2113f289d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:20:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"69aa9b5b-2fac-4895-a461-e4d2113f289d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:20:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-08-27T23:21:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.87.127\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jhvxh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jhvxh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:20:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:21:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-08-27T23:20:58Z"}],"hostIP":"10.61.1.201","hostIPs":[{"ip":"10.61.1.201"}],"podIP":"10.233.87.127","podIPs":[{"ip":"10.233.87.127"}],"startTime":"2024-08-27T23:20:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-08-27T23:20:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://29423345da9a4973b0b4bed9c24ed69c118da2a525cf3e96301fe1c84776cefd","started":true}],"qosClass":"BestEffort"}}]}

  Aug 27 23:21:01.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-734" for this suite. @ 08/27/24 23:21:01.501
• [3.552 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 08/27/24 23:21:01.528
  Aug 27 23:21:01.528: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename field-validation @ 08/27/24 23:21:01.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:21:01.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:21:01.583
  STEP: apply creating a deployment @ 08/27/24 23:21:01.589
  Aug 27 23:21:01.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6538" for this suite. @ 08/27/24 23:21:01.646
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 08/27/24 23:21:01.676
  Aug 27 23:21:01.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:21:01.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:21:01.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:21:01.73
  STEP: Creating secret with name s-test-opt-del-368e8bf2-775b-4f5b-82c5-d56fe00552b4 @ 08/27/24 23:21:01.746
  STEP: Creating secret with name s-test-opt-upd-a76d7828-d45c-4ca1-9092-3f14f11f3b89 @ 08/27/24 23:21:01.761
  STEP: Creating the pod @ 08/27/24 23:21:01.779
  STEP: Deleting secret s-test-opt-del-368e8bf2-775b-4f5b-82c5-d56fe00552b4 @ 08/27/24 23:21:04.02
  STEP: Updating secret s-test-opt-upd-a76d7828-d45c-4ca1-9092-3f14f11f3b89 @ 08/27/24 23:21:04.053
  STEP: Creating secret with name s-test-opt-create-39b25927-501b-4668-b00d-743d00dee0ea @ 08/27/24 23:21:04.088
  STEP: waiting to observe update in volume @ 08/27/24 23:21:04.11
  Aug 27 23:21:06.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8733" for this suite. @ 08/27/24 23:21:06.259
• [4.609 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 08/27/24 23:21:06.286
  Aug 27 23:21:06.286: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/27/24 23:21:06.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:21:06.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:21:06.395
  STEP: Creating secret with name secret-test-da5e008a-f70b-43be-9ec3-8c522f412f62 @ 08/27/24 23:21:06.403
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:21:06.42
  STEP: Saw pod success @ 08/27/24 23:21:12.496
  Aug 27 23:21:12.519: INFO: Trying to get logs from node env1-test-worker-0 pod pod-secrets-a5be3bcb-adc4-4ecd-9351-82d028033722 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:21:12.561
  Aug 27 23:21:12.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2962" for this suite. @ 08/27/24 23:21:12.638
• [6.383 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 08/27/24 23:21:12.67
  Aug 27 23:21:12.670: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:21:12.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:21:12.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:21:12.729
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:21:12.735
  STEP: Saw pod success @ 08/27/24 23:21:16.811
  Aug 27 23:21:16.830: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-51196188-4bbe-4547-b39d-6277709739f5 container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:21:16.857
  Aug 27 23:21:16.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5681" for this suite. @ 08/27/24 23:21:16.904
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 08/27/24 23:21:16.93
  Aug 27 23:21:16.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-preemption @ 08/27/24 23:21:16.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:21:16.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:21:16.975
  Aug 27 23:21:17.019: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 27 23:22:17.069: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/27/24 23:22:17.094
  Aug 27 23:22:17.184: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 27 23:22:17.203: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 27 23:22:17.264: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 27 23:22:17.295: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Aug 27 23:22:17.369: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Aug 27 23:22:17.416: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/27/24 23:22:17.416
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 08/27/24 23:22:21.566
  Aug 27 23:22:25.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4348" for this suite. @ 08/27/24 23:22:25.893
• [68.978 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 08/27/24 23:22:25.967
  Aug 27 23:22:25.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/27/24 23:22:25.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:22:26.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:22:26.092
  STEP: Creating secret with name secret-test-46b58f40-7ed2-4813-8931-56b4c5b37db8 @ 08/27/24 23:22:26.101
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:22:26.112
  STEP: Saw pod success @ 08/27/24 23:22:30.188
  Aug 27 23:22:30.195: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-c52ba66c-12b9-4a63-8c88-fff7a37117ce container secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:22:30.211
  Aug 27 23:22:30.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8516" for this suite. @ 08/27/24 23:22:30.271
• [4.352 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 08/27/24 23:22:30.288
  Aug 27 23:22:30.288: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/27/24 23:22:30.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:22:30.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:22:30.331
  STEP: Setting up server cert @ 08/27/24 23:22:30.404
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/27/24 23:22:31.342
  STEP: Deploying the webhook pod @ 08/27/24 23:22:31.362
  STEP: Wait for the deployment to be ready @ 08/27/24 23:22:31.402
  Aug 27 23:22:31.421: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 08/27/24 23:22:33.507
  STEP: Verifying the service has paired with the endpoint @ 08/27/24 23:22:33.545
  Aug 27 23:22:34.545: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 08/27/24 23:22:34.578
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/27/24 23:22:34.578
  Aug 27 23:22:44.679: INFO: Waiting for webhook configuration to be ready...
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 08/27/24 23:22:44.806
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 08/27/24 23:22:45.827
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/27/24 23:22:45.827
  STEP: Having no error when timeout is longer than webhook latency @ 08/27/24 23:22:46.895
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/27/24 23:22:46.895
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 08/27/24 23:22:51.966
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/27/24 23:22:51.966
  Aug 27 23:22:57.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1382" for this suite. @ 08/27/24 23:22:57.284
  STEP: Destroying namespace "webhook-markers-5907" for this suite. @ 08/27/24 23:22:57.307
• [27.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 08/27/24 23:22:57.353
  Aug 27 23:22:57.354: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:22:57.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:22:57.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:22:57.484
  STEP: Creating configMap with name cm-test-opt-del-2c069af6-d8db-4dac-a85f-6ca061907970 @ 08/27/24 23:22:57.517
  STEP: Creating configMap with name cm-test-opt-upd-758a04d3-40a7-49f8-a786-88d40103ddb1 @ 08/27/24 23:22:57.532
  STEP: Creating the pod @ 08/27/24 23:22:57.544
  STEP: Deleting configmap cm-test-opt-del-2c069af6-d8db-4dac-a85f-6ca061907970 @ 08/27/24 23:22:59.652
  STEP: Updating configmap cm-test-opt-upd-758a04d3-40a7-49f8-a786-88d40103ddb1 @ 08/27/24 23:22:59.687
  STEP: Creating configMap with name cm-test-opt-create-54634bbe-6e32-4ea4-ac85-af59a2e3d26a @ 08/27/24 23:22:59.701
  STEP: waiting to observe update in volume @ 08/27/24 23:22:59.712
  Aug 27 23:23:01.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2256" for this suite. @ 08/27/24 23:23:01.811
• [4.480 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 08/27/24 23:23:01.834
  Aug 27 23:23:01.834: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename chunking @ 08/27/24 23:23:01.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:23:01.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:23:01.889
  STEP: creating a large number of resources @ 08/27/24 23:23:01.896
  STEP: retrieving the first page @ 08/27/24 23:23:19.55
  Aug 27 23:23:19.603: INFO: Retrieved 40/40 results with rv 38899232 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 08/27/24 23:23:19.604
  Aug 27 23:23:39.616: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:23:59.617: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:24:19.624: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:24:39.621: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:24:59.621: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:25:19.625: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:25:39.628: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:25:59.619: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:26:19.622: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:26:39.623: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:26:59.616: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:27:19.620: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:27:39.623: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:27:59.628: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:28:19.624: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:28:39.620: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:28:59.626: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:29:19.620: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg4OTkyMzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Aug 27 23:29:39.621: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Aug 27 23:29:39.621: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 08/27/24 23:29:39.621
  STEP: retrieving all remaining pages @ 08/27/24 23:29:39.634
  Aug 27 23:29:39.648: INFO: Retrieved 40/40 results with rv 38900568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg5MDA1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Aug 27 23:29:39.673: INFO: Retrieved 40/40 results with rv 38900568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg5MDA1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Aug 27 23:29:39.692: INFO: Retrieved 40/40 results with rv 38900568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg5MDA1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Aug 27 23:29:39.724: INFO: Retrieved 40/40 results with rv 38900568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg5MDA1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Aug 27 23:29:39.737: INFO: Retrieved 40/40 results with rv 38900568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg5MDA1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Aug 27 23:29:39.746: INFO: Retrieved 40/40 results with rv 38900568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg5MDA1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Aug 27 23:29:39.753: INFO: Retrieved 40/40 results with rv 38900568 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg5MDA1NjgsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Aug 27 23:29:39.765: INFO: Retrieved 40/40 results with rv 38900568 and continue 
  Aug 27 23:29:39.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4317" for this suite. @ 08/27/24 23:29:39.778
• [397.970 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 08/27/24 23:29:39.806
  Aug 27 23:29:39.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename csi-storageclass @ 08/27/24 23:29:39.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:29:39.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:29:39.856
  STEP: Creating a StorageClass @ 08/27/24 23:29:39.863
  STEP: Get StorageClass "e2e-ls7t4" @ 08/27/24 23:29:39.873
  STEP: Patching the StorageClass "e2e-ls7t4" @ 08/27/24 23:29:39.887
  STEP: Delete StorageClass "e2e-ls7t4" @ 08/27/24 23:29:39.9
  STEP: Confirm deletion of StorageClass "e2e-ls7t4" @ 08/27/24 23:29:39.914
  STEP: Create a replacement StorageClass @ 08/27/24 23:29:39.923
  STEP: Updating StorageClass "e2e-v2-6z4gb" @ 08/27/24 23:29:39.942
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-6z4gb=updated" @ 08/27/24 23:29:39.964
  STEP: Deleting StorageClass "e2e-v2-6z4gb" via DeleteCollection @ 08/27/24 23:29:39.977
  STEP: Confirm deletion of StorageClass "e2e-v2-6z4gb" @ 08/27/24 23:29:40.004
  Aug 27 23:29:40.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3525" for this suite. @ 08/27/24 23:29:40.023
• [0.235 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 08/27/24 23:29:40.044
  Aug 27 23:29:40.044: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/27/24 23:29:40.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:29:40.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:29:40.118
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7776 @ 08/27/24 23:29:40.125
  STEP: changing the ExternalName service to type=ClusterIP @ 08/27/24 23:29:40.134
  STEP: creating replication controller externalname-service in namespace services-7776 @ 08/27/24 23:29:40.164
  I0827 23:29:40.191830      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7776, replica count: 2
  I0827 23:29:43.243608      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 27 23:29:43.243: INFO: Creating new exec pod
  Aug 27 23:29:46.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-7776 exec execpodsg8tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 27 23:29:46.539: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 27 23:29:46.539: INFO: stdout: "externalname-service-kpt5b"
  Aug 27 23:29:46.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-7776 exec execpodsg8tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.51.201 80'
  Aug 27 23:29:46.824: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.51.201 80\nConnection to 10.233.51.201 80 port [tcp/http] succeeded!\n"
  Aug 27 23:29:46.824: INFO: stdout: ""
  Aug 27 23:29:47.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-7776 exec execpodsg8tb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.51.201 80'
  Aug 27 23:29:47.825: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.51.201 80\nConnection to 10.233.51.201 80 port [tcp/http] succeeded!\n"
  Aug 27 23:29:47.825: INFO: stdout: "externalname-service-kpt5b"
  Aug 27 23:29:47.825: INFO: Cleaning up the ExternalName to ClusterIP test service
  Aug 27 23:29:47.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7776" for this suite. @ 08/27/24 23:29:47.906
• [7.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 08/27/24 23:29:47.932
  Aug 27 23:29:47.932: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename subpath @ 08/27/24 23:29:47.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:29:47.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:29:47.996
  STEP: Setting up data @ 08/27/24 23:29:48.004
  STEP: Creating pod pod-subpath-test-secret-9trr @ 08/27/24 23:29:48.046
  STEP: Creating a pod to test atomic-volume-subpath @ 08/27/24 23:29:48.046
  STEP: Saw pod success @ 08/27/24 23:30:12.232
  Aug 27 23:30:12.241: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-secret-9trr container test-container-subpath-secret-9trr: <nil>
  STEP: delete the pod @ 08/27/24 23:30:12.279
  STEP: Deleting pod pod-subpath-test-secret-9trr @ 08/27/24 23:30:12.336
  Aug 27 23:30:12.336: INFO: Deleting pod "pod-subpath-test-secret-9trr" in namespace "subpath-5777"
  Aug 27 23:30:12.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5777" for this suite. @ 08/27/24 23:30:12.379
• [24.484 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 08/27/24 23:30:12.417
  Aug 27 23:30:12.417: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/27/24 23:30:12.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:30:12.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:30:12.516
  STEP: Creating pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735 @ 08/27/24 23:30:12.521
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/27/24 23:30:14.589
  Aug 27 23:30:14.599: INFO: Initial restart count of pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd is 0
  Aug 27 23:30:14.609: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:16.621: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:18.662: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:20.679: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:22.708: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:24.718: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:26.726: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:28.738: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:30.748: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:32.758: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:34.767: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:36.780: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:38.788: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:40.799: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:42.823: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:44.830: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:46.841: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:48.850: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:50.862: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:52.916: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:54.928: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:56.937: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:30:58.948: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:00.966: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:02.978: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:04.986: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:06.994: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:09.004: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:11.018: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:13.029: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:15.037: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:17.048: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:19.068: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:21.087: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:23.100: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:25.111: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:27.122: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:29.132: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:31.162: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:33.172: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:35.181: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:37.197: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:39.206: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:41.219: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:43.227: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:45.240: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:47.253: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:49.261: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:51.276: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:53.305: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:55.319: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:57.338: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:31:59.351: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:01.370: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:03.388: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:05.405: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:07.416: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:09.429: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:11.443: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:13.459: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:15.469: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:17.478: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:19.494: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:21.505: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:23.518: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:25.528: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:27.537: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:29.549: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:31.563: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:33.572: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:35.583: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:37.595: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:39.627: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:41.637: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:43.647: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:45.665: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:47.678: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:49.688: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:51.702: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:53.713: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:55.727: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:57.740: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:32:59.751: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:01.773: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:03.787: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:05.797: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:07.806: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:09.818: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:11.830: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:13.841: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:15.850: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:17.866: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:19.878: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:21.892: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:23.901: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:25.911: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:27.924: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:29.935: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:31.946: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:33.955: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:35.967: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:37.976: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:39.988: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:41.998: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:44.008: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:46.017: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:48.028: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:50.047: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:52.056: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:54.083: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:56.094: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:33:58.106: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:00.113: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:02.122: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:04.150: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:06.163: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:08.172: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:10.184: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:12.196: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  Aug 27 23:34:14.204: INFO: Get pod test-webserver-64fed823-7e9a-45fa-b724-f416c695e0bd in namespace container-probe-9735
  STEP: deleting the pod @ 08/27/24 23:34:16.205
  Aug 27 23:34:16.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9735" for this suite. @ 08/27/24 23:34:16.292
• [243.917 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 08/27/24 23:34:16.336
  Aug 27 23:34:16.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/27/24 23:34:16.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:16.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:16.423
  Aug 27 23:34:16.467: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Aug 27 23:34:21.488: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/27/24 23:34:21.489
  Aug 27 23:34:21.489: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 08/27/24 23:34:21.512
  Aug 27 23:34:21.535: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f7d5e81-c95e-42d2-bbd6-9da39adcacb1",
      ResourceVersion: (string) (len=8) "38902164",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398461,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 27 23:34:21.548: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Aug 27 23:34:21.548: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Aug 27 23:34:21.548: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a1e670a-60e2-4975-98c7-1d6addd98fec",
      ResourceVersion: (string) (len=8) "38902165",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398456,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "9f7d5e81-c95e-42d2-bbd6-9da39adcacb1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398461,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 66 37 64 35 65 38  |"uid\":\"9f7d5e8|
              00000040  31 2d 63 39 35 65 2d 34  32 64 32 2d 62 62 64 36  |1-c95e-42d2-bbd6|
              00000050  2d 39 64 61 33 39 61 64  63 61 63 62 31 5c 22 7d  |-9da39adcacb1\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 27 23:34:21.563: INFO: Pod "test-cleanup-controller-xd9fm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-xd9fm",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6331f3e0-66a8-452d-a3be-b4fa2349d64a",
      ResourceVersion: (string) (len=8) "38902146",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398456,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "244551a0d4b669bbfc6e6630565059950b11ff97fad90fc36905c282200d0619",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.178/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.178/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "0a1e670a-60e2-4975-98c7-1d6addd98fec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 61 31 65 36 37 30 61  |uid\":\"0a1e670a|
              00000080  2d 36 30 65 32 2d 34 39  37 35 2d 39 38 63 37 2d  |-60e2-4975-98c7-|
              00000090  31 64 36 61 64 64 64 39  38 66 65 63 5c 22 7d 22  |1d6addd98fec\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398457,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398457,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 37 38 5c 22 7d 22 3a  |.233.76.178\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qghcx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qghcx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398457,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398457,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398457,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398456,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398456,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860398457,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c47d41edf1d175f64869c0d1d8477852b217ccf23a1a723b6540498299fffe8d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 27 23:34:21.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1479" for this suite. @ 08/27/24 23:34:21.614
• [5.308 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 08/27/24 23:34:21.644
  Aug 27 23:34:21.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename security-context @ 08/27/24 23:34:21.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:21.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:21.708
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/27/24 23:34:21.714
  STEP: Saw pod success @ 08/27/24 23:34:25.808
  Aug 27 23:34:25.818: INFO: Trying to get logs from node env1-test-worker-2 pod security-context-453d0db5-e520-4b63-bb74-97c971cd4b6b container test-container: <nil>
  STEP: delete the pod @ 08/27/24 23:34:25.852
  Aug 27 23:34:25.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8843" for this suite. @ 08/27/24 23:34:25.917
• [4.292 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 08/27/24 23:34:25.94
  Aug 27 23:34:25.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename runtimeclass @ 08/27/24 23:34:25.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:25.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:26.005
  STEP: Deleting RuntimeClass runtimeclass-8811-delete-me @ 08/27/24 23:34:26.039
  STEP: Waiting for the RuntimeClass to disappear @ 08/27/24 23:34:26.13
  Aug 27 23:34:26.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8811" for this suite. @ 08/27/24 23:34:26.177
• [0.262 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 08/27/24 23:34:26.202
  Aug 27 23:34:26.202: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename limitrange @ 08/27/24 23:34:26.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:26.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:26.261
  STEP: Creating LimitRange "e2e-limitrange-r9j6x" in namespace "limitrange-5614" @ 08/27/24 23:34:26.267
  STEP: Creating another limitRange in another namespace @ 08/27/24 23:34:26.303
  Aug 27 23:34:26.383: INFO: Namespace "e2e-limitrange-r9j6x-9449" created
  Aug 27 23:34:26.384: INFO: Creating LimitRange "e2e-limitrange-r9j6x" in namespace "e2e-limitrange-r9j6x-9449"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-r9j6x" @ 08/27/24 23:34:26.393
  Aug 27 23:34:26.400: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-r9j6x" in "limitrange-5614" namespace @ 08/27/24 23:34:26.4
  Aug 27 23:34:26.418: INFO: LimitRange "e2e-limitrange-r9j6x" has been patched
  STEP: Delete LimitRange "e2e-limitrange-r9j6x" by Collection with labelSelector: "e2e-limitrange-r9j6x=patched" @ 08/27/24 23:34:26.418
  STEP: Confirm that the limitRange "e2e-limitrange-r9j6x" has been deleted @ 08/27/24 23:34:26.434
  Aug 27 23:34:26.435: INFO: Requesting list of LimitRange to confirm quantity
  Aug 27 23:34:26.443: INFO: Found 0 LimitRange with label "e2e-limitrange-r9j6x=patched"
  Aug 27 23:34:26.443: INFO: LimitRange "e2e-limitrange-r9j6x" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-r9j6x" @ 08/27/24 23:34:26.443
  Aug 27 23:34:26.450: INFO: Found 1 limitRange
  Aug 27 23:34:26.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5614" for this suite. @ 08/27/24 23:34:26.465
  STEP: Destroying namespace "e2e-limitrange-r9j6x-9449" for this suite. @ 08/27/24 23:34:26.477
• [0.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 08/27/24 23:34:26.503
  Aug 27 23:34:26.503: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:34:26.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:26.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:26.556
  STEP: Creating configMap with name projected-configmap-test-volume-map-4af5c230-c5e4-4f44-85ce-95f650ac22b8 @ 08/27/24 23:34:26.564
  STEP: Creating a pod to test consume configMaps @ 08/27/24 23:34:26.575
  STEP: Saw pod success @ 08/27/24 23:34:30.627
  Aug 27 23:34:30.636: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-b265b729-ee8b-49dc-ba3f-733e28710c87 container agnhost-container: <nil>
  STEP: delete the pod @ 08/27/24 23:34:30.67
  Aug 27 23:34:30.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7285" for this suite. @ 08/27/24 23:34:30.723
• [4.246 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 08/27/24 23:34:30.75
  Aug 27 23:34:30.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-pred @ 08/27/24 23:34:30.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:30.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:30.817
  Aug 27 23:34:30.824: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 27 23:34:30.852: INFO: Waiting for terminating namespaces to be deleted...
  Aug 27 23:34:30.860: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Aug 27 23:34:30.888: INFO: filebeat-filebeat-qqtqs from filebeat started at 2024-08-27 22:55:02 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container filebeat ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: calico-node-qzlxw from kube-system started at 2024-07-22 15:38:47 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container calico-node ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: kube-proxy-4cppk from kube-system started at 2024-08-27 16:27:32 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: metrics-server-6d9b44975-c6sns from kube-system started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-06-27 17:09:20 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container node-cache ready: true, restart count 8
  Aug 27 23:34:30.888: INFO: vsphere-csi-node-nk49v from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: prometheus-kube-prometheus-operator-568f7ff5fd-jqcnd from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: prometheus-prometheus-node-exporter-k7f6f from prometheus started at 2024-04-23 04:46:22 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: thanos-query-655b5549d7-vv7ft from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container query ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: sonobuoy from sonobuoy started at 2024-08-27 23:07:34 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: sonobuoy-e2e-job-55c3907aea104346 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container e2e ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-2l7x2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 27 23:34:30.888: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 27 23:34:30.888: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Aug 27 23:34:30.925: INFO: filebeat-filebeat-svps2 from filebeat started at 2024-08-27 22:55:03 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.925: INFO: 	Container filebeat ready: true, restart count 0
  Aug 27 23:34:30.925: INFO: calico-kube-controllers-5b566ffb7d-mmmcr from kube-system started at 2024-07-30 12:12:30 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.925: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Aug 27 23:34:30.925: INFO: calico-node-nwcrj from kube-system started at 2024-07-22 15:40:30 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.925: INFO: 	Container calico-node ready: true, restart count 0
  Aug 27 23:34:30.925: INFO: kube-proxy-ldkk8 from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.925: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 27 23:34:30.925: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-06-27 17:14:22 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.926: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.926: INFO: 	Container node-cache ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: vsphere-csi-node-zkn6p from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 27 23:34:30.926: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-08-19 14:42:39 +0000 UTC (3 container statuses recorded)
  Aug 27 23:34:30.926: INFO: 	Container config-reloader ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: 	Container prometheus ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.926: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-s8jpj from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 27 23:34:30.926: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: velero-574996dd6-4drr8 from velero started at 2024-08-19 14:42:37 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:30.926: INFO: 	Container velero ready: true, restart count 0
  Aug 27 23:34:30.926: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  Aug 27 23:34:31.011: INFO: filebeat-filebeat-f2rmr from filebeat started at 2024-08-27 23:14:27 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:31.011: INFO: 	Container filebeat ready: true, restart count 0
  Aug 27 23:34:31.011: INFO: calico-node-8fvtb from kube-system started at 2024-07-22 15:39:38 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:31.011: INFO: 	Container calico-node ready: true, restart count 0
  Aug 27 23:34:31.011: INFO: kube-proxy-znnpk from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:31.011: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 27 23:34:31.011: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-06-27 17:20:01 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:31.011: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 27 23:34:31.011: INFO: nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:31.011: INFO: 	Container node-cache ready: true, restart count 0
  Aug 27 23:34:31.012: INFO: vsphere-csi-node-kqgqv from kube-system started at 2024-08-27 16:36:03 +0000 UTC (3 container statuses recorded)
  Aug 27 23:34:31.012: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 27 23:34:31.012: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 27 23:34:31.012: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 27 23:34:31.012: INFO: prometheus-kube-state-metrics-59b5d58f8f-pnzs9 from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:31.012: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 27 23:34:31.012: INFO: prometheus-prometheus-node-exporter-rj9dj from prometheus started at 2024-08-27 23:14:26 +0000 UTC (1 container statuses recorded)
  Aug 27 23:34:31.012: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 27 23:34:31.012: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-7kjt2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 27 23:34:31.012: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 27 23:34:31.012: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/27/24 23:34:31.012
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/27/24 23:34:35.079
  STEP: Trying to apply a random label on the found node. @ 08/27/24 23:34:35.114
  STEP: verifying the node has the label kubernetes.io/e2e-8868f126-f65e-4543-a202-15c2295ab7f3 42 @ 08/27/24 23:34:35.168
  STEP: Trying to relaunch the pod, now with labels. @ 08/27/24 23:34:35.179
  STEP: removing the label kubernetes.io/e2e-8868f126-f65e-4543-a202-15c2295ab7f3 off the node env1-test-worker-2 @ 08/27/24 23:34:37.214
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8868f126-f65e-4543-a202-15c2295ab7f3 @ 08/27/24 23:34:37.276
  Aug 27 23:34:37.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1009" for this suite. @ 08/27/24 23:34:37.314
• [6.590 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 08/27/24 23:34:37.344
  Aug 27 23:34:37.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename runtimeclass @ 08/27/24 23:34:37.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:37.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:37.41
  Aug 27 23:34:37.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4619" for this suite. @ 08/27/24 23:34:37.452
• [0.123 seconds]
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 08/27/24 23:34:37.468
  Aug 27 23:34:37.468: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/27/24 23:34:37.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:37.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:37.526
  STEP: Creating pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323 @ 08/27/24 23:34:37.533
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/27/24 23:34:39.646
  Aug 27 23:34:39.690: INFO: Initial restart count of pod liveness-c586098c-2b19-4be8-8821-995ff4272972 is 0
  Aug 27 23:34:39.725: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:41.733: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:43.748: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:45.758: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:47.773: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:49.786: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:51.793: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:53.803: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:55.815: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:57.829: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:59.839: INFO: Get pod liveness-c586098c-2b19-4be8-8821-995ff4272972 in namespace container-probe-7323
  Aug 27 23:34:59.839: INFO: Restart count of pod container-probe-7323/liveness-c586098c-2b19-4be8-8821-995ff4272972 is now 1 (20.148755769s elapsed)
  STEP: deleting the pod @ 08/27/24 23:34:59.839
  Aug 27 23:34:59.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7323" for this suite. @ 08/27/24 23:34:59.89
• [22.437 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 08/27/24 23:34:59.905
  Aug 27 23:34:59.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename endpointslicemirroring @ 08/27/24 23:34:59.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:34:59.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:34:59.96
  STEP: mirroring a new custom Endpoint @ 08/27/24 23:34:59.994
  Aug 27 23:35:00.033: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 08/27/24 23:35:02.05
  Aug 27 23:35:02.075: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 08/27/24 23:35:04.102
  Aug 27 23:35:04.218: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Aug 27 23:35:06.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6225" for this suite. @ 08/27/24 23:35:06.241
• [6.364 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 08/27/24 23:35:06.27
  Aug 27 23:35:06.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/27/24 23:35:06.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:06.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:06.34
  STEP: creating a Service @ 08/27/24 23:35:06.376
  STEP: watching for the Service to be added @ 08/27/24 23:35:06.484
  Aug 27 23:35:06.491: INFO: Found Service test-service-j27l2 in namespace services-7402 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30807}]
  Aug 27 23:35:06.491: INFO: Service test-service-j27l2 created
  STEP: Getting /status @ 08/27/24 23:35:06.491
  Aug 27 23:35:06.505: INFO: Service test-service-j27l2 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 08/27/24 23:35:06.506
  STEP: watching for the Service to be patched @ 08/27/24 23:35:06.524
  Aug 27 23:35:06.527: INFO: observed Service test-service-j27l2 in namespace services-7402 with annotations: map[] & LoadBalancer: {[]}
  Aug 27 23:35:06.527: INFO: Found Service test-service-j27l2 in namespace services-7402 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Aug 27 23:35:06.527: INFO: Service test-service-j27l2 has service status patched
  STEP: updating the ServiceStatus @ 08/27/24 23:35:06.527
  Aug 27 23:35:06.547: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 08/27/24 23:35:06.547
  Aug 27 23:35:06.553: INFO: Observed Service test-service-j27l2 in namespace services-7402 with annotations: map[] & Conditions: {[]}
  Aug 27 23:35:06.553: INFO: Observed event: &Service{ObjectMeta:{test-service-j27l2  services-7402  f3faf6bc-efe4-4094-bbfa-68752f8ff951 38902574 0 2024-08-27 23:35:06 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-08-27 23:35:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-08-27 23:35:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30807,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.20.110,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.20.110],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Aug 27 23:35:06.553: INFO: Found Service test-service-j27l2 in namespace services-7402 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 27 23:35:06.553: INFO: Service test-service-j27l2 has service status updated
  STEP: patching the service @ 08/27/24 23:35:06.553
  STEP: watching for the Service to be patched @ 08/27/24 23:35:06.568
  Aug 27 23:35:06.571: INFO: observed Service test-service-j27l2 in namespace services-7402 with labels: map[test-service-static:true]
  Aug 27 23:35:06.571: INFO: observed Service test-service-j27l2 in namespace services-7402 with labels: map[test-service-static:true]
  Aug 27 23:35:06.571: INFO: observed Service test-service-j27l2 in namespace services-7402 with labels: map[test-service-static:true]
  Aug 27 23:35:06.574: INFO: Found Service test-service-j27l2 in namespace services-7402 with labels: map[test-service:patched test-service-static:true]
  Aug 27 23:35:06.574: INFO: Service test-service-j27l2 patched
  STEP: deleting the service @ 08/27/24 23:35:06.574
  STEP: watching for the Service to be deleted @ 08/27/24 23:35:06.646
  Aug 27 23:35:06.649: INFO: Observed event: ADDED
  Aug 27 23:35:06.650: INFO: Observed event: MODIFIED
  Aug 27 23:35:06.650: INFO: Observed event: MODIFIED
  Aug 27 23:35:06.650: INFO: Observed event: MODIFIED
  Aug 27 23:35:06.650: INFO: Found Service test-service-j27l2 in namespace services-7402 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Aug 27 23:35:06.650: INFO: Service test-service-j27l2 deleted
  Aug 27 23:35:06.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7402" for this suite. @ 08/27/24 23:35:06.68
• [0.448 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 08/27/24 23:35:06.719
  Aug 27 23:35:06.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename ingressclass @ 08/27/24 23:35:06.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:06.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:06.81
  STEP: getting /apis @ 08/27/24 23:35:06.822
  STEP: getting /apis/networking.k8s.io @ 08/27/24 23:35:06.842
  STEP: getting /apis/networking.k8s.iov1 @ 08/27/24 23:35:06.846
  STEP: creating @ 08/27/24 23:35:06.851
  STEP: getting @ 08/27/24 23:35:06.901
  STEP: listing @ 08/27/24 23:35:06.924
  STEP: watching @ 08/27/24 23:35:06.934
  Aug 27 23:35:06.935: INFO: starting watch
  STEP: patching @ 08/27/24 23:35:06.939
  STEP: updating @ 08/27/24 23:35:06.954
  Aug 27 23:35:06.972: INFO: waiting for watch events with expected annotations
  Aug 27 23:35:06.973: INFO: saw patched and updated annotations
  STEP: deleting @ 08/27/24 23:35:06.974
  STEP: deleting a collection @ 08/27/24 23:35:07.057
  Aug 27 23:35:07.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8147" for this suite. @ 08/27/24 23:35:07.181
• [0.491 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 08/27/24 23:35:07.211
  Aug 27 23:35:07.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename disruption @ 08/27/24 23:35:07.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:07.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:07.305
  STEP: Waiting for the pdb to be processed @ 08/27/24 23:35:07.376
  STEP: Waiting for all pods to be running @ 08/27/24 23:35:09.436
  Aug 27 23:35:09.450: INFO: running pods: 0 < 3
  Aug 27 23:35:11.457: INFO: running pods: 2 < 3
  Aug 27 23:35:13.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-189" for this suite. @ 08/27/24 23:35:13.493
• [6.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 08/27/24 23:35:13.553
  Aug 27 23:35:13.553: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/27/24 23:35:13.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:13.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:13.705
  Aug 27 23:35:13.720: INFO: Creating simple deployment test-new-deployment
  Aug 27 23:35:13.766: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 08/27/24 23:35:15.802
  STEP: updating a scale subresource @ 08/27/24 23:35:15.811
  STEP: verifying the deployment Spec.Replicas was modified @ 08/27/24 23:35:15.822
  STEP: Patch a scale subresource @ 08/27/24 23:35:15.829
  Aug 27 23:35:15.859: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1248",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d94650f2-4659-483b-a982-3b091c4bf7e1",
      ResourceVersion: (string) (len=8) "38902719",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398513,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 27 23:35:15.877: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1248",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e777c867-755b-4873-bb5d-4be18b0737ee",
      ResourceVersion: (string) (len=8) "38902718",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398513,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "d94650f2-4659-483b-a982-3b091c4bf7e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 39 34 36 35 30  66 32 2d 34 36 35 39 2d  |\"d94650f2-4659-|
              00000120  34 38 33 62 2d 61 39 38  32 2d 33 62 30 39 31 63  |483b-a982-3b091c|
              00000130  34 62 66 37 65 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4bf7e1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 27 23:35:15.901: INFO: Pod "test-new-deployment-557759b7c7-bpnzg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-bpnzg",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1248",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eed0a7de-d64c-498c-881f-7e5642e56a0a",
      ResourceVersion: (string) (len=8) "38902721",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398515,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e777c867-755b-4873-bb5d-4be18b0737ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 37  37 37 63 38 36 37 2d 37  |d\":\"e777c867-7|
              00000090  35 35 62 2d 34 38 37 33  2d 62 62 35 64 2d 34 62  |55b-4873-bb5d-4b|
              000000a0  65 31 38 62 30 37 33 37  65 65 5c 22 7d 22 3a 7b  |e18b0737ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gb46h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gb46h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 27 23:35:15.905: INFO: Pod "test-new-deployment-557759b7c7-m55jg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-m55jg",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1248",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa76f647-97f3-4137-92b7-ea15a046bd05",
      ResourceVersion: (string) (len=8) "38902710",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398513,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.143/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.143/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3869664fc9c8e4b8256d73386459db2ecd1308d338c66b9fdadce29c85ef6495"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e777c867-755b-4873-bb5d-4be18b0737ee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 37  37 37 63 38 36 37 2d 37  |d\":\"e777c867-7|
              00000090  35 35 62 2d 34 38 37 33  2d 62 62 35 64 2d 34 62  |55b-4873-bb5d-4b|
              000000a0  65 31 38 62 30 37 33 37  65 65 5c 22 7d 22 3a 7b  |e18b0737ee\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 34 33 5c 22 7d 22 3a  |.233.76.143\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpzpj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpzpj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860398513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860398513,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860398515,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92b7d446f06ae4871e51c3006f77b4127880733f0ce0441a78f2c51c3e733109",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 27 23:35:15.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1248" for this suite. @ 08/27/24 23:35:15.935
• [2.435 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 08/27/24 23:35:15.988
  Aug 27 23:35:15.988: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/27/24 23:35:15.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:16.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:16.095
  STEP: Creating secret with name secret-test-71f149f2-bba6-4498-80ea-74836de083dd @ 08/27/24 23:35:16.103
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:35:16.114
  STEP: Saw pod success @ 08/27/24 23:35:22.237
  Aug 27 23:35:22.244: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-e4767667-b39d-48f5-b405-dd542552f93d container secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:35:22.266
  Aug 27 23:35:22.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9063" for this suite. @ 08/27/24 23:35:22.317
• [6.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 08/27/24 23:35:22.33
  Aug 27 23:35:22.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/27/24 23:35:22.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:22.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:22.411
  STEP: Creating a pod to test emptydir volume type on node default medium @ 08/27/24 23:35:22.417
  STEP: Saw pod success @ 08/27/24 23:35:26.515
  Aug 27 23:35:26.532: INFO: Trying to get logs from node env1-test-worker-2 pod pod-8fa3c269-7b39-40fe-9bf7-c5c400fc346c container test-container: <nil>
  STEP: delete the pod @ 08/27/24 23:35:26.561
  Aug 27 23:35:26.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8820" for this suite. @ 08/27/24 23:35:26.653
• [4.353 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 08/27/24 23:35:26.684
  Aug 27 23:35:26.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:35:26.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:26.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:26.777
  STEP: Creating configMap with name configmap-projected-all-test-volume-19c186cc-7830-4b97-9cd8-127715b567ec @ 08/27/24 23:35:26.785
  STEP: Creating secret with name secret-projected-all-test-volume-9733fa5d-4830-4463-8a79-60f9213dd799 @ 08/27/24 23:35:26.797
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 08/27/24 23:35:26.815
  STEP: Saw pod success @ 08/27/24 23:35:32.934
  Aug 27 23:35:32.956: INFO: Trying to get logs from node env1-test-worker-2 pod projected-volume-254a3855-1cae-412c-b30b-59fad77bca1b container projected-all-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:35:33.008
  Aug 27 23:35:33.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4604" for this suite. @ 08/27/24 23:35:33.082
• [6.441 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 08/27/24 23:35:33.127
  Aug 27 23:35:33.127: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/27/24 23:35:33.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:33.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:33.196
  STEP: Saw pod success @ 08/27/24 23:35:39.354
  Aug 27 23:35:39.363: INFO: Trying to get logs from node env1-test-worker-2 pod client-envvars-3bf9da3b-9a90-4c5b-976f-81cba6d9cc8b container env3cont: <nil>
  STEP: delete the pod @ 08/27/24 23:35:39.387
  Aug 27 23:35:39.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4342" for this suite. @ 08/27/24 23:35:39.528
• [6.424 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 08/27/24 23:35:39.551
  Aug 27 23:35:39.551: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/27/24 23:35:39.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:39.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:39.621
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:35:39.637
  STEP: Saw pod success @ 08/27/24 23:35:43.707
  Aug 27 23:35:43.716: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-6e6c95f6-5b41-4321-bdbe-a75415f79a3b container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:35:43.741
  Aug 27 23:35:43.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3223" for this suite. @ 08/27/24 23:35:43.804
• [4.272 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 08/27/24 23:35:43.824
  Aug 27 23:35:43.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replication-controller @ 08/27/24 23:35:43.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:43.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:43.905
  STEP: Creating replication controller my-hostname-basic-cd39cf7e-ca46-42be-ac93-c81ff9ac33d9 @ 08/27/24 23:35:43.913
  Aug 27 23:35:43.949: INFO: Pod name my-hostname-basic-cd39cf7e-ca46-42be-ac93-c81ff9ac33d9: Found 0 pods out of 1
  Aug 27 23:35:48.958: INFO: Pod name my-hostname-basic-cd39cf7e-ca46-42be-ac93-c81ff9ac33d9: Found 1 pods out of 1
  Aug 27 23:35:48.958: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-cd39cf7e-ca46-42be-ac93-c81ff9ac33d9" are running
  Aug 27 23:35:48.988: INFO: Pod "my-hostname-basic-cd39cf7e-ca46-42be-ac93-c81ff9ac33d9-5z2mx" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-27 23:35:45 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-27 23:35:43 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-27 23:35:45 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-27 23:35:45 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-27 23:35:43 +0000 UTC Reason: Message:}])
  Aug 27 23:35:48.988: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/27/24 23:35:48.988
  Aug 27 23:35:49.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9715" for this suite. @ 08/27/24 23:35:49.047
• [5.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 08/27/24 23:35:49.083
  Aug 27 23:35:49.083: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/27/24 23:35:49.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:49.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:49.141
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/27/24 23:35:49.149
  STEP: Saw pod success @ 08/27/24 23:35:53.198
  Aug 27 23:35:53.207: INFO: Trying to get logs from node env1-test-worker-2 pod pod-020781c2-59c7-41ba-bf44-c41d38efa174 container test-container: <nil>
  STEP: delete the pod @ 08/27/24 23:35:53.22
  Aug 27 23:35:53.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2164" for this suite. @ 08/27/24 23:35:53.292
• [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 08/27/24 23:35:53.324
  Aug 27 23:35:53.324: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:35:53.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:35:53.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:35:53.414
  STEP: creating a replication controller @ 08/27/24 23:35:53.42
  Aug 27 23:35:53.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 create -f -'
  Aug 27 23:35:53.715: INFO: stderr: ""
  Aug 27 23:35:53.715: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/27/24 23:35:53.715
  Aug 27 23:35:53.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:35:53.891: INFO: stderr: ""
  Aug 27 23:35:53.891: INFO: stdout: "update-demo-nautilus-65jpk update-demo-nautilus-8dtbt "
  Aug 27 23:35:53.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-65jpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:35:54.012: INFO: stderr: ""
  Aug 27 23:35:54.012: INFO: stdout: ""
  Aug 27 23:35:54.012: INFO: update-demo-nautilus-65jpk is created but not running
  Aug 27 23:35:59.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:35:59.175: INFO: stderr: ""
  Aug 27 23:35:59.175: INFO: stdout: "update-demo-nautilus-65jpk update-demo-nautilus-8dtbt "
  Aug 27 23:35:59.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-65jpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:35:59.314: INFO: stderr: ""
  Aug 27 23:35:59.314: INFO: stdout: ""
  Aug 27 23:35:59.314: INFO: update-demo-nautilus-65jpk is created but not running
  Aug 27 23:36:04.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:36:04.508: INFO: stderr: ""
  Aug 27 23:36:04.508: INFO: stdout: "update-demo-nautilus-65jpk update-demo-nautilus-8dtbt "
  Aug 27 23:36:04.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-65jpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:04.638: INFO: stderr: ""
  Aug 27 23:36:04.638: INFO: stdout: ""
  Aug 27 23:36:04.638: INFO: update-demo-nautilus-65jpk is created but not running
  Aug 27 23:36:09.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:36:09.773: INFO: stderr: ""
  Aug 27 23:36:09.773: INFO: stdout: "update-demo-nautilus-65jpk update-demo-nautilus-8dtbt "
  Aug 27 23:36:09.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-65jpk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:09.921: INFO: stderr: ""
  Aug 27 23:36:09.921: INFO: stdout: "true"
  Aug 27 23:36:09.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-65jpk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:36:10.072: INFO: stderr: ""
  Aug 27 23:36:10.072: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:36:10.072: INFO: validating pod update-demo-nautilus-65jpk
  Aug 27 23:36:10.088: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:36:10.089: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:36:10.089: INFO: update-demo-nautilus-65jpk is verified up and running
  Aug 27 23:36:10.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:10.228: INFO: stderr: ""
  Aug 27 23:36:10.228: INFO: stdout: "true"
  Aug 27 23:36:10.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:36:10.392: INFO: stderr: ""
  Aug 27 23:36:10.392: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:36:10.392: INFO: validating pod update-demo-nautilus-8dtbt
  Aug 27 23:36:10.417: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:36:10.417: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:36:10.417: INFO: update-demo-nautilus-8dtbt is verified up and running
  STEP: scaling down the replication controller @ 08/27/24 23:36:10.417
  Aug 27 23:36:10.420: INFO: scanned /root for discovery docs: <nil>
  Aug 27 23:36:10.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Aug 27 23:36:11.622: INFO: stderr: ""
  Aug 27 23:36:11.623: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/27/24 23:36:11.623
  Aug 27 23:36:11.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:36:11.841: INFO: stderr: ""
  Aug 27 23:36:11.841: INFO: stdout: "update-demo-nautilus-65jpk update-demo-nautilus-8dtbt "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 08/27/24 23:36:11.841
  Aug 27 23:36:16.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:36:16.968: INFO: stderr: ""
  Aug 27 23:36:16.968: INFO: stdout: "update-demo-nautilus-8dtbt "
  Aug 27 23:36:16.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:17.135: INFO: stderr: ""
  Aug 27 23:36:17.135: INFO: stdout: "true"
  Aug 27 23:36:17.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:36:17.298: INFO: stderr: ""
  Aug 27 23:36:17.298: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:36:17.298: INFO: validating pod update-demo-nautilus-8dtbt
  Aug 27 23:36:17.313: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:36:17.313: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:36:17.313: INFO: update-demo-nautilus-8dtbt is verified up and running
  STEP: scaling up the replication controller @ 08/27/24 23:36:17.313
  Aug 27 23:36:17.316: INFO: scanned /root for discovery docs: <nil>
  Aug 27 23:36:17.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Aug 27 23:36:18.522: INFO: stderr: ""
  Aug 27 23:36:18.522: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/27/24 23:36:18.522
  Aug 27 23:36:18.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:36:18.716: INFO: stderr: ""
  Aug 27 23:36:18.716: INFO: stdout: "update-demo-nautilus-8dtbt update-demo-nautilus-hw4zx "
  Aug 27 23:36:18.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:18.852: INFO: stderr: ""
  Aug 27 23:36:18.852: INFO: stdout: "true"
  Aug 27 23:36:18.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:36:18.987: INFO: stderr: ""
  Aug 27 23:36:18.987: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:36:18.987: INFO: validating pod update-demo-nautilus-8dtbt
  Aug 27 23:36:18.999: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:36:18.999: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:36:18.999: INFO: update-demo-nautilus-8dtbt is verified up and running
  Aug 27 23:36:18.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-hw4zx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:19.147: INFO: stderr: ""
  Aug 27 23:36:19.147: INFO: stdout: ""
  Aug 27 23:36:19.147: INFO: update-demo-nautilus-hw4zx is created but not running
  Aug 27 23:36:24.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:36:24.306: INFO: stderr: ""
  Aug 27 23:36:24.306: INFO: stdout: "update-demo-nautilus-8dtbt update-demo-nautilus-hw4zx "
  Aug 27 23:36:24.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:24.456: INFO: stderr: ""
  Aug 27 23:36:24.456: INFO: stdout: "true"
  Aug 27 23:36:24.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-8dtbt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:36:24.590: INFO: stderr: ""
  Aug 27 23:36:24.591: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:36:24.591: INFO: validating pod update-demo-nautilus-8dtbt
  Aug 27 23:36:24.598: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:36:24.598: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:36:24.598: INFO: update-demo-nautilus-8dtbt is verified up and running
  Aug 27 23:36:24.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-hw4zx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:36:24.758: INFO: stderr: ""
  Aug 27 23:36:24.758: INFO: stdout: "true"
  Aug 27 23:36:24.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods update-demo-nautilus-hw4zx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:36:24.885: INFO: stderr: ""
  Aug 27 23:36:24.885: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:36:24.885: INFO: validating pod update-demo-nautilus-hw4zx
  Aug 27 23:36:24.895: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:36:24.895: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:36:24.896: INFO: update-demo-nautilus-hw4zx is verified up and running
  STEP: using delete to clean up resources @ 08/27/24 23:36:24.896
  Aug 27 23:36:24.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 delete --grace-period=0 --force -f -'
  Aug 27 23:36:25.030: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:36:25.030: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 27 23:36:25.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get rc,svc -l name=update-demo --no-headers'
  Aug 27 23:36:25.196: INFO: stderr: "No resources found in kubectl-1652 namespace.\n"
  Aug 27 23:36:25.196: INFO: stdout: ""
  Aug 27 23:36:25.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1652 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 27 23:36:25.340: INFO: stderr: ""
  Aug 27 23:36:25.341: INFO: stdout: ""
  Aug 27 23:36:25.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1652" for this suite. @ 08/27/24 23:36:25.358
• [32.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 08/27/24 23:36:25.432
  Aug 27 23:36:25.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename runtimeclass @ 08/27/24 23:36:25.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:36:25.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:36:25.552
  Aug 27 23:36:27.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-237" for this suite. @ 08/27/24 23:36:27.652
• [2.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 08/27/24 23:36:27.677
  Aug 27 23:36:27.677: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:36:27.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:36:27.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:36:27.742
  Aug 27 23:36:27.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-4281 version'
  Aug 27 23:36:27.925: INFO: stderr: ""
  Aug 27 23:36:27.925: INFO: stdout: "Client Version: v1.29.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.5\n"
  Aug 27 23:36:27.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4281" for this suite. @ 08/27/24 23:36:27.941
• [0.288 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 08/27/24 23:36:27.966
  Aug 27 23:36:27.966: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename limitrange @ 08/27/24 23:36:27.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:36:28.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:36:28.02
  STEP: Creating a LimitRange @ 08/27/24 23:36:28.028
  STEP: Setting up watch @ 08/27/24 23:36:28.03
  STEP: Submitting a LimitRange @ 08/27/24 23:36:28.15
  STEP: Verifying LimitRange creation was observed @ 08/27/24 23:36:28.162
  STEP: Fetching the LimitRange to ensure it has proper values @ 08/27/24 23:36:28.162
  Aug 27 23:36:28.170: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 27 23:36:28.170: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 08/27/24 23:36:28.171
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 08/27/24 23:36:28.191
  Aug 27 23:36:28.199: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 27 23:36:28.199: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 08/27/24 23:36:28.2
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 08/27/24 23:36:28.217
  Aug 27 23:36:28.248: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Aug 27 23:36:28.248: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 08/27/24 23:36:28.248
  STEP: Failing to create a Pod with more than max resources @ 08/27/24 23:36:28.261
  STEP: Updating a LimitRange @ 08/27/24 23:36:28.272
  STEP: Verifying LimitRange updating is effective @ 08/27/24 23:36:28.285
  STEP: Creating a Pod with less than former min resources @ 08/27/24 23:36:30.291
  STEP: Failing to create a Pod with more than max resources @ 08/27/24 23:36:30.306
  STEP: Deleting a LimitRange @ 08/27/24 23:36:30.311
  STEP: Verifying the LimitRange was deleted @ 08/27/24 23:36:30.332
  Aug 27 23:36:35.340: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 08/27/24 23:36:35.34
  Aug 27 23:36:35.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8178" for this suite. @ 08/27/24 23:36:35.404
• [7.461 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 08/27/24 23:36:35.429
  Aug 27 23:36:35.429: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/27/24 23:36:35.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:36:35.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:36:35.504
  STEP: Setting up server cert @ 08/27/24 23:36:35.566
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/27/24 23:36:37.304
  STEP: Deploying the webhook pod @ 08/27/24 23:36:37.326
  STEP: Wait for the deployment to be ready @ 08/27/24 23:36:37.364
  Aug 27 23:36:37.395: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Aug 27 23:36:39.432: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 27, 23, 36, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 36, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 36, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 36, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/27/24 23:36:41.441
  STEP: Verifying the service has paired with the endpoint @ 08/27/24 23:36:41.475
  Aug 27 23:36:42.476: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 27 23:36:42.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6466-crds.webhook.example.com via the AdmissionRegistration API @ 08/27/24 23:36:48.013
  Aug 27 23:36:48.057: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/27/24 23:36:48.175
  Aug 27 23:36:51.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-885" for this suite. @ 08/27/24 23:36:51.051
  STEP: Destroying namespace "webhook-markers-940" for this suite. @ 08/27/24 23:36:51.09
• [15.709 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 08/27/24 23:36:51.139
  Aug 27 23:36:51.139: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pod-network-test @ 08/27/24 23:36:51.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:36:51.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:36:51.223
  STEP: Performing setup for networking test in namespace pod-network-test-1692 @ 08/27/24 23:36:51.246
  STEP: creating a selector @ 08/27/24 23:36:51.246
  STEP: Creating the service pods in kubernetes @ 08/27/24 23:36:51.247
  Aug 27 23:36:51.247: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/27/24 23:37:13.533
  Aug 27 23:37:15.598: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 27 23:37:15.598: INFO: Breadth first check of 10.233.118.13 on host 10.61.1.200...
  Aug 27 23:37:15.609: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.76.181:9080/dial?request=hostname&protocol=udp&host=10.233.118.13&port=8081&tries=1'] Namespace:pod-network-test-1692 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:37:15.609: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:37:15.610: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:37:15.611: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1692/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.76.181%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.118.13%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 27 23:37:15.762: INFO: Waiting for responses: map[]
  Aug 27 23:37:15.762: INFO: reached 10.233.118.13 after 0/1 tries
  Aug 27 23:37:15.763: INFO: Breadth first check of 10.233.87.65 on host 10.61.1.201...
  Aug 27 23:37:15.775: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.76.181:9080/dial?request=hostname&protocol=udp&host=10.233.87.65&port=8081&tries=1'] Namespace:pod-network-test-1692 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:37:15.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:37:15.777: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:37:15.777: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1692/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.76.181%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.87.65%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 27 23:37:15.906: INFO: Waiting for responses: map[]
  Aug 27 23:37:15.906: INFO: reached 10.233.87.65 after 0/1 tries
  Aug 27 23:37:15.906: INFO: Breadth first check of 10.233.76.150 on host 10.61.1.202...
  Aug 27 23:37:15.916: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.76.181:9080/dial?request=hostname&protocol=udp&host=10.233.76.150&port=8081&tries=1'] Namespace:pod-network-test-1692 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:37:15.916: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:37:15.917: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:37:15.918: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1692/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.76.181%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.76.150%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 27 23:37:16.074: INFO: Waiting for responses: map[]
  Aug 27 23:37:16.075: INFO: reached 10.233.76.150 after 0/1 tries
  Aug 27 23:37:16.075: INFO: Going to retry 0 out of 3 pods....
  Aug 27 23:37:16.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1692" for this suite. @ 08/27/24 23:37:16.091
• [24.985 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 08/27/24 23:37:16.124
  Aug 27 23:37:16.124: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename dns @ 08/27/24 23:37:16.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:16.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:37:16.188
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 08/27/24 23:37:16.196
  Aug 27 23:37:16.226: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-8271  a4428c39-511c-427e-bddf-32ea2e4a6ca2 38903842 0 2024-08-27 23:37:16 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-08-27 23:37:16 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jqgz9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jqgz9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 08/27/24 23:37:18.246
  Aug 27 23:37:18.246: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-8271 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:37:18.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:37:18.247: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:37:18.247: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-8271/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 08/27/24 23:37:18.424
  Aug 27 23:37:18.424: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-8271 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:37:18.424: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:37:18.425: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:37:18.425: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-8271/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 27 23:37:18.611: INFO: Deleting pod test-dns-nameservers...
  Aug 27 23:37:18.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8271" for this suite. @ 08/27/24 23:37:18.667
• [2.565 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 08/27/24 23:37:18.692
  Aug 27 23:37:18.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/27/24 23:37:18.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:18.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:37:18.759
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/27/24 23:37:18.765
  STEP: Saw pod success @ 08/27/24 23:37:22.831
  Aug 27 23:37:22.846: INFO: Trying to get logs from node env1-test-worker-2 pod pod-410ddc97-b41b-411d-8b23-42b0b5a62e1c container test-container: <nil>
  STEP: delete the pod @ 08/27/24 23:37:22.869
  Aug 27 23:37:22.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8946" for this suite. @ 08/27/24 23:37:22.973
• [4.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 08/27/24 23:37:23.004
  Aug 27 23:37:23.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/27/24 23:37:23.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:23.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:37:23.11
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/27/24 23:37:23.146
  STEP: Saw pod success @ 08/27/24 23:37:27.207
  Aug 27 23:37:27.216: INFO: Trying to get logs from node env1-test-worker-2 pod pod-dcf6e0fc-dc21-430e-9464-e643429cc5e3 container test-container: <nil>
  STEP: delete the pod @ 08/27/24 23:37:27.232
  Aug 27 23:37:27.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8299" for this suite. @ 08/27/24 23:37:27.29
• [4.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 08/27/24 23:37:27.321
  Aug 27 23:37:27.321: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename namespaces @ 08/27/24 23:37:27.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:27.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:37:27.395
  STEP: Creating a test namespace @ 08/27/24 23:37:27.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:27.454
  STEP: Creating a pod in the namespace @ 08/27/24 23:37:27.462
  STEP: Waiting for the pod to have running status @ 08/27/24 23:37:27.49
  STEP: Deleting the namespace @ 08/27/24 23:37:29.505
  STEP: Waiting for the namespace to be removed. @ 08/27/24 23:37:29.526
  STEP: Recreating the namespace @ 08/27/24 23:37:43.535
  STEP: Verifying there are no pods in the namespace @ 08/27/24 23:37:43.578
  Aug 27 23:37:43.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8135" for this suite. @ 08/27/24 23:37:43.605
  STEP: Destroying namespace "nsdeletetest-5825" for this suite. @ 08/27/24 23:37:43.619
  Aug 27 23:37:43.626: INFO: Namespace nsdeletetest-5825 was already deleted
  STEP: Destroying namespace "nsdeletetest-6764" for this suite. @ 08/27/24 23:37:43.626
• [16.331 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 08/27/24 23:37:43.651
  Aug 27 23:37:43.651: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:37:43.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:43.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:37:43.701
  STEP: validating api versions @ 08/27/24 23:37:43.706
  Aug 27 23:37:43.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-6485 api-versions'
  Aug 27 23:37:43.827: INFO: stderr: ""
  Aug 27 23:37:43.827: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncns.vmware.com/v1alpha1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nmonitoring.coreos.com/v1\nmonitoring.coreos.com/v1alpha1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\nvelero.io/v1\nvelero.io/v2alpha1\n"
  Aug 27 23:37:43.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6485" for this suite. @ 08/27/24 23:37:43.837
• [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 08/27/24 23:37:43.855
  Aug 27 23:37:43.855: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename field-validation @ 08/27/24 23:37:43.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:43.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:37:43.905
  Aug 27 23:37:43.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  W0827 23:37:51.577897      19 warnings.go:70] unknown field "alpha"
  W0827 23:37:51.578158      19 warnings.go:70] unknown field "beta"
  W0827 23:37:51.578272      19 warnings.go:70] unknown field "delta"
  W0827 23:37:51.578395      19 warnings.go:70] unknown field "epsilon"
  W0827 23:37:51.578535      19 warnings.go:70] unknown field "gamma"
  Aug 27 23:37:52.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6158" for this suite. @ 08/27/24 23:37:52.165
• [8.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 08/27/24 23:37:52.182
  Aug 27 23:37:52.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/27/24 23:37:52.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:37:52.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:37:52.222
  STEP: Setting up server cert @ 08/27/24 23:37:52.272
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/27/24 23:37:53.131
  STEP: Deploying the webhook pod @ 08/27/24 23:37:53.153
  STEP: Wait for the deployment to be ready @ 08/27/24 23:37:53.181
  Aug 27 23:37:53.206: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Aug 27 23:37:55.228: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 27, 23, 37, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 37, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 37, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 37, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/27/24 23:37:57.239
  STEP: Verifying the service has paired with the endpoint @ 08/27/24 23:37:57.275
  Aug 27 23:37:58.276: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 27 23:37:58.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8708-crds.webhook.example.com via the AdmissionRegistration API @ 08/27/24 23:38:03.809
  STEP: Creating a custom resource while v1 is storage version @ 08/27/24 23:38:03.844
  STEP: Patching Custom Resource Definition to set v2 as storage @ 08/27/24 23:38:05.973
  STEP: Patching the custom resource while v2 is storage version @ 08/27/24 23:38:06.142
  Aug 27 23:38:06.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6088" for this suite. @ 08/27/24 23:38:06.937
  STEP: Destroying namespace "webhook-markers-2803" for this suite. @ 08/27/24 23:38:06.978
• [14.824 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 08/27/24 23:38:07.006
  Aug 27 23:38:07.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename namespaces @ 08/27/24 23:38:07.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:07.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:07.054
  STEP: Creating namespace "e2e-ns-5ml4t" @ 08/27/24 23:38:07.06
  Aug 27 23:38:07.096: INFO: Namespace "e2e-ns-5ml4t-856" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-5ml4t-856" @ 08/27/24 23:38:07.097
  Aug 27 23:38:07.116: INFO: Namespace "e2e-ns-5ml4t-856" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-5ml4t-856" @ 08/27/24 23:38:07.116
  Aug 27 23:38:07.136: INFO: Namespace "e2e-ns-5ml4t-856" has []v1.FinalizerName{"kubernetes"}
  Aug 27 23:38:07.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1184" for this suite. @ 08/27/24 23:38:07.148
  STEP: Destroying namespace "e2e-ns-5ml4t-856" for this suite. @ 08/27/24 23:38:07.166
• [0.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 08/27/24 23:38:07.186
  Aug 27 23:38:07.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:38:07.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:07.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:07.226
  STEP: creating a ConfigMap @ 08/27/24 23:38:07.232
  STEP: fetching the ConfigMap @ 08/27/24 23:38:07.24
  STEP: patching the ConfigMap @ 08/27/24 23:38:07.247
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 08/27/24 23:38:07.256
  STEP: deleting the ConfigMap by collection with a label selector @ 08/27/24 23:38:07.264
  STEP: listing all ConfigMaps in test namespace @ 08/27/24 23:38:07.277
  Aug 27 23:38:07.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3651" for this suite. @ 08/27/24 23:38:07.294
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 08/27/24 23:38:07.324
  Aug 27 23:38:07.324: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:38:07.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:07.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:07.37
  STEP: Creating projection with secret that has name projected-secret-test-map-72f682b5-20b6-4d3e-bb92-a55dca5a8c4f @ 08/27/24 23:38:07.378
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:38:07.39
  STEP: Saw pod success @ 08/27/24 23:38:11.441
  Aug 27 23:38:11.449: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-4aed9c8b-a2cc-41a3-ba7b-d62d1d737337 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:38:11.47
  Aug 27 23:38:11.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7568" for this suite. @ 08/27/24 23:38:11.543
• [4.235 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 08/27/24 23:38:11.562
  Aug 27 23:38:11.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/27/24 23:38:11.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:11.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:11.61
  STEP: creating service in namespace services-3299 @ 08/27/24 23:38:11.616
  STEP: creating service affinity-nodeport-transition in namespace services-3299 @ 08/27/24 23:38:11.616
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3299 @ 08/27/24 23:38:11.667
  I0827 23:38:11.691303      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-3299, replica count: 3
  I0827 23:38:14.743173      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 27 23:38:14.769: INFO: Creating new exec pod
  Aug 27 23:38:17.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3299 exec execpod-affinity44vgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Aug 27 23:38:18.142: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Aug 27 23:38:18.143: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 27 23:38:18.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3299 exec execpod-affinity44vgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.42.226 80'
  Aug 27 23:38:18.445: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.42.226 80\nConnection to 10.233.42.226 80 port [tcp/http] succeeded!\n"
  Aug 27 23:38:18.445: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 27 23:38:18.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3299 exec execpod-affinity44vgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 31915'
  Aug 27 23:38:18.714: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 31915\nConnection to 10.61.1.200 31915 port [tcp/*] succeeded!\n"
  Aug 27 23:38:18.714: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 27 23:38:18.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3299 exec execpod-affinity44vgf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.201 31915'
  Aug 27 23:38:18.974: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.201 31915\nConnection to 10.61.1.201 31915 port [tcp/*] succeeded!\n"
  Aug 27 23:38:18.974: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 27 23:38:18.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3299 exec execpod-affinity44vgf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:31915/ ; done'
  Aug 27 23:38:19.458: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n"
  Aug 27 23:38:19.458: INFO: stdout: "\naffinity-nodeport-transition-7fjw6\naffinity-nodeport-transition-spk5j\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-7fjw6\naffinity-nodeport-transition-spk5j\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-7fjw6\naffinity-nodeport-transition-spk5j\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-7fjw6\naffinity-nodeport-transition-spk5j\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-7fjw6\naffinity-nodeport-transition-spk5j\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-7fjw6"
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-7fjw6
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-spk5j
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-7fjw6
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-spk5j
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-7fjw6
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-spk5j
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-7fjw6
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-spk5j
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-7fjw6
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-spk5j
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:19.458: INFO: Received response from host: affinity-nodeport-transition-7fjw6
  Aug 27 23:38:19.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3299 exec execpod-affinity44vgf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:31915/ ; done'
  Aug 27 23:38:20.003: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:31915/\n"
  Aug 27 23:38:20.003: INFO: stdout: "\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958\naffinity-nodeport-transition-lq958"
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Received response from host: affinity-nodeport-transition-lq958
  Aug 27 23:38:20.003: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3299, will wait for the garbage collector to delete the pods @ 08/27/24 23:38:20.049
  Aug 27 23:38:20.135: INFO: Deleting ReplicationController affinity-nodeport-transition took: 16.686107ms
  Aug 27 23:38:20.236: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.076867ms
  Aug 27 23:38:24.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3299" for this suite. @ 08/27/24 23:38:24.041
• [12.498 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 08/27/24 23:38:24.06
  Aug 27 23:38:24.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replication-controller @ 08/27/24 23:38:24.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:24.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:24.125
  STEP: creating a ReplicationController @ 08/27/24 23:38:24.141
  STEP: waiting for RC to be added @ 08/27/24 23:38:24.154
  STEP: waiting for available Replicas @ 08/27/24 23:38:24.155
  STEP: patching ReplicationController @ 08/27/24 23:38:25.497
  STEP: waiting for RC to be modified @ 08/27/24 23:38:25.511
  STEP: patching ReplicationController status @ 08/27/24 23:38:25.512
  STEP: waiting for RC to be modified @ 08/27/24 23:38:25.524
  STEP: waiting for available Replicas @ 08/27/24 23:38:25.524
  STEP: fetching ReplicationController status @ 08/27/24 23:38:25.533
  STEP: patching ReplicationController scale @ 08/27/24 23:38:25.54
  STEP: waiting for RC to be modified @ 08/27/24 23:38:25.55
  STEP: waiting for ReplicationController's scale to be the max amount @ 08/27/24 23:38:25.55
  STEP: fetching ReplicationController; ensuring that it's patched @ 08/27/24 23:38:26.898
  STEP: updating ReplicationController status @ 08/27/24 23:38:26.907
  STEP: waiting for RC to be modified @ 08/27/24 23:38:26.921
  STEP: listing all ReplicationControllers @ 08/27/24 23:38:26.923
  STEP: checking that ReplicationController has expected values @ 08/27/24 23:38:26.934
  STEP: deleting ReplicationControllers by collection @ 08/27/24 23:38:26.934
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 08/27/24 23:38:26.961
  Aug 27 23:38:27.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0827 23:38:27.086616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7946" for this suite. @ 08/27/24 23:38:27.1
• [3.069 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 08/27/24 23:38:27.132
  Aug 27 23:38:27.133: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:38:27.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:27.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:27.195
  STEP: Creating configMap with name configmap-test-volume-17b8df24-306d-4b47-8494-bded1ab2967b @ 08/27/24 23:38:27.205
  STEP: Creating a pod to test consume configMaps @ 08/27/24 23:38:27.216
  E0827 23:38:28.086782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:29.086998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:30.088867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:31.089048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:38:31.272
  Aug 27 23:38:31.280: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-7c092e8f-b145-4665-ab32-5be5760bd3cb container configmap-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:38:31.301
  Aug 27 23:38:31.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2464" for this suite. @ 08/27/24 23:38:31.384
• [4.273 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 08/27/24 23:38:31.406
  Aug 27 23:38:31.406: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-runtime @ 08/27/24 23:38:31.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:31.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:31.458
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 08/27/24 23:38:31.506
  E0827 23:38:32.089644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:33.090517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:34.090770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:35.090902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:36.092129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:37.092406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:38.092999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:39.093465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:40.093669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:41.094115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:42.094419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:43.095012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:44.095784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:45.095840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:46.096829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:47.097465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 08/27/24 23:38:47.739
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 08/27/24 23:38:47.75
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 08/27/24 23:38:47.771
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 08/27/24 23:38:47.771
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 08/27/24 23:38:47.856
  E0827 23:38:48.097673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:49.097929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:50.098542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 08/27/24 23:38:50.918
  E0827 23:38:51.099657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:52.100187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 08/27/24 23:38:52.948
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 08/27/24 23:38:52.983
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 08/27/24 23:38:52.983
  E0827 23:38:53.101142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 08/27/24 23:38:53.106
  E0827 23:38:54.101466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 08/27/24 23:38:54.15
  E0827 23:38:55.101987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:56.102650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:57.103480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 08/27/24 23:38:57.2
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 08/27/24 23:38:57.215
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 08/27/24 23:38:57.215
  Aug 27 23:38:57.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1988" for this suite. @ 08/27/24 23:38:57.296
• [25.911 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 08/27/24 23:38:57.318
  Aug 27 23:38:57.318: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:38:57.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:38:57.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:38:57.381
  STEP: Creating configMap with name configmap-test-upd-b594052b-e736-4d12-a947-3b7ce9cefe90 @ 08/27/24 23:38:57.398
  STEP: Creating the pod @ 08/27/24 23:38:57.41
  E0827 23:38:58.103608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:38:59.104711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:00.104776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:01.105302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-b594052b-e736-4d12-a947-3b7ce9cefe90 @ 08/27/24 23:39:01.523
  STEP: waiting to observe update in volume @ 08/27/24 23:39:01.535
  E0827 23:39:02.106183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:03.106234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:04.106488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:05.107379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:06.107675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:07.108699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:08.108913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:09.109376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:10.110146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:11.111278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:12.111793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:13.112170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:14.112489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:15.112989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:16.113879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:17.114033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:18.114140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:19.114406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:20.115287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:21.116117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:22.116884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:23.117802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:24.118387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:25.119306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:26.119706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:27.120745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:28.121173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:29.121727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:30.122416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:31.122835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:32.123070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:33.123544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:34.124087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:35.125003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:36.125562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:37.126488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:38.126663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:39.127094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:40.127827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:41.128400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:42.128956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:43.129635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:44.129410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:45.130154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:46.130655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:47.131319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:48.136802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:49.136305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:50.136954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:51.137435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:52.138275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:53.138511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:54.138949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:55.139663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:56.140199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:57.140209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:58.140833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:39:59.141193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:00.141256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:01.141974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:02.142808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:03.142926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:04.143443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:05.144397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:06.144557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:07.145706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:08.145774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:09.146496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:10.146615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:11.146937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:12.147078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:13.147612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:14.147784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:15.148320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:16.149404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:17.150017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:18.150366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:19.150665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:20.151375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:21.151901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:22.152741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:23.153546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:24.153700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:25.153960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:26.154826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:27.155327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:28.155399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:29.155766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:30.156402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:31.157012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:32.157957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:40:32.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5673" for this suite. @ 08/27/24 23:40:32.728
• [95.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 08/27/24 23:40:32.753
  Aug 27 23:40:32.753: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename endpointslice @ 08/27/24 23:40:32.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:40:32.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:40:32.826
  Aug 27 23:40:32.856: INFO: Endpoints addresses: [10.61.1.197 10.61.1.198 10.61.1.199] , ports: [6443]
  Aug 27 23:40:32.856: INFO: EndpointSlices addresses: [10.61.1.197 10.61.1.198 10.61.1.199] , ports: [6443]
  Aug 27 23:40:32.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6721" for this suite. @ 08/27/24 23:40:32.895
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 08/27/24 23:40:32.938
  Aug 27 23:40:32.938: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:40:32.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:40:33.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:40:33.019
  STEP: Creating configMap with name projected-configmap-test-volume-25de2697-6405-4709-a617-43f886bc2b19 @ 08/27/24 23:40:33.026
  STEP: Creating a pod to test consume configMaps @ 08/27/24 23:40:33.037
  E0827 23:40:33.158908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:34.159157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:35.159322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:36.159879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:40:37.121
  Aug 27 23:40:37.131: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-c20d8327-1127-47c3-8b39-6c81628383ce container agnhost-container: <nil>
  STEP: delete the pod @ 08/27/24 23:40:37.153
  E0827 23:40:37.160409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:40:37.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1835" for this suite. @ 08/27/24 23:40:37.212
• [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 08/27/24 23:40:37.231
  Aug 27 23:40:37.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename events @ 08/27/24 23:40:37.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:40:37.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:40:37.296
  STEP: creating a test event @ 08/27/24 23:40:37.302
  STEP: listing events in all namespaces @ 08/27/24 23:40:37.32
  STEP: listing events in test namespace @ 08/27/24 23:40:37.347
  STEP: listing events with field selection filtering on source @ 08/27/24 23:40:37.36
  STEP: listing events with field selection filtering on reportingController @ 08/27/24 23:40:37.371
  STEP: getting the test event @ 08/27/24 23:40:37.381
  STEP: patching the test event @ 08/27/24 23:40:37.391
  STEP: getting the test event @ 08/27/24 23:40:37.409
  STEP: updating the test event @ 08/27/24 23:40:37.418
  STEP: getting the test event @ 08/27/24 23:40:37.433
  STEP: deleting the test event @ 08/27/24 23:40:37.442
  STEP: listing events in all namespaces @ 08/27/24 23:40:37.468
  STEP: listing events in test namespace @ 08/27/24 23:40:37.483
  Aug 27 23:40:37.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7339" for this suite. @ 08/27/24 23:40:37.508
• [0.289 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 08/27/24 23:40:37.521
  Aug 27 23:40:37.521: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/27/24 23:40:37.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:40:37.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:40:37.571
  STEP: creating the pod with failed condition @ 08/27/24 23:40:37.576
  E0827 23:40:38.160939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:39.161331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:40.161840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:41.162699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:42.162770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:43.162986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:44.163241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:45.163607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:46.164173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:47.164391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:48.165651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:49.166499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:50.167149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:51.167601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:52.168344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:53.168690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:54.169878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:55.170777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:56.170962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:57.171604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:58.172700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:40:59.173133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:00.174336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:01.174821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:02.175169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:03.175769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:04.176345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:05.176828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:06.177539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:07.177586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:08.178384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:09.178974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:10.179638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:11.180053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:12.181046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:13.181547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:14.182507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:15.182953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:16.183246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:17.183365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:18.183599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:19.184311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:20.184696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:21.185226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:22.185570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:23.185712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:24.186078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:25.186782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:26.187744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:27.188648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:28.189762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:29.190851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:30.192928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:31.193140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:32.193537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:33.193566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:34.194023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:35.194735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:36.194831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:37.195592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:38.195681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:39.195946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:40.196889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:41.197312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:42.198145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:43.198824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:44.199291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:45.199755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:46.200904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:47.201020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:48.201333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:49.201774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:50.202577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:51.203083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:52.203885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:53.204222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:54.205328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:55.206132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:56.206248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:57.206414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:58.207359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:41:59.208495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:00.209023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:01.209318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:02.209935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:03.210244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:04.210860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:05.211658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:06.211870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:07.212755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:08.213736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:09.213883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:10.214069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:11.214352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:12.214904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:13.215320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:14.216253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:15.216419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:16.216835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:17.217059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:18.217435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:19.217682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:20.217858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:21.217928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:22.218827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:23.219514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:24.219710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:25.220839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:26.221021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:27.221407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:28.221518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:29.221806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:30.222514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:31.222745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:32.223617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:33.223671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:34.223919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:35.224744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:36.225136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:37.225078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 08/27/24 23:42:37.6
  Aug 27 23:42:38.142: INFO: Successfully updated pod "var-expansion-2a382ad3-3d74-4e7f-928d-7f0369db05e5"
  STEP: waiting for pod running @ 08/27/24 23:42:38.142
  E0827 23:42:38.225258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:39.225515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 08/27/24 23:42:40.156
  Aug 27 23:42:40.156: INFO: Deleting pod "var-expansion-2a382ad3-3d74-4e7f-928d-7f0369db05e5" in namespace "var-expansion-9818"
  Aug 27 23:42:40.171: INFO: Wait up to 5m0s for pod "var-expansion-2a382ad3-3d74-4e7f-928d-7f0369db05e5" to be fully deleted
  E0827 23:42:40.226505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:41.227121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:42.227151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:43.227405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:44.227576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:45.228267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:46.229278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:47.230424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:48.230502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:49.230837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:50.230924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:51.231494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:52.232424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:53.233137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:54.233875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:55.234686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:56.237334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:57.236964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:58.237091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:42:59.237391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:00.237759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:01.238206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:02.238889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:03.239240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:04.239810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:05.240708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:06.241170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:07.241266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:08.243731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:09.243994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:10.244036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:11.244819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:12.245795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:43:12.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9818" for this suite. @ 08/27/24 23:43:12.37
• [154.877 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 08/27/24 23:43:12.416
  Aug 27 23:43:12.417: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svcaccounts @ 08/27/24 23:43:12.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:12.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:12.551
  Aug 27 23:43:12.576: INFO: Got root ca configmap in namespace "svcaccounts-9722"
  Aug 27 23:43:12.606: INFO: Deleted root ca configmap in namespace "svcaccounts-9722"
  STEP: waiting for a new root ca configmap created @ 08/27/24 23:43:13.107
  Aug 27 23:43:13.117: INFO: Recreated root ca configmap in namespace "svcaccounts-9722"
  Aug 27 23:43:13.128: INFO: Updated root ca configmap in namespace "svcaccounts-9722"
  E0827 23:43:13.246610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 08/27/24 23:43:13.628
  Aug 27 23:43:13.636: INFO: Reconciled root ca configmap in namespace "svcaccounts-9722"
  Aug 27 23:43:13.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9722" for this suite. @ 08/27/24 23:43:13.646
• [1.249 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 08/27/24 23:43:13.666
  Aug 27 23:43:13.666: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/27/24 23:43:13.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:13.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:13.734
  STEP: Creating service test in namespace statefulset-9247 @ 08/27/24 23:43:13.744
  STEP: Looking for a node to schedule stateful set and pod @ 08/27/24 23:43:13.768
  STEP: Creating pod with conflicting port in namespace statefulset-9247 @ 08/27/24 23:43:13.797
  STEP: Waiting until pod test-pod will start running in namespace statefulset-9247 @ 08/27/24 23:43:13.814
  E0827 23:43:14.247273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:15.247507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-9247 @ 08/27/24 23:43:15.842
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9247 @ 08/27/24 23:43:15.857
  Aug 27 23:43:15.910: INFO: Observed stateful pod in namespace: statefulset-9247, name: ss-0, uid: dbaaa7f8-0e90-4d14-9eb4-f2d8dfd7f23c, status phase: Pending. Waiting for statefulset controller to delete.
  Aug 27 23:43:15.968: INFO: Observed stateful pod in namespace: statefulset-9247, name: ss-0, uid: dbaaa7f8-0e90-4d14-9eb4-f2d8dfd7f23c, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 27 23:43:15.982: INFO: Observed stateful pod in namespace: statefulset-9247, name: ss-0, uid: dbaaa7f8-0e90-4d14-9eb4-f2d8dfd7f23c, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 27 23:43:16.004: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9247
  STEP: Removing pod with conflicting port in namespace statefulset-9247 @ 08/27/24 23:43:16.004
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9247 and will be in running state @ 08/27/24 23:43:16.113
  E0827 23:43:16.248104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:17.248109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:18.248499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:19.248628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:43:20.162: INFO: Deleting all statefulset in ns statefulset-9247
  Aug 27 23:43:20.169: INFO: Scaling statefulset ss to 0
  E0827 23:43:20.249631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:21.250213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:22.251258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:23.251987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:24.252969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:25.253953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:26.254466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:27.255323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:28.255707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:29.256776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:43:30.200: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 27 23:43:30.207: INFO: Deleting statefulset ss
  E0827 23:43:30.257220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:43:30.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9247" for this suite. @ 08/27/24 23:43:30.276
• [16.627 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 08/27/24 23:43:30.294
  Aug 27 23:43:30.294: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:43:30.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:30.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:30.367
  STEP: Creating projection with secret that has name projected-secret-test-5799eee8-2b47-4b07-860d-9ba94d96527b @ 08/27/24 23:43:30.375
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:43:30.388
  E0827 23:43:31.257447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:32.258438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:33.258968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:34.259515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:43:34.53
  Aug 27 23:43:34.560: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-2175b5b6-49be-42e4-805b-f2291a9e9899 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:43:34.632
  Aug 27 23:43:34.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7707" for this suite. @ 08/27/24 23:43:34.761
• [4.489 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 08/27/24 23:43:34.782
  Aug 27 23:43:34.782: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/27/24 23:43:34.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:34.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:34.86
  STEP: creating a target pod @ 08/27/24 23:43:34.886
  E0827 23:43:35.259697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:36.260622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 08/27/24 23:43:36.967
  E0827 23:43:37.261303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:38.261648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:39.262581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:40.264049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 08/27/24 23:43:41.011
  Aug 27 23:43:41.011: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7738 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:43:41.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:43:41.012: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:43:41.012: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-7738/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 27 23:43:41.161: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 08/27/24 23:43:41.18
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 08/27/24 23:43:41.188
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 08/27/24 23:43:41.229
  Aug 27 23:43:41.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0827 23:43:41.264125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ephemeral-containers-test-7738" for this suite. @ 08/27/24 23:43:41.27
• [6.520 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 08/27/24 23:43:41.303
  Aug 27 23:43:41.303: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:43:41.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:41.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:41.378
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:43:41.384
  E0827 23:43:42.264951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:43.265215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:44.265858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:45.267012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:43:45.451
  Aug 27 23:43:45.462: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-8277b8e1-af91-4c74-80c9-90c5bde17101 container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:43:45.478
  Aug 27 23:43:45.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4894" for this suite. @ 08/27/24 23:43:45.519
• [4.230 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 08/27/24 23:43:45.534
  Aug 27 23:43:45.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/27/24 23:43:45.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:45.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:45.581
  STEP: Creating the pod @ 08/27/24 23:43:45.587
  E0827 23:43:46.267485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:47.267706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:48.267772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:49.268410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:43:50.216: INFO: Successfully updated pod "annotationupdateccc5463a-0a21-4faf-8d20-5c11893e80b5"
  E0827 23:43:50.269360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:51.269932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:43:52.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0827 23:43:52.270161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "downward-api-2920" for this suite. @ 08/27/24 23:43:52.271
• [6.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 08/27/24 23:43:52.287
  Aug 27 23:43:52.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/27/24 23:43:52.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:52.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:52.34
  STEP: Creating a pod to test substitution in container's args @ 08/27/24 23:43:52.345
  E0827 23:43:53.271302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:54.271976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:55.272991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:56.273323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:43:56.392
  Aug 27 23:43:56.400: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-b5d04828-5509-42ca-9b34-657b93fb9840 container dapi-container: <nil>
  STEP: delete the pod @ 08/27/24 23:43:56.413
  Aug 27 23:43:56.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6507" for this suite. @ 08/27/24 23:43:56.463
• [4.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 08/27/24 23:43:56.481
  Aug 27 23:43:56.481: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename job @ 08/27/24 23:43:56.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:43:56.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:43:56.544
  STEP: Creating a job @ 08/27/24 23:43:56.557
  STEP: Ensuring active pods == parallelism @ 08/27/24 23:43:56.566
  E0827 23:43:57.274174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:58.274749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:43:59.275041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:00.275207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 08/27/24 23:44:00.575
  Aug 27 23:44:01.118: INFO: Successfully updated pod "adopt-release-6p92c"
  STEP: Checking that the Job readopts the Pod @ 08/27/24 23:44:01.118
  E0827 23:44:01.275284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:02.276458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 08/27/24 23:44:03.153
  E0827 23:44:03.276906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:44:03.678: INFO: Successfully updated pod "adopt-release-6p92c"
  STEP: Checking that the Job releases the Pod @ 08/27/24 23:44:03.678
  E0827 23:44:04.277007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:05.277992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:44:05.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3321" for this suite. @ 08/27/24 23:44:05.709
• [9.249 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 08/27/24 23:44:05.733
  Aug 27 23:44:05.734: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/27/24 23:44:05.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:44:05.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:44:05.784
  STEP: Creating secret with name s-test-opt-del-3d4c662d-09ee-4767-8767-7a65a67cf54e @ 08/27/24 23:44:05.801
  STEP: Creating secret with name s-test-opt-upd-1ff0f4ab-37b5-44e8-8037-3bde89c97456 @ 08/27/24 23:44:05.815
  STEP: Creating the pod @ 08/27/24 23:44:05.836
  E0827 23:44:06.278738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:07.279657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:08.279766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:09.280215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-3d4c662d-09ee-4767-8767-7a65a67cf54e @ 08/27/24 23:44:09.991
  STEP: Updating secret s-test-opt-upd-1ff0f4ab-37b5-44e8-8037-3bde89c97456 @ 08/27/24 23:44:10.007
  STEP: Creating secret with name s-test-opt-create-cfc20d02-59b0-474b-8fcb-199955889653 @ 08/27/24 23:44:10.024
  STEP: waiting to observe update in volume @ 08/27/24 23:44:10.054
  E0827 23:44:10.283633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:11.283873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:12.284053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:13.284223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:14.285404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:15.285498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:16.285796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:17.286751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:18.287887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:19.288288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:20.288824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:21.289134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:22.289295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:23.289474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:24.289573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:25.289601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:26.290446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:27.291496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:28.291728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:29.291752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:30.292561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:31.292904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:32.292893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:33.294558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:34.294907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:35.296318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:36.296943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:37.297500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:38.297932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:39.298138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:40.298466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:41.299446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:42.300748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:43.301013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:44.301186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:45.302295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:46.302463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:47.303282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:48.303695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:49.304432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:50.304883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:51.304973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:52.305251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:53.305271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:54.305923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:55.305945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:56.306067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:57.307107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:58.307738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:44:59.308507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:00.308819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:01.309025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:02.309156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:03.310163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:04.310526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:05.310742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:06.311635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:07.312510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:08.313056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:09.314077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:10.317108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:11.317458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:12.318898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:13.319019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:14.320827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:15.321945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:16.322339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:17.323395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:18.323705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:45:18.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9637" for this suite. @ 08/27/24 23:45:18.932
• [73.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 08/27/24 23:45:18.957
  Aug 27 23:45:18.957: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename cronjob @ 08/27/24 23:45:18.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:45:19.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:45:19.014
  STEP: Creating a cronjob @ 08/27/24 23:45:19.021
  STEP: creating @ 08/27/24 23:45:19.022
  STEP: getting @ 08/27/24 23:45:19.046
  STEP: listing @ 08/27/24 23:45:19.054
  STEP: watching @ 08/27/24 23:45:19.069
  Aug 27 23:45:19.069: INFO: starting watch
  STEP: cluster-wide listing @ 08/27/24 23:45:19.076
  STEP: cluster-wide watching @ 08/27/24 23:45:19.088
  Aug 27 23:45:19.088: INFO: starting watch
  STEP: patching @ 08/27/24 23:45:19.091
  STEP: updating @ 08/27/24 23:45:19.106
  Aug 27 23:45:19.140: INFO: waiting for watch events with expected annotations
  Aug 27 23:45:19.142: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/27/24 23:45:19.142
  STEP: updating /status @ 08/27/24 23:45:19.164
  STEP: get /status @ 08/27/24 23:45:19.182
  STEP: deleting @ 08/27/24 23:45:19.191
  STEP: deleting a collection @ 08/27/24 23:45:19.229
  Aug 27 23:45:19.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8147" for this suite. @ 08/27/24 23:45:19.266
• [0.333 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 08/27/24 23:45:19.29
  Aug 27 23:45:19.290: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:45:19.292
  E0827 23:45:19.324111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:45:19.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:45:19.344
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-9cb6d44d-0b45-4049-a579-29318b41c533 @ 08/27/24 23:45:19.366
  STEP: Creating the pod @ 08/27/24 23:45:19.38
  E0827 23:45:20.324510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:21.324823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-9cb6d44d-0b45-4049-a579-29318b41c533 @ 08/27/24 23:45:21.456
  STEP: waiting to observe update in volume @ 08/27/24 23:45:21.464
  E0827 23:45:22.325319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:23.325810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:45:23.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-561" for this suite. @ 08/27/24 23:45:23.522
• [4.248 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 08/27/24 23:45:23.538
  Aug 27 23:45:23.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/27/24 23:45:23.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:45:23.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:45:23.585
  STEP: Counting existing ResourceQuota @ 08/27/24 23:45:23.592
  E0827 23:45:24.325779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:25.326939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:26.327335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:27.328392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:28.328949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/27/24 23:45:28.606
  STEP: Ensuring resource quota status is calculated @ 08/27/24 23:45:28.636
  E0827 23:45:29.329566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:30.329965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 08/27/24 23:45:30.647
  STEP: Creating a NodePort Service @ 08/27/24 23:45:30.692
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 08/27/24 23:45:30.779
  STEP: Ensuring resource quota status captures service creation @ 08/27/24 23:45:30.903
  E0827 23:45:31.330903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:32.331633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 08/27/24 23:45:32.919
  STEP: Ensuring resource quota status released usage @ 08/27/24 23:45:33.058
  E0827 23:45:33.333268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:34.333471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:45:35.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3272" for this suite. @ 08/27/24 23:45:35.085
• [11.569 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 08/27/24 23:45:35.108
  Aug 27 23:45:35.108: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/27/24 23:45:35.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:45:35.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:45:35.2
  STEP: creating secret secrets-2122/secret-test-a4c35601-f3fd-4332-9756-74cc58045402 @ 08/27/24 23:45:35.215
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:45:35.225
  E0827 23:45:35.334511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:36.335175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:37.336062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:38.341156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:45:39.291
  Aug 27 23:45:39.300: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-8a70bb16-e37f-4447-9b14-3b63cbb0d082 container env-test: <nil>
  E0827 23:45:39.339482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/27/24 23:45:39.349
  Aug 27 23:45:39.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2122" for this suite. @ 08/27/24 23:45:39.432
• [4.352 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 08/27/24 23:45:39.461
  Aug 27 23:45:39.461: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pod-network-test @ 08/27/24 23:45:39.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:45:39.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:45:39.557
  STEP: Performing setup for networking test in namespace pod-network-test-3663 @ 08/27/24 23:45:39.562
  STEP: creating a selector @ 08/27/24 23:45:39.563
  STEP: Creating the service pods in kubernetes @ 08/27/24 23:45:39.563
  Aug 27 23:45:39.563: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0827 23:45:40.340461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:41.340678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:42.343074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:43.343767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:44.344719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:45.344916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:46.346081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:47.346311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:48.346699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:49.347580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:50.347790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:51.347979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:52.348436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:53.348657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:54.348796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:55.349123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:56.350118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:57.350334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:58.351170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:45:59.351817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:00.352577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:01.352710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/27/24 23:46:01.859
  E0827 23:46:02.353641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:03.353766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:03.932: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 27 23:46:03.932: INFO: Going to poll 10.233.118.16 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 27 23:46:03.937: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.118.16 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3663 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:46:03.938: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:46:03.938: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:46:03.939: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3663/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.118.16+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0827 23:46:04.354472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:05.063: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 27 23:46:05.064: INFO: Going to poll 10.233.87.108 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 27 23:46:05.072: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.87.108 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3663 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:46:05.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:46:05.073: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:46:05.073: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3663/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.87.108+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0827 23:46:05.355118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:06.224: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 27 23:46:06.224: INFO: Going to poll 10.233.76.149 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 27 23:46:06.234: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.76.149 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3663 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:46:06.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:46:06.236: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:46:06.236: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3663/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.76.149+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0827 23:46:06.356072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:07.356251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:07.377: INFO: Found all 1 expected endpoints: [netserver-2]
  Aug 27 23:46:07.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3663" for this suite. @ 08/27/24 23:46:07.394
• [27.965 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 08/27/24 23:46:07.426
  Aug 27 23:46:07.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:46:07.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:46:07.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:46:07.522
  STEP: validating cluster-info @ 08/27/24 23:46:07.532
  Aug 27 23:46:07.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5991 cluster-info'
  Aug 27 23:46:07.662: INFO: stderr: ""
  Aug 27 23:46:07.662: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Aug 27 23:46:07.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5991" for this suite. @ 08/27/24 23:46:07.69
• [0.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 08/27/24 23:46:07.715
  Aug 27 23:46:07.715: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pod-network-test @ 08/27/24 23:46:07.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:46:07.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:46:07.785
  STEP: Performing setup for networking test in namespace pod-network-test-291 @ 08/27/24 23:46:07.795
  STEP: creating a selector @ 08/27/24 23:46:07.795
  STEP: Creating the service pods in kubernetes @ 08/27/24 23:46:07.795
  Aug 27 23:46:07.795: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0827 23:46:08.356696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:09.356879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:10.357325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:11.358232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:12.359296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:13.359735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:14.361502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:15.362087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:16.362837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:17.362989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:18.363880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:19.364859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:20.365935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:21.366697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:22.367822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:23.368352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:24.369578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:25.369559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:26.369930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:27.370702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:28.371613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:29.371893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/27/24 23:46:30.153
  E0827 23:46:30.372690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:31.372762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:32.257: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 27 23:46:32.257: INFO: Going to poll 10.233.118.21 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 27 23:46:32.264: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.118.21:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-291 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:46:32.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:46:32.267: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:46:32.268: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-291/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.118.21%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0827 23:46:32.373752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:32.405: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 27 23:46:32.405: INFO: Going to poll 10.233.87.88 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 27 23:46:32.413: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.87.88:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-291 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:46:32.414: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:46:32.417: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:46:32.417: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-291/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.87.88%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 27 23:46:32.574: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 27 23:46:32.574: INFO: Going to poll 10.233.76.186 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 27 23:46:32.595: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.76.186:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-291 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 27 23:46:32.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 27 23:46:32.597: INFO: ExecWithOptions: Clientset creation
  Aug 27 23:46:32.597: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-291/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.76.186%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 27 23:46:32.765: INFO: Found all 1 expected endpoints: [netserver-2]
  Aug 27 23:46:32.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-291" for this suite. @ 08/27/24 23:46:32.783
• [25.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 08/27/24 23:46:32.825
  Aug 27 23:46:32.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/27/24 23:46:32.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:46:32.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:46:32.951
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3344 @ 08/27/24 23:46:32.959
  STEP: changing the ExternalName service to type=NodePort @ 08/27/24 23:46:32.98
  STEP: creating replication controller externalname-service in namespace services-3344 @ 08/27/24 23:46:33.041
  I0827 23:46:33.078761      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3344, replica count: 2
  E0827 23:46:33.374035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:34.374735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:35.375509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0827 23:46:36.129318      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 27 23:46:36.129: INFO: Creating new exec pod
  E0827 23:46:36.375891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:37.376857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:38.377469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:39.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3344 exec execpod6v5xp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0827 23:46:39.378491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:39.604: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 27 23:46:39.604: INFO: stdout: "externalname-service-4c8kt"
  Aug 27 23:46:39.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3344 exec execpod6v5xp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.19.241 80'
  Aug 27 23:46:40.039: INFO: stderr: "+ nc -v -t -w 2 10.233.19.241 80\n+ echo hostName\nConnection to 10.233.19.241 80 port [tcp/http] succeeded!\n"
  Aug 27 23:46:40.039: INFO: stdout: "externalname-service-tdcdj"
  Aug 27 23:46:40.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3344 exec execpod6v5xp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 31596'
  Aug 27 23:46:40.295: INFO: stderr: "+ nc -v -t -w 2 10.61.1.202 31596\nConnection to 10.61.1.202 31596 port [tcp/*] succeeded!\n+ echo hostName\n"
  Aug 27 23:46:40.295: INFO: stdout: "externalname-service-4c8kt"
  Aug 27 23:46:40.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3344 exec execpod6v5xp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 31596'
  E0827 23:46:40.379570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:40.586: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 31596\nConnection to 10.61.1.200 31596 port [tcp/*] succeeded!\n"
  Aug 27 23:46:40.586: INFO: stdout: "externalname-service-4c8kt"
  Aug 27 23:46:40.586: INFO: Cleaning up the ExternalName to NodePort test service
  Aug 27 23:46:40.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3344" for this suite. @ 08/27/24 23:46:40.705
• [7.904 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 08/27/24 23:46:40.729
  Aug 27 23:46:40.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:46:40.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:46:40.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:46:40.805
  STEP: Creating configMap with name configmap-test-upd-05e2758a-0529-4afe-9eeb-cbed9df89a2e @ 08/27/24 23:46:40.838
  STEP: Creating the pod @ 08/27/24 23:46:40.85
  E0827 23:46:41.379638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:42.380647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 08/27/24 23:46:42.944
  STEP: Waiting for pod with binary data @ 08/27/24 23:46:42.976
  Aug 27 23:46:42.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8109" for this suite. @ 08/27/24 23:46:43.01
• [2.299 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 08/27/24 23:46:43.03
  Aug 27 23:46:43.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/27/24 23:46:43.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:46:43.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:46:43.074
  Aug 27 23:46:43.103: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0827 23:46:43.381526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:44.382490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:45.383297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:46.383473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:47.383588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:48.114: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/27/24 23:46:48.114
  Aug 27 23:46:48.114: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0827 23:46:48.383928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:49.384496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:50.124: INFO: Creating deployment "test-rollover-deployment"
  Aug 27 23:46:50.149: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0827 23:46:50.385287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:51.385692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:52.169: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Aug 27 23:46:52.185: INFO: Ensure that both replica sets have 1 created replica
  Aug 27 23:46:52.204: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Aug 27 23:46:52.229: INFO: Updating deployment test-rollover-deployment
  Aug 27 23:46:52.229: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0827 23:46:52.386325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:53.387853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:54.244: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Aug 27 23:46:54.260: INFO: Make sure deployment "test-rollover-deployment" is complete
  Aug 27 23:46:54.282: INFO: all replica sets need to contain the pod-template-hash label
  Aug 27 23:46:54.283: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0827 23:46:54.388569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:55.388314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:56.304: INFO: all replica sets need to contain the pod-template-hash label
  Aug 27 23:46:56.304: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0827 23:46:56.388575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:57.388926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:46:58.308: INFO: all replica sets need to contain the pod-template-hash label
  Aug 27 23:46:58.309: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0827 23:46:58.388885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:46:59.389399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:00.305: INFO: all replica sets need to contain the pod-template-hash label
  Aug 27 23:47:00.306: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0827 23:47:00.390174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:01.390444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:02.302: INFO: all replica sets need to contain the pod-template-hash label
  Aug 27 23:47:02.302: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 27, 23, 46, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 27, 23, 46, 50, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0827 23:47:02.392538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:03.392798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:04.310: INFO: 
  Aug 27 23:47:04.310: INFO: Ensure that both old replica sets have no replicas
  Aug 27 23:47:04.347: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6185",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f569d1e5-bcd6-461a-a9b8-f9f1ede4ad34",
      ResourceVersion: (string) (len=8) "38907809",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860399210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399210,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 27 23:47:04.359: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6185",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3255c0b2-cdcc-4bec-992d-43d9834fb443",
      ResourceVersion: (string) (len=8) "38907798",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860399212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f569d1e5-bcd6-461a-a9b8-f9f1ede4ad34",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 35 36 39 64 31  65 35 2d 62 63 64 36 2d  |\"f569d1e5-bcd6-|
              00000120  34 36 31 61 2d 61 39 62  38 2d 66 39 66 31 65 64  |461a-a9b8-f9f1ed|
              00000130  65 34 61 64 33 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e4ad34\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 27 23:47:04.361: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Aug 27 23:47:04.361: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6185",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca457194-25b2-49d5-b167-1cab66e9eae6",
      ResourceVersion: (string) (len=8) "38907808",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860399203,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f569d1e5-bcd6-461a-a9b8-f9f1ede4ad34",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 35 36 39 64 31 65 35  2d 62 63 64 36 2d 34 36  |f569d1e5-bcd6-46|
              000000c0  31 61 2d 61 39 62 38 2d  66 39 66 31 65 64 65 34  |1a-a9b8-f9f1ede4|
              000000d0  61 64 33 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |ad34\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 27 23:47:04.364: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6185",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4044e6fa-a068-48b1-b455-be48fe9c8000",
      ResourceVersion: (string) (len=8) "38907735",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860399210,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f569d1e5-bcd6-461a-a9b8-f9f1ede4ad34",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 35 36 39 64 31  65 35 2d 62 63 64 36 2d  |\"f569d1e5-bcd6-|
              00000120  34 36 31 61 2d 61 39 62  38 2d 66 39 66 31 65 64  |461a-a9b8-f9f1ed|
              00000130  65 34 61 64 33 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e4ad34\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 27 23:47:04.376: INFO: Pod "test-rollover-deployment-68774655d5-bgrcg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-bgrcg",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-6185",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2f43224f-e122-482c-afd8-bafbd3e9e55a",
      ResourceVersion: (string) (len=8) "38907756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860399212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.155/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ec80d8f8023b0aa5f627c6fe06d8d00c6e158627e222993d3bc2f441a72f9bb5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.155/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "3255c0b2-cdcc-4bec-992d-43d9834fb443",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  35 35 63 30 62 32 2d 63  |d\":\"3255c0b2-c|
              00000090  64 63 63 2d 34 62 65 63  2d 39 39 32 64 2d 34 33  |dcc-4bec-992d-43|
              000000a0  64 39 38 33 34 66 62 34  34 33 5c 22 7d 22 3a 7b  |d9834fb443\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 35 35 5c 22 7d 22 3a  |.233.76.155\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9xnb8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9xnb8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860399212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860399212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860399213,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://e3ceb77a70fdc05e2f7dbbab4696a5686b7714c74029e45601e934d777a58e62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 27 23:47:04.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6185" for this suite. @ 08/27/24 23:47:04.391
  E0827 23:47:04.392800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [21.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 08/27/24 23:47:04.415
  Aug 27 23:47:04.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename runtimeclass @ 08/27/24 23:47:04.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:04.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:04.498
  STEP: getting /apis @ 08/27/24 23:47:04.508
  STEP: getting /apis/node.k8s.io @ 08/27/24 23:47:04.517
  STEP: getting /apis/node.k8s.io/v1 @ 08/27/24 23:47:04.52
  STEP: creating @ 08/27/24 23:47:04.522
  STEP: watching @ 08/27/24 23:47:04.562
  Aug 27 23:47:04.562: INFO: starting watch
  STEP: getting @ 08/27/24 23:47:04.574
  STEP: listing @ 08/27/24 23:47:04.58
  STEP: patching @ 08/27/24 23:47:04.586
  STEP: updating @ 08/27/24 23:47:04.596
  Aug 27 23:47:04.611: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 08/27/24 23:47:04.611
  STEP: deleting a collection @ 08/27/24 23:47:04.641
  Aug 27 23:47:04.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1115" for this suite. @ 08/27/24 23:47:04.701
• [0.297 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 08/27/24 23:47:04.712
  Aug 27 23:47:04.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/27/24 23:47:04.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:04.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:04.758
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:47:04.763
  E0827 23:47:05.393698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:06.394667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:07.394925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:08.395211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:47:08.836
  Aug 27 23:47:08.849: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-9a273387-94de-4084-8d47-c1977fa547fb container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:47:08.868
  Aug 27 23:47:08.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-177" for this suite. @ 08/27/24 23:47:08.916
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 08/27/24 23:47:08.954
  Aug 27 23:47:08.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/27/24 23:47:08.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:09.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:09.007
  STEP: Creating configMap with name configmap-test-volume-map-f9f6fbad-ed20-4fd4-907b-e503914ce6f4 @ 08/27/24 23:47:09.011
  STEP: Creating a pod to test consume configMaps @ 08/27/24 23:47:09.02
  E0827 23:47:09.395440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:10.395905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:11.396649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:12.397765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:47:13.102
  Aug 27 23:47:13.111: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-7c570ba9-f707-4206-bdce-b99e518a757f container agnhost-container: <nil>
  STEP: delete the pod @ 08/27/24 23:47:13.129
  Aug 27 23:47:13.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7220" for this suite. @ 08/27/24 23:47:13.2
• [4.267 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 08/27/24 23:47:13.22
  Aug 27 23:47:13.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:47:13.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:13.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:13.267
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/27/24 23:47:13.272
  Aug 27 23:47:13.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-9048 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0827 23:47:13.397984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:13.455: INFO: stderr: ""
  Aug 27 23:47:13.455: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 08/27/24 23:47:13.455
  E0827 23:47:14.399728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:15.399749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:16.399889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:17.400464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:18.400684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/27/24 23:47:18.507
  Aug 27 23:47:18.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-9048 get pod e2e-test-httpd-pod -o json'
  Aug 27 23:47:18.696: INFO: stderr: ""
  Aug 27 23:47:18.696: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"2a75dbc47cda9be781320e096e526da2fa3a1f80df14a1d911a33755a82696bf\",\n            \"cni.projectcalico.org/podIP\": \"10.233.76.176/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.233.76.176/32\"\n        },\n        \"creationTimestamp\": \"2024-08-27T23:47:13Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9048\",\n        \"resourceVersion\": \"38907971\",\n        \"uid\": \"41f32096-f6f7-4f0d-9e76-89a2199863ff\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-twn7s\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"env1-test-worker-2\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-twn7s\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-08-27T23:47:14Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-08-27T23:47:13Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-08-27T23:47:14Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-08-27T23:47:14Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-08-27T23:47:13Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://e412a3010055cd61b3a64195a4289900dec66f6d93dce5e069c5fd4203b42757\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-08-27T23:47:14Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.61.1.202\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.61.1.202\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.76.176\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.76.176\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-08-27T23:47:13Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 08/27/24 23:47:18.697
  Aug 27 23:47:18.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-9048 replace -f -'
  Aug 27 23:47:18.972: INFO: stderr: ""
  Aug 27 23:47:18.972: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 08/27/24 23:47:18.972
  Aug 27 23:47:18.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-9048 delete pods e2e-test-httpd-pod'
  E0827 23:47:19.401203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:20.401636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:20.944: INFO: stderr: ""
  Aug 27 23:47:20.944: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 27 23:47:20.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9048" for this suite. @ 08/27/24 23:47:20.956
• [7.753 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 08/27/24 23:47:20.974
  Aug 27 23:47:20.974: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename subpath @ 08/27/24 23:47:20.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:21.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:21.028
  STEP: Setting up data @ 08/27/24 23:47:21.041
  STEP: Creating pod pod-subpath-test-configmap-bv6k @ 08/27/24 23:47:21.081
  STEP: Creating a pod to test atomic-volume-subpath @ 08/27/24 23:47:21.081
  E0827 23:47:21.402952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:22.402924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:23.403581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:24.403876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:25.404114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:26.404451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:27.405634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:28.406826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:29.407884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:30.408245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:31.408986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:32.409167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:33.410151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:34.411984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:35.412219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:36.412667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:37.412887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:38.412975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:39.414222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:40.415007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:41.415849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:42.416547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:43.417463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:44.417617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:47:45.266
  Aug 27 23:47:45.275: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-configmap-bv6k container test-container-subpath-configmap-bv6k: <nil>
  STEP: delete the pod @ 08/27/24 23:47:45.29
  STEP: Deleting pod pod-subpath-test-configmap-bv6k @ 08/27/24 23:47:45.322
  Aug 27 23:47:45.322: INFO: Deleting pod "pod-subpath-test-configmap-bv6k" in namespace "subpath-7609"
  Aug 27 23:47:45.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7609" for this suite. @ 08/27/24 23:47:45.343
• [24.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 08/27/24 23:47:45.368
  Aug 27 23:47:45.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename job @ 08/27/24 23:47:45.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:45.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:45.417
  E0827 23:47:45.417612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a job @ 08/27/24 23:47:45.421
  STEP: Ensure pods equal to parallelism count is attached to the job @ 08/27/24 23:47:45.43
  E0827 23:47:46.417861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:47.418798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/27/24 23:47:47.442
  STEP: updating /status @ 08/27/24 23:47:47.462
  STEP: get /status @ 08/27/24 23:47:47.487
  Aug 27 23:47:47.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3534" for this suite. @ 08/27/24 23:47:47.525
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 08/27/24 23:47:47.573
  Aug 27 23:47:47.574: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/27/24 23:47:47.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:47.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:47.63
  STEP: creating a replication controller @ 08/27/24 23:47:47.638
  Aug 27 23:47:47.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 create -f -'
  Aug 27 23:47:47.918: INFO: stderr: ""
  Aug 27 23:47:47.918: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/27/24 23:47:47.918
  Aug 27 23:47:47.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:47:48.081: INFO: stderr: ""
  Aug 27 23:47:48.081: INFO: stdout: "update-demo-nautilus-4prft update-demo-nautilus-wwmpv "
  Aug 27 23:47:48.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods update-demo-nautilus-4prft -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:47:48.247: INFO: stderr: ""
  Aug 27 23:47:48.247: INFO: stdout: ""
  Aug 27 23:47:48.247: INFO: update-demo-nautilus-4prft is created but not running
  E0827 23:47:48.419063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:49.419099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:50.419266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:51.419706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:52.419707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:53.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 27 23:47:53.395: INFO: stderr: ""
  Aug 27 23:47:53.395: INFO: stdout: "update-demo-nautilus-4prft update-demo-nautilus-wwmpv "
  Aug 27 23:47:53.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods update-demo-nautilus-4prft -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0827 23:47:53.420539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:53.601: INFO: stderr: ""
  Aug 27 23:47:53.601: INFO: stdout: "true"
  Aug 27 23:47:53.601: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods update-demo-nautilus-4prft -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:47:53.761: INFO: stderr: ""
  Aug 27 23:47:53.761: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:47:53.761: INFO: validating pod update-demo-nautilus-4prft
  Aug 27 23:47:53.783: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:47:53.783: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:47:53.783: INFO: update-demo-nautilus-4prft is verified up and running
  Aug 27 23:47:53.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods update-demo-nautilus-wwmpv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 27 23:47:53.915: INFO: stderr: ""
  Aug 27 23:47:53.915: INFO: stdout: "true"
  Aug 27 23:47:53.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods update-demo-nautilus-wwmpv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 27 23:47:54.119: INFO: stderr: ""
  Aug 27 23:47:54.119: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 27 23:47:54.119: INFO: validating pod update-demo-nautilus-wwmpv
  Aug 27 23:47:54.130: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 27 23:47:54.131: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 27 23:47:54.131: INFO: update-demo-nautilus-wwmpv is verified up and running
  STEP: using delete to clean up resources @ 08/27/24 23:47:54.131
  Aug 27 23:47:54.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 delete --grace-period=0 --force -f -'
  Aug 27 23:47:54.315: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 27 23:47:54.315: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 27 23:47:54.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get rc,svc -l name=update-demo --no-headers'
  E0827 23:47:54.421692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:47:54.525: INFO: stderr: "No resources found in kubectl-5142 namespace.\n"
  Aug 27 23:47:54.525: INFO: stdout: ""
  Aug 27 23:47:54.525: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5142 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 27 23:47:54.744: INFO: stderr: ""
  Aug 27 23:47:54.744: INFO: stdout: ""
  Aug 27 23:47:54.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5142" for this suite. @ 08/27/24 23:47:54.757
• [7.203 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 08/27/24 23:47:54.777
  Aug 27 23:47:54.777: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename events @ 08/27/24 23:47:54.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:54.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:54.831
  STEP: Create set of events @ 08/27/24 23:47:54.835
  STEP: get a list of Events with a label in the current namespace @ 08/27/24 23:47:54.906
  STEP: delete a list of events @ 08/27/24 23:47:54.918
  Aug 27 23:47:54.918: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/27/24 23:47:54.976
  Aug 27 23:47:54.982: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9878" for this suite. @ 08/27/24 23:47:55.001
• [0.243 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 08/27/24 23:47:55.019
  Aug 27 23:47:55.020: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:47:55.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:55.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:55.086
  STEP: Creating a pod to test downward API volume plugin @ 08/27/24 23:47:55.092
  E0827 23:47:55.423027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:56.423484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:57.423579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:47:58.423988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:47:59.162
  Aug 27 23:47:59.172: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-7207b931-2ccf-41c5-a4a1-567177cf4069 container client-container: <nil>
  STEP: delete the pod @ 08/27/24 23:47:59.185
  Aug 27 23:47:59.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4942" for this suite. @ 08/27/24 23:47:59.224
• [4.216 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 08/27/24 23:47:59.236
  Aug 27 23:47:59.236: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename endpointslice @ 08/27/24 23:47:59.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:59.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:59.289
  STEP: getting /apis @ 08/27/24 23:47:59.294
  STEP: getting /apis/discovery.k8s.io @ 08/27/24 23:47:59.309
  STEP: getting /apis/discovery.k8s.iov1 @ 08/27/24 23:47:59.312
  STEP: creating @ 08/27/24 23:47:59.315
  STEP: getting @ 08/27/24 23:47:59.35
  STEP: listing @ 08/27/24 23:47:59.356
  STEP: watching @ 08/27/24 23:47:59.363
  Aug 27 23:47:59.363: INFO: starting watch
  STEP: cluster-wide listing @ 08/27/24 23:47:59.365
  STEP: cluster-wide watching @ 08/27/24 23:47:59.374
  Aug 27 23:47:59.375: INFO: starting watch
  STEP: patching @ 08/27/24 23:47:59.377
  STEP: updating @ 08/27/24 23:47:59.386
  Aug 27 23:47:59.406: INFO: waiting for watch events with expected annotations
  Aug 27 23:47:59.406: INFO: saw patched and updated annotations
  STEP: deleting @ 08/27/24 23:47:59.406
  E0827 23:47:59.425249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 08/27/24 23:47:59.448
  Aug 27 23:47:59.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3683" for this suite. @ 08/27/24 23:47:59.537
• [0.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 08/27/24 23:47:59.567
  Aug 27 23:47:59.567: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename podtemplate @ 08/27/24 23:47:59.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:59.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:59.682
  Aug 27 23:47:59.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6696" for this suite. @ 08/27/24 23:47:59.809
• [0.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 08/27/24 23:47:59.829
  Aug 27 23:47:59.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename discovery @ 08/27/24 23:47:59.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:47:59.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:47:59.891
  STEP: Setting up server cert @ 08/27/24 23:47:59.901
  E0827 23:48:00.425481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 08/27/24 23:48:00.86
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 08/27/24 23:48:00.865
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 08/27/24 23:48:00.868
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 08/27/24 23:48:00.87
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 08/27/24 23:48:00.872
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 08/27/24 23:48:00.874
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 08/27/24 23:48:00.876
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 08/27/24 23:48:00.878
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 08/27/24 23:48:00.879
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 08/27/24 23:48:00.881
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 08/27/24 23:48:00.883
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 08/27/24 23:48:00.886
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 08/27/24 23:48:00.888
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 08/27/24 23:48:00.891
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 08/27/24 23:48:00.893
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 08/27/24 23:48:00.895
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 08/27/24 23:48:00.897
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 08/27/24 23:48:00.899
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 08/27/24 23:48:00.901
  Aug 27 23:48:00.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2324" for this suite. @ 08/27/24 23:48:00.913
• [1.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 08/27/24 23:48:00.946
  Aug 27 23:48:00.946: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/27/24 23:48:00.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:48:01.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:48:01.024
  STEP: Creating pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025 @ 08/27/24 23:48:01.031
  E0827 23:48:01.426135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:02.427281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:03.427236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:04.427642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/27/24 23:48:05.098
  Aug 27 23:48:05.106: INFO: Initial restart count of pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 is 0
  Aug 27 23:48:05.117: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:05.427883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:06.428248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:07.125: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:07.429024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:08.429553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:09.133: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:09.430184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:10.431319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:11.153: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:11.431721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:12.432747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:13.162: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:13.432948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:14.433164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:15.173: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:15.433317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:16.434045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:17.182: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:17.434547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:18.434635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:19.191: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:19.435012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:20.435349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:21.201: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:21.435707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:22.437087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:23.215: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:23.437805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:24.437940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:25.227: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:25.438936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:26.439256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:27.234: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:27.439968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:28.440429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:29.242: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:29.441117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:30.441727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:31.261: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:31.442512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:32.442655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:33.268: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:33.442786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:34.443172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:35.276: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:35.444142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:36.444853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:37.288: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:37.445735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:38.446521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:39.296: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:39.447377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:40.447898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:41.306: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:41.448130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:42.448354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:43.313: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:43.448812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:44.448843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:45.325: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:45.449323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:46.450441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:47.337: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:47.450670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:48.450921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:49.345: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:49.451733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:50.452998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:51.352: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:51.453661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:52.453972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:53.359: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:53.454688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:54.455724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:55.386: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:55.456359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:56.457364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:57.397: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:57.458228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:48:58.459004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:48:59.407: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:48:59.458988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:00.459263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:01.417: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:01.459742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:02.459796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:03.427: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:03.460561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:04.460654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:05.440: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:05.461805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:06.462884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:07.462: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:07.463355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:08.463679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:09.463891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:09.476: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:10.464312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:11.465253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:11.494: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:12.464656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:13.465222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:13.501: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:14.465419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:15.466117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:15.515: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  E0827 23:49:16.466313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:17.467237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:17.527: INFO: Get pod test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 in namespace container-probe-5025
  Aug 27 23:49:17.528: INFO: Restart count of pod container-probe-5025/test-grpc-25fdb067-1134-4160-af42-edf43bb26c63 is now 1 (1m12.420965537s elapsed)
  STEP: deleting the pod @ 08/27/24 23:49:17.528
  Aug 27 23:49:17.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5025" for this suite. @ 08/27/24 23:49:17.626
• [76.705 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 08/27/24 23:49:17.652
  Aug 27 23:49:17.652: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/27/24 23:49:17.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:49:17.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:49:17.715
  STEP: Creating a pod to test downward api env vars @ 08/27/24 23:49:17.722
  E0827 23:49:18.467680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:19.467791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:20.468042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:21.469000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:49:21.816
  Aug 27 23:49:21.830: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-eb629c84-4b78-4873-b3ec-44805ea35cf4 container dapi-container: <nil>
  STEP: delete the pod @ 08/27/24 23:49:21.86
  Aug 27 23:49:21.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7685" for this suite. @ 08/27/24 23:49:21.916
• [4.286 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 08/27/24 23:49:21.94
  Aug 27 23:49:21.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/27/24 23:49:21.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:49:21.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:49:21.99
  STEP: Creating secret with name secret-test-map-3ec1e438-b3ec-4e17-8879-1173ef7ab1f9 @ 08/27/24 23:49:21.995
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:49:22.008
  E0827 23:49:22.470588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:23.471361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:24.472334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:25.473180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:49:26.104
  Aug 27 23:49:26.112: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-4c8e0bc6-a124-4d90-bb9d-cd06e8168e13 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:49:26.131
  Aug 27 23:49:26.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9875" for this suite. @ 08/27/24 23:49:26.172
• [4.247 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 08/27/24 23:49:26.187
  Aug 27 23:49:26.188: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename init-container @ 08/27/24 23:49:26.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:49:26.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:49:26.241
  STEP: creating the pod @ 08/27/24 23:49:26.25
  Aug 27 23:49:26.250: INFO: PodSpec: initContainers in spec.initContainers
  E0827 23:49:26.473443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:27.473547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:28.474231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:29.475075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:30.475943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:31.476424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:32.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-407" for this suite. @ 08/27/24 23:49:32.101
• [5.930 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 08/27/24 23:49:32.118
  Aug 27 23:49:32.118: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/27/24 23:49:32.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:49:32.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:49:32.164
  STEP: Creating pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931 @ 08/27/24 23:49:32.174
  E0827 23:49:32.477286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:33.477986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/27/24 23:49:34.214
  Aug 27 23:49:34.220: INFO: Initial restart count of pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 is 0
  Aug 27 23:49:34.226: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:34.478637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:35.479566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:36.237: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:36.480502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:37.481386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:38.243: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:38.481437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:39.481917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:40.252: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:40.482915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:41.483908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:42.264: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:42.484020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:43.484348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:44.271: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:44.485215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:45.485535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:46.280: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:46.486099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:47.487057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:48.288: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:48.487721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:49.487937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:50.296: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:50.488879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:51.489273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:52.306: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:52.490281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:53.490677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:54.313: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:54.490764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:55.491081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:56.324: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:56.491312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:57.491879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:49:58.331: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:49:58.492915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:49:59.493376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:00.342: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:00.494494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:01.494956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:02.356: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:02.496381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:03.496343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:04.365: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:04.496453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:05.496686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:06.375: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:06.497091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:07.498385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:08.390: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:08.498773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:09.499459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:10.416: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:10.500115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:11.500675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:12.427: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:12.501549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:13.501965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:14.434: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:14.502908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:15.503612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:16.444: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:16.504087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:17.504794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:18.458: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:18.505494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:19.506148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:20.465: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:20.507266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:21.507829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:22.472: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:22.508856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:23.509005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:24.480: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:24.509730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:25.509854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:26.490: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:26.510017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:27.510129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:28.504: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:28.510786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:29.511322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:30.511688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:30.513: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:31.511903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:32.512007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:32.528: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:33.512108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:34.512359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:34.535: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:35.513137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:36.513454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:36.543: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:37.513798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:38.514203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:38.555: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:39.514468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:40.515214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:40.564: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:41.515259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:42.515750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:42.576: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:43.516522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:44.516253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:44.584: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:45.516411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:46.516757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:46.592: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:47.517690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:48.518005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:48.601: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:49.518857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:50.519179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:50.612: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:51.519344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:52.519636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:52.624: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:53.520424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:54.520533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:54.630: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:55.520763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:56.520955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:56.637: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:57.521308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:50:58.521335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:50:58.652: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:50:59.522220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:00.522488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:00.660: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:01.522813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:02.523650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:02.676: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:03.524412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:04.524696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:04.699: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:05.524928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:06.525421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:06.708: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:07.525562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:08.526314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:08.716: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:09.526492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:10.526970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:10.726: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:11.527845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:12.531728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:12.738: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:13.532760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:14.533056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:14.746: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:15.533565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:16.533884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:16.767: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:17.534697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:18.535380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:18.779: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:19.535552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:20.535761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:20.812: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:21.536488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:22.539772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:22.826: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:23.540890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:24.541382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:24.840: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:25.541663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:26.541932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:26.850: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:27.542159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:28.543762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:28.857: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:29.543360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:30.543519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:30.865: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:31.543969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:32.547773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:32.896: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:33.548754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:34.549103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:34.908: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:35.549507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:36.549552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:36.918: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:37.549843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:38.550020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:38.927: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:39.550694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:40.551327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:40.938: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:41.552194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:42.552983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:42.953: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:43.553092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:44.553302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:44.963: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:45.554464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:46.554811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:46.980: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:47.556402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:48.557028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:48.988: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:49.557476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:50.558286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:51.002: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:51.558505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:52.558819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:53.015: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:53.558919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:54.559375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:55.024: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:55.559535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:56.559925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:57.033: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:57.560926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:51:58.561094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:51:59.041: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:51:59.561282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:00.561375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:01.073: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:01.562360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:02.563335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:03.088: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:03.564322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:04.564809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:05.097: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:05.564980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:06.565404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:07.106: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:07.566197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:08.566707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:09.112: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:09.567648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:10.568343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:11.125: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:11.569332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:12.571623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:13.134: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:13.572033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:14.572876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:15.142: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:15.573127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:16.573201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:17.152: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:17.574094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:18.574135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:19.165: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:19.574336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:20.574520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:21.195: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:21.574674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:22.575763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:23.212: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:23.576604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:24.577231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:25.221: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:25.577370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:26.578292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:27.232: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:27.578540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:28.579672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:29.240: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:29.579669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:30.580103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:31.256: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:31.580164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:32.580706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:33.263: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:33.581369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:34.581907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:35.270: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:35.582647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:36.583386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:37.283: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:37.584365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:38.584621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:39.293: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:39.585462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:40.585802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:41.302: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:41.585882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:42.586480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:43.314: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:43.586594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:44.586787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:45.324: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:45.587484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:46.588069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:47.336: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:47.589027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:48.589145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:49.347: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:49.590296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:50.590852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:51.359: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:51.591103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:52.591236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:53.368: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:53.591496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:54.591677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:55.388: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:55.592299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:56.592556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:57.404: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:57.592931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:52:58.593445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:52:59.415: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:52:59.594352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:00.594526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:01.434: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:01.595590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:02.596076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:03.454: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:03.596916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:04.597761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:05.466: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:05.598719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:06.598850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:07.479: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:07.599604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:08.600135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:09.496: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:09.600633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:10.601239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:11.505: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:11.601284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:12.601889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:13.511: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:13.602309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:14.602448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:15.520: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:15.603401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:16.603947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:17.536: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:17.604751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:18.605383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:19.545: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:19.606357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:20.606807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:21.556: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:21.607682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:22.607536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:23.566: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:23.608567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:24.608921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:25.575: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:25.609717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:26.610181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:27.587: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:27.610463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:28.610697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:29.596: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:29.611745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:30.612210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:31.604: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:31.613315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:32.615345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:33.615957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:33.622: INFO: Get pod liveness-15215ace-e9f6-4795-a9e0-8252b97b1781 in namespace container-probe-7931
  E0827 23:53:34.616224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:35.616891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 08/27/24 23:53:35.623
  Aug 27 23:53:35.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7931" for this suite. @ 08/27/24 23:53:35.686
• [243.593 seconds]
------------------------------
S
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 08/27/24 23:53:35.711
  Aug 27 23:53:35.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename subjectreview @ 08/27/24 23:53:35.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:53:35.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:53:35.783
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2475" @ 08/27/24 23:53:35.792
  Aug 27 23:53:35.804: INFO: saUsername: "system:serviceaccount:subjectreview-2475:e2e"
  Aug 27 23:53:35.804: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2475"}
  Aug 27 23:53:35.804: INFO: saUID: "0569a4f3-3838-4693-9622-af0f6944d93f"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2475:e2e" @ 08/27/24 23:53:35.804
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2475:e2e" @ 08/27/24 23:53:35.805
  Aug 27 23:53:35.812: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2475:e2e" api 'list' configmaps in "subjectreview-2475" namespace @ 08/27/24 23:53:35.812
  Aug 27 23:53:35.816: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2475:e2e" @ 08/27/24 23:53:35.816
  Aug 27 23:53:35.825: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Aug 27 23:53:35.825: INFO: LocalSubjectAccessReview has been verified
  Aug 27 23:53:35.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2475" for this suite. @ 08/27/24 23:53:35.838
• [0.144 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 08/27/24 23:53:35.855
  Aug 27 23:53:35.856: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename job @ 08/27/24 23:53:35.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:53:35.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:53:35.937
  STEP: Creating a job @ 08/27/24 23:53:35.953
  STEP: Ensuring job reaches completions @ 08/27/24 23:53:35.972
  E0827 23:53:36.616981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:37.618033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:38.619125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:39.619696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:40.619796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:41.620082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:42.620274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:43.621006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:44.621150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:45.621234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:46.621411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:47.621739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:53:47.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2360" for this suite. @ 08/27/24 23:53:48.011
• [12.188 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 08/27/24 23:53:48.048
  Aug 27 23:53:48.049: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/27/24 23:53:48.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:53:48.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:53:48.139
  STEP: Creating projection with secret that has name projected-secret-test-map-d840a3a4-e665-4347-8504-366820900303 @ 08/27/24 23:53:48.144
  STEP: Creating a pod to test consume secrets @ 08/27/24 23:53:48.17
  E0827 23:53:48.622369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:49.622580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:50.622799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:51.623034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/27/24 23:53:52.233
  Aug 27 23:53:52.243: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-1a3037f3-9a00-41e8-b5dc-c3ed781bec92 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/27/24 23:53:52.293
  Aug 27 23:53:52.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4559" for this suite. @ 08/27/24 23:53:52.342
• [4.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 08/27/24 23:53:52.37
  Aug 27 23:53:52.370: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename cronjob @ 08/27/24 23:53:52.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:53:52.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:53:52.448
  STEP: Creating a ForbidConcurrent cronjob @ 08/27/24 23:53:52.453
  STEP: Ensuring a job is scheduled @ 08/27/24 23:53:52.484
  E0827 23:53:52.624012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:53.624816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:54.625720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:55.626385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:56.626681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:57.626817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:58.627726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:53:59.627839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 08/27/24 23:54:00.493
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/27/24 23:54:00.499
  STEP: Ensuring no more jobs are scheduled @ 08/27/24 23:54:00.507
  E0827 23:54:00.628573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:01.628953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:02.629167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:03.629393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:04.630036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:05.631232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:06.632070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:07.632753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:08.633460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:09.633810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:10.634508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:11.634896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:12.635901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:13.636094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:14.637060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:15.637620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:16.638014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:17.638228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:18.638763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:19.639051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:20.639848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:21.640239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:22.640663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:23.640885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:24.641717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:25.641844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:26.642159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:27.642936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:28.643130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:29.643629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:30.644063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:31.644470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:32.644922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:33.645316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:34.646164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:35.646700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:36.647696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:37.647908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:38.647954      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:39.648870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:40.649645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:41.649807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:42.650279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:43.650694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:44.650775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:45.650917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:46.651369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:47.652120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:48.652321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:49.652829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:50.652928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:51.653453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:52.654367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:53.654257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:54.655157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:55.656296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:56.656498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:57.657114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:58.657284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:54:59.657613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:00.658508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:01.659693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:02.660487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:03.660756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:04.661234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:05.661927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:06.663030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:07.663231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:08.663363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:09.664418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:10.664359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:11.664932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:12.665478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:13.665682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:14.666651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:15.666999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:16.667388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:17.668271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:18.668229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:19.668832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:20.669808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:21.669937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:22.670817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:23.671198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:24.671657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:25.672560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:26.673534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:27.674510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:28.675285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:29.676012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:30.677302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:31.678358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:32.679120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:33.679252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:34.679804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:35.679962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:36.680916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:37.680961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:38.681292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:39.681413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:40.682505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:41.682810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:42.683930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:43.684297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:44.684488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:45.684728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:46.684867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:47.685126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:48.685203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:49.685770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:50.686207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:51.686720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:52.686905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:53.687143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:54.687715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:55.687979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:56.688600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:57.688913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:58.688972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:55:59.689147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:00.689690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:01.689895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:02.690289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:03.690566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:04.690710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:05.691344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:06.691637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:07.692536      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:08.693124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:09.693313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:10.693921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:11.694072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:12.694984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:13.695364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:14.695406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:15.696441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:16.697194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:17.697762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:18.698448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:19.699056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:20.699132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:21.699614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:22.699829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:23.700086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:24.700422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:25.700824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:26.701323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:27.701573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:28.702556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:29.703087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:30.703743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:31.704465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:32.705354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:33.705687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:34.706198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:35.706532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:36.707520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:37.707678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:38.708042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:39.708296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:40.708405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:41.709078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:42.709347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:43.709462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:44.710633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:45.711660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:46.711279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:47.711644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:48.712605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:49.713738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:50.714725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:51.715402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:52.716497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:53.716833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:54.717534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:55.718432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:56.719551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:57.720306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:58.720411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:56:59.721413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:00.722354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:01.723234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:02.723478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:03.724018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:04.724680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:05.724841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:06.725575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:07.725741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:08.726871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:09.727196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:10.727647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:11.727943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:12.728531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:13.728639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:14.729412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:15.730410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:16.731446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:17.732311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:18.732929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:19.733490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:20.734026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:21.734240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:22.734254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:23.734673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:24.735641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:25.735853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:26.736429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:27.736574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:28.737047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:29.737209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:30.738257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:31.738702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:32.739750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:33.740128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:34.741192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:35.741838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:36.742884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:37.743163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:38.744278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:39.744966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:40.745905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:41.745975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:42.746391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:43.746311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:44.746565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:45.747217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:46.747760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:47.748617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:48.752168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:49.752447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:50.753420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:51.753934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:52.754246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:53.754405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:54.755219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:55.756345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:56.756483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:57.757273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:58.758223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:57:59.758358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:00.758908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:01.759255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:02.760461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:03.760916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:04.761093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:05.762060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:06.762315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:07.762401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:08.763093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:09.763224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:10.763993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:11.764264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:12.764462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:13.764721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:14.764940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:15.765473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:16.766633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:17.766783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:18.767937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:19.768626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:20.768878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:21.769267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:22.769710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:23.771212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:24.771704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:25.772452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:26.772907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:27.773088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:28.773236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:29.773363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:30.774192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:31.774394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:32.775477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:33.776108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:34.777114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:35.778248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:36.779267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:37.779739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:38.780228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:39.780582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:40.781779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:41.782282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:42.782478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:43.782909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:44.783462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:45.783862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:46.784862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:47.785652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:48.786491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:49.786806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:50.787488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:51.787596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:52.787799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:53.787964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:54.788155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:55.788553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:56.789131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:57.789355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:58.790096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:58:59.790624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 08/27/24 23:59:00.519
  Aug 27 23:59:00.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9741" for this suite. @ 08/27/24 23:59:00.549
• [308.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 08/27/24 23:59:00.574
  Aug 27 23:59:00.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename disruption @ 08/27/24 23:59:00.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:59:00.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:59:00.73
  STEP: creating the pdb @ 08/27/24 23:59:00.738
  STEP: Waiting for the pdb to be processed @ 08/27/24 23:59:00.754
  STEP: updating the pdb @ 08/27/24 23:59:00.761
  E0827 23:59:00.791693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/27/24 23:59:00.807
  STEP: patching the pdb @ 08/27/24 23:59:00.816
  STEP: Waiting for the pdb to be processed @ 08/27/24 23:59:00.836
  E0827 23:59:01.791852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:02.792709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 08/27/24 23:59:02.915
  Aug 27 23:59:02.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-695" for this suite. @ 08/27/24 23:59:02.987
• [2.437 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 08/27/24 23:59:03.013
  Aug 27 23:59:03.013: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename security-context-test @ 08/27/24 23:59:03.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:59:03.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:59:03.093
  E0827 23:59:03.793530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:04.793868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:05.795234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:06.795896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:07.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3738" for this suite. @ 08/27/24 23:59:07.226
• [4.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 08/27/24 23:59:07.251
  Aug 27 23:59:07.251: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/27/24 23:59:07.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:59:07.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:59:07.336
  STEP: Creating pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937 @ 08/27/24 23:59:07.343
  E0827 23:59:07.796191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:08.796826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/27/24 23:59:09.39
  Aug 27 23:59:09.406: INFO: Initial restart count of pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c is 0
  Aug 27 23:59:09.416: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:09.797026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:10.797526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:11.428: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:11.797605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:12.800483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:13.452: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:13.798599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:14.799062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:15.462: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:15.800004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:16.800102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:17.474: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:17.800819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:18.800968      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:19.491: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:19.801024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:20.801459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:21.498: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:21.801528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:22.802241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:23.512: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:23.802088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:24.802561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:25.523: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:25.803188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:26.803702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:27.536: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:27.804634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:28.805218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:29.547: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:29.805325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:30.805538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:31.555: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:31.806177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:32.806973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:33.567: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:33.807684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:34.807886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:35.578: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:35.808246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:36.809111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:37.589: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:37.810563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:38.810743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:39.636: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:39.812273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:40.812612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:41.641: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:41.812878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:42.813288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:43.653: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:43.814027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:44.814349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:45.665: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:45.815292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:46.816633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:47.675: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:47.816694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:48.817008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:49.687: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:49.818572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:50.819334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:51.705: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:51.819827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:52.819997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:53.717: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:53.820445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:54.820585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:55.741: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:55.821610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:56.822185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:57.760: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  E0827 23:59:57.822466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0827 23:59:58.822530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:59.772: INFO: Get pod busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c in namespace container-probe-2937
  Aug 27 23:59:59.772: INFO: Restart count of pod container-probe-2937/busybox-9e30a649-0b90-4651-898a-0f04c23f4e8c is now 1 (50.365237454s elapsed)
  STEP: deleting the pod @ 08/27/24 23:59:59.772
  E0827 23:59:59.822995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 27 23:59:59.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2937" for this suite. @ 08/27/24 23:59:59.868
• [52.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 08/27/24 23:59:59.914
  Aug 27 23:59:59.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/27/24 23:59:59.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/27/24 23:59:59.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/27/24 23:59:59.975
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 08/27/24 23:59:59.989
  Aug 27 23:59:59.990: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:00:00.823280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:01.824156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:02.824859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:03.825304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:04.825647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:05.826393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:06.826920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:07.827386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:08.827615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:09.518: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:00:09.828611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:10.829275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:11.829771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:12.829899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:13.830109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:14.831229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:15.832093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:16.832757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:17.839797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:18.836719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:19.836809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:20.837717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:21.838462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:22.839465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:23.839801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:24.840221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:25.841054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:26.842202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:27.842310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:28.842743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:29.843583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:30.844298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:31.844810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:32.845437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:33.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4235" for this suite. @ 08/28/24 00:00:33.246
• [33.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 08/28/24 00:00:33.262
  Aug 28 00:00:33.262: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename daemonsets @ 08/28/24 00:00:33.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:00:33.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:00:33.311
  Aug 28 00:00:33.371: INFO: Create a RollingUpdate DaemonSet
  Aug 28 00:00:33.383: INFO: Check that daemon pods launch on every node of the cluster
  Aug 28 00:00:33.400: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:33.400: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:33.400: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:33.407: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:00:33.407: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:00:33.845615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:34.400: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:34.400: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:34.400: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:34.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:00:34.412: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:00:34.846631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:35.398: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:35.398: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:35.398: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:35.410: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:00:35.410: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:00:35.848158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:36.393: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:36.393: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:36.393: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:36.401: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 28 00:00:36.402: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Aug 28 00:00:36.402: INFO: Update the DaemonSet to trigger a rollout
  Aug 28 00:00:36.426: INFO: Updating DaemonSet daemon-set
  E0828 00:00:36.848677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:37.849312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:38.469: INFO: Roll back the DaemonSet before rollout is complete
  Aug 28 00:00:38.492: INFO: Updating DaemonSet daemon-set
  Aug 28 00:00:38.492: INFO: Make sure DaemonSet rollback is complete
  Aug 28 00:00:38.513: INFO: Wrong image for pod: daemon-set-zchk2. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Aug 28 00:00:38.514: INFO: Pod daemon-set-zchk2 is not available
  Aug 28 00:00:38.538: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:38.538: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:38.539: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:00:38.849457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:39.510: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:39.510: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:39.510: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:00:39.849731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:40.521: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:40.521: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:40.521: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:00:40.850498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:41.511: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:41.511: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:41.511: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:00:41.850962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:42.503: INFO: Pod daemon-set-tsg7j is not available
  Aug 28 00:00:42.525: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:42.525: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:00:42.525: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 08/28/24 00:00:42.547
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9195, will wait for the garbage collector to delete the pods @ 08/28/24 00:00:42.547
  Aug 28 00:00:42.621: INFO: Deleting DaemonSet.extensions daemon-set took: 14.468865ms
  Aug 28 00:00:42.822: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.831419ms
  E0828 00:00:42.851449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:43.852096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:44.852206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:00:45.231: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:00:45.231: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 28 00:00:45.238: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38911789"},"items":null}

  Aug 28 00:00:45.245: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38911789"},"items":null}

  Aug 28 00:00:45.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9195" for this suite. @ 08/28/24 00:00:45.296
• [12.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 08/28/24 00:00:45.323
  Aug 28 00:00:45.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename cronjob @ 08/28/24 00:00:45.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:00:45.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:00:45.378
  STEP: Creating a ReplaceConcurrent cronjob @ 08/28/24 00:00:45.386
  STEP: Ensuring a job is scheduled @ 08/28/24 00:00:45.4
  E0828 00:00:45.852483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:46.853335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:47.853582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:48.854517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:49.855193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:50.855364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:51.856150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:52.856920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:53.857471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:54.858129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:55.858818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:56.859620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:57.859682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:58.860596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:00:59.861628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:00.862176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 08/28/24 00:01:01.412
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/28/24 00:01:01.418
  STEP: Ensuring the job is replaced with a new one @ 08/28/24 00:01:01.425
  E0828 00:01:01.863132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:02.863496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:03.863921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:04.864368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:05.864470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:06.865210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:07.865340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:08.865739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:09.866948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:10.867593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:11.868205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:12.868524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:13.869718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:14.870443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:15.870643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:16.871204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:17.871913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:18.872330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:19.873413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:20.874390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:21.875126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:22.875555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:23.875823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:24.876408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:25.876812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:26.877346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:27.877904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:28.878375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:29.879345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:30.879817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:31.880501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:32.881005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:33.881677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:34.881848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:35.882511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:36.882707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:37.882985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:38.883524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:39.884529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:40.885052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:41.885562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:42.886082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:43.886154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:44.886800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:45.886857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:46.887196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:47.887630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:48.888232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:49.889169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:50.890014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:51.890743      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:52.891174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:53.892144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:54.892556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:55.892765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:56.893435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:57.894423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:58.894583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:01:59.895034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:00.896092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 08/28/24 00:02:01.437
  Aug 28 00:02:01.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9254" for this suite. @ 08/28/24 00:02:01.482
• [76.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 08/28/24 00:02:01.507
  Aug 28 00:02:01.507: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 00:02:01.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:02:01.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:02:01.661
  STEP: creating a Pod with a static label @ 08/28/24 00:02:01.711
  STEP: watching for Pod to be ready @ 08/28/24 00:02:01.74
  Aug 28 00:02:01.745: INFO: observed Pod pod-test in namespace pods-7867 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Aug 28 00:02:01.762: INFO: observed Pod pod-test in namespace pods-7867 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  }]
  Aug 28 00:02:01.803: INFO: observed Pod pod-test in namespace pods-7867 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  }]
  E0828 00:02:01.897134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:02:02.405: INFO: observed Pod pod-test in namespace pods-7867 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  }]
  E0828 00:02:02.897822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:02:03.505: INFO: Found Pod pod-test in namespace pods-7867 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:03 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:03 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:02:01 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 08/28/24 00:02:03.518
  STEP: getting the Pod and ensuring that it's patched @ 08/28/24 00:02:03.552
  STEP: replacing the Pod's status Ready condition to False @ 08/28/24 00:02:03.562
  STEP: check the Pod again to ensure its Ready conditions are False @ 08/28/24 00:02:03.589
  STEP: deleting the Pod via a Collection with a LabelSelector @ 08/28/24 00:02:03.589
  STEP: watching for the Pod to be deleted @ 08/28/24 00:02:03.612
  Aug 28 00:02:03.616: INFO: observed event type MODIFIED
  E0828 00:02:03.897998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:04.898812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:02:05.490: INFO: observed event type MODIFIED
  Aug 28 00:02:05.826: INFO: observed event type MODIFIED
  E0828 00:02:05.899364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:02:06.195: INFO: observed event type MODIFIED
  Aug 28 00:02:06.492: INFO: observed event type MODIFIED
  Aug 28 00:02:06.537: INFO: observed event type MODIFIED
  Aug 28 00:02:06.552: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7867" for this suite. @ 08/28/24 00:02:06.563
• [5.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 08/28/24 00:02:06.593
  Aug 28 00:02:06.593: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:02:06.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:02:06.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:02:06.632
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:02:06.639
  E0828 00:02:06.900077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:07.901250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:08.901357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:09.901505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:02:10.708
  Aug 28 00:02:10.716: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-69a2e1a7-5730-40e7-9f78-e0fd4fb92a78 container client-container: <nil>
  STEP: delete the pod @ 08/28/24 00:02:10.747
  Aug 28 00:02:10.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3605" for this suite. @ 08/28/24 00:02:10.812
• [4.236 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 08/28/24 00:02:10.828
  Aug 28 00:02:10.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-preemption @ 08/28/24 00:02:10.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:02:10.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:02:10.869
  E0828 00:02:10.901702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:02:10.902: INFO: Waiting up to 1m0s for all nodes to be ready
  E0828 00:02:11.902813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:12.903383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:13.904471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:14.905310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:15.905615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:16.905597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:17.906044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:18.906683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:19.907305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:20.908811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:21.908946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:22.909554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:23.909984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:24.911027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:25.911280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:26.911654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:27.912504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:28.913143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:29.913372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:30.914317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:31.915082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:32.916382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:33.916579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:34.917057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:35.917568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:36.918568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:37.919021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:38.920147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:39.920914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:40.921190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:41.921563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:42.921876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:43.922643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:44.923110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:45.923290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:46.923870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:47.924744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:48.925005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:49.925402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:50.925852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:51.926286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:52.926831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:53.927728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:54.928512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:55.929191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:56.929491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:57.930415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:58.930985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:02:59.931257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:00.931353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:01.932414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:02.932750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:03.932839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:04.933053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:05.933556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:06.934274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:07.934368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:08.934555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:09.935659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:10.915: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/28/24 00:03:10.922
  E0828 00:03:10.935789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:11.006: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 28 00:03:11.033: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 28 00:03:11.152: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 28 00:03:11.174: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Aug 28 00:03:11.295: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Aug 28 00:03:11.342: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/28/24 00:03:11.342
  E0828 00:03:11.940330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:12.940570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:13.941324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:14.941867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 08/28/24 00:03:15.416
  E0828 00:03:15.942167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:16.942896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:17.943211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:18.943701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:19.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9913" for this suite. @ 08/28/24 00:03:19.822
• [69.014 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 08/28/24 00:03:19.844
  Aug 28 00:03:19.845: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/28/24 00:03:19.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:03:19.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:03:19.903
  STEP: creating Agnhost RC @ 08/28/24 00:03:19.909
  Aug 28 00:03:19.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-4360 create -f -'
  E0828 00:03:19.944320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:20.230: INFO: stderr: ""
  Aug 28 00:03:20.230: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/28/24 00:03:20.23
  E0828 00:03:20.944741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:21.250: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 00:03:21.250: INFO: Found 0 / 1
  E0828 00:03:21.945768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:22.237: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 00:03:22.237: INFO: Found 1 / 1
  Aug 28 00:03:22.237: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 08/28/24 00:03:22.237
  Aug 28 00:03:22.245: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 00:03:22.245: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 28 00:03:22.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-4360 patch pod agnhost-primary-5dt76 -p {"metadata":{"annotations":{"x":"y"}}}'
  Aug 28 00:03:22.423: INFO: stderr: ""
  Aug 28 00:03:22.423: INFO: stdout: "pod/agnhost-primary-5dt76 patched\n"
  STEP: checking annotations @ 08/28/24 00:03:22.423
  Aug 28 00:03:22.444: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 00:03:22.444: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 28 00:03:22.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4360" for this suite. @ 08/28/24 00:03:22.46
• [2.634 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 08/28/24 00:03:22.48
  Aug 28 00:03:22.480: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/28/24 00:03:22.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:03:22.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:03:22.539
  STEP: Creating secret with name secret-test-map-0622c4b3-4396-4402-a853-691b514526e6 @ 08/28/24 00:03:22.547
  STEP: Creating a pod to test consume secrets @ 08/28/24 00:03:22.587
  E0828 00:03:22.946789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:23.947252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:24.948159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:25.949052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:03:26.673
  Aug 28 00:03:26.685: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-0ddfc2cf-5caf-4e54-87e0-2ca1ee779ad6 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/28/24 00:03:26.7
  Aug 28 00:03:26.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2384" for this suite. @ 08/28/24 00:03:26.764
• [4.304 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 08/28/24 00:03:26.785
  Aug 28 00:03:26.785: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename field-validation @ 08/28/24 00:03:26.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:03:26.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:03:26.822
  Aug 28 00:03:26.829: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:03:26.949155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:27.949960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:28.950303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:29.950694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:30.951510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:31.952502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:32.953003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:33.953530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0828 00:03:34.505244      19 warnings.go:70] unknown field "alpha"
  W0828 00:03:34.505322      19 warnings.go:70] unknown field "beta"
  W0828 00:03:34.505350      19 warnings.go:70] unknown field "delta"
  W0828 00:03:34.505408      19 warnings.go:70] unknown field "epsilon"
  W0828 00:03:34.505434      19 warnings.go:70] unknown field "gamma"
  E0828 00:03:34.954471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:35.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8197" for this suite. @ 08/28/24 00:03:35.16
• [8.398 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 08/28/24 00:03:35.182
  Aug 28 00:03:35.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename disruption @ 08/28/24 00:03:35.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:03:35.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:03:35.257
  STEP: Creating a pdb that targets all three pods in a test replica set @ 08/28/24 00:03:35.263
  STEP: Waiting for the pdb to be processed @ 08/28/24 00:03:35.274
  E0828 00:03:35.954763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:36.955832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 08/28/24 00:03:37.314
  STEP: Waiting for all pods to be running @ 08/28/24 00:03:37.314
  Aug 28 00:03:37.333: INFO: pods: 0 < 3
  E0828 00:03:37.956556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:38.957347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:03:39.323: INFO: running pods: 1 < 3
  E0828 00:03:39.958024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:40.958757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 08/28/24 00:03:41.333
  STEP: Updating the pdb to allow a pod to be evicted @ 08/28/24 00:03:41.371
  STEP: Waiting for the pdb to be processed @ 08/28/24 00:03:41.409
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/28/24 00:03:41.43
  STEP: Waiting for all pods to be running @ 08/28/24 00:03:41.43
  STEP: Waiting for the pdb to observed all healthy pods @ 08/28/24 00:03:41.444
  STEP: Patching the pdb to disallow a pod to be evicted @ 08/28/24 00:03:41.547
  STEP: Waiting for the pdb to be processed @ 08/28/24 00:03:41.63
  E0828 00:03:41.959175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:42.959781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 08/28/24 00:03:43.637
  STEP: locating a running pod @ 08/28/24 00:03:43.643
  STEP: Deleting the pdb to allow a pod to be evicted @ 08/28/24 00:03:43.672
  STEP: Waiting for the pdb to be deleted @ 08/28/24 00:03:43.684
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/28/24 00:03:43.691
  STEP: Waiting for all pods to be running @ 08/28/24 00:03:43.692
  Aug 28 00:03:43.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2481" for this suite. @ 08/28/24 00:03:43.802
• [8.642 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 08/28/24 00:03:43.825
  Aug 28 00:03:43.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:03:43.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:03:43.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:03:43.892
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/28/24 00:03:43.898
  E0828 00:03:43.960533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:44.961615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:45.961816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:46.962366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:03:47.951
  Aug 28 00:03:47.959: INFO: Trying to get logs from node env1-test-worker-2 pod pod-b30365b3-1934-44e6-bf65-9276de3b1dc8 container test-container: <nil>
  E0828 00:03:47.962738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/28/24 00:03:47.994
  Aug 28 00:03:48.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2675" for this suite. @ 08/28/24 00:03:48.069
• [4.267 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 08/28/24 00:03:48.092
  Aug 28 00:03:48.092: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-pred @ 08/28/24 00:03:48.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:03:48.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:03:48.139
  Aug 28 00:03:48.147: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 28 00:03:48.169: INFO: Waiting for terminating namespaces to be deleted...
  Aug 28 00:03:48.177: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Aug 28 00:03:48.208: INFO: rs-vmwxl from disruption-2481 started at 2024-08-28 00:03:37 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.208: INFO: 	Container donothing ready: true, restart count 0
  Aug 28 00:03:48.208: INFO: filebeat-filebeat-qqtqs from filebeat started at 2024-08-27 22:55:02 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: calico-node-qzlxw from kube-system started at 2024-07-22 15:38:47 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: kube-proxy-4cppk from kube-system started at 2024-08-27 16:27:32 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: metrics-server-6d9b44975-c6sns from kube-system started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-06-27 17:09:20 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container node-cache ready: true, restart count 8
  Aug 28 00:03:48.209: INFO: vsphere-csi-node-nk49v from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: prometheus-kube-prometheus-operator-568f7ff5fd-jqcnd from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: prometheus-prometheus-node-exporter-k7f6f from prometheus started at 2024-04-23 04:46:22 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: thanos-query-655b5549d7-vv7ft from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container query ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: sonobuoy from sonobuoy started at 2024-08-27 23:07:34 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: sonobuoy-e2e-job-55c3907aea104346 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container e2e ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-2l7x2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:03:48.209: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 28 00:03:48.209: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Aug 28 00:03:48.248: INFO: rs-zqkdx from disruption-2481 started at 2024-08-28 00:03:43 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.248: INFO: 	Container donothing ready: false, restart count 0
  Aug 28 00:03:48.248: INFO: filebeat-filebeat-svps2 from filebeat started at 2024-08-27 22:55:03 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.248: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 00:03:48.248: INFO: calico-kube-controllers-5b566ffb7d-mmmcr from kube-system started at 2024-07-30 12:12:30 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.248: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Aug 28 00:03:48.248: INFO: calico-node-nwcrj from kube-system started at 2024-07-22 15:40:30 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.248: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 00:03:48.248: INFO: kube-proxy-ldkk8 from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.248: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-06-27 17:14:22 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.249: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.249: INFO: 	Container node-cache ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: vsphere-csi-node-zkn6p from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 28 00:03:48.249: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-08-19 14:42:39 +0000 UTC (3 container statuses recorded)
  Aug 28 00:03:48.249: INFO: 	Container config-reloader ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: 	Container prometheus ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.249: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-s8jpj from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:03:48.249: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: velero-574996dd6-4drr8 from velero started at 2024-08-19 14:42:37 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.249: INFO: 	Container velero ready: true, restart count 0
  Aug 28 00:03:48.249: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  Aug 28 00:03:48.275: INFO: rs-f672j from disruption-2481 started at 2024-08-28 00:03:37 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container donothing ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: filebeat-filebeat-f2rmr from filebeat started at 2024-08-27 23:14:27 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: calico-node-8fvtb from kube-system started at 2024-07-22 15:39:38 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: kube-proxy-znnpk from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-06-27 17:20:01 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container node-cache ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: vsphere-csi-node-kqgqv from kube-system started at 2024-08-27 16:36:03 +0000 UTC (3 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: prometheus-kube-state-metrics-59b5d58f8f-pnzs9 from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: prometheus-prometheus-node-exporter-rj9dj from prometheus started at 2024-08-27 23:14:26 +0000 UTC (1 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-7kjt2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:03:48.275: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:03:48.275: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/28/24 00:03:48.275
  E0828 00:03:48.963581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:49.963669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/28/24 00:03:50.328
  STEP: Trying to apply a random label on the found node. @ 08/28/24 00:03:50.38
  STEP: verifying the node has the label kubernetes.io/e2e-268a0f6c-6aea-4102-9949-be8119da8bae 95 @ 08/28/24 00:03:50.416
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 08/28/24 00:03:50.444
  E0828 00:03:50.963845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:51.964648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.61.1.202 on the node which pod4 resides and expect not scheduled @ 08/28/24 00:03:52.493
  E0828 00:03:52.965669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:53.966428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:54.967157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:55.969842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:56.969986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:57.970373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:58.970870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:03:59.971798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:00.972043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:01.972262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:02.972590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:03.972841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:04.973237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:05.974056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:06.975107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:07.975489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:08.975678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:09.978553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:10.979286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:11.980134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:12.980704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:13.981132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:14.981394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:15.981812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:16.982347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:17.982657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:18.983754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:19.983777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:20.984822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:21.985258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:22.985341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:23.986530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:24.986650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:25.987216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:26.987959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:27.988315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:28.989362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:29.989540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:30.989655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:31.990263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:32.990590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:33.990976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:34.991707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:35.992131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:36.993033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:37.994414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:38.995789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:39.995755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:40.996526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:41.997412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:42.998141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:43.998579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:44.998656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:45.999746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:46.999903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:48.000118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:49.000420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:50.001098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:51.002201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:52.003198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:53.003989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:54.004471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:55.004677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:56.004997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:57.006233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:58.006751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:04:59.007198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:00.007662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:01.007919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:02.008760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:03.008886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:04.009162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:05.009562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:06.010214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:07.010787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:08.011295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:09.011659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:10.011982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:11.012871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:12.013197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:13.013811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:14.013907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:15.014086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:16.015391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:17.016152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:18.017117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:19.017259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:20.017532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:21.018566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:22.019603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:23.020057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:24.020860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:25.021321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:26.021597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:27.022361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:28.022738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:29.023382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:30.023752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:31.024063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:32.024320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:33.024513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:34.025136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:35.025295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:36.026117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:37.026867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:38.028054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:39.028247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:40.028480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:41.028714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:42.029000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:43.029205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:44.030359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:45.030742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:46.030978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:47.031794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:48.032231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:49.032785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:50.032725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:51.032929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:52.033236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:53.033577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:54.034642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:55.035210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:56.035853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:57.036701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:58.042691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:05:59.040091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:00.040163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:01.040569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:02.041589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:03.041707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:04.041853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:05.042249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:06.042434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:07.043758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:08.043811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:09.044112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:10.044900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:11.045361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:12.045670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:13.045714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:14.045845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:15.046470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:16.046564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:17.047202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:18.048237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:19.048633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:20.049155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:21.049723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:22.050454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:23.050860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:24.051932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:25.052159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:26.052485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:27.053179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:28.054028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:29.054442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:30.054724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:31.056303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:32.057262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:33.057692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:34.058191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:35.058335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:36.059103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:37.059272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:38.060202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:39.060644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:40.061554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:41.061701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:42.062593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:43.063283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:44.063878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:45.064067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:46.064542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:47.065621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:48.065967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:49.066272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:50.066714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:51.066918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:52.067659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:53.068108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:54.068953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:55.069348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:56.069418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:57.069989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:58.070271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:06:59.070508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:00.071153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:01.071305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:02.071556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:03.071926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:04.072908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:05.073945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:06.074098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:07.075030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:08.075280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:09.075515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:10.076525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:11.077377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:12.078147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:13.078231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:14.078867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:15.079976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:16.079733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:17.080798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:18.081168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:19.082238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:20.082719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:21.083165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:22.083353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:23.083618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:24.084565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:25.084760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:26.085357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:27.086162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:28.087470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:29.087647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:30.087913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:31.087994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:32.088346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:33.088721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:34.089680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:35.090227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:36.091008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:37.091642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:38.092144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:39.092619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:40.092749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:41.093070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:42.093114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:43.093934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:44.094386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:45.095920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:46.096224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:47.097054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:48.097510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:49.098496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:50.098493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:51.098950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:52.099836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:53.100019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:54.100490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:55.101197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:56.101794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:57.101805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:58.102860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:07:59.102821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:00.104042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:01.104594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:02.105621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:03.106043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:04.106803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:05.107718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:06.108589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:07.109140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:08.109510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:09.109676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:10.110080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:11.110807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:12.111651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:13.111859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:14.112265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:15.113137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:16.113662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:17.113827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:18.114258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:19.114741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:20.115172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:21.115757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:22.116519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:23.116636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:24.116939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:25.117927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:26.119636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:27.120217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:28.120408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:29.120833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:30.121260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:31.121394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:32.122278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:33.122540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:34.122818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:35.123682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:36.123838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:37.124224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:38.124366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:39.125519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:40.125964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:41.126972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:42.127171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:43.127497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:44.128220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:45.128980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:46.129449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:47.130501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:48.130943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:49.131018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:50.131246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:51.132474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:52.133351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-268a0f6c-6aea-4102-9949-be8119da8bae off the node env1-test-worker-2 @ 08/28/24 00:08:52.526
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-268a0f6c-6aea-4102-9949-be8119da8bae @ 08/28/24 00:08:52.564
  Aug 28 00:08:52.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5354" for this suite. @ 08/28/24 00:08:52.609
• [304.550 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 08/28/24 00:08:52.644
  Aug 28 00:08:52.644: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/28/24 00:08:52.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:08:52.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:08:52.739
  Aug 28 00:08:52.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:08:53.134204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:54.134534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:55.134704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:56.135031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:57.135255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:58.143479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:08:59.139821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:00.140780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:01.141467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/28/24 00:09:02.007
  Aug 28 00:09:02.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-3418 --namespace=crd-publish-openapi-3418 create -f -'
  E0828 00:09:02.141933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:02.252: INFO: stderr: ""
  Aug 28 00:09:02.252: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 28 00:09:02.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-3418 --namespace=crd-publish-openapi-3418 delete e2e-test-crd-publish-openapi-3709-crds test-cr'
  Aug 28 00:09:02.499: INFO: stderr: ""
  Aug 28 00:09:02.499: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Aug 28 00:09:02.499: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-3418 --namespace=crd-publish-openapi-3418 apply -f -'
  Aug 28 00:09:02.851: INFO: stderr: ""
  Aug 28 00:09:02.851: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 28 00:09:02.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-3418 --namespace=crd-publish-openapi-3418 delete e2e-test-crd-publish-openapi-3709-crds test-cr'
  Aug 28 00:09:03.009: INFO: stderr: ""
  Aug 28 00:09:03.009: INFO: stdout: "e2e-test-crd-publish-openapi-3709-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/28/24 00:09:03.009
  Aug 28 00:09:03.009: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-3418 explain e2e-test-crd-publish-openapi-3709-crds'
  E0828 00:09:03.142259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:03.152: INFO: stderr: ""
  Aug 28 00:09:03.152: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3709-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0828 00:09:04.142687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:05.142766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:06.143687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:07.144086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:08.144712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:08.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3418" for this suite. @ 08/28/24 00:09:08.661
• [16.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 08/28/24 00:09:08.686
  Aug 28 00:09:08.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replicaset @ 08/28/24 00:09:08.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:08.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:08.725
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 08/28/24 00:09:08.731
  Aug 28 00:09:08.752: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0828 00:09:09.145070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:10.146221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:11.146229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:12.146765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:13.147261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:13.768: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/28/24 00:09:13.768
  STEP: getting scale subresource @ 08/28/24 00:09:13.769
  STEP: updating a scale subresource @ 08/28/24 00:09:13.777
  STEP: verifying the replicaset Spec.Replicas was modified @ 08/28/24 00:09:13.795
  STEP: Patch a scale subresource @ 08/28/24 00:09:13.81
  Aug 28 00:09:13.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8833" for this suite. @ 08/28/24 00:09:13.881
• [5.228 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 08/28/24 00:09:13.914
  Aug 28 00:09:13.914: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:09:13.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:13.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:13.982
  STEP: Creating configMap with name projected-configmap-test-volume-c1c8eb6e-a80a-4c35-83f2-5654f1e4ee42 @ 08/28/24 00:09:13.989
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:09:14
  E0828 00:09:14.148255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:15.149098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:16.149544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:17.149683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:09:18.106
  Aug 28 00:09:18.118: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-e4bb0f7a-1d44-4c38-8efe-4ffb47096c78 container projected-configmap-volume-test: <nil>
  E0828 00:09:18.149984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/28/24 00:09:18.156
  Aug 28 00:09:18.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3749" for this suite. @ 08/28/24 00:09:18.218
• [4.333 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 08/28/24 00:09:18.247
  Aug 28 00:09:18.247: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:09:18.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:18.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:18.298
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:09:18.305
  E0828 00:09:19.150133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:20.150551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:21.150777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:22.151765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:09:22.351
  Aug 28 00:09:22.360: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-b5abc888-70a0-490b-b72f-16630328429c container client-container: <nil>
  STEP: delete the pod @ 08/28/24 00:09:22.379
  Aug 28 00:09:22.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5128" for this suite. @ 08/28/24 00:09:22.445
• [4.217 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 08/28/24 00:09:22.468
  Aug 28 00:09:22.468: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/28/24 00:09:22.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:22.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:22.527
  STEP: Creating a pod to test substitution in volume subpath @ 08/28/24 00:09:22.545
  E0828 00:09:23.152301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:24.152692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:25.153394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:26.154029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:09:26.615
  Aug 28 00:09:26.625: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-f07f0ba9-f005-456c-90b6-de11b38dad85 container dapi-container: <nil>
  STEP: delete the pod @ 08/28/24 00:09:26.643
  Aug 28 00:09:26.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-402" for this suite. @ 08/28/24 00:09:26.732
• [4.282 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 08/28/24 00:09:26.75
  Aug 28 00:09:26.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/28/24 00:09:26.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:26.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:26.8
  Aug 28 00:09:26.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:09:27.155059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:28.155313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:29.155644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:30.155819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:31.156475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:32.156748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:33.157761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:34.158133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:35.159099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:36.159754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/28/24 00:09:36.558
  Aug 28 00:09:36.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-9934 --namespace=crd-publish-openapi-9934 create -f -'
  Aug 28 00:09:36.741: INFO: stderr: ""
  Aug 28 00:09:36.741: INFO: stdout: "e2e-test-crd-publish-openapi-5763-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 28 00:09:36.741: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-9934 --namespace=crd-publish-openapi-9934 delete e2e-test-crd-publish-openapi-5763-crds test-cr'
  Aug 28 00:09:36.920: INFO: stderr: ""
  Aug 28 00:09:36.920: INFO: stdout: "e2e-test-crd-publish-openapi-5763-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Aug 28 00:09:36.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-9934 --namespace=crd-publish-openapi-9934 apply -f -'
  Aug 28 00:09:37.098: INFO: stderr: ""
  Aug 28 00:09:37.098: INFO: stdout: "e2e-test-crd-publish-openapi-5763-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 28 00:09:37.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-9934 --namespace=crd-publish-openapi-9934 delete e2e-test-crd-publish-openapi-5763-crds test-cr'
  E0828 00:09:37.160352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:37.237: INFO: stderr: ""
  Aug 28 00:09:37.237: INFO: stdout: "e2e-test-crd-publish-openapi-5763-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/28/24 00:09:37.237
  Aug 28 00:09:37.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-9934 explain e2e-test-crd-publish-openapi-5763-crds'
  Aug 28 00:09:37.355: INFO: stderr: ""
  Aug 28 00:09:37.355: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5763-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0828 00:09:38.160981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:39.161776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:40.162067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:41.162328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:42.162685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:42.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9934" for this suite. @ 08/28/24 00:09:42.606
• [15.896 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 08/28/24 00:09:42.647
  Aug 28 00:09:42.647: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:09:42.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:42.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:42.691
  STEP: creating service in namespace services-2179 @ 08/28/24 00:09:42.701
  STEP: creating service affinity-clusterip-transition in namespace services-2179 @ 08/28/24 00:09:42.702
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2179 @ 08/28/24 00:09:42.732
  I0828 00:09:42.771458      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-2179, replica count: 3
  E0828 00:09:43.163658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:44.163979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:45.164319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:09:45.823091      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 28 00:09:45.847: INFO: Creating new exec pod
  E0828 00:09:46.164890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:47.165278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:48.165828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:48.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2179 exec execpod-affinityk4rhf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Aug 28 00:09:49.158: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Aug 28 00:09:49.158: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:09:49.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2179 exec execpod-affinityk4rhf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.3.20 80'
  E0828 00:09:49.166454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:49.451: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.3.20 80\nConnection to 10.233.3.20 80 port [tcp/http] succeeded!\n"
  Aug 28 00:09:49.451: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:09:49.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2179 exec execpod-affinityk4rhf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.3.20:80/ ; done'
  Aug 28 00:09:49.992: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n"
  Aug 28 00:09:49.992: INFO: stdout: "\naffinity-clusterip-transition-84dcp\naffinity-clusterip-transition-xtfrs\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-84dcp\naffinity-clusterip-transition-xtfrs\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-84dcp\naffinity-clusterip-transition-xtfrs\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-84dcp\naffinity-clusterip-transition-xtfrs\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-84dcp\naffinity-clusterip-transition-xtfrs\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-84dcp"
  Aug 28 00:09:49.992: INFO: Received response from host: affinity-clusterip-transition-84dcp
  Aug 28 00:09:49.992: INFO: Received response from host: affinity-clusterip-transition-xtfrs
  Aug 28 00:09:49.992: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:49.992: INFO: Received response from host: affinity-clusterip-transition-84dcp
  Aug 28 00:09:49.992: INFO: Received response from host: affinity-clusterip-transition-xtfrs
  Aug 28 00:09:49.992: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:49.992: INFO: Received response from host: affinity-clusterip-transition-84dcp
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-xtfrs
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-84dcp
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-xtfrs
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-84dcp
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-xtfrs
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:49.993: INFO: Received response from host: affinity-clusterip-transition-84dcp
  Aug 28 00:09:50.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2179 exec execpod-affinityk4rhf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.3.20:80/ ; done'
  E0828 00:09:50.166854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:50.434: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.3.20:80/\n"
  Aug 28 00:09:50.434: INFO: stdout: "\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms\naffinity-clusterip-transition-dwwms"
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.434: INFO: Received response from host: affinity-clusterip-transition-dwwms
  Aug 28 00:09:50.435: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2179, will wait for the garbage collector to delete the pods @ 08/28/24 00:09:50.461
  Aug 28 00:09:50.531: INFO: Deleting ReplicationController affinity-clusterip-transition took: 14.948206ms
  Aug 28 00:09:50.632: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.21051ms
  E0828 00:09:51.167839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:52.168329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:53.168448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:54.168825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:09:54.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2179" for this suite. @ 08/28/24 00:09:54.602
• [11.977 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 08/28/24 00:09:54.624
  Aug 28 00:09:54.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename namespaces @ 08/28/24 00:09:54.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:54.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:54.686
  STEP: Updating Namespace "namespaces-6882" @ 08/28/24 00:09:54.698
  Aug 28 00:09:54.730: INFO: Namespace "namespaces-6882" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"e6c29178-78d2-42b6-a3e7-d67e287e2050", "kubernetes.io/metadata.name":"namespaces-6882", "namespaces-6882":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Aug 28 00:09:54.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6882" for this suite. @ 08/28/24 00:09:54.739
• [0.132 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 08/28/24 00:09:54.758
  Aug 28 00:09:54.758: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename events @ 08/28/24 00:09:54.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:54.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:54.813
  STEP: Create set of events @ 08/28/24 00:09:54.827
  Aug 28 00:09:54.836: INFO: created test-event-1
  Aug 28 00:09:54.853: INFO: created test-event-2
  Aug 28 00:09:54.877: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 08/28/24 00:09:54.88
  STEP: delete collection of events @ 08/28/24 00:09:54.887
  Aug 28 00:09:54.887: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/28/24 00:09:54.954
  Aug 28 00:09:54.954: INFO: requesting list of events to confirm quantity
  Aug 28 00:09:54.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8590" for this suite. @ 08/28/24 00:09:54.971
• [0.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 08/28/24 00:09:54.997
  Aug 28 00:09:54.997: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:09:55
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:09:55.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:09:55.041
  STEP: creating service nodeport-test with type=NodePort in namespace services-5254 @ 08/28/24 00:09:55.048
  STEP: creating replication controller nodeport-test in namespace services-5254 @ 08/28/24 00:09:55.074
  I0828 00:09:55.090926      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5254, replica count: 2
  E0828 00:09:55.172178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:56.172540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:57.173429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:09:58.142463      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 28 00:09:58.142: INFO: Creating new exec pod
  E0828 00:09:58.174404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:09:59.174919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:00.175156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:01.175312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:01.226: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-5254 exec execpod8svlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 28 00:10:01.574: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 28 00:10:01.574: INFO: stdout: "nodeport-test-9khln"
  Aug 28 00:10:01.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-5254 exec execpod8svlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.32.82 80'
  Aug 28 00:10:01.888: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.32.82 80\nConnection to 10.233.32.82 80 port [tcp/http] succeeded!\n"
  Aug 28 00:10:01.888: INFO: stdout: "nodeport-test-zq97k"
  Aug 28 00:10:01.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-5254 exec execpod8svlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 32343'
  E0828 00:10:02.176296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:02.212: INFO: stderr: "+ + nc -v -techo -w 2 hostName 10.61.1.202\n 32343\nConnection to 10.61.1.202 32343 port [tcp/*] succeeded!\n"
  Aug 28 00:10:02.212: INFO: stdout: "nodeport-test-9khln"
  Aug 28 00:10:02.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-5254 exec execpod8svlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 32343'
  Aug 28 00:10:02.561: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 32343\nConnection to 10.61.1.200 32343 port [tcp/*] succeeded!\n"
  Aug 28 00:10:02.561: INFO: stdout: ""
  E0828 00:10:03.176418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:03.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-5254 exec execpod8svlm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 32343'
  Aug 28 00:10:03.532: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 32343\nConnection to 10.61.1.200 32343 port [tcp/*] succeeded!\n"
  Aug 28 00:10:03.532: INFO: stdout: "nodeport-test-zq97k"
  Aug 28 00:10:03.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5254" for this suite. @ 08/28/24 00:10:03.544
• [8.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 08/28/24 00:10:03.569
  Aug 28 00:10:03.569: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename field-validation @ 08/28/24 00:10:03.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:03.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:03.616
  Aug 28 00:10:03.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:10:04.177133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:05.177813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:06.178010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:07.178969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:08.179949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:09.180091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:10.181265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:11.181672      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:11.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6148" for this suite. @ 08/28/24 00:10:12.02
• [8.478 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 08/28/24 00:10:12.051
  Aug 28 00:10:12.051: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:10:12.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:12.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:12.18
  E0828 00:10:12.182105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 08/28/24 00:10:12.264
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:10:13.145
  STEP: Deploying the webhook pod @ 08/28/24 00:10:13.17
  E0828 00:10:13.182324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 08/28/24 00:10:13.197
  Aug 28 00:10:13.223: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0828 00:10:14.184337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:15.185070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:15.261: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 10, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 10, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 10, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 10, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:10:16.185201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:17.186240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:10:17.275
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:10:17.311
  E0828 00:10:18.186722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:18.311: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 08/28/24 00:10:18.339
  E0828 00:10:19.187739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a namespace for the webhook @ 08/28/24 00:10:19.401
  STEP: create a configmap should be unconditionally rejected by the webhook @ 08/28/24 00:10:19.446
  Aug 28 00:10:19.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6990" for this suite. @ 08/28/24 00:10:19.793
  STEP: Destroying namespace "webhook-markers-1217" for this suite. @ 08/28/24 00:10:19.811
  STEP: Destroying namespace "fail-closed-namespace-4044" for this suite. @ 08/28/24 00:10:19.843
• [7.828 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 08/28/24 00:10:19.898
  Aug 28 00:10:19.899: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename init-container @ 08/28/24 00:10:19.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:19.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:19.966
  STEP: creating the pod @ 08/28/24 00:10:19.98
  Aug 28 00:10:19.980: INFO: PodSpec: initContainers in spec.initContainers
  E0828 00:10:20.188943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:21.190068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:22.190370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:23.190395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:24.190829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:24.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8719" for this suite. @ 08/28/24 00:10:24.242
• [4.358 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 08/28/24 00:10:24.26
  Aug 28 00:10:24.260: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:10:24.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:24.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:24.316
  STEP: Setting up server cert @ 08/28/24 00:10:24.39
  E0828 00:10:25.191482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:10:25.915
  STEP: Deploying the webhook pod @ 08/28/24 00:10:25.941
  STEP: Wait for the deployment to be ready @ 08/28/24 00:10:25.978
  Aug 28 00:10:26.085: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:10:26.191835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:27.192411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:10:28.108
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:10:28.137
  E0828 00:10:28.193043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:29.138: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 08/28/24 00:10:29.155
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/28/24 00:10:29.189
  E0828 00:10:29.194027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 08/28/24 00:10:29.207
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/28/24 00:10:29.227
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 08/28/24 00:10:29.258
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/28/24 00:10:29.273
  Aug 28 00:10:29.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-498" for this suite. @ 08/28/24 00:10:29.571
  STEP: Destroying namespace "webhook-markers-4796" for this suite. @ 08/28/24 00:10:29.622
• [5.424 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 08/28/24 00:10:29.699
  Aug 28 00:10:29.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:10:29.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:29.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:29.774
  STEP: creating service multi-endpoint-test in namespace services-4231 @ 08/28/24 00:10:29.786
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4231 to expose endpoints map[] @ 08/28/24 00:10:29.832
  Aug 28 00:10:29.851: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0828 00:10:30.194408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:30.885: INFO: successfully validated that service multi-endpoint-test in namespace services-4231 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4231 @ 08/28/24 00:10:30.885
  E0828 00:10:31.195936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:32.196739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4231 to expose endpoints map[pod1:[100]] @ 08/28/24 00:10:32.986
  Aug 28 00:10:33.030: INFO: successfully validated that service multi-endpoint-test in namespace services-4231 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4231 @ 08/28/24 00:10:33.03
  E0828 00:10:33.197786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:34.198224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4231 to expose endpoints map[pod1:[100] pod2:[101]] @ 08/28/24 00:10:35.106
  Aug 28 00:10:35.156: INFO: successfully validated that service multi-endpoint-test in namespace services-4231 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 08/28/24 00:10:35.156
  Aug 28 00:10:35.156: INFO: Creating new exec pod
  E0828 00:10:35.198577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:36.198936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:37.199292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:38.199718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:38.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-4231 exec execpod2lz7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Aug 28 00:10:38.587: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Aug 28 00:10:38.587: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:10:38.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-4231 exec execpod2lz7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.59.91 80'
  Aug 28 00:10:38.938: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.59.91 80\nConnection to 10.233.59.91 80 port [tcp/http] succeeded!\n"
  Aug 28 00:10:38.938: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:10:38.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-4231 exec execpod2lz7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  E0828 00:10:39.200336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:39.292: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Aug 28 00:10:39.292: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:10:39.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-4231 exec execpod2lz7b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.59.91 81'
  Aug 28 00:10:39.639: INFO: stderr: "+ nc -v -t -w 2 10.233.59.91 81\n+ echo hostName\nConnection to 10.233.59.91 81 port [tcp/*] succeeded!\n"
  Aug 28 00:10:39.639: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4231 @ 08/28/24 00:10:39.639
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4231 to expose endpoints map[pod2:[101]] @ 08/28/24 00:10:39.698
  Aug 28 00:10:39.766: INFO: successfully validated that service multi-endpoint-test in namespace services-4231 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4231 @ 08/28/24 00:10:39.766
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4231 to expose endpoints map[] @ 08/28/24 00:10:39.876
  Aug 28 00:10:39.896: INFO: successfully validated that service multi-endpoint-test in namespace services-4231 exposes endpoints map[]
  Aug 28 00:10:39.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4231" for this suite. @ 08/28/24 00:10:39.968
• [10.293 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 08/28/24 00:10:39.994
  Aug 28 00:10:39.995: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 00:10:39.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:40.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:40.054
  STEP: Creating a ResourceQuota with best effort scope @ 08/28/24 00:10:40.067
  STEP: Ensuring ResourceQuota status is calculated @ 08/28/24 00:10:40.081
  E0828 00:10:40.200840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:41.201857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 08/28/24 00:10:42.088
  STEP: Ensuring ResourceQuota status is calculated @ 08/28/24 00:10:42.102
  E0828 00:10:42.202433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:43.203100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 08/28/24 00:10:44.111
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 08/28/24 00:10:44.138
  E0828 00:10:44.203995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:45.204807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 08/28/24 00:10:46.152
  E0828 00:10:46.204798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:47.206109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/28/24 00:10:48.163
  STEP: Ensuring resource quota status released the pod usage @ 08/28/24 00:10:48.199
  E0828 00:10:48.206747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:49.207651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:50.208108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 08/28/24 00:10:50.208
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 08/28/24 00:10:50.23
  E0828 00:10:51.208458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:52.209449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 08/28/24 00:10:52.239
  E0828 00:10:53.209581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:54.210399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/28/24 00:10:54.246
  STEP: Ensuring resource quota status released the pod usage @ 08/28/24 00:10:54.27
  E0828 00:10:55.210734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:56.211005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:56.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9002" for this suite. @ 08/28/24 00:10:56.29
• [16.311 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 08/28/24 00:10:56.31
  Aug 28 00:10:56.310: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename watch @ 08/28/24 00:10:56.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:56.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:56.38
  STEP: getting a starting resourceVersion @ 08/28/24 00:10:56.386
  STEP: starting a background goroutine to produce watch events @ 08/28/24 00:10:56.396
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 08/28/24 00:10:56.396
  E0828 00:10:57.211203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:10:58.211912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:10:59.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6127" for this suite. @ 08/28/24 00:10:59.178
  E0828 00:10:59.213093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 08/28/24 00:10:59.228
  Aug 28 00:10:59.228: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-preemption @ 08/28/24 00:10:59.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:10:59.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:10:59.32
  Aug 28 00:10:59.364: INFO: Waiting up to 1m0s for all nodes to be ready
  E0828 00:11:00.214022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:01.214114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:02.214288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:03.214635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:04.214984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:05.216043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:06.217119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:07.217941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:08.218340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:09.219513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:10.220053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:11.220337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:12.221416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:13.222014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:14.222204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:15.223058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:16.223613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:17.224412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:18.225113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:19.225599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:20.226259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:21.226718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:22.227403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:23.228126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:24.228422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:25.229486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:26.229747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:27.230435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:28.230624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:29.231113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:30.232270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:31.232773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:32.232942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:33.233383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:34.234203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:35.235018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:36.235595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:37.236477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:38.237392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:39.237962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:40.238450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:41.238430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:42.239466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:43.239676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:44.239882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:45.240844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:46.241415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:47.241423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:48.242136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:49.242623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:50.243028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:51.243690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:52.244523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:53.244841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:54.245809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:55.245957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:56.246186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:57.246949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:58.247054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:11:59.247960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:11:59.378: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/28/24 00:11:59.385
  Aug 28 00:11:59.385: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/28/24 00:11:59.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:11:59.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:11:59.45
  STEP: Finding an available node @ 08/28/24 00:11:59.463
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/28/24 00:11:59.463
  E0828 00:12:00.247878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:01.247808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/28/24 00:12:01.564
  Aug 28 00:12:01.630: INFO: found a healthy node: env1-test-worker-2
  E0828 00:12:02.248213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:03.248531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:04.248507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:05.248891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:06.250020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:07.250665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:08.251651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:09.252216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:10.252566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:11.253134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:12.253171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:13.253413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:13.873: INFO: pods created so far: [1 1 1]
  Aug 28 00:12:13.873: INFO: length of pods created so far: 3
  E0828 00:12:14.253922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:15.254559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:15.896: INFO: pods created so far: [2 2 1]
  E0828 00:12:16.254859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:17.255858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:18.256296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:19.256501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:20.257020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:21.257654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:22.258285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:23.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0828 00:12:23.258607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "sched-preemption-path-3461" for this suite. @ 08/28/24 00:12:23.259
  Aug 28 00:12:23.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1123" for this suite. @ 08/28/24 00:12:23.33
• [84.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 08/28/24 00:12:23.357
  Aug 28 00:12:23.357: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 00:12:23.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:12:23.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:12:23.414
  STEP: Counting existing ResourceQuota @ 08/28/24 00:12:23.421
  E0828 00:12:24.258785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:25.259808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:26.259945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:27.260989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:28.261735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/28/24 00:12:28.431
  STEP: Ensuring resource quota status is calculated @ 08/28/24 00:12:28.454
  E0828 00:12:29.261899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:30.262148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 08/28/24 00:12:30.464
  STEP: Ensuring resource quota status captures replication controller creation @ 08/28/24 00:12:30.485
  E0828 00:12:31.262269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:32.263379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 08/28/24 00:12:32.497
  STEP: Ensuring resource quota status released usage @ 08/28/24 00:12:32.526
  E0828 00:12:33.264485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:34.264447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:34.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3428" for this suite. @ 08/28/24 00:12:34.55
• [11.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 08/28/24 00:12:34.58
  Aug 28 00:12:34.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename security-context @ 08/28/24 00:12:34.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:12:34.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:12:34.622
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/28/24 00:12:34.629
  E0828 00:12:35.264728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:36.265164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:37.265330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:38.265988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:12:38.675
  Aug 28 00:12:38.684: INFO: Trying to get logs from node env1-test-worker-2 pod security-context-6d3347bf-f361-4711-97dc-5c14f8f43fcd container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:12:38.714
  Aug 28 00:12:38.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9189" for this suite. @ 08/28/24 00:12:38.787
• [4.221 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 08/28/24 00:12:38.804
  Aug 28 00:12:38.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:12:38.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:12:38.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:12:38.843
  STEP: Setting up server cert @ 08/28/24 00:12:38.906
  E0828 00:12:39.266621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:12:39.764
  STEP: Deploying the webhook pod @ 08/28/24 00:12:39.785
  STEP: Wait for the deployment to be ready @ 08/28/24 00:12:39.821
  Aug 28 00:12:39.860: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:12:40.266846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:41.267042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:12:41.887
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:12:41.921
  E0828 00:12:42.267632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:42.922: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/28/24 00:12:43.124
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/28/24 00:12:43.198
  STEP: Deleting the collection of validation webhooks @ 08/28/24 00:12:43.235
  E0828 00:12:43.268157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/28/24 00:12:43.401
  Aug 28 00:12:43.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8359" for this suite. @ 08/28/24 00:12:43.587
  STEP: Destroying namespace "webhook-markers-9350" for this suite. @ 08/28/24 00:12:43.625
• [4.858 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 08/28/24 00:12:43.662
  Aug 28 00:12:43.662: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename daemonsets @ 08/28/24 00:12:43.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:12:43.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:12:43.716
  STEP: Creating a simple DaemonSet "daemon-set" @ 08/28/24 00:12:43.79
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/28/24 00:12:43.817
  Aug 28 00:12:43.830: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:43.830: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:43.830: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:43.846: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:12:43.846: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:12:44.268770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:44.834: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:44.835: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:44.835: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:44.846: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:12:44.846: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:12:45.269625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:45.832: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:45.833: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:45.833: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:45.844: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 28 00:12:45.846: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:12:46.269846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:46.837: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:46.837: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:46.837: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:46.849: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 28 00:12:46.850: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 08/28/24 00:12:46.857
  Aug 28 00:12:46.909: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:46.909: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:46.910: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:46.932: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:12:46.932: INFO: Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E0828 00:12:47.270093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:47.912: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:47.912: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:47.913: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:47.923: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:12:47.923: INFO: Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E0828 00:12:48.271201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:48.905: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:48.906: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:48.906: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:48.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:12:48.914: INFO: Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E0828 00:12:49.271345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:49.903: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:49.904: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:49.904: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:12:49.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 28 00:12:49.917: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 08/28/24 00:12:49.917
  STEP: Deleting DaemonSet "daemon-set" @ 08/28/24 00:12:49.937
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9618, will wait for the garbage collector to delete the pods @ 08/28/24 00:12:49.937
  Aug 28 00:12:50.021: INFO: Deleting DaemonSet.extensions daemon-set took: 25.347218ms
  Aug 28 00:12:50.123: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.540767ms
  E0828 00:12:50.273263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:51.273439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:52.273890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:52.435: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:12:52.435: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 28 00:12:52.448: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38916431"},"items":null}

  Aug 28 00:12:52.461: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38916432"},"items":null}

  Aug 28 00:12:52.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9618" for this suite. @ 08/28/24 00:12:52.521
• [8.880 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 08/28/24 00:12:52.543
  Aug 28 00:12:52.543: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replicaset @ 08/28/24 00:12:52.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:12:52.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:12:52.615
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 08/28/24 00:12:52.625
  E0828 00:12:53.274623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:54.275365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 08/28/24 00:12:54.717
  STEP: Then the orphan pod is adopted @ 08/28/24 00:12:54.732
  E0828 00:12:55.275844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 08/28/24 00:12:55.748
  Aug 28 00:12:55.758: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/28/24 00:12:55.823
  E0828 00:12:56.276967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:12:56.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4921" for this suite. @ 08/28/24 00:12:56.848
• [4.319 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 08/28/24 00:12:56.863
  Aug 28 00:12:56.863: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/28/24 00:12:56.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:12:56.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:12:56.918
  STEP: set up a multi version CRD @ 08/28/24 00:12:56.924
  Aug 28 00:12:56.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:12:57.278241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:58.278427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:12:59.279288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:00.279599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:01.280550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:02.281261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:03.281341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:04.281561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:05.282662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:06.283196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:07.284062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:08.284298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:09.285157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:10.286307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:11.287637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 08/28/24 00:13:11.407
  STEP: check the new version name is served @ 08/28/24 00:13:11.445
  E0828 00:13:12.288551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:13.289269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:14.290050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:15.290308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 08/28/24 00:13:15.534
  E0828 00:13:16.290592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 08/28/24 00:13:16.78
  E0828 00:13:17.290687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:18.291581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:19.292341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:20.292436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:21.292950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:22.293114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:23.293479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:13:24.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8845" for this suite. @ 08/28/24 00:13:24.29
  E0828 00:13:24.294243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [27.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 08/28/24 00:13:24.311
  Aug 28 00:13:24.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename disruption @ 08/28/24 00:13:24.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:13:24.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:13:24.369
  STEP: Waiting for the pdb to be processed @ 08/28/24 00:13:24.388
  E0828 00:13:25.294738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:26.295225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 08/28/24 00:13:26.397
  STEP: Waiting for all pods to be running @ 08/28/24 00:13:26.417
  Aug 28 00:13:26.433: INFO: running pods: 0 < 1
  E0828 00:13:27.296165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:28.296656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:13:28.425: INFO: running pods: 0 < 1
  E0828 00:13:29.296732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:30.297142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 08/28/24 00:13:30.438
  STEP: Waiting for the pdb to be processed @ 08/28/24 00:13:30.483
  STEP: Patching PodDisruptionBudget status @ 08/28/24 00:13:30.508
  STEP: Waiting for the pdb to be processed @ 08/28/24 00:13:30.549
  Aug 28 00:13:30.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1856" for this suite. @ 08/28/24 00:13:30.581
• [6.293 seconds]
------------------------------
SS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 08/28/24 00:13:30.605
  Aug 28 00:13:30.605: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename proxy @ 08/28/24 00:13:30.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:13:30.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:13:30.69
  Aug 28 00:13:30.697: INFO: Creating pod...
  E0828 00:13:31.298176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:32.299238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:13:32.771: INFO: Creating service...
  Aug 28 00:13:32.829: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/pods/agnhost/proxy?method=DELETE
  Aug 28 00:13:32.870: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 28 00:13:32.871: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/pods/agnhost/proxy?method=OPTIONS
  Aug 28 00:13:32.942: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 28 00:13:32.942: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/pods/agnhost/proxy?method=PATCH
  Aug 28 00:13:32.975: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 28 00:13:32.975: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/pods/agnhost/proxy?method=POST
  Aug 28 00:13:32.988: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 28 00:13:32.988: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/pods/agnhost/proxy?method=PUT
  Aug 28 00:13:33.012: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 28 00:13:33.013: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/services/e2e-proxy-test-service/proxy?method=DELETE
  Aug 28 00:13:33.042: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 28 00:13:33.042: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Aug 28 00:13:33.084: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 28 00:13:33.084: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/services/e2e-proxy-test-service/proxy?method=PATCH
  Aug 28 00:13:33.104: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 28 00:13:33.104: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/services/e2e-proxy-test-service/proxy?method=POST
  Aug 28 00:13:33.128: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 28 00:13:33.128: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/services/e2e-proxy-test-service/proxy?method=PUT
  Aug 28 00:13:33.148: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 28 00:13:33.149: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/pods/agnhost/proxy?method=GET
  Aug 28 00:13:33.161: INFO: http.Client request:GET StatusCode:301
  Aug 28 00:13:33.161: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/services/e2e-proxy-test-service/proxy?method=GET
  Aug 28 00:13:33.194: INFO: http.Client request:GET StatusCode:301
  Aug 28 00:13:33.194: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/pods/agnhost/proxy?method=HEAD
  Aug 28 00:13:33.205: INFO: http.Client request:HEAD StatusCode:301
  Aug 28 00:13:33.205: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7868/services/e2e-proxy-test-service/proxy?method=HEAD
  Aug 28 00:13:33.217: INFO: http.Client request:HEAD StatusCode:301
  Aug 28 00:13:33.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7868" for this suite. @ 08/28/24 00:13:33.229
• [2.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 08/28/24 00:13:33.261
  Aug 28 00:13:33.262: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/28/24 00:13:33.263
  E0828 00:13:33.300935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:13:33.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:13:33.332
  E0828 00:13:34.301147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:35.301778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:13:35.392: INFO: Deleting pod "var-expansion-04a66441-b9b5-4a19-aee3-086768a56a5d" in namespace "var-expansion-8918"
  Aug 28 00:13:35.415: INFO: Wait up to 5m0s for pod "var-expansion-04a66441-b9b5-4a19-aee3-086768a56a5d" to be fully deleted
  E0828 00:13:36.302395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:37.302620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:38.302714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:39.303839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:13:39.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8918" for this suite. @ 08/28/24 00:13:39.466
• [6.242 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 08/28/24 00:13:39.507
  Aug 28 00:13:39.507: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sysctl @ 08/28/24 00:13:39.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:13:39.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:13:39.57
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 08/28/24 00:13:39.58
  STEP: Watching for error events or started pod @ 08/28/24 00:13:39.61
  E0828 00:13:40.305092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:41.307006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 08/28/24 00:13:41.622
  E0828 00:13:42.306980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:43.307931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 08/28/24 00:13:43.646
  STEP: Getting logs from the pod @ 08/28/24 00:13:43.646
  STEP: Checking that the sysctl is actually updated @ 08/28/24 00:13:43.675
  Aug 28 00:13:43.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7888" for this suite. @ 08/28/24 00:13:43.686
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 08/28/24 00:13:43.703
  Aug 28 00:13:43.703: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:13:43.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:13:43.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:13:43.774
  Aug 28 00:13:43.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2382" for this suite. @ 08/28/24 00:13:43.813
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 08/28/24 00:13:43.836
  Aug 28 00:13:43.836: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/28/24 00:13:43.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:13:43.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:13:43.888
  Aug 28 00:13:43.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:13:44.308014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:45.308624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:46.309425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:47.309933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:48.310376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:49.310673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:50.310702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:51.311191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:52.312356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:53.312870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/28/24 00:13:54.034
  Aug 28 00:13:54.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-8036 --namespace=crd-publish-openapi-8036 create -f -'
  Aug 28 00:13:54.251: INFO: stderr: ""
  Aug 28 00:13:54.251: INFO: stdout: "e2e-test-crd-publish-openapi-5713-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 28 00:13:54.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-8036 --namespace=crd-publish-openapi-8036 delete e2e-test-crd-publish-openapi-5713-crds test-cr'
  E0828 00:13:54.313001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:13:54.460: INFO: stderr: ""
  Aug 28 00:13:54.460: INFO: stdout: "e2e-test-crd-publish-openapi-5713-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Aug 28 00:13:54.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-8036 --namespace=crd-publish-openapi-8036 apply -f -'
  Aug 28 00:13:54.667: INFO: stderr: ""
  Aug 28 00:13:54.667: INFO: stdout: "e2e-test-crd-publish-openapi-5713-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 28 00:13:54.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-8036 --namespace=crd-publish-openapi-8036 delete e2e-test-crd-publish-openapi-5713-crds test-cr'
  Aug 28 00:13:54.865: INFO: stderr: ""
  Aug 28 00:13:54.865: INFO: stdout: "e2e-test-crd-publish-openapi-5713-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 08/28/24 00:13:54.865
  Aug 28 00:13:54.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-8036 explain e2e-test-crd-publish-openapi-5713-crds'
  Aug 28 00:13:54.993: INFO: stderr: ""
  Aug 28 00:13:54.993: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5713-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0828 00:13:55.315178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:56.316338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:57.316895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:13:58.316509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:13:59.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8036" for this suite. @ 08/28/24 00:13:59.237
• [15.414 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 08/28/24 00:13:59.254
  Aug 28 00:13:59.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:13:59.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:13:59.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:13:59.311
  E0828 00:13:59.317497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 08/28/24 00:13:59.419
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:14:00.277
  STEP: Deploying the webhook pod @ 08/28/24 00:14:00.291
  STEP: Wait for the deployment to be ready @ 08/28/24 00:14:00.309
  E0828 00:14:00.321799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:00.351: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:14:01.322923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:02.323987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:02.389: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 14, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 14, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 14, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 14, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:14:03.325010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:04.325341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:14:04.398
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:14:04.427
  E0828 00:14:05.325863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:05.428: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/28/24 00:14:05.446
  STEP: create a pod that should be denied by the webhook @ 08/28/24 00:14:05.486
  STEP: create a pod that causes the webhook to hang @ 08/28/24 00:14:05.513
  E0828 00:14:06.326455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:07.327731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:08.328801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:09.329262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:10.330611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:11.331175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:12.331259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:13.331666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:14.332548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:15.333335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 08/28/24 00:14:15.526
  STEP: create a configmap that should be admitted by the webhook @ 08/28/24 00:14:15.543
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/28/24 00:14:15.559
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/28/24 00:14:15.579
  STEP: create a namespace that bypass the webhook @ 08/28/24 00:14:15.591
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 08/28/24 00:14:15.626
  Aug 28 00:14:15.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9379" for this suite. @ 08/28/24 00:14:15.848
  STEP: Destroying namespace "webhook-markers-2414" for this suite. @ 08/28/24 00:14:15.874
  STEP: Destroying namespace "exempted-namespace-2102" for this suite. @ 08/28/24 00:14:15.916
• [16.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 08/28/24 00:14:15.952
  Aug 28 00:14:15.952: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename proxy @ 08/28/24 00:14:15.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:14:16.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:14:16.016
  STEP: starting an echo server on multiple ports @ 08/28/24 00:14:16.124
  STEP: creating replication controller proxy-service-sdzqg in namespace proxy-4801 @ 08/28/24 00:14:16.124
  I0828 00:14:16.160516      19 runners.go:197] Created replication controller with name: proxy-service-sdzqg, namespace: proxy-4801, replica count: 1
  E0828 00:14:16.333814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:14:17.211558      19 runners.go:197] proxy-service-sdzqg Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0828 00:14:17.334472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:14:18.213538      19 runners.go:197] proxy-service-sdzqg Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0828 00:14:18.335175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:14:19.213911      19 runners.go:197] proxy-service-sdzqg Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 28 00:14:19.226: INFO: setup took 3.201930619s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 08/28/24 00:14:19.226
  Aug 28 00:14:19.273: INFO: (0) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 46.22185ms)
  Aug 28 00:14:19.286: INFO: (0) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 59.267788ms)
  Aug 28 00:14:19.286: INFO: (0) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 59.994556ms)
  Aug 28 00:14:19.287: INFO: (0) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 59.819899ms)
  Aug 28 00:14:19.295: INFO: (0) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 68.225632ms)
  Aug 28 00:14:19.296: INFO: (0) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 68.742698ms)
  Aug 28 00:14:19.296: INFO: (0) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 69.0714ms)
  Aug 28 00:14:19.296: INFO: (0) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 68.889879ms)
  Aug 28 00:14:19.303: INFO: (0) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 76.624902ms)
  Aug 28 00:14:19.303: INFO: (0) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 77.304445ms)
  Aug 28 00:14:19.304: INFO: (0) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 77.954553ms)
  Aug 28 00:14:19.317: INFO: (0) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 89.975376ms)
  Aug 28 00:14:19.318: INFO: (0) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 91.237973ms)
  Aug 28 00:14:19.318: INFO: (0) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 91.240356ms)
  Aug 28 00:14:19.318: INFO: (0) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 91.679975ms)
  Aug 28 00:14:19.318: INFO: (0) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 91.902931ms)
  E0828 00:14:19.336089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:19.346: INFO: (1) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 26.952661ms)
  Aug 28 00:14:19.356: INFO: (1) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 37.336444ms)
  Aug 28 00:14:19.356: INFO: (1) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 37.140974ms)
  Aug 28 00:14:19.356: INFO: (1) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 36.688586ms)
  Aug 28 00:14:19.366: INFO: (1) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 45.311153ms)
  Aug 28 00:14:19.374: INFO: (1) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 54.568073ms)
  Aug 28 00:14:19.374: INFO: (1) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 54.802228ms)
  Aug 28 00:14:19.375: INFO: (1) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 55.601534ms)
  Aug 28 00:14:19.375: INFO: (1) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 55.655769ms)
  Aug 28 00:14:19.376: INFO: (1) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 56.886701ms)
  Aug 28 00:14:19.376: INFO: (1) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 56.736815ms)
  Aug 28 00:14:19.376: INFO: (1) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 56.570009ms)
  Aug 28 00:14:19.376: INFO: (1) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 57.115581ms)
  Aug 28 00:14:19.380: INFO: (1) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 60.160652ms)
  Aug 28 00:14:19.380: INFO: (1) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 61.125143ms)
  Aug 28 00:14:19.382: INFO: (1) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 62.069291ms)
  Aug 28 00:14:19.397: INFO: (2) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 15.184464ms)
  Aug 28 00:14:19.398: INFO: (2) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 15.761384ms)
  Aug 28 00:14:19.402: INFO: (2) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 20.22881ms)
  Aug 28 00:14:19.407: INFO: (2) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 23.91833ms)
  Aug 28 00:14:19.409: INFO: (2) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 25.602294ms)
  Aug 28 00:14:19.409: INFO: (2) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 27.012002ms)
  Aug 28 00:14:19.416: INFO: (2) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 32.045066ms)
  Aug 28 00:14:19.419: INFO: (2) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 36.555872ms)
  Aug 28 00:14:19.419: INFO: (2) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 36.373957ms)
  Aug 28 00:14:19.421: INFO: (2) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 37.898105ms)
  Aug 28 00:14:19.422: INFO: (2) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 39.616277ms)
  Aug 28 00:14:19.427: INFO: (2) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 44.952168ms)
  Aug 28 00:14:19.428: INFO: (2) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 45.506512ms)
  Aug 28 00:14:19.428: INFO: (2) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 46.449596ms)
  Aug 28 00:14:19.434: INFO: (2) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 50.697137ms)
  Aug 28 00:14:19.439: INFO: (2) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 55.92117ms)
  Aug 28 00:14:19.460: INFO: (3) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 20.008976ms)
  Aug 28 00:14:19.461: INFO: (3) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 20.585305ms)
  Aug 28 00:14:19.462: INFO: (3) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 22.441157ms)
  Aug 28 00:14:19.472: INFO: (3) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 31.961682ms)
  Aug 28 00:14:19.472: INFO: (3) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 31.914016ms)
  Aug 28 00:14:19.473: INFO: (3) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 34.187702ms)
  Aug 28 00:14:19.481: INFO: (3) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 40.437378ms)
  Aug 28 00:14:19.481: INFO: (3) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 41.181399ms)
  Aug 28 00:14:19.483: INFO: (3) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 42.583837ms)
  Aug 28 00:14:19.483: INFO: (3) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 43.068757ms)
  Aug 28 00:14:19.484: INFO: (3) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 43.683401ms)
  Aug 28 00:14:19.492: INFO: (3) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 51.559736ms)
  Aug 28 00:14:19.492: INFO: (3) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 51.477754ms)
  Aug 28 00:14:19.492: INFO: (3) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 52.151455ms)
  Aug 28 00:14:19.492: INFO: (3) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 51.521099ms)
  Aug 28 00:14:19.524: INFO: (3) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 84.096056ms)
  Aug 28 00:14:19.544: INFO: (4) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 19.361286ms)
  Aug 28 00:14:19.553: INFO: (4) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 28.456062ms)
  Aug 28 00:14:19.554: INFO: (4) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 29.111376ms)
  Aug 28 00:14:19.554: INFO: (4) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 28.754355ms)
  Aug 28 00:14:19.562: INFO: (4) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 36.827168ms)
  Aug 28 00:14:19.568: INFO: (4) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 42.602025ms)
  Aug 28 00:14:19.568: INFO: (4) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 42.50858ms)
  Aug 28 00:14:19.568: INFO: (4) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 42.614038ms)
  Aug 28 00:14:19.572: INFO: (4) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 46.641604ms)
  Aug 28 00:14:19.573: INFO: (4) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 48.016117ms)
  Aug 28 00:14:19.573: INFO: (4) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 48.19509ms)
  Aug 28 00:14:19.573: INFO: (4) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 48.401283ms)
  Aug 28 00:14:19.574: INFO: (4) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 49.196869ms)
  Aug 28 00:14:19.574: INFO: (4) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 49.039456ms)
  Aug 28 00:14:19.576: INFO: (4) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 50.584954ms)
  Aug 28 00:14:19.584: INFO: (4) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 58.833526ms)
  Aug 28 00:14:19.602: INFO: (5) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 18.32699ms)
  Aug 28 00:14:19.602: INFO: (5) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 18.183837ms)
  Aug 28 00:14:19.612: INFO: (5) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 27.666169ms)
  Aug 28 00:14:19.625: INFO: (5) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 40.331695ms)
  Aug 28 00:14:19.632: INFO: (5) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 46.941829ms)
  Aug 28 00:14:19.632: INFO: (5) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 47.081781ms)
  Aug 28 00:14:19.632: INFO: (5) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 47.485946ms)
  Aug 28 00:14:19.637: INFO: (5) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 51.977922ms)
  Aug 28 00:14:19.639: INFO: (5) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 54.534352ms)
  Aug 28 00:14:19.639: INFO: (5) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 55.455317ms)
  Aug 28 00:14:19.640: INFO: (5) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 55.125321ms)
  Aug 28 00:14:19.640: INFO: (5) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 55.11967ms)
  Aug 28 00:14:19.640: INFO: (5) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 55.93535ms)
  Aug 28 00:14:19.641: INFO: (5) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 56.066915ms)
  Aug 28 00:14:19.641: INFO: (5) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 57.044539ms)
  Aug 28 00:14:19.643: INFO: (5) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 58.651787ms)
  Aug 28 00:14:19.680: INFO: (6) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 36.654773ms)
  Aug 28 00:14:19.685: INFO: (6) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 41.312044ms)
  Aug 28 00:14:19.685: INFO: (6) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 41.247698ms)
  Aug 28 00:14:19.685: INFO: (6) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 41.89264ms)
  Aug 28 00:14:19.685: INFO: (6) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 41.97101ms)
  Aug 28 00:14:19.695: INFO: (6) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 51.665058ms)
  Aug 28 00:14:19.696: INFO: (6) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 52.446905ms)
  Aug 28 00:14:19.698: INFO: (6) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 54.51732ms)
  Aug 28 00:14:19.698: INFO: (6) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 54.450237ms)
  Aug 28 00:14:19.698: INFO: (6) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 54.620694ms)
  Aug 28 00:14:19.698: INFO: (6) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 54.881431ms)
  Aug 28 00:14:19.698: INFO: (6) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 54.657902ms)
  Aug 28 00:14:19.699: INFO: (6) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 55.683961ms)
  Aug 28 00:14:19.700: INFO: (6) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 56.997121ms)
  Aug 28 00:14:19.700: INFO: (6) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 57.028551ms)
  Aug 28 00:14:19.701: INFO: (6) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 57.036148ms)
  Aug 28 00:14:19.730: INFO: (7) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 26.945432ms)
  Aug 28 00:14:19.730: INFO: (7) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 28.363205ms)
  Aug 28 00:14:19.730: INFO: (7) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 28.264174ms)
  Aug 28 00:14:19.730: INFO: (7) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 27.723081ms)
  Aug 28 00:14:19.730: INFO: (7) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 26.453795ms)
  Aug 28 00:14:19.730: INFO: (7) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 28.856551ms)
  Aug 28 00:14:19.731: INFO: (7) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 28.891724ms)
  Aug 28 00:14:19.733: INFO: (7) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 30.495037ms)
  Aug 28 00:14:19.733: INFO: (7) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 29.098919ms)
  Aug 28 00:14:19.734: INFO: (7) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 30.802935ms)
  Aug 28 00:14:19.734: INFO: (7) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 33.531153ms)
  Aug 28 00:14:19.735: INFO: (7) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 32.139316ms)
  Aug 28 00:14:19.742: INFO: (7) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 38.309767ms)
  Aug 28 00:14:19.742: INFO: (7) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 40.36804ms)
  Aug 28 00:14:19.743: INFO: (7) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 40.108746ms)
  Aug 28 00:14:19.752: INFO: (7) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 48.043439ms)
  Aug 28 00:14:19.771: INFO: (8) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 18.630845ms)
  Aug 28 00:14:19.774: INFO: (8) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 21.533685ms)
  Aug 28 00:14:19.774: INFO: (8) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 21.282412ms)
  Aug 28 00:14:19.774: INFO: (8) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 21.373534ms)
  Aug 28 00:14:19.776: INFO: (8) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 22.780705ms)
  Aug 28 00:14:19.777: INFO: (8) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 23.542165ms)
  Aug 28 00:14:19.778: INFO: (8) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 26.033768ms)
  Aug 28 00:14:19.779: INFO: (8) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 26.367674ms)
  Aug 28 00:14:19.784: INFO: (8) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 31.224135ms)
  Aug 28 00:14:19.790: INFO: (8) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 37.597924ms)
  Aug 28 00:14:19.790: INFO: (8) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 37.58578ms)
  Aug 28 00:14:19.790: INFO: (8) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 37.499899ms)
  Aug 28 00:14:19.791: INFO: (8) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 38.04751ms)
  Aug 28 00:14:19.791: INFO: (8) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 38.589358ms)
  Aug 28 00:14:19.792: INFO: (8) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 39.473503ms)
  Aug 28 00:14:19.799: INFO: (8) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 46.005397ms)
  Aug 28 00:14:19.811: INFO: (9) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 12.0692ms)
  Aug 28 00:14:19.814: INFO: (9) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 15.432604ms)
  Aug 28 00:14:19.816: INFO: (9) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 16.252263ms)
  Aug 28 00:14:19.817: INFO: (9) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 18.498353ms)
  Aug 28 00:14:19.817: INFO: (9) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 17.397605ms)
  Aug 28 00:14:19.818: INFO: (9) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 19.021101ms)
  Aug 28 00:14:19.821: INFO: (9) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 21.719689ms)
  Aug 28 00:14:19.821: INFO: (9) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 21.029966ms)
  Aug 28 00:14:19.824: INFO: (9) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 24.047821ms)
  Aug 28 00:14:19.827: INFO: (9) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 26.887509ms)
  Aug 28 00:14:19.827: INFO: (9) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 26.592275ms)
  Aug 28 00:14:19.827: INFO: (9) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 28.054018ms)
  Aug 28 00:14:19.832: INFO: (9) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 32.453345ms)
  Aug 28 00:14:19.832: INFO: (9) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 33.027453ms)
  Aug 28 00:14:19.834: INFO: (9) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 34.501791ms)
  Aug 28 00:14:19.835: INFO: (9) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 34.860289ms)
  Aug 28 00:14:19.856: INFO: (10) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 20.160645ms)
  Aug 28 00:14:19.856: INFO: (10) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 19.870798ms)
  Aug 28 00:14:19.856: INFO: (10) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 20.786583ms)
  Aug 28 00:14:19.856: INFO: (10) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 19.897469ms)
  Aug 28 00:14:19.856: INFO: (10) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 19.830876ms)
  Aug 28 00:14:19.860: INFO: (10) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 24.711198ms)
  Aug 28 00:14:19.860: INFO: (10) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 24.400708ms)
  Aug 28 00:14:19.860: INFO: (10) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 25.182621ms)
  Aug 28 00:14:19.860: INFO: (10) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 25.082268ms)
  Aug 28 00:14:19.861: INFO: (10) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 24.891495ms)
  Aug 28 00:14:19.871: INFO: (10) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 35.594325ms)
  Aug 28 00:14:19.871: INFO: (10) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 35.341372ms)
  Aug 28 00:14:19.871: INFO: (10) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 34.880455ms)
  Aug 28 00:14:19.871: INFO: (10) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 35.306772ms)
  Aug 28 00:14:19.871: INFO: (10) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 34.930296ms)
  Aug 28 00:14:19.871: INFO: (10) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 35.214824ms)
  Aug 28 00:14:19.883: INFO: (11) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 11.90227ms)
  Aug 28 00:14:19.886: INFO: (11) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 13.091362ms)
  Aug 28 00:14:19.886: INFO: (11) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 14.176977ms)
  Aug 28 00:14:19.889: INFO: (11) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 17.340812ms)
  Aug 28 00:14:19.889: INFO: (11) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 17.972309ms)
  Aug 28 00:14:19.890: INFO: (11) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 17.255194ms)
  Aug 28 00:14:19.891: INFO: (11) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 18.618896ms)
  Aug 28 00:14:19.893: INFO: (11) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 20.180103ms)
  Aug 28 00:14:19.893: INFO: (11) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 20.022078ms)
  Aug 28 00:14:19.894: INFO: (11) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 22.429496ms)
  Aug 28 00:14:19.894: INFO: (11) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 21.365794ms)
  Aug 28 00:14:19.897: INFO: (11) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 24.806412ms)
  Aug 28 00:14:19.897: INFO: (11) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 24.979119ms)
  Aug 28 00:14:19.900: INFO: (11) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 27.218682ms)
  Aug 28 00:14:19.902: INFO: (11) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 28.991572ms)
  Aug 28 00:14:19.902: INFO: (11) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 29.770471ms)
  Aug 28 00:14:19.922: INFO: (12) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 18.594784ms)
  Aug 28 00:14:19.924: INFO: (12) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 20.471135ms)
  Aug 28 00:14:19.931: INFO: (12) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 27.577375ms)
  Aug 28 00:14:19.932: INFO: (12) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 28.73921ms)
  Aug 28 00:14:19.933: INFO: (12) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 28.943693ms)
  Aug 28 00:14:19.933: INFO: (12) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 29.307248ms)
  Aug 28 00:14:19.933: INFO: (12) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 29.814766ms)
  Aug 28 00:14:19.936: INFO: (12) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 31.795031ms)
  Aug 28 00:14:19.936: INFO: (12) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 32.159574ms)
  Aug 28 00:14:19.942: INFO: (12) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 38.223517ms)
  Aug 28 00:14:19.942: INFO: (12) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 37.778359ms)
  Aug 28 00:14:19.942: INFO: (12) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 38.405168ms)
  Aug 28 00:14:19.942: INFO: (12) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 38.638469ms)
  Aug 28 00:14:19.942: INFO: (12) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 39.013141ms)
  Aug 28 00:14:19.946: INFO: (12) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 42.654638ms)
  Aug 28 00:14:19.949: INFO: (12) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 45.751104ms)
  Aug 28 00:14:19.966: INFO: (13) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 16.203294ms)
  Aug 28 00:14:19.981: INFO: (13) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 30.245774ms)
  Aug 28 00:14:19.981: INFO: (13) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 30.757988ms)
  Aug 28 00:14:19.982: INFO: (13) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 31.763438ms)
  Aug 28 00:14:19.982: INFO: (13) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 31.939172ms)
  Aug 28 00:14:19.992: INFO: (13) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 41.782207ms)
  Aug 28 00:14:19.992: INFO: (13) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 43.060036ms)
  Aug 28 00:14:19.993: INFO: (13) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 42.85201ms)
  Aug 28 00:14:19.993: INFO: (13) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 43.393344ms)
  Aug 28 00:14:19.994: INFO: (13) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 44.125432ms)
  Aug 28 00:14:19.994: INFO: (13) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 43.79751ms)
  Aug 28 00:14:19.999: INFO: (13) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 49.35553ms)
  Aug 28 00:14:19.999: INFO: (13) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 48.431845ms)
  Aug 28 00:14:20.011: INFO: (13) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 60.516289ms)
  Aug 28 00:14:20.016: INFO: (13) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 66.475913ms)
  Aug 28 00:14:20.024: INFO: (13) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 73.906341ms)
  Aug 28 00:14:20.037: INFO: (14) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 12.636799ms)
  Aug 28 00:14:20.042: INFO: (14) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 17.904045ms)
  Aug 28 00:14:20.043: INFO: (14) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 18.737817ms)
  Aug 28 00:14:20.043: INFO: (14) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 18.571911ms)
  Aug 28 00:14:20.043: INFO: (14) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 18.790905ms)
  Aug 28 00:14:20.047: INFO: (14) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 22.971839ms)
  Aug 28 00:14:20.048: INFO: (14) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 23.191483ms)
  Aug 28 00:14:20.056: INFO: (14) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 31.29729ms)
  Aug 28 00:14:20.056: INFO: (14) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 31.601292ms)
  Aug 28 00:14:20.056: INFO: (14) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 31.913257ms)
  Aug 28 00:14:20.057: INFO: (14) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 32.337926ms)
  Aug 28 00:14:20.057: INFO: (14) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 32.87485ms)
  Aug 28 00:14:20.058: INFO: (14) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 33.670661ms)
  Aug 28 00:14:20.059: INFO: (14) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 34.810658ms)
  Aug 28 00:14:20.065: INFO: (14) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 40.219668ms)
  Aug 28 00:14:20.065: INFO: (14) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 40.842076ms)
  Aug 28 00:14:20.086: INFO: (15) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 18.514102ms)
  Aug 28 00:14:20.087: INFO: (15) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 20.110445ms)
  Aug 28 00:14:20.088: INFO: (15) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 21.999464ms)
  Aug 28 00:14:20.089: INFO: (15) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 23.421173ms)
  Aug 28 00:14:20.096: INFO: (15) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 27.894749ms)
  Aug 28 00:14:20.098: INFO: (15) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 31.538028ms)
  Aug 28 00:14:20.098: INFO: (15) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 30.881314ms)
  Aug 28 00:14:20.102: INFO: (15) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 36.442342ms)
  Aug 28 00:14:20.103: INFO: (15) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 34.852811ms)
  Aug 28 00:14:20.104: INFO: (15) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 35.939751ms)
  Aug 28 00:14:20.104: INFO: (15) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 37.840147ms)
  Aug 28 00:14:20.104: INFO: (15) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 37.219539ms)
  Aug 28 00:14:20.107: INFO: (15) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 39.954718ms)
  Aug 28 00:14:20.107: INFO: (15) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 38.795139ms)
  Aug 28 00:14:20.110: INFO: (15) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 43.082974ms)
  Aug 28 00:14:20.112: INFO: (15) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 43.598622ms)
  Aug 28 00:14:20.124: INFO: (16) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 11.498317ms)
  Aug 28 00:14:20.127: INFO: (16) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 14.488609ms)
  Aug 28 00:14:20.135: INFO: (16) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 22.605155ms)
  Aug 28 00:14:20.147: INFO: (16) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 34.252718ms)
  Aug 28 00:14:20.147: INFO: (16) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 35.018726ms)
  Aug 28 00:14:20.148: INFO: (16) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 35.672824ms)
  Aug 28 00:14:20.150: INFO: (16) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 37.447318ms)
  Aug 28 00:14:20.150: INFO: (16) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 37.68281ms)
  Aug 28 00:14:20.153: INFO: (16) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 40.790505ms)
  Aug 28 00:14:20.154: INFO: (16) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 41.42987ms)
  Aug 28 00:14:20.154: INFO: (16) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 41.588163ms)
  Aug 28 00:14:20.155: INFO: (16) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 42.638226ms)
  Aug 28 00:14:20.156: INFO: (16) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 42.836496ms)
  Aug 28 00:14:20.158: INFO: (16) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 45.059269ms)
  Aug 28 00:14:20.158: INFO: (16) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 46.083199ms)
  Aug 28 00:14:20.165: INFO: (16) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 52.347064ms)
  Aug 28 00:14:20.191: INFO: (17) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 23.797719ms)
  Aug 28 00:14:20.196: INFO: (17) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 30.124313ms)
  Aug 28 00:14:20.196: INFO: (17) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 30.765476ms)
  Aug 28 00:14:20.197: INFO: (17) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 30.104805ms)
  Aug 28 00:14:20.205: INFO: (17) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 38.313126ms)
  Aug 28 00:14:20.205: INFO: (17) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 39.727945ms)
  Aug 28 00:14:20.213: INFO: (17) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 46.70597ms)
  Aug 28 00:14:20.214: INFO: (17) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 48.021188ms)
  Aug 28 00:14:20.215: INFO: (17) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 48.767683ms)
  Aug 28 00:14:20.219: INFO: (17) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 52.017705ms)
  Aug 28 00:14:20.219: INFO: (17) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 51.87772ms)
  Aug 28 00:14:20.219: INFO: (17) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 52.562503ms)
  Aug 28 00:14:20.220: INFO: (17) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 53.827403ms)
  Aug 28 00:14:20.221: INFO: (17) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 54.492829ms)
  Aug 28 00:14:20.225: INFO: (17) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 58.763515ms)
  Aug 28 00:14:20.225: INFO: (17) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 58.511015ms)
  Aug 28 00:14:20.247: INFO: (18) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 21.68256ms)
  Aug 28 00:14:20.279: INFO: (18) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 52.445054ms)
  Aug 28 00:14:20.279: INFO: (18) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 53.464032ms)
  Aug 28 00:14:20.280: INFO: (18) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 54.232323ms)
  Aug 28 00:14:20.281: INFO: (18) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 54.777076ms)
  Aug 28 00:14:20.281: INFO: (18) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 54.973076ms)
  Aug 28 00:14:20.281: INFO: (18) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 55.495695ms)
  Aug 28 00:14:20.282: INFO: (18) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 55.934772ms)
  Aug 28 00:14:20.282: INFO: (18) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 56.249921ms)
  Aug 28 00:14:20.283: INFO: (18) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 57.130621ms)
  Aug 28 00:14:20.283: INFO: (18) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 57.635098ms)
  Aug 28 00:14:20.284: INFO: (18) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 57.841917ms)
  Aug 28 00:14:20.284: INFO: (18) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 58.057631ms)
  Aug 28 00:14:20.284: INFO: (18) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 58.32078ms)
  Aug 28 00:14:20.285: INFO: (18) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 58.870204ms)
  Aug 28 00:14:20.285: INFO: (18) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 58.926565ms)
  Aug 28 00:14:20.299: INFO: (19) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:462/proxy/: tls qux (200; 12.943206ms)
  Aug 28 00:14:20.302: INFO: (19) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 14.86237ms)
  Aug 28 00:14:20.302: INFO: (19) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:443/proxy/tlsrewritem... (200; 16.319508ms)
  Aug 28 00:14:20.302: INFO: (19) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 16.043928ms)
  Aug 28 00:14:20.302: INFO: (19) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c/proxy/rewriteme">test</a> (200; 15.504959ms)
  Aug 28 00:14:20.303: INFO: (19) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">... (200; 15.737592ms)
  Aug 28 00:14:20.307: INFO: (19) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:162/proxy/: bar (200; 21.895012ms)
  Aug 28 00:14:20.312: INFO: (19) /api/v1/namespaces/proxy-4801/pods/https:proxy-service-sdzqg-2v79c:460/proxy/: tls baz (200; 24.130252ms)
  Aug 28 00:14:20.312: INFO: (19) /api/v1/namespaces/proxy-4801/pods/http:proxy-service-sdzqg-2v79c:160/proxy/: foo (200; 25.73399ms)
  Aug 28 00:14:20.312: INFO: (19) /api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/: <a href="/api/v1/namespaces/proxy-4801/pods/proxy-service-sdzqg-2v79c:1080/proxy/rewriteme">test<... (200; 26.120106ms)
  Aug 28 00:14:20.329: INFO: (19) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname2/proxy/: bar (200; 41.903165ms)
  Aug 28 00:14:20.329: INFO: (19) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname2/proxy/: bar (200; 43.153964ms)
  Aug 28 00:14:20.329: INFO: (19) /api/v1/namespaces/proxy-4801/services/http:proxy-service-sdzqg:portname1/proxy/: foo (200; 41.42183ms)
  Aug 28 00:14:20.333: INFO: (19) /api/v1/namespaces/proxy-4801/services/proxy-service-sdzqg:portname1/proxy/: foo (200; 45.512668ms)
  Aug 28 00:14:20.334: INFO: (19) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname2/proxy/: tls qux (200; 46.819687ms)
  Aug 28 00:14:20.334: INFO: (19) /api/v1/namespaces/proxy-4801/services/https:proxy-service-sdzqg:tlsportname1/proxy/: tls baz (200; 48.798188ms)
  STEP: deleting ReplicationController proxy-service-sdzqg in namespace proxy-4801, will wait for the garbage collector to delete the pods @ 08/28/24 00:14:20.335
  E0828 00:14:20.337148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:20.409: INFO: Deleting ReplicationController proxy-service-sdzqg took: 14.519087ms
  Aug 28 00:14:20.511: INFO: Terminating ReplicationController proxy-service-sdzqg pods took: 102.39718ms
  E0828 00:14:21.337590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:21.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4801" for this suite. @ 08/28/24 00:14:21.929
• [5.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 08/28/24 00:14:21.953
  Aug 28 00:14:21.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 00:14:21.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:14:21.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:14:22.02
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:14:22.03
  E0828 00:14:22.338722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:23.338779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:24.339643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:25.339822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:14:26.125
  Aug 28 00:14:26.134: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-c768116e-21a2-4054-b93a-2ecd2436a5d2 container client-container: <nil>
  STEP: delete the pod @ 08/28/24 00:14:26.172
  Aug 28 00:14:26.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3732" for this suite. @ 08/28/24 00:14:26.213
• [4.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 08/28/24 00:14:26.231
  Aug 28 00:14:26.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/28/24 00:14:26.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:14:26.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:14:26.281
  STEP: Creating pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717 @ 08/28/24 00:14:26.289
  E0828 00:14:26.340878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:27.341771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:28.343686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/28/24 00:14:28.367
  Aug 28 00:14:28.373: INFO: Initial restart count of pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b is 0
  Aug 28 00:14:28.379: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:29.344849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:30.345034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:30.388: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:31.345210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:32.345864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:32.400: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:33.346074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:34.346492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:34.408: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:35.346661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:36.347253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:36.418: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:37.347640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:38.347718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:38.447: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:39.348769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:40.349166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:40.460: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:41.349914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:42.350808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:42.473: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:43.351216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:44.351565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:44.480: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:45.351761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:46.352394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:46.496: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:47.352508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:48.354859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:48.511: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:49.355301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:50.356482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:50.528: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:51.356940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:52.357671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:52.540: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:53.357829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:54.358330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:54.548: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:55.358971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:56.359503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:56.568: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:57.359914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:14:58.360888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:14:58.586: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:14:59.360943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:00.362490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:00.602: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:01.362692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:02.363593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:02.628: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:03.363695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:04.363985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:04.636: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:05.364401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:06.364544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:06.650: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:07.365437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:08.366227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:08.670: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:09.366528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:10.366656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:10.680: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:11.366805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:12.367782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:12.690: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:13.367908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:14.369195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:14.700: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:15.369886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:16.370038      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:16.708: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:17.370136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:18.370332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:18.716: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:19.370478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:20.370726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:20.745: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:21.370910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:22.371815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:22.758: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:23.372571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:24.373395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:24.766: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:25.374281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:26.374806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:26.774: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:27.375591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:28.376096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:28.786: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:29.376922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:30.377513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:30.797: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:31.377757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:32.378501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:32.814: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:33.379231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:34.379567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:34.825: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:35.380484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:36.380731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:36.834: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:37.381730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:38.381922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:38.845: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:39.382084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:40.382385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:40.854: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:41.382708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:42.383649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:42.875: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:43.383839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:44.384700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:44.884: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:45.384941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:46.385120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:46.895: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:47.385416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:48.385514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:48.906: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:49.385899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:50.385806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:50.920: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:51.386330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:52.387523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:52.931: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:53.387661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:54.387815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:54.943: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:55.388834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:56.389158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:56.956: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:57.389443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:15:58.390076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:15:58.965: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:15:59.390218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:00.390354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:00.979: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:01.391491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:02.391686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:03.004: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:03.392792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:04.394525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:05.011: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:05.394691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:06.395454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:07.044: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:07.396160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:08.396262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:09.054: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:09.396801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:10.396929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:11.073: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:11.397756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:12.398648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:13.090: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:13.399691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:14.400741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:15.102: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:15.401184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:16.401847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:17.111: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:17.402349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:18.402873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:19.130: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:19.403603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:20.403915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:21.192: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:21.404584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:22.405402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:23.204: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:23.405628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:24.405839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:25.212: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:25.406590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:26.406670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:27.222: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:27.407098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:28.407397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:29.234: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:29.408433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:30.408763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:31.247: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:31.409363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:32.410324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:33.257: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:33.410409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:34.410758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:35.268: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:35.411687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:36.412114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:37.283: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:37.412938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:38.413876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:39.293: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:39.414186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:40.414588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:41.303: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:41.415660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:42.416761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:43.315: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:43.417468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:44.417901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:45.322: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:45.418397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:46.418821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:47.335: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:47.420024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:48.420242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:49.355: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:49.420271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:50.420733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:51.369: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:51.421405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:52.421627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:53.378: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:53.422521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:54.422475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:55.389: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:55.422859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:56.423230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:57.413: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:57.424181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:16:58.424719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:16:59.423: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:16:59.426480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:00.426717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:01.427473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:01.441: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:02.427680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:03.428189      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:03.455: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:04.428624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:05.429514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:05.466: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:06.429671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:07.430733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:07.479: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:08.430893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:09.431340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:09.511: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:10.431729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:11.433550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:11.523: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:12.434418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:13.434936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:13.532: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:14.438969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:15.439020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:15.541: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:16.439379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:17.440477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:17.555: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:18.440640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:19.440838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:19.570: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:20.441355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:21.441747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:21.583: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:22.442017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:23.442831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:23.592: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:24.443874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:25.444990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:25.602: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:26.445649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:27.446343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:27.615: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:28.446973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:29.447526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:29.630: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:30.448232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:31.448652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:31.640: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:32.449670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:33.450265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:33.648: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:34.450457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:35.451185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:35.666: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:36.451537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:37.452514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:37.682: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:38.452693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:39.452816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:39.690: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:40.453077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:41.453651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:41.699: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:42.454245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:43.454736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:43.709: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:44.454935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:45.456266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:45.719: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:46.456912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:47.457305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:47.729: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:48.458423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:49.458678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:49.760: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:50.458645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:51.458809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:51.774: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:52.459028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:53.459055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:53.782: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:54.459626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:55.460005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:55.799: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:56.460736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:57.461043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:57.811: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:17:58.461188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:17:59.461448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:17:59.821: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:00.462470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:01.463092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:01.836: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:02.463311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:03.463792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:03.847: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:04.464543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:05.464887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:05.865: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:06.465889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:07.466073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:07.876: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:08.466755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:09.467485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:09.886: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:10.467875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:11.468329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:11.898: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:12.469374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:13.469861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:13.911: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:14.470072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:15.470721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:15.923: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:16.470911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:17.471539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:17.931: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:18.471889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:19.472570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:19.942: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:20.472757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:21.479033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:21.965: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:22.479208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:23.479748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:23.976: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:24.479946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:25.480895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:25.986: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:26.481210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:27.481963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:27.996: INFO: Get pod test-grpc-4d5003be-f0ab-4ec3-85e3-c85661940d9b in namespace container-probe-4717
  E0828 00:18:28.483064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:29.483754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 08/28/24 00:18:29.997
  Aug 28 00:18:30.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4717" for this suite. @ 08/28/24 00:18:30.056
• [243.870 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 08/28/24 00:18:30.102
  Aug 28 00:18:30.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/28/24 00:18:30.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:18:30.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:18:30.175
  STEP: Creating a pod to test env composition @ 08/28/24 00:18:30.183
  E0828 00:18:30.484382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:31.484498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:32.485375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:33.485797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:18:34.224
  Aug 28 00:18:34.231: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-cab73c4b-dd9d-4cb5-b7b2-56af09ae5959 container dapi-container: <nil>
  STEP: delete the pod @ 08/28/24 00:18:34.27
  Aug 28 00:18:34.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8872" for this suite. @ 08/28/24 00:18:34.395
• [4.314 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 08/28/24 00:18:34.416
  Aug 28 00:18:34.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/28/24 00:18:34.418
  E0828 00:18:34.485878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:18:34.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:18:34.516
  E0828 00:18:35.485962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:36.486824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:37.486959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:38.488088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:39.488134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:40.488552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:41.488563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:42.489487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:43.489583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:44.489985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:45.490332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:46.491181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:47.492277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:48.492854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:49.493079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:50.493134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:51.493480      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:52.494147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:53.494358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:54.494600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:55.495600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:56.495966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:18:56.734: INFO: Container started at 2024-08-28 00:18:35 +0000 UTC, pod became ready at 2024-08-28 00:18:54 +0000 UTC
  Aug 28 00:18:56.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1371" for this suite. @ 08/28/24 00:18:56.746
• [22.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 08/28/24 00:18:56.768
  Aug 28 00:18:56.768: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:18:56.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:18:56.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:18:56.844
  STEP: Creating Pod @ 08/28/24 00:18:56.855
  E0828 00:18:57.496433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:18:58.496982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 08/28/24 00:18:58.9
  Aug 28 00:18:58.900: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7345 PodName:pod-sharedvolume-a2a01dc5-ddd0-47d8-a5d9-59b992a95e49 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:18:58.900: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:18:58.901: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:18:58.902: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-7345/pods/pod-sharedvolume-a2a01dc5-ddd0-47d8-a5d9-59b992a95e49/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Aug 28 00:18:59.075: INFO: Exec stderr: ""
  Aug 28 00:18:59.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7345" for this suite. @ 08/28/24 00:18:59.09
• [2.335 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 08/28/24 00:18:59.103
  Aug 28 00:18:59.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename namespaces @ 08/28/24 00:18:59.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:18:59.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:18:59.148
  STEP: Read namespace status @ 08/28/24 00:18:59.153
  Aug 28 00:18:59.167: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 08/28/24 00:18:59.167
  Aug 28 00:18:59.181: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 08/28/24 00:18:59.181
  Aug 28 00:18:59.202: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Aug 28 00:18:59.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5685" for this suite. @ 08/28/24 00:18:59.225
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 08/28/24 00:18:59.239
  Aug 28 00:18:59.239: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/28/24 00:18:59.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:18:59.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:18:59.301
  STEP: Creating two CSIDrivers @ 08/28/24 00:18:59.313
  STEP: Getting "inline-driver-cc4435d8-a499-4fa7-b3bb-82b9e51ef0d8" & "inline-driver-2fcd13a0-7b65-4f86-9cb7-75db91c4aeff" @ 08/28/24 00:18:59.385
  STEP: Patching the CSIDriver "inline-driver-2fcd13a0-7b65-4f86-9cb7-75db91c4aeff" @ 08/28/24 00:18:59.406
  STEP: Updating the CSIDriver "inline-driver-2fcd13a0-7b65-4f86-9cb7-75db91c4aeff" @ 08/28/24 00:18:59.425
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5561" @ 08/28/24 00:18:59.452
  STEP: Deleting CSIDriver "inline-driver-cc4435d8-a499-4fa7-b3bb-82b9e51ef0d8" @ 08/28/24 00:18:59.462
  STEP: Confirm deletion of CSIDriver "inline-driver-cc4435d8-a499-4fa7-b3bb-82b9e51ef0d8" @ 08/28/24 00:18:59.488
  E0828 00:18:59.497475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting CSIDriver "inline-driver-2fcd13a0-7b65-4f86-9cb7-75db91c4aeff" via DeleteCollection @ 08/28/24 00:18:59.498
  STEP: Confirm deletion of CSIDriver "inline-driver-2fcd13a0-7b65-4f86-9cb7-75db91c4aeff" @ 08/28/24 00:18:59.515
  Aug 28 00:18:59.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5561" for this suite. @ 08/28/24 00:18:59.529
• [0.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 08/28/24 00:18:59.552
  Aug 28 00:18:59.552: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename lease-test @ 08/28/24 00:18:59.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:18:59.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:18:59.626
  Aug 28 00:18:59.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6220" for this suite. @ 08/28/24 00:18:59.805
• [0.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 08/28/24 00:18:59.818
  Aug 28 00:18:59.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 00:18:59.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:18:59.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:18:59.868
  E0828 00:19:00.498077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:01.498982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:02.499733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:03.499856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:04.500046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:05.501167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:06.501771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:07.502056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:08.502212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:09.502601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:10.503835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:11.504250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:12.504862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:13.505988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:14.506150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:15.507090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:16.508051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/28/24 00:19:16.89
  E0828 00:19:17.508135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:18.508615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:19.509579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:20.509961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:21.510883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/28/24 00:19:21.9
  STEP: Ensuring resource quota status is calculated @ 08/28/24 00:19:21.918
  E0828 00:19:22.512081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:23.512362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 08/28/24 00:19:23.925
  STEP: Ensuring resource quota status captures configMap creation @ 08/28/24 00:19:23.955
  E0828 00:19:24.512978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:25.513891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 08/28/24 00:19:25.966
  STEP: Ensuring resource quota status released usage @ 08/28/24 00:19:25.988
  E0828 00:19:26.517997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:27.518441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:27.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2626" for this suite. @ 08/28/24 00:19:28.009
• [28.201 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 08/28/24 00:19:28.024
  Aug 28 00:19:28.025: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/28/24 00:19:28.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:19:28.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:19:28.118
  STEP: create the container to handle the HTTPGet hook request. @ 08/28/24 00:19:28.141
  E0828 00:19:28.518588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:29.518708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/28/24 00:19:30.196
  E0828 00:19:30.518853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:31.519186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 08/28/24 00:19:32.234
  E0828 00:19:32.520033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:33.520216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:34.520350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:35.521143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 08/28/24 00:19:36.283
  Aug 28 00:19:36.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8787" for this suite. @ 08/28/24 00:19:36.319
• [8.318 seconds]
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 08/28/24 00:19:36.343
  Aug 28 00:19:36.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:19:36.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:19:36.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:19:36.404
  STEP: fetching services @ 08/28/24 00:19:36.411
  Aug 28 00:19:36.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6044" for this suite. @ 08/28/24 00:19:36.431
• [0.113 seconds]
------------------------------
SSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 08/28/24 00:19:36.457
  Aug 28 00:19:36.457: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 08/28/24 00:19:36.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:19:36.517
  E0828 00:19:36.522117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:19:36.526
  STEP: Setting up the test @ 08/28/24 00:19:36.54
  STEP: Creating hostNetwork=false pod @ 08/28/24 00:19:36.54
  E0828 00:19:37.523004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:38.523558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:39.523777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:40.524457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 08/28/24 00:19:40.619
  E0828 00:19:41.524776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:42.525417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 08/28/24 00:19:42.68
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 08/28/24 00:19:42.68
  Aug 28 00:19:42.681: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:42.681: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:42.683: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:42.684: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 28 00:19:42.849: INFO: Exec stderr: ""
  Aug 28 00:19:42.849: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:42.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:42.851: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:42.852: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 28 00:19:43.047: INFO: Exec stderr: ""
  Aug 28 00:19:43.047: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:43.047: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:43.049: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:43.049: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 28 00:19:43.180: INFO: Exec stderr: ""
  Aug 28 00:19:43.180: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:43.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:43.181: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:43.181: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 28 00:19:43.389: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 08/28/24 00:19:43.389
  Aug 28 00:19:43.389: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:43.389: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:43.391: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:43.392: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0828 00:19:43.525385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:43.535: INFO: Exec stderr: ""
  Aug 28 00:19:43.535: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:43.535: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:43.536: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:43.536: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 28 00:19:43.690: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 08/28/24 00:19:43.69
  Aug 28 00:19:43.690: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:43.690: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:43.691: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:43.692: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 28 00:19:43.827: INFO: Exec stderr: ""
  Aug 28 00:19:43.828: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:43.828: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:43.829: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:43.829: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 28 00:19:43.970: INFO: Exec stderr: ""
  Aug 28 00:19:43.970: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:43.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:43.971: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:43.971: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 28 00:19:44.090: INFO: Exec stderr: ""
  Aug 28 00:19:44.090: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4883 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:19:44.091: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:19:44.093: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:19:44.093: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 28 00:19:44.192: INFO: Exec stderr: ""
  Aug 28 00:19:44.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4883" for this suite. @ 08/28/24 00:19:44.202
• [7.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 08/28/24 00:19:44.223
  Aug 28 00:19:44.223: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:19:44.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:19:44.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:19:44.259
  STEP: creating service multiprotocol-test in namespace services-2839 @ 08/28/24 00:19:44.266
  STEP: creating pod pod1 in namespace services-2839 @ 08/28/24 00:19:44.298
  STEP: Creating pod pod1 in namespace services-2839 @ 08/28/24 00:19:44.299
  E0828 00:19:44.526417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:45.526283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-2839 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 08/28/24 00:19:46.35
  Aug 28 00:19:46.376: INFO: successfully validated that service multiprotocol-test in namespace services-2839 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 08/28/24 00:19:46.377
  Aug 28 00:19:46.377: INFO: Creating new exec pod
  E0828 00:19:46.526372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:47.526490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:48.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80'
  E0828 00:19:48.527653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:48.759: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.27 80\nConnection to 10.233.13.27 80 port [tcp/http] succeeded!\n"
  Aug 28 00:19:48.759: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:19:48.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80'
  E0828 00:19:49.528473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:50.528871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:51.528922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:19:52.529490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:53.029: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.13.27 80\nConnection to 10.233.13.27 80 port [udp/*] succeeded!\n"
  Aug 28 00:19:53.029: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 08/28/24 00:19:53.03
  Aug 28 00:19:53.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80'
  Aug 28 00:19:53.384: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.27 80\nConnection to 10.233.13.27 80 port [tcp/http] succeeded!\n"
  Aug 28 00:19:53.384: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:19:53.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80'
  E0828 00:19:53.530500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:53.705: INFO: rc: 1
  Aug 28 00:19:53.705: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + nc -v -u -w 2 10.233.13.27 80
  + echo hostName
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0828 00:19:54.530645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:55.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80'
  E0828 00:19:55.531642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:55.857: INFO: rc: 1
  Aug 28 00:19:55.857: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.13.27 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0828 00:19:56.532096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:57.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80'
  E0828 00:19:57.533137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:57.766: INFO: rc: 1
  Aug 28 00:19:57.766: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.13.27 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0828 00:19:58.533998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:59.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80'
  E0828 00:19:59.534652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:19:59.743: INFO: rc: 1
  Aug 28 00:19:59.743: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.13.27 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 08/28/24 00:19:59.743
  Aug 28 00:19:59.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80'
  Aug 28 00:20:00.096: INFO: rc: 1
  Aug 28 00:20:00.096: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.13.27 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0828 00:20:00.534732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:01.535374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:01.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.13.27 80'
  E0828 00:20:02.536208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:03.536284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:04.536734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:05.537782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:06.138: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.13.27 80\nConnection to 10.233.13.27 80 port [udp/*] succeeded!\n"
  Aug 28 00:20:06.138: INFO: stdout: "pod1"
  Aug 28 00:20:06.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80'
  E0828 00:20:06.538641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:07.434: INFO: rc: 1
  Aug 28 00:20:07.434: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.13.27 80
  nc: connect to 10.233.13.27 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0828 00:20:07.539570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:08.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80'
  E0828 00:20:08.540402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:09.424: INFO: rc: 1
  Aug 28 00:20:09.424: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.13.27 80
  nc: connect to 10.233.13.27 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0828 00:20:09.541460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:10.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80'
  E0828 00:20:10.542226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:11.434: INFO: rc: 1
  Aug 28 00:20:11.434: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.13.27 80
  nc: connect to 10.233.13.27 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0828 00:20:11.542659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:12.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80'
  E0828 00:20:12.543671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:13.417: INFO: rc: 1
  Aug 28 00:20:13.417: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2839 exec execpodqg9z2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.27 80:
  Command stdout:

  stderr:
  + + echonc -v hostName -t
   -w 2 10.233.13.27 80
  nc: connect to 10.233.13.27 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Aug 28 00:20:13.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2839" for this suite. @ 08/28/24 00:20:13.429
• [29.243 seconds]
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 08/28/24 00:20:13.466
  Aug 28 00:20:13.466: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 00:20:13.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:13.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:13.534
  STEP: creating the pod @ 08/28/24 00:20:13.542
  STEP: submitting the pod to kubernetes @ 08/28/24 00:20:13.543
  E0828 00:20:13.543661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:14.543909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:15.544865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/28/24 00:20:15.596
  STEP: updating the pod @ 08/28/24 00:20:15.603
  Aug 28 00:20:16.143: INFO: Successfully updated pod "pod-update-915347e4-a33a-4fdb-96af-b91f08c7ab1d"
  STEP: verifying the updated pod is in kubernetes @ 08/28/24 00:20:16.153
  Aug 28 00:20:16.166: INFO: Pod update OK
  Aug 28 00:20:16.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9716" for this suite. @ 08/28/24 00:20:16.181
• [2.730 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 08/28/24 00:20:16.197
  Aug 28 00:20:16.197: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 00:20:16.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:16.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:16.24
  STEP: creating the pod @ 08/28/24 00:20:16.247
  STEP: submitting the pod to kubernetes @ 08/28/24 00:20:16.247
  STEP: verifying QOS class is set on the pod @ 08/28/24 00:20:16.264
  Aug 28 00:20:16.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8235" for this suite. @ 08/28/24 00:20:16.284
• [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 08/28/24 00:20:16.314
  Aug 28 00:20:16.314: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-runtime @ 08/28/24 00:20:16.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:16.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:16.373
  STEP: create the container @ 08/28/24 00:20:16.381
  W0828 00:20:16.407303      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 08/28/24 00:20:16.407
  E0828 00:20:16.545614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:17.546125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:18.546569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/28/24 00:20:19.459
  STEP: the container should be terminated @ 08/28/24 00:20:19.47
  STEP: the termination message should be set @ 08/28/24 00:20:19.47
  Aug 28 00:20:19.470: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/28/24 00:20:19.47
  Aug 28 00:20:19.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0828 00:20:19.547633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-runtime-1522" for this suite. @ 08/28/24 00:20:19.607
• [3.383 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 08/28/24 00:20:19.698
  Aug 28 00:20:19.698: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:20:19.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:19.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:19.775
  STEP: Creating projection with secret that has name projected-secret-test-54685579-a4d0-45fb-a553-50186031ecf3 @ 08/28/24 00:20:19.797
  STEP: Creating a pod to test consume secrets @ 08/28/24 00:20:19.829
  E0828 00:20:20.548051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:21.548351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:22.548765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:23.548442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:20:23.943
  Aug 28 00:20:23.952: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-3bd860a7-74a6-41d1-8a80-e8bbe19ea833 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/28/24 00:20:23.971
  Aug 28 00:20:24.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3102" for this suite. @ 08/28/24 00:20:24.05
• [4.369 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 08/28/24 00:20:24.069
  Aug 28 00:20:24.069: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:20:24.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:24.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:24.154
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/28/24 00:20:24.16
  E0828 00:20:24.549361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:25.549487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:26.549862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:27.550719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:20:28.22
  Aug 28 00:20:28.234: INFO: Trying to get logs from node env1-test-worker-2 pod pod-dba2ad86-58c8-4d55-af1b-9d1196ec4ad5 container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:20:28.251
  Aug 28 00:20:28.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6719" for this suite. @ 08/28/24 00:20:28.331
• [4.287 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 08/28/24 00:20:28.357
  Aug 28 00:20:28.357: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:20:28.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:28.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:28.409
  STEP: Creating projection with secret that has name projected-secret-test-127705b0-b29a-448b-a7a4-7dfecef2bee6 @ 08/28/24 00:20:28.419
  STEP: Creating a pod to test consume secrets @ 08/28/24 00:20:28.435
  E0828 00:20:28.551454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:29.552468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:30.552533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:31.552711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:20:32.511
  Aug 28 00:20:32.521: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-secrets-1773b6c1-51c6-48db-8032-62a07dd82b45 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/28/24 00:20:32.555
  E0828 00:20:32.556478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:32.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1957" for this suite. @ 08/28/24 00:20:32.644
• [4.325 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 08/28/24 00:20:32.689
  Aug 28 00:20:32.689: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/28/24 00:20:32.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:32.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:32.765
  STEP: create the container to handle the HTTPGet hook request. @ 08/28/24 00:20:32.8
  E0828 00:20:33.557299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:34.558057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/28/24 00:20:34.902
  E0828 00:20:35.558597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:36.559579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 08/28/24 00:20:36.945
  STEP: delete the pod with lifecycle hook @ 08/28/24 00:20:36.982
  E0828 00:20:37.559601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:38.559720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:39.560258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:40.560804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:41.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1121" for this suite. @ 08/28/24 00:20:41.049
• [8.380 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 08/28/24 00:20:41.07
  Aug 28 00:20:41.070: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/28/24 00:20:41.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:20:41.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:20:41.181
  STEP: Creating service test in namespace statefulset-4987 @ 08/28/24 00:20:41.195
  STEP: Creating a new StatefulSet @ 08/28/24 00:20:41.215
  Aug 28 00:20:41.262: INFO: Found 0 stateful pods, waiting for 3
  E0828 00:20:41.562141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:42.562345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:43.562519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:44.562614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:45.563884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:46.564092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:47.564372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:48.564524      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:49.564625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:50.564833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:51.258: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:20:51.258: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:20:51.258: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:20:51.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-4987 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0828 00:20:51.565079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:20:51.596: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 00:20:51.596: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 00:20:51.596: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0828 00:20:52.567689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:53.568088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:54.568555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:55.568807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:56.568988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:57.569137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:58.569545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:20:59.569878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:00.570190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:01.570583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/28/24 00:21:01.622
  Aug 28 00:21:01.661: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/28/24 00:21:01.661
  E0828 00:21:02.572373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:03.571746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:04.572047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:05.572637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:06.572807      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:07.572977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:08.575443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:09.575792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:10.576799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:11.576889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 08/28/24 00:21:11.678
  Aug 28 00:21:11.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-4987 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 28 00:21:11.936: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 28 00:21:11.936: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 00:21:11.936: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0828 00:21:12.577072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:13.577381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:14.577494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:15.577855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:16.577915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:17.579101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:18.579199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:19.579590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:20.579725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:21.580148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:21:21.987: INFO: Waiting for StatefulSet statefulset-4987/ss2 to complete update
  E0828 00:21:22.581179      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:23.581961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:24.582647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:25.583752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:26.583857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:27.584991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:28.585667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:29.586127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:30.586641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:31.587248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 08/28/24 00:21:31.985
  Aug 28 00:21:31.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-4987 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 28 00:21:32.356: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 00:21:32.356: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 00:21:32.356: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0828 00:21:32.588223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:33.588650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:34.589291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:35.590049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:36.590282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:37.592290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:38.593141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:39.592677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:40.593026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:41.593355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:21:42.462: INFO: Updating stateful set ss2
  E0828 00:21:42.593665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:43.594058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:44.594754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:45.595565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:46.595666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:47.595838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:48.596416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:49.597108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:50.597510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:51.598000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 08/28/24 00:21:52.491
  Aug 28 00:21:52.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-4987 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0828 00:21:52.600331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:21:52.873: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 28 00:21:52.873: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 00:21:52.873: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0828 00:21:53.600777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:54.601347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:55.602099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:56.602429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:57.602924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:58.603260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:21:59.603599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:00.603918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:01.604115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:02.604210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:02.959: INFO: Waiting for StatefulSet statefulset-4987/ss2 to complete update
  E0828 00:22:03.604575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:04.605011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:05.606069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:06.606275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:07.606600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:08.606730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:09.607269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:10.607775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:11.608104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:12.609006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:12.953: INFO: Deleting all statefulset in ns statefulset-4987
  Aug 28 00:22:12.969: INFO: Scaling statefulset ss2 to 0
  E0828 00:22:13.609130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:14.609451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:15.610585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:16.610902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:17.611679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:18.612168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:19.612715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:20.613327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:21.613651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:22.614890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:23.023: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 28 00:22:23.033: INFO: Deleting statefulset ss2
  Aug 28 00:22:23.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4987" for this suite. @ 08/28/24 00:22:23.112
• [102.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 08/28/24 00:22:23.14
  Aug 28 00:22:23.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svcaccounts @ 08/28/24 00:22:23.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:22:23.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:22:23.187
  STEP: Creating ServiceAccount "e2e-sa-9v6bz"  @ 08/28/24 00:22:23.195
  Aug 28 00:22:23.208: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9v6bz"  @ 08/28/24 00:22:23.208
  Aug 28 00:22:23.233: INFO: AutomountServiceAccountToken: true
  Aug 28 00:22:23.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9008" for this suite. @ 08/28/24 00:22:23.246
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 08/28/24 00:22:23.265
  Aug 28 00:22:23.265: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename gc @ 08/28/24 00:22:23.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:22:23.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:22:23.317
  STEP: create the rc @ 08/28/24 00:22:23.33
  W0828 00:22:23.344779      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0828 00:22:23.615213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:24.615665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:25.616132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:26.616162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:27.616948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/28/24 00:22:28.363
  STEP: wait for all pods to be garbage collected @ 08/28/24 00:22:28.388
  E0828 00:22:28.616962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:29.617441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:30.617709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:31.618029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:32.625655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/28/24 00:22:33.407
  E0828 00:22:33.625920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:33.626: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 28 00:22:33.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5438" for this suite. @ 08/28/24 00:22:33.639
• [10.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 08/28/24 00:22:33.671
  Aug 28 00:22:33.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename gc @ 08/28/24 00:22:33.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:22:33.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:22:33.737
  STEP: create the rc1 @ 08/28/24 00:22:33.766
  STEP: create the rc2 @ 08/28/24 00:22:33.783
  E0828 00:22:34.626833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:35.627470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:36.628455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:37.628690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:38.629117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:39.631688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 08/28/24 00:22:39.866
  E0828 00:22:40.632713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:41.633660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 08/28/24 00:22:41.94
  STEP: wait for the rc to be deleted @ 08/28/24 00:22:41.961
  E0828 00:22:42.634945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:43.640655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:44.641463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:45.642353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:46.644368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:47.261: INFO: 68 pods remaining
  Aug 28 00:22:47.261: INFO: 67 pods has nil DeletionTimestamp
  Aug 28 00:22:47.261: INFO: 
  E0828 00:22:47.645160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:48.645238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:49.645228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:50.646425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:51.651299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/28/24 00:22:51.999
  Aug 28 00:22:52.356: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 28 00:22:52.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-2pnpd" in namespace "gc-2067"
  Aug 28 00:22:52.383: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qs77" in namespace "gc-2067"
  Aug 28 00:22:52.419: INFO: Deleting pod "simpletest-rc-to-be-deleted-48pqn" in namespace "gc-2067"
  Aug 28 00:22:52.474: INFO: Deleting pod "simpletest-rc-to-be-deleted-4fdnz" in namespace "gc-2067"
  Aug 28 00:22:52.531: INFO: Deleting pod "simpletest-rc-to-be-deleted-4kkds" in namespace "gc-2067"
  Aug 28 00:22:52.576: INFO: Deleting pod "simpletest-rc-to-be-deleted-4trqp" in namespace "gc-2067"
  Aug 28 00:22:52.630: INFO: Deleting pod "simpletest-rc-to-be-deleted-5jqgz" in namespace "gc-2067"
  E0828 00:22:52.655988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:52.684: INFO: Deleting pod "simpletest-rc-to-be-deleted-5nfwr" in namespace "gc-2067"
  Aug 28 00:22:52.758: INFO: Deleting pod "simpletest-rc-to-be-deleted-62wnz" in namespace "gc-2067"
  Aug 28 00:22:52.907: INFO: Deleting pod "simpletest-rc-to-be-deleted-64kjs" in namespace "gc-2067"
  Aug 28 00:22:53.053: INFO: Deleting pod "simpletest-rc-to-be-deleted-65h7j" in namespace "gc-2067"
  Aug 28 00:22:53.174: INFO: Deleting pod "simpletest-rc-to-be-deleted-67bw9" in namespace "gc-2067"
  Aug 28 00:22:53.249: INFO: Deleting pod "simpletest-rc-to-be-deleted-6gnjw" in namespace "gc-2067"
  Aug 28 00:22:53.345: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lh9x" in namespace "gc-2067"
  Aug 28 00:22:53.551: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pdwq" in namespace "gc-2067"
  E0828 00:22:53.660370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:53.665: INFO: Deleting pod "simpletest-rc-to-be-deleted-7d2ns" in namespace "gc-2067"
  Aug 28 00:22:53.921: INFO: Deleting pod "simpletest-rc-to-be-deleted-7sc9b" in namespace "gc-2067"
  Aug 28 00:22:54.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-7xshj" in namespace "gc-2067"
  Aug 28 00:22:54.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-87tpm" in namespace "gc-2067"
  Aug 28 00:22:54.345: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dzjl" in namespace "gc-2067"
  Aug 28 00:22:54.455: INFO: Deleting pod "simpletest-rc-to-be-deleted-8gzhf" in namespace "gc-2067"
  Aug 28 00:22:54.581: INFO: Deleting pod "simpletest-rc-to-be-deleted-8pfh8" in namespace "gc-2067"
  Aug 28 00:22:54.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t6db" in namespace "gc-2067"
  E0828 00:22:54.660447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:54.760: INFO: Deleting pod "simpletest-rc-to-be-deleted-92nm5" in namespace "gc-2067"
  Aug 28 00:22:54.838: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jzxv" in namespace "gc-2067"
  Aug 28 00:22:55.003: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rkrt" in namespace "gc-2067"
  Aug 28 00:22:55.119: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tskq" in namespace "gc-2067"
  Aug 28 00:22:55.165: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wq2c" in namespace "gc-2067"
  Aug 28 00:22:55.263: INFO: Deleting pod "simpletest-rc-to-be-deleted-bnbpr" in namespace "gc-2067"
  Aug 28 00:22:55.324: INFO: Deleting pod "simpletest-rc-to-be-deleted-bnnmc" in namespace "gc-2067"
  Aug 28 00:22:55.424: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpb4b" in namespace "gc-2067"
  Aug 28 00:22:55.487: INFO: Deleting pod "simpletest-rc-to-be-deleted-bw5jl" in namespace "gc-2067"
  Aug 28 00:22:55.608: INFO: Deleting pod "simpletest-rc-to-be-deleted-cfdkd" in namespace "gc-2067"
  E0828 00:22:55.661124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:55.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpck8" in namespace "gc-2067"
  Aug 28 00:22:55.764: INFO: Deleting pod "simpletest-rc-to-be-deleted-d548f" in namespace "gc-2067"
  Aug 28 00:22:55.842: INFO: Deleting pod "simpletest-rc-to-be-deleted-dhvng" in namespace "gc-2067"
  Aug 28 00:22:55.922: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkr52" in namespace "gc-2067"
  Aug 28 00:22:56.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnh82" in namespace "gc-2067"
  Aug 28 00:22:56.090: INFO: Deleting pod "simpletest-rc-to-be-deleted-dr526" in namespace "gc-2067"
  Aug 28 00:22:56.174: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwlkr" in namespace "gc-2067"
  Aug 28 00:22:56.251: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4k5v" in namespace "gc-2067"
  Aug 28 00:22:56.355: INFO: Deleting pod "simpletest-rc-to-be-deleted-f7mzl" in namespace "gc-2067"
  Aug 28 00:22:56.439: INFO: Deleting pod "simpletest-rc-to-be-deleted-frt5k" in namespace "gc-2067"
  Aug 28 00:22:56.562: INFO: Deleting pod "simpletest-rc-to-be-deleted-fzj2s" in namespace "gc-2067"
  Aug 28 00:22:56.636: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4qc9" in namespace "gc-2067"
  E0828 00:22:56.674207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:22:56.749: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5jzz" in namespace "gc-2067"
  Aug 28 00:22:56.885: INFO: Deleting pod "simpletest-rc-to-be-deleted-gbjvk" in namespace "gc-2067"
  Aug 28 00:22:56.963: INFO: Deleting pod "simpletest-rc-to-be-deleted-gq9dq" in namespace "gc-2067"
  Aug 28 00:22:57.043: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtl2k" in namespace "gc-2067"
  Aug 28 00:22:57.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxkmj" in namespace "gc-2067"
  Aug 28 00:22:57.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2067" for this suite. @ 08/28/24 00:22:57.282
• [23.640 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 08/28/24 00:22:57.312
  Aug 28 00:22:57.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:22:57.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:22:57.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:22:57.442
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/28/24 00:22:57.456
  E0828 00:22:57.671136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:58.672305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:22:59.673292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:00.673441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:01.674182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:02.678613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:03.678706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:04.679264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:05.679552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:06.679668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:07.680298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:23:07.711
  Aug 28 00:23:07.721: INFO: Trying to get logs from node env1-test-worker-2 pod pod-00ac4041-3156-47e6-9033-0b13d2ef9cc8 container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:23:07.749
  Aug 28 00:23:07.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2197" for this suite. @ 08/28/24 00:23:07.807
• [10.520 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 08/28/24 00:23:07.832
  Aug 28 00:23:07.832: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/28/24 00:23:07.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:23:07.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:23:07.911
  STEP: fetching the /apis discovery document @ 08/28/24 00:23:07.918
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 08/28/24 00:23:07.924
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 08/28/24 00:23:07.924
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 08/28/24 00:23:07.925
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 08/28/24 00:23:07.928
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 08/28/24 00:23:07.928
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 08/28/24 00:23:07.93
  Aug 28 00:23:07.930: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7177" for this suite. @ 08/28/24 00:23:07.945
• [0.141 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 08/28/24 00:23:07.973
  Aug 28 00:23:07.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:23:07.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:23:08.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:23:08.033
  STEP: creating service in namespace services-9527 @ 08/28/24 00:23:08.041
  STEP: creating service affinity-clusterip in namespace services-9527 @ 08/28/24 00:23:08.041
  STEP: creating replication controller affinity-clusterip in namespace services-9527 @ 08/28/24 00:23:08.086
  I0828 00:23:08.140541      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9527, replica count: 3
  E0828 00:23:08.683028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:09.683263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:10.683605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:23:11.193326      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 28 00:23:11.228: INFO: Creating new exec pod
  E0828 00:23:11.684549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:12.693550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:13.691019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:14.690421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:15.691386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:23:16.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-9527 exec execpod-affinityscjw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Aug 28 00:23:16.630: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Aug 28 00:23:16.630: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:23:16.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-9527 exec execpod-affinityscjw2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.26.12 80'
  E0828 00:23:16.691549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:23:16.919: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.26.12 80\nConnection to 10.233.26.12 80 port [tcp/http] succeeded!\n"
  Aug 28 00:23:16.919: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:23:16.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-9527 exec execpod-affinityscjw2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.26.12:80/ ; done'
  Aug 28 00:23:17.310: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.26.12:80/\n"
  Aug 28 00:23:17.310: INFO: stdout: "\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8\naffinity-clusterip-dg2t8"
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Received response from host: affinity-clusterip-dg2t8
  Aug 28 00:23:17.310: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9527, will wait for the garbage collector to delete the pods @ 08/28/24 00:23:17.374
  Aug 28 00:23:17.469: INFO: Deleting ReplicationController affinity-clusterip took: 19.496753ms
  Aug 28 00:23:17.569: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.537774ms
  E0828 00:23:17.693520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:18.693577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:19.697664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:20.699823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:23:21.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9527" for this suite. @ 08/28/24 00:23:21.542
• [13.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 08/28/24 00:23:21.557
  Aug 28 00:23:21.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename security-context-test @ 08/28/24 00:23:21.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:23:21.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:23:21.606
  E0828 00:23:21.700302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:22.703606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:23.704697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:24.705691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:23:25.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8431" for this suite. @ 08/28/24 00:23:25.681
• [4.145 seconds]
------------------------------
SSSSSSSSS
------------------------------
  E0828 00:23:25.705977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 08/28/24 00:23:25.706
  Aug 28 00:23:25.706: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/28/24 00:23:25.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:23:25.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:23:25.765
  Aug 28 00:23:25.772: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:23:26.706333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:27.706306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:28.707281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:29.707944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:30.708423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:31.708999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:32.709530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:33.710163      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:34.710537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:35.711298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:36.711996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:37.712781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:38.714544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:39.713471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:40.714456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:41.715713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:42.715996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:43.717020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:44.717047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:45.717857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:46.718122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:47.718755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:48.718899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:49.719648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:50.720692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:51.721482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:52.722607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:53.723360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:54.724170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:55.725287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:56.726226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:57.726850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:58.727661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:23:59.728611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:00.729702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:01.730367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:02.730668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:03.731341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:04.731357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:05.732225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:06.732444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:07.732511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:08.733437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:09.733974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:10.734920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:11.735561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:12.736569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:13.737178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:14.737316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:15.737477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:16.737712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:17.738776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:18.739313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:19.740006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:20.740664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:21.740928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:22.741156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:23.741335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:24.741745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:25.741794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:26.742393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:27.743605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:28.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7757" for this suite. @ 08/28/24 00:24:28.031
• [62.351 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 08/28/24 00:24:28.058
  Aug 28 00:24:28.058: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubelet-test @ 08/28/24 00:24:28.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:24:28.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:24:28.123
  STEP: Waiting for pod completion @ 08/28/24 00:24:28.157
  E0828 00:24:28.743750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:29.743859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:30.744248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:31.744450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:32.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1829" for this suite. @ 08/28/24 00:24:32.211
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 08/28/24 00:24:32.225
  Aug 28 00:24:32.226: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename daemonsets @ 08/28/24 00:24:32.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:24:32.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:24:32.287
  Aug 28 00:24:32.357: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 08/28/24 00:24:32.373
  Aug 28 00:24:32.402: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:32.402: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 08/28/24 00:24:32.402
  Aug 28 00:24:32.485: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:32.485: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:24:32.745100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:33.484: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:33.484: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:24:33.746062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:34.485: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:34.486: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:24:34.747067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:35.496: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 28 00:24:35.496: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 08/28/24 00:24:35.506
  Aug 28 00:24:35.555: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 28 00:24:35.555: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0828 00:24:35.747658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:36.545: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:36.546: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 08/28/24 00:24:36.546
  Aug 28 00:24:36.570: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:36.570: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:24:36.748201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:37.576: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:37.577: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:24:37.749158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:38.570: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:38.570: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:24:38.749322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:39.569: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:39.569: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:24:39.750470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:40.572: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 28 00:24:40.572: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/28/24 00:24:40.593
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-950, will wait for the garbage collector to delete the pods @ 08/28/24 00:24:40.593
  Aug 28 00:24:40.665: INFO: Deleting DaemonSet.extensions daemon-set took: 15.22593ms
  E0828 00:24:40.751399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:40.766: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.053565ms
  E0828 00:24:41.752093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:42.752431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:42.983: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:24:42.983: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 28 00:24:42.996: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38923143"},"items":null}

  Aug 28 00:24:43.006: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38923143"},"items":null}

  Aug 28 00:24:43.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-950" for this suite. @ 08/28/24 00:24:43.119
• [10.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 08/28/24 00:24:43.152
  Aug 28 00:24:43.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replication-controller @ 08/28/24 00:24:43.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:24:43.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:24:43.223
  STEP: Creating ReplicationController "e2e-rc-w4w9j" @ 08/28/24 00:24:43.23
  Aug 28 00:24:43.243: INFO: Get Replication Controller "e2e-rc-w4w9j" to confirm replicas
  E0828 00:24:43.753062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:44.245: INFO: Get Replication Controller "e2e-rc-w4w9j" to confirm replicas
  Aug 28 00:24:44.251: INFO: Found 1 replicas for "e2e-rc-w4w9j" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-w4w9j" @ 08/28/24 00:24:44.251
  STEP: Updating a scale subresource @ 08/28/24 00:24:44.256
  STEP: Verifying replicas where modified for replication controller "e2e-rc-w4w9j" @ 08/28/24 00:24:44.265
  Aug 28 00:24:44.265: INFO: Get Replication Controller "e2e-rc-w4w9j" to confirm replicas
  E0828 00:24:44.753419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:45.265: INFO: Get Replication Controller "e2e-rc-w4w9j" to confirm replicas
  Aug 28 00:24:45.272: INFO: Found 2 replicas for "e2e-rc-w4w9j" replication controller
  Aug 28 00:24:45.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2741" for this suite. @ 08/28/24 00:24:45.288
• [2.156 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 08/28/24 00:24:45.308
  Aug 28 00:24:45.308: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:24:45.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:24:45.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:24:45.353
  STEP: Setting up server cert @ 08/28/24 00:24:45.432
  E0828 00:24:45.754506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:24:46.414
  STEP: Deploying the webhook pod @ 08/28/24 00:24:46.479
  STEP: Wait for the deployment to be ready @ 08/28/24 00:24:46.51
  Aug 28 00:24:46.539: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:24:46.755281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:47.756947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:48.572: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 24, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 24, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 24, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 24, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:24:48.757788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:49.758344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:24:50.588
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:24:50.663
  E0828 00:24:50.764575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:51.665: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 08/28/24 00:24:51.683
  STEP: Creating a custom resource definition that should be denied by the webhook @ 08/28/24 00:24:51.72
  Aug 28 00:24:51.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:24:51.765642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:24:51.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9471" for this suite. @ 08/28/24 00:24:51.938
  STEP: Destroying namespace "webhook-markers-6800" for this suite. @ 08/28/24 00:24:51.956
• [6.668 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 08/28/24 00:24:51.984
  Aug 28 00:24:51.984: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:24:51.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:24:52.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:24:52.069
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/28/24 00:24:52.078
  E0828 00:24:52.766277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:53.766628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:54.766799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:55.766813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:24:56.136
  Aug 28 00:24:56.144: INFO: Trying to get logs from node env1-test-worker-2 pod pod-ffd93e08-d0fc-4d93-8f94-115bee1d378b container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:24:56.163
  Aug 28 00:24:56.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1722" for this suite. @ 08/28/24 00:24:56.214
• [4.244 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 08/28/24 00:24:56.227
  Aug 28 00:24:56.227: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:24:56.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:24:56.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:24:56.283
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/28/24 00:24:56.289
  E0828 00:24:56.767804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:57.768786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:58.769278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:24:59.770047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:25:00.351
  Aug 28 00:25:00.359: INFO: Trying to get logs from node env1-test-worker-2 pod pod-82d228aa-665e-4663-8320-99b2f3a495f9 container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:25:00.373
  Aug 28 00:25:00.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4430" for this suite. @ 08/28/24 00:25:00.46
• [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 08/28/24 00:25:00.487
  Aug 28 00:25:00.487: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename cronjob @ 08/28/24 00:25:00.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:25:00.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:25:00.552
  STEP: Creating a cronjob @ 08/28/24 00:25:00.559
  STEP: Ensuring more than one job is running at a time @ 08/28/24 00:25:00.574
  E0828 00:25:00.770937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:01.771162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:02.772191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:03.772825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:04.773113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:05.774028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:06.775102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:07.775728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:08.775948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:09.776113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:10.777265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:11.777681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:12.778137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:13.778769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:14.779634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:15.780639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:16.781459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:17.782028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:18.782621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:19.782989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:20.783821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:21.784119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:22.785221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:23.785739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:24.785963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:25.786238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:26.787025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:27.787610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:28.787694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:29.788002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:30.788216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:31.788850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:32.789892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:33.790791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:34.791689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:35.791982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:36.792274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:37.792640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:38.793566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:39.794058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:40.794973      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:41.795521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:42.795669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:43.796106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:44.796281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:45.796409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:46.796498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:47.796719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:48.796870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:49.797048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:50.797167      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:51.797319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:52.798532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:53.799240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:54.799581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:55.799690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:56.799917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:57.800979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:58.802069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:25:59.802170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:00.802383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:01.802531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:02.802611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:03.802842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:04.803551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:05.804261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:06.805223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:07.805458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:08.806489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:09.807142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:10.808076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:11.808919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:12.809368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:13.809778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:14.810052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:15.811140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:16.811390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:17.812485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:18.813072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:19.813212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:20.814028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:21.814604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:22.815577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:23.816050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:24.817056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:25.817270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:26.818140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:27.819664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:28.819971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:29.820787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:30.821088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:31.821871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:32.822821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:33.823112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:34.823873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:35.824857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:36.825865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:37.826530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:38.826787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:39.827235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:40.828034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:41.828818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:42.828798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:43.829349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:44.829250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:45.830564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:46.830878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:47.830834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:48.831050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:49.832071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:50.832337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:51.833130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:52.833455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:53.833579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:54.834613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:55.834768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:56.834798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:57.835696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:58.836712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:26:59.837470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 08/28/24 00:27:00.586
  STEP: Removing cronjob @ 08/28/24 00:27:00.595
  Aug 28 00:27:00.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3559" for this suite. @ 08/28/24 00:27:00.655
• [120.211 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 08/28/24 00:27:00.7
  Aug 28 00:27:00.700: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/28/24 00:27:00.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:27:00.833
  E0828 00:27:00.838412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:27:00.842
  STEP: creating Agnhost RC @ 08/28/24 00:27:00.848
  Aug 28 00:27:00.848: INFO: namespace kubectl-1748
  Aug 28 00:27:00.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1748 create -f -'
  Aug 28 00:27:01.101: INFO: stderr: ""
  Aug 28 00:27:01.101: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/28/24 00:27:01.101
  E0828 00:27:01.839255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:27:02.108: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 00:27:02.108: INFO: Found 0 / 1
  E0828 00:27:02.839381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:27:03.114: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 00:27:03.114: INFO: Found 1 / 1
  Aug 28 00:27:03.114: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 28 00:27:03.123: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 00:27:03.123: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 28 00:27:03.123: INFO: wait on agnhost-primary startup in kubectl-1748 
  Aug 28 00:27:03.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1748 logs agnhost-primary-t52fk agnhost-primary'
  Aug 28 00:27:03.308: INFO: stderr: ""
  Aug 28 00:27:03.308: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 08/28/24 00:27:03.308
  Aug 28 00:27:03.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1748 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Aug 28 00:27:03.511: INFO: stderr: ""
  Aug 28 00:27:03.511: INFO: stdout: "service/rm2 exposed\n"
  Aug 28 00:27:03.529: INFO: Service rm2 in namespace kubectl-1748 found.
  E0828 00:27:03.841244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:04.841559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 08/28/24 00:27:05.548
  Aug 28 00:27:05.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-1748 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Aug 28 00:27:05.726: INFO: stderr: ""
  Aug 28 00:27:05.726: INFO: stdout: "service/rm3 exposed\n"
  Aug 28 00:27:05.756: INFO: Service rm3 in namespace kubectl-1748 found.
  E0828 00:27:05.842341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:06.842534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:27:07.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1748" for this suite. @ 08/28/24 00:27:07.791
• [7.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 08/28/24 00:27:07.82
  Aug 28 00:27:07.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/28/24 00:27:07.822
  E0828 00:27:07.843711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:27:07.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:27:07.877
  E0828 00:27:08.844083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:09.844926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:10.845490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:11.846257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:12.846311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:13.846500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:14.846698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:15.846751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:16.847091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:17.847733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:18.848381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:19.852586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:20.852601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:21.853113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:22.853270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:23.853487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:24.853900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:25.853906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:26.854567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:27.854719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:28.854856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:29.855345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:30.856197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:31.857307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:32.857647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:33.858326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:34.858518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:35.859289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:36.859729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:37.860883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:38.861106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:39.861912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:40.862938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:41.863934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:42.864769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:43.865811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:44.866529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:45.867107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:46.867706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:47.868025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:48.869098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:49.869003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:50.869812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:51.871125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:52.871225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:53.871337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:54.872317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:55.873057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:56.873334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:57.874327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:58.875036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:27:59.876205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:00.877230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:01.878104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:02.878980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:03.879860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:04.880820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:05.881219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:06.881865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:07.882136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:28:07.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6034" for this suite. @ 08/28/24 00:28:07.927
• [60.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 08/28/24 00:28:07.952
  Aug 28 00:28:07.952: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-preemption @ 08/28/24 00:28:07.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:28:07.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:28:08.005
  Aug 28 00:28:08.044: INFO: Waiting up to 1m0s for all nodes to be ready
  E0828 00:28:08.882499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:09.882781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:10.882767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:11.883547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:12.884707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:13.885304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:14.885737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:15.886552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:16.887093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:17.887745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:18.888384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:19.888847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:20.889123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:21.890148      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:22.890366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:23.890919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:24.891960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:25.892866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:26.893144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:27.893650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:28.894375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:29.894633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:30.894704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:31.895779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:32.895693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:33.895892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:34.896091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:35.896653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:36.897248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:37.897643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:38.897824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:39.898096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:40.898459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:41.899224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:42.899369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:43.899656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:44.899913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:45.900005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:46.900900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:47.901543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:48.901801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:49.902062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:50.903187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:51.903953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:52.904253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:53.904815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:54.905736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:55.905867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:56.906068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:57.906899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:58.907106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:28:59.907592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:00.907703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:01.908472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:02.909100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:03.909236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:04.909537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:05.910626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:06.911340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:07.911884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:29:08.066: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/28/24 00:29:08.08
  Aug 28 00:29:08.080: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/28/24 00:29:08.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:08.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:08.149
  Aug 28 00:29:08.199: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Aug 28 00:29:08.210: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Aug 28 00:29:08.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4938" for this suite. @ 08/28/24 00:29:08.577
  Aug 28 00:29:08.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1163" for this suite. @ 08/28/24 00:29:08.614
• [60.684 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 08/28/24 00:29:08.646
  Aug 28 00:29:08.646: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 00:29:08.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:08.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:08.742
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:29:08.753
  E0828 00:29:08.912864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:09.912809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:10.913228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:11.914126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:29:12.838
  Aug 28 00:29:12.859: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-62719cd0-10b6-49a9-ba86-fd263bf944ca container client-container: <nil>
  E0828 00:29:12.915153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 08/28/24 00:29:12.975
  Aug 28 00:29:13.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9608" for this suite. @ 08/28/24 00:29:13.044
• [4.430 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 08/28/24 00:29:13.077
  Aug 28 00:29:13.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:29:13.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:13.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:13.143
  STEP: Setting up server cert @ 08/28/24 00:29:13.2
  E0828 00:29:13.916414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:29:14.681
  STEP: Deploying the webhook pod @ 08/28/24 00:29:14.71
  STEP: Wait for the deployment to be ready @ 08/28/24 00:29:14.767
  Aug 28 00:29:14.810: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:29:14.918053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:15.918573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:29:16.844: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 29, 14, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 29, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:29:16.919108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:17.919253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:29:18.865
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:29:18.898
  E0828 00:29:18.920343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:29:19.899: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 08/28/24 00:29:19.916
  E0828 00:29:19.921274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be updated by the webhook @ 08/28/24 00:29:19.948
  Aug 28 00:29:20.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2778" for this suite. @ 08/28/24 00:29:20.172
  STEP: Destroying namespace "webhook-markers-5052" for this suite. @ 08/28/24 00:29:20.22
• [7.157 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 08/28/24 00:29:20.234
  Aug 28 00:29:20.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svcaccounts @ 08/28/24 00:29:20.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:20.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:20.308
  STEP: Creating a pod to test service account token:  @ 08/28/24 00:29:20.317
  E0828 00:29:20.921621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:21.922375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:22.923199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:23.923970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:29:24.371
  Aug 28 00:29:24.382: INFO: Trying to get logs from node env1-test-worker-2 pod test-pod-06452cc6-290c-4a90-970c-4f86e15ec11c container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:29:24.396
  Aug 28 00:29:24.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-242" for this suite. @ 08/28/24 00:29:24.451
• [4.238 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 08/28/24 00:29:24.473
  Aug 28 00:29:24.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:29:24.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:24.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:24.561
  STEP: creating an Endpoint @ 08/28/24 00:29:24.577
  STEP: waiting for available Endpoint @ 08/28/24 00:29:24.586
  STEP: listing all Endpoints @ 08/28/24 00:29:24.59
  STEP: updating the Endpoint @ 08/28/24 00:29:24.596
  STEP: fetching the Endpoint @ 08/28/24 00:29:24.609
  STEP: patching the Endpoint @ 08/28/24 00:29:24.62
  STEP: fetching the Endpoint @ 08/28/24 00:29:24.631
  STEP: deleting the Endpoint by Collection @ 08/28/24 00:29:24.636
  STEP: waiting for Endpoint deletion @ 08/28/24 00:29:24.657
  STEP: fetching the Endpoint @ 08/28/24 00:29:24.661
  Aug 28 00:29:24.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6483" for this suite. @ 08/28/24 00:29:24.68
• [0.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 08/28/24 00:29:24.699
  Aug 28 00:29:24.700: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svcaccounts @ 08/28/24 00:29:24.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:24.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:24.806
  Aug 28 00:29:24.859: INFO: created pod pod-service-account-defaultsa
  Aug 28 00:29:24.859: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Aug 28 00:29:24.878: INFO: created pod pod-service-account-mountsa
  Aug 28 00:29:24.878: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Aug 28 00:29:24.912: INFO: created pod pod-service-account-nomountsa
  Aug 28 00:29:24.913: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  E0828 00:29:24.925076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:29:24.944: INFO: created pod pod-service-account-defaultsa-mountspec
  Aug 28 00:29:24.945: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Aug 28 00:29:24.969: INFO: created pod pod-service-account-mountsa-mountspec
  Aug 28 00:29:24.970: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Aug 28 00:29:25.026: INFO: created pod pod-service-account-nomountsa-mountspec
  Aug 28 00:29:25.026: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Aug 28 00:29:25.052: INFO: created pod pod-service-account-defaultsa-nomountspec
  Aug 28 00:29:25.052: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Aug 28 00:29:25.067: INFO: created pod pod-service-account-mountsa-nomountspec
  Aug 28 00:29:25.067: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Aug 28 00:29:25.091: INFO: created pod pod-service-account-nomountsa-nomountspec
  Aug 28 00:29:25.091: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Aug 28 00:29:25.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9312" for this suite. @ 08/28/24 00:29:25.127
• [0.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 08/28/24 00:29:25.186
  Aug 28 00:29:25.186: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:29:25.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:25.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:25.298
  STEP: Creating configMap with name projected-configmap-test-volume-map-44b8b095-cc7d-44c4-96fd-49768009bd0e @ 08/28/24 00:29:25.316
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:29:25.342
  E0828 00:29:25.925930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:26.926195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:27.926704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:28.926823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:29.927018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:30.927926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:29:31.488
  Aug 28 00:29:31.516: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-df4e8478-c662-45b1-9b50-c57a5dfc74f1 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:29:31.531
  Aug 28 00:29:31.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7355" for this suite. @ 08/28/24 00:29:31.587
• [6.431 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 08/28/24 00:29:31.617
  Aug 28 00:29:31.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svcaccounts @ 08/28/24 00:29:31.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:31.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:31.698
  E0828 00:29:31.927950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:32.928617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:33.929363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:34.929705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 08/28/24 00:29:35.78
  Aug 28 00:29:35.781: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9504 pod-service-account-80618cd4-b873-4edb-b977-db361250542e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E0828 00:29:35.931327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 08/28/24 00:29:36.221
  Aug 28 00:29:36.221: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9504 pod-service-account-80618cd4-b873-4edb-b977-db361250542e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 08/28/24 00:29:36.514
  Aug 28 00:29:36.514: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9504 pod-service-account-80618cd4-b873-4edb-b977-db361250542e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Aug 28 00:29:36.767: INFO: Got root ca configmap in namespace "svcaccounts-9504"
  Aug 28 00:29:36.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9504" for this suite. @ 08/28/24 00:29:36.807
• [5.213 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 08/28/24 00:29:36.831
  Aug 28 00:29:36.831: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename init-container @ 08/28/24 00:29:36.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:36.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:36.881
  STEP: creating the pod @ 08/28/24 00:29:36.891
  Aug 28 00:29:36.892: INFO: PodSpec: initContainers in spec.initContainers
  E0828 00:29:36.931005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:37.931313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:38.931867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:39.931942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:40.931981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:29:41.158: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-994" for this suite. @ 08/28/24 00:29:41.171
• [4.358 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 08/28/24 00:29:41.195
  Aug 28 00:29:41.196: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/28/24 00:29:41.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:41.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:41.241
  Aug 28 00:29:41.246: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:29:41.933050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:42.933314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:43.934814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:44.934656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:45.935865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:29:46.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0828 00:29:46.936378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "custom-resource-definition-2931" for this suite. @ 08/28/24 00:29:46.94
• [5.780 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 08/28/24 00:29:46.975
  Aug 28 00:29:46.975: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pod-network-test @ 08/28/24 00:29:46.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:29:47.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:29:47.035
  STEP: Performing setup for networking test in namespace pod-network-test-9596 @ 08/28/24 00:29:47.055
  STEP: creating a selector @ 08/28/24 00:29:47.055
  STEP: Creating the service pods in kubernetes @ 08/28/24 00:29:47.055
  Aug 28 00:29:47.055: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0828 00:29:47.937676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:48.938351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:49.938622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:50.939391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:51.940046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:52.941880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:53.941925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:54.942147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:55.942541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:56.943369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:57.943639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:58.943826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:29:59.944185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:00.946749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:01.947285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:02.947576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:03.947991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:04.948385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:05.948628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:06.949595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:07.949677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:08.950302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 08/28/24 00:30:09.511
  E0828 00:30:09.951507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:10.951988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:30:11.566: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 28 00:30:11.566: INFO: Breadth first check of 10.233.118.22 on host 10.61.1.200...
  Aug 28 00:30:11.573: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.76.136:9080/dial?request=hostname&protocol=http&host=10.233.118.22&port=8083&tries=1'] Namespace:pod-network-test-9596 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:30:11.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:30:11.574: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:30:11.574: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9596/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.76.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.118.22%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 28 00:30:11.696: INFO: Waiting for responses: map[]
  Aug 28 00:30:11.696: INFO: reached 10.233.118.22 after 0/1 tries
  Aug 28 00:30:11.696: INFO: Breadth first check of 10.233.87.110 on host 10.61.1.201...
  Aug 28 00:30:11.704: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.76.136:9080/dial?request=hostname&protocol=http&host=10.233.87.110&port=8083&tries=1'] Namespace:pod-network-test-9596 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:30:11.705: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:30:11.706: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:30:11.707: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9596/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.76.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.87.110%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 28 00:30:11.824: INFO: Waiting for responses: map[]
  Aug 28 00:30:11.824: INFO: reached 10.233.87.110 after 0/1 tries
  Aug 28 00:30:11.825: INFO: Breadth first check of 10.233.76.129 on host 10.61.1.202...
  Aug 28 00:30:11.833: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.76.136:9080/dial?request=hostname&protocol=http&host=10.233.76.129&port=8083&tries=1'] Namespace:pod-network-test-9596 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:30:11.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:30:11.834: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:30:11.834: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9596/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.76.136%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.76.129%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0828 00:30:11.952173      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:30:11.968: INFO: Waiting for responses: map[]
  Aug 28 00:30:11.968: INFO: reached 10.233.76.129 after 0/1 tries
  Aug 28 00:30:11.968: INFO: Going to retry 0 out of 3 pods....
  Aug 28 00:30:11.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9596" for this suite. @ 08/28/24 00:30:11.983
• [25.029 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 08/28/24 00:30:12.009
  Aug 28 00:30:12.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubelet-test @ 08/28/24 00:30:12.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:30:12.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:30:12.062
  Aug 28 00:30:12.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8677" for this suite. @ 08/28/24 00:30:12.184
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 08/28/24 00:30:12.207
  Aug 28 00:30:12.207: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replicaset @ 08/28/24 00:30:12.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:30:12.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:30:12.266
  STEP: Create a Replicaset @ 08/28/24 00:30:12.286
  STEP: Verify that the required pods have come up. @ 08/28/24 00:30:12.314
  Aug 28 00:30:12.328: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0828 00:30:12.953091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:13.953323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:14.953540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:15.956291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:16.957012      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:30:17.359: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/28/24 00:30:17.36
  STEP: Getting /status @ 08/28/24 00:30:17.36
  Aug 28 00:30:17.380: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 08/28/24 00:30:17.38
  Aug 28 00:30:17.435: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 08/28/24 00:30:17.435
  Aug 28 00:30:17.442: INFO: Observed &ReplicaSet event: ADDED
  Aug 28 00:30:17.443: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 28 00:30:17.443: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 28 00:30:17.443: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 28 00:30:17.443: INFO: Found replicaset test-rs in namespace replicaset-4585 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 28 00:30:17.443: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 08/28/24 00:30:17.443
  Aug 28 00:30:17.444: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 28 00:30:17.479: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 08/28/24 00:30:17.479
  Aug 28 00:30:17.483: INFO: Observed &ReplicaSet event: ADDED
  Aug 28 00:30:17.483: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 28 00:30:17.483: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 28 00:30:17.484: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 28 00:30:17.484: INFO: Observed replicaset test-rs in namespace replicaset-4585 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 28 00:30:17.485: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 28 00:30:17.485: INFO: Found replicaset test-rs in namespace replicaset-4585 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Aug 28 00:30:17.485: INFO: Replicaset test-rs has a patched status
  Aug 28 00:30:17.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4585" for this suite. @ 08/28/24 00:30:17.504
• [5.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 08/28/24 00:30:17.528
  Aug 28 00:30:17.528: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename runtimeclass @ 08/28/24 00:30:17.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:30:17.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:30:17.645
  E0828 00:30:17.957322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:18.957993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:30:19.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7388" for this suite. @ 08/28/24 00:30:19.878
• [2.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 08/28/24 00:30:19.903
  Aug 28 00:30:19.903: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 00:30:19.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:30:19.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:30:19.954
  E0828 00:30:19.958363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:30:19.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: creating the pod @ 08/28/24 00:30:19.964
  STEP: submitting the pod to kubernetes @ 08/28/24 00:30:19.964
  E0828 00:30:20.958512      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:21.958712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:30:22.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8563" for this suite. @ 08/28/24 00:30:22.108
• [2.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 08/28/24 00:30:22.132
  Aug 28 00:30:22.132: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/28/24 00:30:22.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:30:22.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:30:22.182
  STEP: Creating service test in namespace statefulset-4486 @ 08/28/24 00:30:22.186
  STEP: Creating a new StatefulSet @ 08/28/24 00:30:22.201
  Aug 28 00:30:22.248: INFO: Found 0 stateful pods, waiting for 3
  E0828 00:30:22.959558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:23.959773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:24.959945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:25.960747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:26.961269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:27.961891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:28.962325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:29.962687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:30.963069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:31.963366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:30:32.242: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:30:32.243: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:30:32.243: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/28/24 00:30:32.293
  Aug 28 00:30:32.338: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/28/24 00:30:32.338
  E0828 00:30:32.964188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:33.964137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:34.965373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:35.965492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:36.966553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:37.966700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:38.967222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:39.967607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:40.967948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:41.968886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 08/28/24 00:30:42.361
  STEP: Performing a canary update @ 08/28/24 00:30:42.361
  Aug 28 00:30:42.416: INFO: Updating stateful set ss2
  Aug 28 00:30:42.432: INFO: Waiting for Pod statefulset-4486/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0828 00:30:42.969910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:43.970330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:44.970367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:45.971185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:46.972214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:47.972870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:48.973294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:49.973728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:50.974113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:51.974931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 08/28/24 00:30:52.441
  Aug 28 00:30:52.602: INFO: Found 1 stateful pods, waiting for 3
  E0828 00:30:52.975535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:53.976210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:54.976513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:55.976719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:56.976987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:57.977042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:58.977453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:30:59.977725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:00.978355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:01.979641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:31:02.604: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:31:02.604: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:31:02.604: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 08/28/24 00:31:02.621
  Aug 28 00:31:02.684: INFO: Updating stateful set ss2
  Aug 28 00:31:02.717: INFO: Waiting for Pod statefulset-4486/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0828 00:31:02.980249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:03.980683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:04.981199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:05.981953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:06.982573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:07.982945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:08.983739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:09.983795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:10.984997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:11.985527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:31:12.765: INFO: Updating stateful set ss2
  Aug 28 00:31:12.796: INFO: Waiting for StatefulSet statefulset-4486/ss2 to complete update
  Aug 28 00:31:12.796: INFO: Waiting for Pod statefulset-4486/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0828 00:31:12.986043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:13.986547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:14.987274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:15.988568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:16.989494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:17.989827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:18.990808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:19.991498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:20.992103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:21.992805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:31:22.787: INFO: Deleting all statefulset in ns statefulset-4486
  Aug 28 00:31:22.798: INFO: Scaling statefulset ss2 to 0
  E0828 00:31:22.993667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:23.994272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:24.995665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:25.996372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:26.997094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:27.997420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:28.998159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:29.998869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:30.998999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:31.999136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:31:32.862: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 28 00:31:32.879: INFO: Deleting statefulset ss2
  Aug 28 00:31:32.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0828 00:31:33.000383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "statefulset-4486" for this suite. @ 08/28/24 00:31:33.012
• [70.927 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 08/28/24 00:31:33.059
  Aug 28 00:31:33.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:31:33.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:31:33.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:31:33.126
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/28/24 00:31:33.135
  E0828 00:31:34.000508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:35.000730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:36.001380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:37.002334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:31:37.198
  Aug 28 00:31:37.223: INFO: Trying to get logs from node env1-test-worker-2 pod pod-707a7034-27d2-4acd-9b47-15ac242ff040 container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:31:37.255
  Aug 28 00:31:37.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4628" for this suite. @ 08/28/24 00:31:37.329
• [4.308 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 08/28/24 00:31:37.367
  Aug 28 00:31:37.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename watch @ 08/28/24 00:31:37.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:31:37.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:31:37.427
  STEP: creating a watch on configmaps with a certain label @ 08/28/24 00:31:37.433
  STEP: creating a new configmap @ 08/28/24 00:31:37.436
  STEP: modifying the configmap once @ 08/28/24 00:31:37.45
  STEP: changing the label value of the configmap @ 08/28/24 00:31:37.483
  STEP: Expecting to observe a delete notification for the watched object @ 08/28/24 00:31:37.527
  Aug 28 00:31:37.527: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6251  e5d655d5-d9c6-45d1-b83f-542a7db738ea 38925996 0 2024-08-28 00:31:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-08-28 00:31:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 00:31:37.528: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6251  e5d655d5-d9c6-45d1-b83f-542a7db738ea 38925997 0 2024-08-28 00:31:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-08-28 00:31:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 00:31:37.529: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6251  e5d655d5-d9c6-45d1-b83f-542a7db738ea 38925999 0 2024-08-28 00:31:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-08-28 00:31:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 08/28/24 00:31:37.53
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 08/28/24 00:31:37.556
  E0828 00:31:38.003243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:39.003673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:40.003893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:41.004187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:42.005252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:43.005407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:44.005544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:45.005966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:46.006562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:47.007266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 08/28/24 00:31:47.559
  STEP: modifying the configmap a third time @ 08/28/24 00:31:47.586
  STEP: deleting the configmap @ 08/28/24 00:31:47.609
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 08/28/24 00:31:47.63
  Aug 28 00:31:47.630: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6251  e5d655d5-d9c6-45d1-b83f-542a7db738ea 38926104 0 2024-08-28 00:31:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-08-28 00:31:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 00:31:47.630: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6251  e5d655d5-d9c6-45d1-b83f-542a7db738ea 38926105 0 2024-08-28 00:31:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-08-28 00:31:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 00:31:47.631: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6251  e5d655d5-d9c6-45d1-b83f-542a7db738ea 38926106 0 2024-08-28 00:31:37 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-08-28 00:31:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 00:31:47.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6251" for this suite. @ 08/28/24 00:31:47.64
• [10.293 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 08/28/24 00:31:47.661
  Aug 28 00:31:47.661: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/28/24 00:31:47.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:31:47.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:31:47.736
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/28/24 00:31:47.747
  Aug 28 00:31:47.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5695 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Aug 28 00:31:47.932: INFO: stderr: ""
  Aug 28 00:31:47.932: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/28/24 00:31:47.932
  Aug 28 00:31:47.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5695 delete pods e2e-test-httpd-pod'
  E0828 00:31:48.008257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:49.009166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:31:49.856: INFO: stderr: ""
  Aug 28 00:31:49.856: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 28 00:31:49.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5695" for this suite. @ 08/28/24 00:31:49.873
• [2.235 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 08/28/24 00:31:49.896
  Aug 28 00:31:49.896: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename containers @ 08/28/24 00:31:49.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:31:49.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:31:49.94
  STEP: Creating a pod to test override all @ 08/28/24 00:31:49.944
  E0828 00:31:50.009714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:51.010846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:52.011794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:53.012129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:31:54.012
  E0828 00:31:54.012735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:31:54.020: INFO: Trying to get logs from node env1-test-worker-2 pod client-containers-5f6b27e6-b865-4dd0-8d0d-9fc1319c9cab container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:31:54.033
  Aug 28 00:31:54.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3450" for this suite. @ 08/28/24 00:31:54.139
• [4.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 08/28/24 00:31:54.174
  Aug 28 00:31:54.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-webhook @ 08/28/24 00:31:54.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:31:54.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:31:54.331
  STEP: Setting up server cert @ 08/28/24 00:31:54.342
  E0828 00:31:55.012933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/28/24 00:31:55.639
  STEP: Deploying the custom resource conversion webhook pod @ 08/28/24 00:31:55.666
  STEP: Wait for the deployment to be ready @ 08/28/24 00:31:55.712
  Aug 28 00:31:55.776: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0828 00:31:56.013591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:57.014252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:31:57.815: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 31, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 31, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 31, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 31, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:31:58.014447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:31:59.014962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:31:59.835
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:31:59.886
  E0828 00:32:00.015235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:32:00.887: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 28 00:32:00.902: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:32:01.015853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:02.017333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:03.017936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:04.018907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:05.020069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:06.020785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:07.021553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:08.021605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 08/28/24 00:32:08.589
  STEP: v2 custom resource should be converted @ 08/28/24 00:32:08.606
  E0828 00:32:09.021868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:32:09.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7302" for this suite. @ 08/28/24 00:32:09.372
• [15.235 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 08/28/24 00:32:09.412
  Aug 28 00:32:09.412: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/28/24 00:32:09.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:32:09.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:32:09.565
  STEP: Creating configMap with name configmap-test-volume-2030ffcc-72a5-42b6-ba5a-27f3c2e310f7 @ 08/28/24 00:32:09.58
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:32:09.593
  E0828 00:32:10.022025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:11.022716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:12.023262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:13.024496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:32:13.661
  Aug 28 00:32:13.668: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-345297d9-c82f-4b76-9964-12173df1a405 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:32:13.678
  Aug 28 00:32:13.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1666" for this suite. @ 08/28/24 00:32:13.717
• [4.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 08/28/24 00:32:13.737
  Aug 28 00:32:13.738: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename endpointslice @ 08/28/24 00:32:13.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:32:13.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:32:13.787
  E0828 00:32:14.024776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:15.024975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:16.025382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:17.025568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:18.025920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 08/28/24 00:32:18.987
  E0828 00:32:19.026641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:20.027511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:21.027955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:22.028891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:23.029575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 08/28/24 00:32:24.012
  E0828 00:32:24.029645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:25.030552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:26.030702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:27.031553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:28.035732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 08/28/24 00:32:29.03
  E0828 00:32:29.036422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:30.036782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:31.037072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:32.037715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:33.038479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:34.038612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 08/28/24 00:32:34.097
  Aug 28 00:32:34.184: INFO: EndpointSlice for Service endpointslice-9578/example-named-port not found
  E0828 00:32:35.038839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:36.038918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:37.039165      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:38.039373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:39.039958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:40.040887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:41.040765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:42.041515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:43.042036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:44.042048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:32:44.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9578" for this suite. @ 08/28/24 00:32:44.21
• [30.493 seconds]
------------------------------
SSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 08/28/24 00:32:44.231
  Aug 28 00:32:44.231: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename hostport @ 08/28/24 00:32:44.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:32:44.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:32:44.281
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 08/28/24 00:32:44.319
  E0828 00:32:45.042403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:46.043089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:47.043558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:48.045076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.61.1.201 on the node which pod1 resides and expect scheduled @ 08/28/24 00:32:48.378
  E0828 00:32:49.045705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:50.046242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:51.046333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:52.047376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.61.1.201 but use UDP protocol on the node which pod2 resides @ 08/28/24 00:32:52.42
  E0828 00:32:53.047772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:54.047681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:55.048612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:56.049377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:57.050451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:32:58.050907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 08/28/24 00:32:58.52
  Aug 28 00:32:58.520: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.61.1.201 http://127.0.0.1:54323/hostname] Namespace:hostport-6372 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:32:58.520: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:32:58.521: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:32:58.521: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6372/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.61.1.201+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.61.1.201, port: 54323 @ 08/28/24 00:32:58.754
  Aug 28 00:32:58.755: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.61.1.201:54323/hostname] Namespace:hostport-6372 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:32:58.755: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:32:58.756: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:32:58.756: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6372/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.61.1.201%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.61.1.201, port: 54323 UDP @ 08/28/24 00:32:58.869
  Aug 28 00:32:58.869: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.61.1.201 54323] Namespace:hostport-6372 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:32:58.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:32:58.870: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:32:58.870: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6372/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.61.1.201+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0828 00:32:59.051380      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:00.051788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:01.052452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:02.057408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:03.058251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:33:03.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6372" for this suite. @ 08/28/24 00:33:04
• [19.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 08/28/24 00:33:04.047
  Aug 28 00:33:04.048: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 00:33:04.05
  E0828 00:33:04.059041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:04.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:04.164
  STEP: Creating a pod to test downward api env vars @ 08/28/24 00:33:04.173
  E0828 00:33:05.059174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:06.059363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:07.060356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:08.061008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:33:08.247
  Aug 28 00:33:08.257: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-43964354-9309-4558-812c-1b687812eba4 container dapi-container: <nil>
  STEP: delete the pod @ 08/28/24 00:33:08.287
  Aug 28 00:33:08.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7201" for this suite. @ 08/28/24 00:33:08.361
• [4.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 08/28/24 00:33:08.39
  Aug 28 00:33:08.390: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/28/24 00:33:08.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:08.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:08.457
  STEP: Creating configMap configmap-4667/configmap-test-3dc4ad68-f8c3-4699-b50d-5440a839a4e4 @ 08/28/24 00:33:08.467
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:33:08.486
  E0828 00:33:09.061952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:10.062850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:11.064123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:12.064773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:33:12.563
  Aug 28 00:33:12.584: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-0f019d70-86cc-4ac4-a1b9-49c9e8c89ec4 container env-test: <nil>
  STEP: delete the pod @ 08/28/24 00:33:12.604
  Aug 28 00:33:12.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4667" for this suite. @ 08/28/24 00:33:12.696
• [4.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 08/28/24 00:33:12.723
  Aug 28 00:33:12.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:33:12.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:12.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:12.799
  STEP: Setting up server cert @ 08/28/24 00:33:12.855
  E0828 00:33:13.065487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:33:13.717
  STEP: Deploying the webhook pod @ 08/28/24 00:33:13.746
  STEP: Wait for the deployment to be ready @ 08/28/24 00:33:13.78
  Aug 28 00:33:13.818: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:33:14.066169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:15.066688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:33:15.847
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:33:15.88
  E0828 00:33:16.067783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:33:16.881: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/28/24 00:33:16.901
  E0828 00:33:17.068404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/28/24 00:33:17.957
  STEP: Creating a dummy validating-webhook-configuration object @ 08/28/24 00:33:17.992
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 08/28/24 00:33:18.015
  STEP: Creating a dummy mutating-webhook-configuration object @ 08/28/24 00:33:18.029
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 08/28/24 00:33:18.059
  E0828 00:33:18.069433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:33:18.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2226" for this suite. @ 08/28/24 00:33:18.404
  STEP: Destroying namespace "webhook-markers-5612" for this suite. @ 08/28/24 00:33:18.431
• [5.745 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 08/28/24 00:33:18.47
  Aug 28 00:33:18.470: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-pred @ 08/28/24 00:33:18.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:18.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:18.54
  Aug 28 00:33:18.560: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 28 00:33:18.588: INFO: Waiting for terminating namespaces to be deleted...
  Aug 28 00:33:18.612: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Aug 28 00:33:18.680: INFO: filebeat-filebeat-qqtqs from filebeat started at 2024-08-27 22:55:02 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.680: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 00:33:18.680: INFO: calico-node-qzlxw from kube-system started at 2024-07-22 15:38:47 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.681: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 00:33:18.681: INFO: kube-proxy-4cppk from kube-system started at 2024-08-27 16:27:32 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.681: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 00:33:18.681: INFO: metrics-server-6d9b44975-c6sns from kube-system started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.681: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 28 00:33:18.681: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-06-27 17:09:20 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.682: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 00:33:18.682: INFO: nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.682: INFO: 	Container node-cache ready: true, restart count 8
  Aug 28 00:33:18.682: INFO: vsphere-csi-node-nk49v from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 28 00:33:18.682: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 00:33:18.682: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 00:33:18.682: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 00:33:18.682: INFO: prometheus-kube-prometheus-operator-568f7ff5fd-jqcnd from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.682: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Aug 28 00:33:18.682: INFO: prometheus-prometheus-node-exporter-k7f6f from prometheus started at 2024-04-23 04:46:22 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.682: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 00:33:18.682: INFO: thanos-query-655b5549d7-vv7ft from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.682: INFO: 	Container query ready: true, restart count 0
  Aug 28 00:33:18.683: INFO: sonobuoy from sonobuoy started at 2024-08-27 23:07:34 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.683: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 28 00:33:18.683: INFO: sonobuoy-e2e-job-55c3907aea104346 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:33:18.683: INFO: 	Container e2e ready: true, restart count 0
  Aug 28 00:33:18.683: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:33:18.683: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-2l7x2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:33:18.684: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:33:18.684: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 28 00:33:18.684: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Aug 28 00:33:18.726: INFO: filebeat-filebeat-svps2 from filebeat started at 2024-08-27 22:55:03 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.726: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 00:33:18.726: INFO: calico-kube-controllers-5b566ffb7d-mmmcr from kube-system started at 2024-07-30 12:12:30 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.726: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Aug 28 00:33:18.726: INFO: calico-node-nwcrj from kube-system started at 2024-07-22 15:40:30 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.726: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 00:33:18.726: INFO: kube-proxy-ldkk8 from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.726: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 00:33:18.726: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-06-27 17:14:22 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.726: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 00:33:18.726: INFO: nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.727: INFO: 	Container node-cache ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: vsphere-csi-node-zkn6p from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 28 00:33:18.727: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-08-19 14:42:39 +0000 UTC (3 container statuses recorded)
  Aug 28 00:33:18.727: INFO: 	Container config-reloader ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: 	Container prometheus ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.727: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-s8jpj from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:33:18.727: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: velero-574996dd6-4drr8 from velero started at 2024-08-19 14:42:37 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.727: INFO: 	Container velero ready: true, restart count 0
  Aug 28 00:33:18.727: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  Aug 28 00:33:18.770: INFO: filebeat-filebeat-f2rmr from filebeat started at 2024-08-27 23:14:27 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: calico-node-8fvtb from kube-system started at 2024-07-22 15:39:38 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: kube-proxy-znnpk from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-06-27 17:20:01 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container node-cache ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: vsphere-csi-node-kqgqv from kube-system started at 2024-08-27 16:36:03 +0000 UTC (3 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: prometheus-kube-state-metrics-59b5d58f8f-pnzs9 from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: prometheus-prometheus-node-exporter-rj9dj from prometheus started at 2024-08-27 23:14:26 +0000 UTC (1 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-7kjt2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 00:33:18.771: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 00:33:18.771: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 08/28/24 00:33:18.771
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17efbd30a23e675a], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 6 Preemption is not helpful for scheduling.] @ 08/28/24 00:33:18.896
  E0828 00:33:19.070412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:33:19.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5134" for this suite. @ 08/28/24 00:33:19.917
• [1.471 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 08/28/24 00:33:19.941
  Aug 28 00:33:19.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubelet-test @ 08/28/24 00:33:19.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:19.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:19.982
  E0828 00:33:20.070903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:21.071184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:22.072157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:23.072441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:33:24.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0828 00:33:24.072607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubelet-test-7365" for this suite. @ 08/28/24 00:33:24.104
• [4.200 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 08/28/24 00:33:24.141
  Aug 28 00:33:24.141: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 00:33:24.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:24.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:24.198
  STEP: creating the pod @ 08/28/24 00:33:24.206
  STEP: setting up watch @ 08/28/24 00:33:24.206
  STEP: submitting the pod to kubernetes @ 08/28/24 00:33:24.319
  STEP: verifying the pod is in kubernetes @ 08/28/24 00:33:24.351
  STEP: verifying pod creation was observed @ 08/28/24 00:33:24.366
  E0828 00:33:25.073340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:26.073590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 08/28/24 00:33:26.42
  STEP: verifying pod deletion was observed @ 08/28/24 00:33:26.45
  E0828 00:33:27.074844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:28.075621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:29.075697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:33:29.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9359" for this suite. @ 08/28/24 00:33:29.352
• [5.229 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 08/28/24 00:33:29.375
  Aug 28 00:33:29.376: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename apf @ 08/28/24 00:33:29.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:29.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:29.459
  STEP: getting /apis @ 08/28/24 00:33:29.468
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 08/28/24 00:33:29.479
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 08/28/24 00:33:29.483
  STEP: creating @ 08/28/24 00:33:29.488
  STEP: getting @ 08/28/24 00:33:29.53
  STEP: listing @ 08/28/24 00:33:29.538
  STEP: watching @ 08/28/24 00:33:29.545
  Aug 28 00:33:29.545: INFO: starting watch
  STEP: patching @ 08/28/24 00:33:29.549
  STEP: updating @ 08/28/24 00:33:29.56
  Aug 28 00:33:29.589: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 08/28/24 00:33:29.59
  STEP: patching /status @ 08/28/24 00:33:29.602
  STEP: updating /status @ 08/28/24 00:33:29.63
  STEP: deleting @ 08/28/24 00:33:29.654
  STEP: deleting a collection @ 08/28/24 00:33:29.7
  Aug 28 00:33:29.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-484" for this suite. @ 08/28/24 00:33:29.765
• [0.423 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 08/28/24 00:33:29.799
  Aug 28 00:33:29.799: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 00:33:29.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:29.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:29.849
  STEP: Creating a ResourceQuota @ 08/28/24 00:33:29.858
  STEP: Getting a ResourceQuota @ 08/28/24 00:33:29.891
  STEP: Updating a ResourceQuota @ 08/28/24 00:33:29.898
  STEP: Verifying a ResourceQuota was modified @ 08/28/24 00:33:29.912
  STEP: Deleting a ResourceQuota @ 08/28/24 00:33:29.921
  STEP: Verifying the deleted ResourceQuota @ 08/28/24 00:33:29.934
  Aug 28 00:33:29.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-431" for this suite. @ 08/28/24 00:33:29.951
• [0.167 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 08/28/24 00:33:29.967
  Aug 28 00:33:29.967: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename ingress @ 08/28/24 00:33:29.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:30.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:30.037
  STEP: getting /apis @ 08/28/24 00:33:30.048
  STEP: getting /apis/networking.k8s.io @ 08/28/24 00:33:30.059
  STEP: getting /apis/networking.k8s.iov1 @ 08/28/24 00:33:30.062
  STEP: creating @ 08/28/24 00:33:30.064
  E0828 00:33:30.076082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 08/28/24 00:33:30.126
  STEP: listing @ 08/28/24 00:33:30.137
  STEP: watching @ 08/28/24 00:33:30.143
  Aug 28 00:33:30.144: INFO: starting watch
  STEP: cluster-wide listing @ 08/28/24 00:33:30.146
  STEP: cluster-wide watching @ 08/28/24 00:33:30.156
  Aug 28 00:33:30.156: INFO: starting watch
  STEP: patching @ 08/28/24 00:33:30.16
  STEP: updating @ 08/28/24 00:33:30.172
  Aug 28 00:33:30.193: INFO: waiting for watch events with expected annotations
  Aug 28 00:33:30.193: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/28/24 00:33:30.194
  STEP: updating /status @ 08/28/24 00:33:30.213
  STEP: get /status @ 08/28/24 00:33:30.238
  STEP: deleting @ 08/28/24 00:33:30.248
  STEP: deleting a collection @ 08/28/24 00:33:30.306
  Aug 28 00:33:30.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4289" for this suite. @ 08/28/24 00:33:30.377
• [0.432 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 08/28/24 00:33:30.401
  Aug 28 00:33:30.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename cronjob @ 08/28/24 00:33:30.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:33:30.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:33:30.464
  STEP: Creating a suspended cronjob @ 08/28/24 00:33:30.472
  STEP: Ensuring no jobs are scheduled @ 08/28/24 00:33:30.481
  E0828 00:33:31.076568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:32.077243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:33.077432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:34.077543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:35.077974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:36.078498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:37.081203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:38.081790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:39.082309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:40.082702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:41.083052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:42.084001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:43.084259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:44.084821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:45.084875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:46.085571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:47.086398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:48.086479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:49.086835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:50.087100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:51.087640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:52.087780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:53.087869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:54.088008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:55.088260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:56.089159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:57.090008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:58.090552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:33:59.090613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:00.091368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:01.091326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:02.091402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:03.091459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:04.091735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:05.092730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:06.093534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:07.093694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:08.094235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:09.095256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:10.095542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:11.096205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:12.096981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:13.098039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:14.098478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:15.098722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:16.098856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:17.099065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:18.099364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:19.099733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:20.100821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:21.101842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:22.102643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:23.103645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:24.103862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:25.104637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:26.105061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:27.105342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:28.106326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:29.107358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:30.107664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:31.107838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:32.108275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:33.109322      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:34.109407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:35.110513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:36.110844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:37.111310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:38.112191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:39.113372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:40.113604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:41.115768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:42.116794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:43.117155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:44.119591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:45.120429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:46.120628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:47.121406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:48.122009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:49.121895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:50.122197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:51.122890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:52.123596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:53.123759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:54.124500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:55.125018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:56.125168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:57.125717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:58.126259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:34:59.126967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:00.127571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:01.127853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:02.128703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:03.129630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:04.129756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:05.130691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:06.131102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:07.131653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:08.131645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:09.132151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:10.133142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:11.133641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:12.133646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:13.134126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:14.134475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:15.135515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:16.135878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:17.136222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:18.136989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:19.137932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:20.138027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:21.138770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:22.139683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:23.139871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:24.141000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:25.141337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:26.142078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:27.142998      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:28.144051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:29.143763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:30.144355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:31.144556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:32.145495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:33.145996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:34.146988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:35.147580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:36.148106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:37.148316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:38.149026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:39.149477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:40.149584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:41.150783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:42.151848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:43.152848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:44.153432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:45.153909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:46.154719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:47.155246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:48.156074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:49.156853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:50.157649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:51.157751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:52.158841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:53.159159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:54.159615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:55.160686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:56.160902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:57.161904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:58.162073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:35:59.162271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:00.162467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:01.162923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:02.163233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:03.163695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:04.165576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:05.166045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:06.166591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:07.166788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:08.167251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:09.167638      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:10.167712      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:11.167900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:12.168520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:13.168579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:14.168849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:15.168957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:16.169539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:17.170035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:18.170058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:19.170318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:20.170684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:21.170616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:22.171927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:23.172059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:24.172516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:25.173027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:26.173744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:27.174086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:28.174577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:29.175187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:30.176452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:31.176801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:32.177076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:33.178236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:34.178425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:35.179555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:36.180005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:37.180320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:38.180744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:39.181157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:40.182000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:41.182488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:42.183650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:43.184592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:44.185004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:45.185826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:46.186120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:47.187281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:48.188309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:49.188293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:50.189468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:51.189582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:52.190445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:53.190666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:54.191684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:55.191826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:56.191978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:57.192335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:58.193419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:36:59.193533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:00.193726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:01.195003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:02.195951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:03.196877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:04.197178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:05.198203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:06.198457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:07.198574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:08.198763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:09.198913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:10.199056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:11.199250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:12.200502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:13.200935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:14.201061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:15.201741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:16.202208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:17.203121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:18.203557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:19.203818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:20.204188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:21.204309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:22.204956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:23.205530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:24.206104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:25.206513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:26.207170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:27.207270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:28.207885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:29.209033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:30.209995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:31.210767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:32.211469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:33.212630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:34.213098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:35.213504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:36.213756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:37.214598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:38.215291      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:39.215935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:40.216067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:41.216338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:42.217222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:43.217702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:44.218118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:45.219097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:46.219618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:47.220214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:48.220857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:49.220960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:50.221299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:51.221459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:52.222297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:53.223365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:54.224498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:55.224681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:56.225306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:57.225381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:58.225744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:37:59.225936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:00.226290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:01.226860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:02.228056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:03.228355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:04.229340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:05.229948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:06.230720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:07.231697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:08.232069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:09.232366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:10.232613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:11.232811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:12.233694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:13.233862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:14.234077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:15.234685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:16.235525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:17.235759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:18.239950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:19.240114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:20.240961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:21.242044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:22.242747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:23.243526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:24.243884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:25.244911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:26.245320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:27.246425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:28.247654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:29.247670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:30.247856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 08/28/24 00:38:30.502
  STEP: Removing cronjob @ 08/28/24 00:38:30.51
  Aug 28 00:38:30.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9525" for this suite. @ 08/28/24 00:38:30.542
• [300.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 08/28/24 00:38:30.557
  Aug 28 00:38:30.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename job @ 08/28/24 00:38:30.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:38:30.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:38:30.704
  STEP: Creating Indexed job @ 08/28/24 00:38:30.722
  STEP: Ensuring job reaches completions @ 08/28/24 00:38:30.741
  E0828 00:38:31.249001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:32.249254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:33.249529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:34.250062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:35.251188      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:36.251679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:37.251834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:38.252134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:39.252172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:40.252374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 08/28/24 00:38:40.75
  Aug 28 00:38:40.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4859" for this suite. @ 08/28/24 00:38:40.77
• [10.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 08/28/24 00:38:40.818
  Aug 28 00:38:40.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/28/24 00:38:40.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:38:40.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:38:40.905
  Aug 28 00:38:41.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1941" for this suite. @ 08/28/24 00:38:41.057
• [0.255 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 08/28/24 00:38:41.076
  Aug 28 00:38:41.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/28/24 00:38:41.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:38:41.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:38:41.182
  Aug 28 00:38:41.192: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:38:41.252567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:42.253476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:43.254178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:44.254758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:45.254845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:46.255028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:47.256233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:48.256416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:49.256868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:38:49.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-221" for this suite. @ 08/28/24 00:38:49.49
• [8.444 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 08/28/24 00:38:49.522
  Aug 28 00:38:49.522: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/28/24 00:38:49.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:38:49.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:38:49.597
  STEP: Creating secret with name secret-test-1a79f449-3911-4318-94ea-cd09a1a1d1d9 @ 08/28/24 00:38:49.605
  STEP: Creating a pod to test consume secrets @ 08/28/24 00:38:49.625
  E0828 00:38:50.258360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:51.258857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:52.259191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:53.259590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:38:53.723
  Aug 28 00:38:53.732: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-b9f1761e-1469-46e3-ad80-f2976d337584 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/28/24 00:38:53.782
  Aug 28 00:38:53.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4879" for this suite. @ 08/28/24 00:38:53.849
• [4.356 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 08/28/24 00:38:53.879
  Aug 28 00:38:53.879: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:38:53.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:38:53.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:38:53.934
  STEP: Creating configMap with name projected-configmap-test-volume-map-23e15f07-9330-47a6-8bbb-dff0797d31e4 @ 08/28/24 00:38:53.94
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:38:53.95
  E0828 00:38:54.260156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:55.261107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:56.262245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:57.263166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:38:58.008
  Aug 28 00:38:58.014: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-b17a0724-5170-4321-823e-2f9ecef9381c container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:38:58.026
  Aug 28 00:38:58.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1601" for this suite. @ 08/28/24 00:38:58.107
• [4.240 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 08/28/24 00:38:58.119
  Aug 28 00:38:58.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:38:58.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:38:58.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:38:58.176
  STEP: creating service in namespace services-2562 @ 08/28/24 00:38:58.181
  STEP: creating service affinity-nodeport in namespace services-2562 @ 08/28/24 00:38:58.181
  STEP: creating replication controller affinity-nodeport in namespace services-2562 @ 08/28/24 00:38:58.202
  I0828 00:38:58.216303      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-2562, replica count: 3
  E0828 00:38:58.263891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:38:59.264050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:00.264960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:01.265213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:39:01.267817      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 28 00:39:01.299: INFO: Creating new exec pod
  E0828 00:39:02.265677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:03.266122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:04.266235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:04.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2562 exec execpod-affinityctph9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Aug 28 00:39:04.682: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Aug 28 00:39:04.682: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:39:04.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2562 exec execpod-affinityctph9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.40.80 80'
  Aug 28 00:39:04.914: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.40.80 80\nConnection to 10.233.40.80 80 port [tcp/http] succeeded!\n"
  Aug 28 00:39:04.914: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:39:04.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2562 exec execpod-affinityctph9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 30857'
  Aug 28 00:39:05.151: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 30857\nConnection to 10.61.1.200 30857 port [tcp/*] succeeded!\n"
  Aug 28 00:39:05.151: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:39:05.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2562 exec execpod-affinityctph9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.201 30857'
  E0828 00:39:05.266724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:05.421: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.201 30857\nConnection to 10.61.1.201 30857 port [tcp/*] succeeded!\n"
  Aug 28 00:39:05.421: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 28 00:39:05.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-2562 exec execpod-affinityctph9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:30857/ ; done'
  Aug 28 00:39:05.857: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30857/\n"
  Aug 28 00:39:05.857: INFO: stdout: "\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj\naffinity-nodeport-rdwvj"
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.857: INFO: Received response from host: affinity-nodeport-rdwvj
  Aug 28 00:39:05.858: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2562, will wait for the garbage collector to delete the pods @ 08/28/24 00:39:05.92
  Aug 28 00:39:06.030: INFO: Deleting ReplicationController affinity-nodeport took: 45.265712ms
  Aug 28 00:39:06.233: INFO: Terminating ReplicationController affinity-nodeport pods took: 203.210243ms
  E0828 00:39:06.267299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:07.268044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:08.268280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:09.268970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:09.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2562" for this suite. @ 08/28/24 00:39:09.806
• [11.704 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 08/28/24 00:39:09.826
  Aug 28 00:39:09.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename containers @ 08/28/24 00:39:09.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:39:09.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:39:09.884
  E0828 00:39:10.268816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:11.268843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:11.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5567" for this suite. @ 08/28/24 00:39:11.959
• [2.158 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 08/28/24 00:39:11.985
  Aug 28 00:39:11.985: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 00:39:11.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:39:12.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:39:12.034
  STEP: Creating a pod to test downward api env vars @ 08/28/24 00:39:12.043
  E0828 00:39:12.269831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:13.270135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:14.270600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:15.271728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:39:16.091
  Aug 28 00:39:16.111: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-3635bdcf-55c6-48fb-830d-f9a1bb583452 container dapi-container: <nil>
  STEP: delete the pod @ 08/28/24 00:39:16.156
  Aug 28 00:39:16.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3272" for this suite. @ 08/28/24 00:39:16.238
• [4.284 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 08/28/24 00:39:16.27
  Aug 28 00:39:16.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:39:16.272464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename dns @ 08/28/24 00:39:16.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:39:16.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:39:16.325
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/28/24 00:39:16.332
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/28/24 00:39:16.332
  STEP: creating a pod to probe DNS @ 08/28/24 00:39:16.332
  STEP: submitting the pod to kubernetes @ 08/28/24 00:39:16.332
  E0828 00:39:17.273211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:18.274269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:19.274416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:20.274763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/28/24 00:39:20.403
  STEP: looking for the results for each expected name from probers @ 08/28/24 00:39:20.413
  Aug 28 00:39:20.460: INFO: DNS probes using dns-4573/dns-test-f53c141a-ae2c-426c-af82-7196145deee9 succeeded

  STEP: deleting the pod @ 08/28/24 00:39:20.461
  Aug 28 00:39:20.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4573" for this suite. @ 08/28/24 00:39:20.513
• [4.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 08/28/24 00:39:20.549
  Aug 28 00:39:20.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/28/24 00:39:20.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:39:20.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:39:20.631
  STEP: creating a Deployment @ 08/28/24 00:39:20.654
  Aug 28 00:39:20.654: INFO: Creating simple deployment test-deployment-9czzp
  Aug 28 00:39:20.712: INFO: deployment "test-deployment-9czzp" doesn't have the required revision set
  E0828 00:39:21.274845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:22.275852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:22.749: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 39, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 39, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 39, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 39, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-9czzp-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:39:23.276015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:24.276468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 08/28/24 00:39:24.778
  Aug 28 00:39:24.791: INFO: Deployment test-deployment-9czzp has Conditions: [{Available True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9czzp-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 08/28/24 00:39:24.791
  Aug 28 00:39:24.822: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 39, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 39, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 39, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 39, 20, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-9czzp-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 08/28/24 00:39:24.822
  Aug 28 00:39:24.828: INFO: Observed &Deployment event: ADDED
  Aug 28 00:39:24.829: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9czzp-5d576bd769"}
  Aug 28 00:39:24.829: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.830: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9czzp-5d576bd769"}
  Aug 28 00:39:24.830: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 28 00:39:24.831: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.832: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 28 00:39:24.832: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9czzp-5d576bd769" is progressing.}
  Aug 28 00:39:24.833: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.833: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 28 00:39:24.834: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9czzp-5d576bd769" has successfully progressed.}
  Aug 28 00:39:24.834: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.835: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 28 00:39:24.836: INFO: Observed Deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9czzp-5d576bd769" has successfully progressed.}
  Aug 28 00:39:24.836: INFO: Found Deployment test-deployment-9czzp in namespace deployment-4962 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 28 00:39:24.836: INFO: Deployment test-deployment-9czzp has an updated status
  STEP: patching the Statefulset Status @ 08/28/24 00:39:24.837
  Aug 28 00:39:24.837: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 28 00:39:24.862: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 08/28/24 00:39:24.862
  Aug 28 00:39:24.869: INFO: Observed &Deployment event: ADDED
  Aug 28 00:39:24.869: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9czzp-5d576bd769"}
  Aug 28 00:39:24.869: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.869: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-9czzp-5d576bd769"}
  Aug 28 00:39:24.869: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 28 00:39:24.870: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.870: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 28 00:39:24.870: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:20 +0000 UTC 2024-08-28 00:39:20 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-9czzp-5d576bd769" is progressing.}
  Aug 28 00:39:24.870: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.870: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 28 00:39:24.870: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9czzp-5d576bd769" has successfully progressed.}
  Aug 28 00:39:24.870: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.870: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 28 00:39:24.870: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-08-28 00:39:22 +0000 UTC 2024-08-28 00:39:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-9czzp-5d576bd769" has successfully progressed.}
  Aug 28 00:39:24.870: INFO: Observed deployment test-deployment-9czzp in namespace deployment-4962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 28 00:39:24.871: INFO: Observed &Deployment event: MODIFIED
  Aug 28 00:39:24.871: INFO: Found deployment test-deployment-9czzp in namespace deployment-4962 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Aug 28 00:39:24.871: INFO: Deployment test-deployment-9czzp has a patched status
  Aug 28 00:39:24.881: INFO: Deployment "test-deployment-9czzp":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-9czzp",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4962",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47999777-830b-4217-b566-962355daec14",
      ResourceVersion: (string) (len=8) "38928835",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402360,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402360,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402364,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-9czzp-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 28 00:39:24.900: INFO: New ReplicaSet "test-deployment-9czzp-5d576bd769" of Deployment "test-deployment-9czzp":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-9czzp-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4962",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8836c55-1f14-47a9-8390-2d2b59554c52",
      ResourceVersion: (string) (len=8) "38928821",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402360,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-9czzp",
          UID: (types.UID) (len=36) "47999777-830b-4217-b566-962355daec14",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402360,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 34 37 39  |k:{\"uid\":\"479|
              00000120  39 39 37 37 37 2d 38 33  30 62 2d 34 32 31 37 2d  |99777-830b-4217-|
              00000130  62 35 36 36 2d 39 36 32  33 35 35 64 61 65 63 31  |b566-962355daec1|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 28 00:39:24.914: INFO: Pod "test-deployment-9czzp-5d576bd769-zxgtf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-9czzp-5d576bd769-zxgtf",
      GenerateName: (string) (len=33) "test-deployment-9czzp-5d576bd769-",
      Namespace: (string) (len=15) "deployment-4962",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdd38559-1022-4f28-bf57-d61e75d1c6e7",
      ResourceVersion: (string) (len=8) "38928820",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402360,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4a934cde027ac2b373b1fdf6de8236d43b84e3e6f19d019463e5183744953c0b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.186/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.186/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-9czzp-5d576bd769",
          UID: (types.UID) (len=36) "e8836c55-1f14-47a9-8390-2d2b59554c52",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402360,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 65 38 38 33 36 63 35  35 2d 31 66 31 34 2d 34  |"e8836c55-1f14-4|
              000000a0  37 61 39 2d 38 33 39 30  2d 32 64 32 62 35 39 35  |7a9-8390-2d2b595|
              000000b0  35 34 63 35 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |54c52\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 38 36 5c 22 7d 22 3a  |.233.76.186\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7wd84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7wd84",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402360,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402360,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.186",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.186"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402360,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860402361,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1ab22bf9d7c99bec01b4c81217d7b773f69cf67cdbe7e8a456952366f585fd72",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:39:24.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4962" for this suite. @ 08/28/24 00:39:24.937
• [4.401 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 08/28/24 00:39:24.953
  Aug 28 00:39:24.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replication-controller @ 08/28/24 00:39:24.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:39:25.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:39:25.013
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 08/28/24 00:39:25.02
  E0828 00:39:25.277130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:26.278083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 08/28/24 00:39:27.07
  STEP: Then the orphan pod is adopted @ 08/28/24 00:39:27.087
  E0828 00:39:27.278446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:28.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9424" for this suite. @ 08/28/24 00:39:28.128
• [3.202 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 08/28/24 00:39:28.157
  Aug 28 00:39:28.157: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-probe @ 08/28/24 00:39:28.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:39:28.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:39:28.204
  STEP: Creating pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323 @ 08/28/24 00:39:28.211
  E0828 00:39:28.279197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:29.281071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/28/24 00:39:30.242
  Aug 28 00:39:30.248: INFO: Initial restart count of pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 is 0
  Aug 28 00:39:30.254: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:30.281895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:31.282366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:32.261: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:32.285224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:33.284755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:34.269: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:34.285253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:35.285936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:36.281: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:36.286168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:37.286949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:38.287741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:38.289: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:39.288316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:40.288408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:40.305: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:41.289126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:42.290228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:42.320: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:43.290413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:44.290639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:44.332: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:45.290944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:46.291384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:46.343: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:47.291599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:48.291905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:48.356: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:49.292811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:50.293525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:50.399: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:51.294180      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:52.294682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:52.412: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:53.294971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:54.295182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:54.424: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:55.296824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:56.296911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:56.435: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:57.298061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:39:58.299276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:39:58.450: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:39:59.299355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:00.299676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:00.460: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:01.299903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:02.300139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:02.473: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:03.300456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:04.300721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:04.494: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:05.301245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:06.301436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:06.504: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:07.301580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:08.301738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:08.513: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:09.301971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:10.302486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:10.530: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:11.302618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:12.303847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:12.544: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:13.304007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:14.304375      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:14.558: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:15.305147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:16.305608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:16.565: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:17.305946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:18.306470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:18.577: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:19.306699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:20.306921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:20.592: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:21.307643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:22.307738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:22.606: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:23.307923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:24.308491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:24.615: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:25.308695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:26.308930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:26.623: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:27.309206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:28.309816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:28.644: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:29.310104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:30.311128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:30.685: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:31.312123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:32.313766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:32.698: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:33.313726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:34.313979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:34.716: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:35.314444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:36.314541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:36.726: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:37.314619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:38.315286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:38.735: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:39.315995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:40.316597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:40.746: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:41.316749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:42.317737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:42.757: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:43.318079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:44.318453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:44.765: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:45.318619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:46.319343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:46.779: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:47.319784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:48.320271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:48.798: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:49.320552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:50.320734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:50.809: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:51.321113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:52.321935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:52.841: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:53.322243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:54.322611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:54.857: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:55.323590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:56.324100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:56.869: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:57.324709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:40:58.324796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:40:58.879: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:40:59.326158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:00.326490      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:00.889: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:01.326577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:02.327484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:02.907: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:03.328151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:04.328681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:04.920: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:05.329809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:06.330779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:06.935: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:07.331041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:08.331235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:08.946: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:09.331192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:10.331730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:10.956: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:11.332697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:12.333757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:12.966: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:13.334739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:14.334985      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:14.978: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:15.335953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:16.336112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:16.987: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:17.336974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:18.339501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:19.004: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:19.338355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:20.339221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:21.021: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:21.340059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:22.341002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:23.038: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:23.341763      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:24.342246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:25.047: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:25.342618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:26.345315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:27.061: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:27.345464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:28.346059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:29.069: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:29.346502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:30.346494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:31.085: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:31.347469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:32.347560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:33.096: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:33.347784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:34.348875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:35.108: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:35.349748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:36.350557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:37.121: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:37.351505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:38.351635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:39.131: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:39.352028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:40.352169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:41.147: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:41.353195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:42.354175      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:43.155: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:43.354891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:44.356155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:45.168: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:45.356606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:46.356751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:47.183: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:47.357912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:48.358146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:49.191: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:49.359255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:50.359800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:51.202: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:51.360607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:52.361271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:53.211: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:53.361517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:54.362376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:55.227: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:55.362577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:56.362736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:57.243: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:57.362908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:41:58.363668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:41:59.253: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:41:59.363967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:00.364887      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:01.268: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:01.366080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:02.367131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:03.280: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:03.367839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:04.368506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:05.292: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:05.369509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:06.370705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:07.303: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:07.370702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:08.370858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:09.320: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:09.372181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:10.372830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:11.333: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:11.373161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:12.375982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:13.343: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:13.376479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:14.377065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:15.354: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:15.378204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:16.378694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:17.368: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:17.379220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:18.379662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:19.378: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:19.379683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:20.379848      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:21.379857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:21.387: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:22.380117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:23.380504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:23.400: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:24.380972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:25.382086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:25.414: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:26.382144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:27.382534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:27.423: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:28.382657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:29.384700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:29.433: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:30.383248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:31.383477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:31.448: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:32.384520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:33.384697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:33.479: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:34.385285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:35.393290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:35.506: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:36.385695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:37.385760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:37.523: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:38.386074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:39.386535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:39.546: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:40.387978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:41.390562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:41.560: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:42.387665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:43.390801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:43.575: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:44.388423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:45.388657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:45.586: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:46.388825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:47.394625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:47.604: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:48.391141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:49.391716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:49.654: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:50.392211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:51.393086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:51.670: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:52.393980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:53.394467      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:53.678: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:54.395540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:55.395949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:55.699: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:56.396891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:57.398032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:57.710: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:42:58.398366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:42:59.398579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:42:59.725: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:00.399653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:01.400404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:01.740: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:02.400518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:03.401021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:03.747: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:04.401703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:05.401851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:05.760: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:06.402802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:07.402454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:07.780: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:08.402748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:09.403218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:09.789: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:10.403661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:11.403626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:11.800: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:12.403754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:13.404202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:13.811: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:14.404412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:15.405034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:15.823: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:16.405403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:17.406364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:17.844: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:18.406452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:19.406914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:19.853: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:20.407726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:21.408105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:21.865: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:22.408958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:23.409279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:23.872: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:24.410198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:25.410978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:25.882: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:26.411965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:27.412341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:27.896: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:28.413225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:29.413236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:29.907: INFO: Get pod busybox-d62cc45b-6b52-4bc5-8ace-8e7adeee2cf5 in namespace container-probe-8323
  E0828 00:43:30.413647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:31.414116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 08/28/24 00:43:31.908
  Aug 28 00:43:31.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8323" for this suite. @ 08/28/24 00:43:31.981
• [243.846 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 08/28/24 00:43:32.003
  Aug 28 00:43:32.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 00:43:32.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:43:32.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:43:32.097
  STEP: creating the pod @ 08/28/24 00:43:32.106
  STEP: submitting the pod to kubernetes @ 08/28/24 00:43:32.106
  W0828 00:43:32.136181      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0828 00:43:32.414409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:33.415489      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 08/28/24 00:43:34.173
  STEP: updating the pod @ 08/28/24 00:43:34.182
  E0828 00:43:34.416498      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:34.712: INFO: Successfully updated pod "pod-update-activedeadlineseconds-1e53d082-ef84-4537-8f45-692d3ab3a9b6"
  E0828 00:43:35.417116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:36.417827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:37.418835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:38.419116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:43:38.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2289" for this suite. @ 08/28/24 00:43:38.774
• [6.799 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 08/28/24 00:43:38.814
  Aug 28 00:43:38.814: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename field-validation @ 08/28/24 00:43:38.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:43:38.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:43:38.852
  Aug 28 00:43:38.858: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  W0828 00:43:38.861599      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000d5c860 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0828 00:43:39.419867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:40.421055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:41.421692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:42.422071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:43.422275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:44.422435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:45.423301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:46.423813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0828 00:43:46.508669      19 warnings.go:70] unknown field "alpha"
  W0828 00:43:46.508727      19 warnings.go:70] unknown field "beta"
  W0828 00:43:46.508739      19 warnings.go:70] unknown field "delta"
  W0828 00:43:46.508749      19 warnings.go:70] unknown field "epsilon"
  W0828 00:43:46.508759      19 warnings.go:70] unknown field "gamma"
  Aug 28 00:43:47.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8601" for this suite. @ 08/28/24 00:43:47.152
• [8.350 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 08/28/24 00:43:47.166
  Aug 28 00:43:47.166: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 00:43:47.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:43:47.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:43:47.243
  STEP: Discovering how many secrets are in namespace by default @ 08/28/24 00:43:47.248
  E0828 00:43:47.424656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:48.425918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:49.426938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:50.428021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:51.428584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/28/24 00:43:52.262
  E0828 00:43:52.428664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:53.429751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:54.430646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:55.431331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:56.431845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/28/24 00:43:57.272
  STEP: Ensuring resource quota status is calculated @ 08/28/24 00:43:57.3
  E0828 00:43:57.432715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:43:58.433086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 08/28/24 00:43:59.315
  STEP: Ensuring resource quota status captures secret creation @ 08/28/24 00:43:59.359
  E0828 00:43:59.433439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:00.433422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 08/28/24 00:44:01.372
  STEP: Ensuring resource quota status released usage @ 08/28/24 00:44:01.399
  E0828 00:44:01.434083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:02.434647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:03.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6879" for this suite. @ 08/28/24 00:44:03.416
• [16.268 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 08/28/24 00:44:03.434
  Aug 28 00:44:03.434: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:44:03.434964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename podtemplate @ 08/28/24 00:44:03.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:44:03.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:44:03.478
  STEP: Create set of pod templates @ 08/28/24 00:44:03.489
  Aug 28 00:44:03.501: INFO: created test-podtemplate-1
  Aug 28 00:44:03.517: INFO: created test-podtemplate-2
  Aug 28 00:44:03.526: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 08/28/24 00:44:03.526
  STEP: delete collection of pod templates @ 08/28/24 00:44:03.544
  Aug 28 00:44:03.544: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 08/28/24 00:44:03.596
  Aug 28 00:44:03.596: INFO: requesting list of pod templates to confirm quantity
  Aug 28 00:44:03.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1351" for this suite. @ 08/28/24 00:44:03.62
• [0.204 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 08/28/24 00:44:03.638
  Aug 28 00:44:03.638: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:44:03.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:44:03.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:44:03.68
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/28/24 00:44:03.687
  E0828 00:44:04.435639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:05.436423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:06.436572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:07.436946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:44:07.754
  Aug 28 00:44:07.763: INFO: Trying to get logs from node env1-test-worker-2 pod pod-081ce09d-5735-4158-a0d9-0f4a08623894 container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:44:07.799
  Aug 28 00:44:07.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3796" for this suite. @ 08/28/24 00:44:07.86
• [4.253 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 08/28/24 00:44:07.893
  Aug 28 00:44:07.893: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/28/24 00:44:07.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:44:07.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:44:07.939
  STEP: Creating configMap with name configmap-test-volume-80f89825-260e-4e14-a7c8-1eb08ce01320 @ 08/28/24 00:44:07.944
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:44:07.952
  E0828 00:44:08.437868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:09.438060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:10.438509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:11.438946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:44:12.03
  Aug 28 00:44:12.038: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-618da408-afe1-42e8-a228-253b1b4572f2 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:44:12.051
  Aug 28 00:44:12.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7596" for this suite. @ 08/28/24 00:44:12.109
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 08/28/24 00:44:12.135
  Aug 28 00:44:12.135: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 00:44:12.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:44:12.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:44:12.177
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:44:12.181
  E0828 00:44:12.439545      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:13.440049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:14.440292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:15.441154      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:44:16.226
  Aug 28 00:44:16.235: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-1af4d02e-2ea4-4521-b705-683b32e0c1db container client-container: <nil>
  STEP: delete the pod @ 08/28/24 00:44:16.267
  Aug 28 00:44:16.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6705" for this suite. @ 08/28/24 00:44:16.344
• [4.230 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 08/28/24 00:44:16.367
  Aug 28 00:44:16.367: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename gc @ 08/28/24 00:44:16.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:44:16.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:44:16.426
  E0828 00:44:16.442199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the rc @ 08/28/24 00:44:16.452
  W0828 00:44:16.465911      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0828 00:44:17.443194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:18.443618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:19.447683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:20.448091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:21.448700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:22.449855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/28/24 00:44:22.511
  STEP: wait for the rc to be deleted @ 08/28/24 00:44:22.588
  E0828 00:44:23.450479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:23.738: INFO: 81 pods remaining
  Aug 28 00:44:23.738: INFO: 80 pods has nil DeletionTimestamp
  Aug 28 00:44:23.738: INFO: 
  E0828 00:44:24.451007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:24.922: INFO: 73 pods remaining
  Aug 28 00:44:24.922: INFO: 69 pods has nil DeletionTimestamp
  Aug 28 00:44:24.922: INFO: 
  E0828 00:44:25.451591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:25.723: INFO: 60 pods remaining
  Aug 28 00:44:25.723: INFO: 60 pods has nil DeletionTimestamp
  Aug 28 00:44:25.723: INFO: 
  E0828 00:44:26.452224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:26.751: INFO: 42 pods remaining
  Aug 28 00:44:26.751: INFO: 40 pods has nil DeletionTimestamp
  Aug 28 00:44:26.751: INFO: 
  E0828 00:44:27.452557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:27.740: INFO: 33 pods remaining
  Aug 28 00:44:27.741: INFO: 31 pods has nil DeletionTimestamp
  Aug 28 00:44:27.741: INFO: 
  E0828 00:44:28.453399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:28.796: INFO: 18 pods remaining
  Aug 28 00:44:28.796: INFO: 17 pods has nil DeletionTimestamp
  Aug 28 00:44:28.796: INFO: 
  E0828 00:44:29.454060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:29.739: INFO: 0 pods remaining
  Aug 28 00:44:29.739: INFO: 0 pods has nil DeletionTimestamp
  Aug 28 00:44:29.739: INFO: 
  E0828 00:44:30.454550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/28/24 00:44:30.693
  Aug 28 00:44:31.142: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 28 00:44:31.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9741" for this suite. @ 08/28/24 00:44:31.174
• [14.877 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 08/28/24 00:44:31.256
  Aug 28 00:44:31.256: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename dns @ 08/28/24 00:44:31.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:44:31.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:44:31.413
  STEP: Creating a test headless service @ 08/28/24 00:44:31.425
  E0828 00:44:31.455967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8545 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8545;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8545 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8545;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8545.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8545.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8545.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8545.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8545.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8545.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8545.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8545.svc;check="$$(dig +notcp +noall +answer +search 13.12.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.12.13_udp@PTR;check="$$(dig +tcp +noall +answer +search 13.12.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.12.13_tcp@PTR;sleep 1; done
   @ 08/28/24 00:44:31.582
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8545 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8545;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8545 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8545;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8545.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8545.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8545.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8545.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8545.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8545.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8545.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8545.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8545.svc;check="$$(dig +notcp +noall +answer +search 13.12.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.12.13_udp@PTR;check="$$(dig +tcp +noall +answer +search 13.12.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.12.13_tcp@PTR;sleep 1; done
   @ 08/28/24 00:44:31.583
  STEP: creating a pod to probe DNS @ 08/28/24 00:44:31.583
  STEP: submitting the pod to kubernetes @ 08/28/24 00:44:31.583
  E0828 00:44:32.458904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:33.459379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:34.460079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:35.461224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:36.461495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:37.463000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:38.463272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:39.463976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:40.465584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:41.466049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:42.470119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:43.468810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:44.468910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:45.472643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/28/24 00:44:45.804
  STEP: looking for the results for each expected name from probers @ 08/28/24 00:44:45.818
  Aug 28 00:44:45.840: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:45.862: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:45.880: INFO: Unable to read wheezy_udp@dns-test-service.dns-8545 from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:45.903: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8545 from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:45.926: INFO: Unable to read wheezy_udp@dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:45.951: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:45.980: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.020: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.214: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.249: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.266: INFO: Unable to read jessie_udp@dns-test-service.dns-8545 from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.290: INFO: Unable to read jessie_tcp@dns-test-service.dns-8545 from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.318: INFO: Unable to read jessie_udp@dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.344: INFO: Unable to read jessie_tcp@dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.363: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  Aug 28 00:44:46.388: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8545.svc from pod dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936: the server could not find the requested resource (get pods dns-test-f936f7f7-ec0d-426e-bd82-686880c37936)
  E0828 00:44:46.473523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:46.574: INFO: Lookups using dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8545 wheezy_tcp@dns-test-service.dns-8545 wheezy_udp@dns-test-service.dns-8545.svc wheezy_tcp@dns-test-service.dns-8545.svc wheezy_udp@_http._tcp.dns-test-service.dns-8545.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8545.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8545 jessie_tcp@dns-test-service.dns-8545 jessie_udp@dns-test-service.dns-8545.svc jessie_tcp@dns-test-service.dns-8545.svc jessie_udp@_http._tcp.dns-test-service.dns-8545.svc jessie_tcp@_http._tcp.dns-test-service.dns-8545.svc]

  Aug 28 00:44:46.613: INFO: Pod client logs for webserver: 
  Aug 28 00:44:46.692: INFO: Pod client logs for querier: 
  Aug 28 00:44:46.819: INFO: Pod client logs for jessie-querier: 
  E0828 00:44:47.475458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:48.474674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:49.475811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:50.476855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:44:51.190: INFO: DNS probes using dns-8545/dns-test-f936f7f7-ec0d-426e-bd82-686880c37936 succeeded

  STEP: deleting the pod @ 08/28/24 00:44:51.19
  STEP: deleting the test service @ 08/28/24 00:44:51.268
  STEP: deleting the test headless service @ 08/28/24 00:44:51.345
  Aug 28 00:44:51.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8545" for this suite. @ 08/28/24 00:44:51.436
• [20.211 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 08/28/24 00:44:51.468
  Aug 28 00:44:51.468: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pv @ 08/28/24 00:44:51.469
  E0828 00:44:51.477439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:44:51.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:44:51.571
  STEP: Creating initial PV and PVC @ 08/28/24 00:44:51.595
  Aug 28 00:44:51.598: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8121" @ 08/28/24 00:44:51.645
  STEP: Listing PVCs in namespace "pv-8121" @ 08/28/24 00:44:51.66
  STEP: Patching the PV "pv-8121-bjxkf" @ 08/28/24 00:44:51.676
  STEP: Patching the PVC "pvc-l5npt" @ 08/28/24 00:44:51.699
  STEP: Getting PV "pv-8121-bjxkf" @ 08/28/24 00:44:51.714
  STEP: Getting PVC "pvc-l5npt" @ 08/28/24 00:44:51.729
  STEP: Deleting PVC "pvc-l5npt" @ 08/28/24 00:44:51.745
  STEP: Confirm deletion of PVC "pvc-l5npt" @ 08/28/24 00:44:51.785
  E0828 00:44:52.478206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:53.478796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8121-bjxkf" @ 08/28/24 00:44:53.827
  STEP: Confirm deletion of PV "pv-8121-bjxkf" @ 08/28/24 00:44:53.885
  E0828 00:44:54.479140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:55.479466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 08/28/24 00:44:55.926
  Aug 28 00:44:55.926: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8121-2m8q8" @ 08/28/24 00:44:56.042
  STEP: Updating the PVC "pvc-2szf4" @ 08/28/24 00:44:56.202
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-2szf4=updated" @ 08/28/24 00:44:56.281
  STEP: Deleting PVC "pvc-2szf4" via DeleteCollection @ 08/28/24 00:44:56.288
  STEP: Confirm deletion of PVC "pvc-2szf4" @ 08/28/24 00:44:56.335
  E0828 00:44:56.479924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:57.480936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8121-2m8q8" via DeleteCollection @ 08/28/24 00:44:58.354
  STEP: Confirm deletion of PV "pv-8121-2m8q8" @ 08/28/24 00:44:58.378
  E0828 00:44:58.481047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:44:59.481684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:45:00.416: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Aug 28 00:45:00.416: INFO: Deleting PersistentVolumeClaim "pvc-2szf4"
  Aug 28 00:45:00.424: INFO: Deleting PersistentVolume "pv-8121-2m8q8"
  Aug 28 00:45:00.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8121" for this suite. @ 08/28/24 00:45:00.447
• [9.002 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 08/28/24 00:45:00.471
  Aug 28 00:45:00.471: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename subpath @ 08/28/24 00:45:00.473
  E0828 00:45:00.482332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:45:00.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:45:00.526
  STEP: Setting up data @ 08/28/24 00:45:00.538
  STEP: Creating pod pod-subpath-test-downwardapi-lrbq @ 08/28/24 00:45:00.572
  STEP: Creating a pod to test atomic-volume-subpath @ 08/28/24 00:45:00.58
  E0828 00:45:01.483008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:02.483630      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:03.484048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:04.484223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:05.484384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:06.484709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:07.484869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:08.484975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:09.485245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:10.485645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:11.486106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:12.487079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:13.488077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:14.488746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:15.488971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:16.489042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:17.489216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:18.490158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:19.490584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:20.490801      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:21.491227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:22.491873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:23.492802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:24.493737      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:45:24.768
  Aug 28 00:45:24.779: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-downwardapi-lrbq container test-container-subpath-downwardapi-lrbq: <nil>
  STEP: delete the pod @ 08/28/24 00:45:24.833
  STEP: Deleting pod pod-subpath-test-downwardapi-lrbq @ 08/28/24 00:45:24.872
  Aug 28 00:45:24.872: INFO: Deleting pod "pod-subpath-test-downwardapi-lrbq" in namespace "subpath-7391"
  Aug 28 00:45:24.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7391" for this suite. @ 08/28/24 00:45:24.893
• [24.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 08/28/24 00:45:24.921
  Aug 28 00:45:24.921: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:45:24.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:45:24.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:45:24.973
  STEP: Creating configMap with name projected-configmap-test-volume-06b125ce-6732-47f8-9ccd-ad474062dc03 @ 08/28/24 00:45:24.978
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:45:24.991
  E0828 00:45:25.494814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:26.495127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:27.496050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:28.497143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:45:29.039
  Aug 28 00:45:29.048: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-197936ad-4468-4ea6-9866-a7e839d0d534 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:45:29.072
  Aug 28 00:45:29.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8412" for this suite. @ 08/28/24 00:45:29.13
• [4.234 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 08/28/24 00:45:29.156
  Aug 28 00:45:29.157: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/28/24 00:45:29.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:45:29.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:45:29.209
  STEP: Creating secret with name secret-test-2d841ca2-9e10-4740-9e4e-783235ac0dcc @ 08/28/24 00:45:29.215
  STEP: Creating a pod to test consume secrets @ 08/28/24 00:45:29.231
  E0828 00:45:29.499698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:30.500251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:31.501578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:32.502955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:45:33.29
  Aug 28 00:45:33.297: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-13e11ec0-3446-4e0c-8be4-7f858396aca1 container secret-env-test: <nil>
  STEP: delete the pod @ 08/28/24 00:45:33.316
  Aug 28 00:45:33.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6196" for this suite. @ 08/28/24 00:45:33.391
• [4.262 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 08/28/24 00:45:33.429
  Aug 28 00:45:33.429: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/28/24 00:45:33.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:45:33.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:45:33.483
  STEP: creating the pod @ 08/28/24 00:45:33.489
  E0828 00:45:33.503884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for pod running @ 08/28/24 00:45:33.513
  E0828 00:45:34.504641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:35.505541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 08/28/24 00:45:35.54
  Aug 28 00:45:35.546: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1565 PodName:var-expansion-af89f3e0-9df7-4ad9-8766-c486f933d834 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:45:35.546: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:45:35.547: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:45:35.547: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1565/pods/var-expansion-af89f3e0-9df7-4ad9-8766-c486f933d834/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 08/28/24 00:45:35.683
  Aug 28 00:45:35.690: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1565 PodName:var-expansion-af89f3e0-9df7-4ad9-8766-c486f933d834 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:45:35.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:45:35.692: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:45:35.692: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1565/pods/var-expansion-af89f3e0-9df7-4ad9-8766-c486f933d834/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 08/28/24 00:45:35.799
  Aug 28 00:45:36.323: INFO: Successfully updated pod "var-expansion-af89f3e0-9df7-4ad9-8766-c486f933d834"
  STEP: waiting for annotated pod running @ 08/28/24 00:45:36.323
  STEP: deleting the pod gracefully @ 08/28/24 00:45:36.339
  Aug 28 00:45:36.339: INFO: Deleting pod "var-expansion-af89f3e0-9df7-4ad9-8766-c486f933d834" in namespace "var-expansion-1565"
  Aug 28 00:45:36.360: INFO: Wait up to 5m0s for pod "var-expansion-af89f3e0-9df7-4ad9-8766-c486f933d834" to be fully deleted
  E0828 00:45:36.505889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:37.506886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:38.507561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:39.508256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:40.509068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:41.509102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:42.509932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:43.510328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:44.510361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:45.511171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:46.511710      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:47.512994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:48.513450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:49.514745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:50.515257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:51.515055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:52.515668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:53.516386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:54.516518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:55.516859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:56.517774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:57.518059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:58.518660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:45:59.518892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:00.519140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:01.519851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:02.520147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:03.520243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:04.520578      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:05.520771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:06.520948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:07.522072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:08.524384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:09.524805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:10.525063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:10.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1565" for this suite. @ 08/28/24 00:46:10.637
• [37.245 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 08/28/24 00:46:10.675
  Aug 28 00:46:10.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-runtime @ 08/28/24 00:46:10.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:46:10.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:46:10.727
  STEP: create the container @ 08/28/24 00:46:10.733
  W0828 00:46:10.759697      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/28/24 00:46:10.759
  E0828 00:46:11.525346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:12.526869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:13.525654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/28/24 00:46:13.812
  STEP: the container should be terminated @ 08/28/24 00:46:13.82
  STEP: the termination message should be set @ 08/28/24 00:46:13.82
  Aug 28 00:46:13.820: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/28/24 00:46:13.821
  Aug 28 00:46:13.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-499" for this suite. @ 08/28/24 00:46:13.88
• [3.221 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 08/28/24 00:46:13.911
  Aug 28 00:46:13.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svc-latency @ 08/28/24 00:46:13.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:46:13.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:46:13.957
  Aug 28 00:46:13.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6865 @ 08/28/24 00:46:13.974
  I0828 00:46:13.994670      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6865, replica count: 1
  E0828 00:46:14.526789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:46:15.045624      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0828 00:46:15.527729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:46:16.046603      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 28 00:46:16.189: INFO: Created: latency-svc-2rc7w
  Aug 28 00:46:16.194: INFO: Got endpoints: latency-svc-2rc7w [46.979867ms]
  Aug 28 00:46:16.230: INFO: Created: latency-svc-6pdhc
  Aug 28 00:46:16.245: INFO: Got endpoints: latency-svc-6pdhc [50.095121ms]
  Aug 28 00:46:16.252: INFO: Created: latency-svc-wmhqw
  Aug 28 00:46:16.275: INFO: Created: latency-svc-6vlnx
  Aug 28 00:46:16.295: INFO: Created: latency-svc-qwk8h
  Aug 28 00:46:16.307: INFO: Got endpoints: latency-svc-wmhqw [112.072786ms]
  Aug 28 00:46:16.311: INFO: Got endpoints: latency-svc-6vlnx [116.460162ms]
  Aug 28 00:46:16.324: INFO: Got endpoints: latency-svc-qwk8h [129.209782ms]
  Aug 28 00:46:16.338: INFO: Created: latency-svc-99glh
  Aug 28 00:46:16.375: INFO: Got endpoints: latency-svc-99glh [179.193622ms]
  Aug 28 00:46:16.379: INFO: Created: latency-svc-nnv72
  Aug 28 00:46:16.401: INFO: Got endpoints: latency-svc-nnv72 [205.709294ms]
  Aug 28 00:46:16.401: INFO: Created: latency-svc-jb5jm
  Aug 28 00:46:16.450: INFO: Created: latency-svc-8g2jq
  Aug 28 00:46:16.454: INFO: Got endpoints: latency-svc-jb5jm [258.151153ms]
  Aug 28 00:46:16.471: INFO: Created: latency-svc-fthck
  Aug 28 00:46:16.488: INFO: Got endpoints: latency-svc-8g2jq [292.302182ms]
  Aug 28 00:46:16.503: INFO: Got endpoints: latency-svc-fthck [306.875891ms]
  Aug 28 00:46:16.511: INFO: Created: latency-svc-8vbsk
  E0828 00:46:16.528619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:16.530: INFO: Created: latency-svc-jvcnq
  Aug 28 00:46:16.553: INFO: Got endpoints: latency-svc-8vbsk [357.079957ms]
  Aug 28 00:46:16.592: INFO: Created: latency-svc-nqh5g
  Aug 28 00:46:16.608: INFO: Got endpoints: latency-svc-jvcnq [411.933595ms]
  Aug 28 00:46:16.624: INFO: Got endpoints: latency-svc-nqh5g [427.333281ms]
  Aug 28 00:46:16.638: INFO: Created: latency-svc-f4msl
  Aug 28 00:46:16.685: INFO: Got endpoints: latency-svc-f4msl [488.738208ms]
  Aug 28 00:46:16.734: INFO: Created: latency-svc-5nrq6
  Aug 28 00:46:16.759: INFO: Got endpoints: latency-svc-5nrq6 [562.656505ms]
  Aug 28 00:46:16.765: INFO: Created: latency-svc-n5cvf
  Aug 28 00:46:16.834: INFO: Got endpoints: latency-svc-n5cvf [638.18468ms]
  Aug 28 00:46:16.856: INFO: Created: latency-svc-zfkcz
  Aug 28 00:46:16.868: INFO: Got endpoints: latency-svc-zfkcz [622.491922ms]
  Aug 28 00:46:16.896: INFO: Created: latency-svc-pznrj
  Aug 28 00:46:16.933: INFO: Created: latency-svc-g46ll
  Aug 28 00:46:16.937: INFO: Got endpoints: latency-svc-pznrj [625.817436ms]
  Aug 28 00:46:16.974: INFO: Got endpoints: latency-svc-g46ll [666.350014ms]
  Aug 28 00:46:16.980: INFO: Created: latency-svc-jzj8b
  Aug 28 00:46:17.016: INFO: Got endpoints: latency-svc-jzj8b [692.602991ms]
  Aug 28 00:46:17.037: INFO: Created: latency-svc-njflv
  Aug 28 00:46:17.051: INFO: Got endpoints: latency-svc-njflv [673.252027ms]
  Aug 28 00:46:17.075: INFO: Created: latency-svc-8scff
  Aug 28 00:46:17.140: INFO: Created: latency-svc-z6rrz
  Aug 28 00:46:17.169: INFO: Got endpoints: latency-svc-8scff [768.152823ms]
  Aug 28 00:46:17.218: INFO: Created: latency-svc-94j8f
  Aug 28 00:46:17.233: INFO: Got endpoints: latency-svc-z6rrz [778.581892ms]
  Aug 28 00:46:17.285: INFO: Got endpoints: latency-svc-94j8f [796.232443ms]
  Aug 28 00:46:17.299: INFO: Created: latency-svc-4lzlg
  Aug 28 00:46:17.352: INFO: Created: latency-svc-smtcq
  Aug 28 00:46:17.400: INFO: Created: latency-svc-dmljq
  Aug 28 00:46:17.446: INFO: Created: latency-svc-64m2h
  Aug 28 00:46:17.463: INFO: Got endpoints: latency-svc-dmljq [854.246927ms]
  Aug 28 00:46:17.463: INFO: Got endpoints: latency-svc-4lzlg [959.999622ms]
  Aug 28 00:46:17.463: INFO: Got endpoints: latency-svc-smtcq [910.168731ms]
  Aug 28 00:46:17.501: INFO: Got endpoints: latency-svc-64m2h [877.011208ms]
  Aug 28 00:46:17.518: INFO: Created: latency-svc-n69z5
  E0828 00:46:17.529468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:17.579: INFO: Created: latency-svc-c2ktf
  Aug 28 00:46:17.581: INFO: Got endpoints: latency-svc-n69z5 [895.785477ms]
  Aug 28 00:46:17.599: INFO: Got endpoints: latency-svc-c2ktf [839.42387ms]
  Aug 28 00:46:17.612: INFO: Created: latency-svc-4x8zc
  Aug 28 00:46:17.654: INFO: Created: latency-svc-fdvpc
  Aug 28 00:46:17.672: INFO: Got endpoints: latency-svc-4x8zc [836.981301ms]
  Aug 28 00:46:17.686: INFO: Created: latency-svc-4c4xw
  Aug 28 00:46:17.704: INFO: Got endpoints: latency-svc-fdvpc [835.397388ms]
  Aug 28 00:46:17.762: INFO: Got endpoints: latency-svc-4c4xw [825.142698ms]
  Aug 28 00:46:17.764: INFO: Created: latency-svc-5qcjr
  Aug 28 00:46:17.822: INFO: Created: latency-svc-m6w55
  Aug 28 00:46:17.830: INFO: Got endpoints: latency-svc-5qcjr [855.60654ms]
  Aug 28 00:46:17.852: INFO: Got endpoints: latency-svc-m6w55 [836.015227ms]
  Aug 28 00:46:18.238: INFO: Created: latency-svc-2n2xg
  Aug 28 00:46:18.262: INFO: Created: latency-svc-p655s
  Aug 28 00:46:18.263: INFO: Created: latency-svc-l8pq9
  Aug 28 00:46:18.263: INFO: Created: latency-svc-pkfns
  Aug 28 00:46:18.263: INFO: Created: latency-svc-kmqwq
  Aug 28 00:46:18.263: INFO: Created: latency-svc-nl8g2
  Aug 28 00:46:18.263: INFO: Created: latency-svc-bwg9z
  Aug 28 00:46:18.263: INFO: Created: latency-svc-xvtxq
  Aug 28 00:46:18.276: INFO: Created: latency-svc-vrccp
  Aug 28 00:46:18.276: INFO: Created: latency-svc-7psz9
  Aug 28 00:46:18.281: INFO: Created: latency-svc-z7792
  Aug 28 00:46:18.281: INFO: Created: latency-svc-sxh58
  Aug 28 00:46:18.281: INFO: Created: latency-svc-2fwcz
  Aug 28 00:46:18.281: INFO: Created: latency-svc-59h5b
  Aug 28 00:46:18.282: INFO: Created: latency-svc-ns4p6
  Aug 28 00:46:18.300: INFO: Got endpoints: latency-svc-59h5b [1.066704005s]
  Aug 28 00:46:18.367: INFO: Got endpoints: latency-svc-nl8g2 [901.055334ms]
  Aug 28 00:46:18.379: INFO: Got endpoints: latency-svc-vrccp [797.636985ms]
  Aug 28 00:46:18.379: INFO: Got endpoints: latency-svc-bwg9z [675.091035ms]
  Aug 28 00:46:18.380: INFO: Got endpoints: latency-svc-kmqwq [527.246016ms]
  Aug 28 00:46:18.425: INFO: Got endpoints: latency-svc-pkfns [1.255512475s]
  Aug 28 00:46:18.448: INFO: Created: latency-svc-crwsb
  Aug 28 00:46:18.464: INFO: Got endpoints: latency-svc-sxh58 [1.413341807s]
  Aug 28 00:46:18.491: INFO: Got endpoints: latency-svc-z7792 [1.205673478s]
  Aug 28 00:46:18.491: INFO: Got endpoints: latency-svc-2fwcz [891.926744ms]
  Aug 28 00:46:18.491: INFO: Got endpoints: latency-svc-7psz9 [1.026919411s]
  Aug 28 00:46:18.505: INFO: Got endpoints: latency-svc-ns4p6 [743.149488ms]
  E0828 00:46:18.530045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:18.560: INFO: Created: latency-svc-vbrh5
  Aug 28 00:46:18.590: INFO: Created: latency-svc-9sdmc
  Aug 28 00:46:18.593: INFO: Got endpoints: latency-svc-l8pq9 [1.126802258s]
  Aug 28 00:46:18.594: INFO: Got endpoints: latency-svc-p655s [1.09279628s]
  Aug 28 00:46:18.594: INFO: Got endpoints: latency-svc-xvtxq [922.186111ms]
  Aug 28 00:46:18.594: INFO: Got endpoints: latency-svc-crwsb [294.043521ms]
  Aug 28 00:46:18.594: INFO: Got endpoints: latency-svc-2n2xg [764.254487ms]
  Aug 28 00:46:18.666: INFO: Got endpoints: latency-svc-vbrh5 [299.260969ms]
  Aug 28 00:46:18.666: INFO: Got endpoints: latency-svc-9sdmc [286.308003ms]
  Aug 28 00:46:18.855: INFO: Created: latency-svc-2hxrw
  Aug 28 00:46:18.857: INFO: Created: latency-svc-lsm5p
  Aug 28 00:46:18.862: INFO: Created: latency-svc-vjcvk
  Aug 28 00:46:18.863: INFO: Created: latency-svc-c5949
  Aug 28 00:46:18.863: INFO: Created: latency-svc-jqxhn
  Aug 28 00:46:18.877: INFO: Created: latency-svc-zscn4
  Aug 28 00:46:18.887: INFO: Created: latency-svc-crnqp
  Aug 28 00:46:18.888: INFO: Created: latency-svc-rf7tl
  Aug 28 00:46:18.890: INFO: Created: latency-svc-9lvd9
  Aug 28 00:46:18.891: INFO: Created: latency-svc-pz2sc
  Aug 28 00:46:18.891: INFO: Created: latency-svc-v4fh8
  Aug 28 00:46:18.893: INFO: Created: latency-svc-9msml
  Aug 28 00:46:18.893: INFO: Created: latency-svc-6ttmr
  Aug 28 00:46:18.902: INFO: Created: latency-svc-f86c6
  Aug 28 00:46:18.904: INFO: Created: latency-svc-svbk9
  Aug 28 00:46:18.926: INFO: Got endpoints: latency-svc-jqxhn [259.932866ms]
  Aug 28 00:46:18.928: INFO: Got endpoints: latency-svc-2hxrw [502.688341ms]
  Aug 28 00:46:18.928: INFO: Got endpoints: latency-svc-c5949 [437.147017ms]
  Aug 28 00:46:18.930: INFO: Got endpoints: latency-svc-lsm5p [335.830578ms]
  Aug 28 00:46:18.948: INFO: Got endpoints: latency-svc-vjcvk [355.200304ms]
  Aug 28 00:46:19.034: INFO: Created: latency-svc-phpqx
  Aug 28 00:46:19.061: INFO: Created: latency-svc-5hgfl
  Aug 28 00:46:19.067: INFO: Got endpoints: latency-svc-crnqp [401.040102ms]
  Aug 28 00:46:19.074: INFO: Got endpoints: latency-svc-9lvd9 [569.270479ms]
  Aug 28 00:46:19.075: INFO: Got endpoints: latency-svc-rf7tl [695.702362ms]
  Aug 28 00:46:19.078: INFO: Created: latency-svc-xxvz6
  Aug 28 00:46:19.075: INFO: Got endpoints: latency-svc-6ttmr [610.840391ms]
  Aug 28 00:46:19.075: INFO: Got endpoints: latency-svc-zscn4 [582.180738ms]
  Aug 28 00:46:19.124: INFO: Got endpoints: latency-svc-pz2sc [632.833997ms]
  Aug 28 00:46:19.125: INFO: Got endpoints: latency-svc-9msml [529.243964ms]
  Aug 28 00:46:19.165: INFO: Created: latency-svc-hkhph
  Aug 28 00:46:19.180: INFO: Got endpoints: latency-svc-v4fh8 [801.192163ms]
  Aug 28 00:46:19.211: INFO: Got endpoints: latency-svc-f86c6 [615.953202ms]
  Aug 28 00:46:19.211: INFO: Got endpoints: latency-svc-svbk9 [616.984695ms]
  Aug 28 00:46:19.229: INFO: Got endpoints: latency-svc-phpqx [302.728814ms]
  Aug 28 00:46:19.230: INFO: Got endpoints: latency-svc-5hgfl [302.386738ms]
  Aug 28 00:46:19.231: INFO: Got endpoints: latency-svc-xxvz6 [302.34616ms]
  Aug 28 00:46:19.237: INFO: Created: latency-svc-hp426
  Aug 28 00:46:19.241: INFO: Got endpoints: latency-svc-hkhph [310.357462ms]
  Aug 28 00:46:19.252: INFO: Got endpoints: latency-svc-hp426 [303.845915ms]
  Aug 28 00:46:19.262: INFO: Created: latency-svc-ttdbg
  Aug 28 00:46:19.294: INFO: Created: latency-svc-2r6v5
  Aug 28 00:46:19.312: INFO: Got endpoints: latency-svc-ttdbg [239.894882ms]
  Aug 28 00:46:19.316: INFO: Got endpoints: latency-svc-2r6v5 [239.300443ms]
  Aug 28 00:46:19.359: INFO: Created: latency-svc-rtk9k
  Aug 28 00:46:19.370: INFO: Got endpoints: latency-svc-rtk9k [294.50349ms]
  Aug 28 00:46:19.374: INFO: Created: latency-svc-wzs6z
  Aug 28 00:46:19.400: INFO: Created: latency-svc-cz9vd
  Aug 28 00:46:19.436: INFO: Got endpoints: latency-svc-cz9vd [353.265368ms]
  Aug 28 00:46:19.436: INFO: Got endpoints: latency-svc-wzs6z [355.206578ms]
  Aug 28 00:46:19.452: INFO: Created: latency-svc-q6zxj
  Aug 28 00:46:19.468: INFO: Got endpoints: latency-svc-q6zxj [341.769302ms]
  Aug 28 00:46:19.487: INFO: Created: latency-svc-dwtpw
  Aug 28 00:46:19.501: INFO: Created: latency-svc-ks8wq
  Aug 28 00:46:19.514: INFO: Got endpoints: latency-svc-dwtpw [388.446715ms]
  Aug 28 00:46:19.530: INFO: Got endpoints: latency-svc-ks8wq [348.565409ms]
  E0828 00:46:19.530862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:19.550: INFO: Created: latency-svc-bmtcx
  Aug 28 00:46:19.568: INFO: Got endpoints: latency-svc-bmtcx [355.833473ms]
  Aug 28 00:46:19.585: INFO: Created: latency-svc-x88j7
  Aug 28 00:46:19.611: INFO: Got endpoints: latency-svc-x88j7 [399.645959ms]
  Aug 28 00:46:19.613: INFO: Created: latency-svc-5bg5s
  Aug 28 00:46:19.642: INFO: Got endpoints: latency-svc-5bg5s [412.254901ms]
  Aug 28 00:46:19.669: INFO: Created: latency-svc-l67hw
  Aug 28 00:46:19.697: INFO: Got endpoints: latency-svc-l67hw [465.168618ms]
  Aug 28 00:46:19.702: INFO: Created: latency-svc-vswxb
  Aug 28 00:46:19.718: INFO: Got endpoints: latency-svc-vswxb [486.216254ms]
  Aug 28 00:46:19.749: INFO: Created: latency-svc-p8gh5
  Aug 28 00:46:19.772: INFO: Got endpoints: latency-svc-p8gh5 [129.96675ms]
  Aug 28 00:46:19.958: INFO: Created: latency-svc-2dwzr
  Aug 28 00:46:19.964: INFO: Created: latency-svc-p5lfw
  Aug 28 00:46:19.973: INFO: Created: latency-svc-hb4tr
  Aug 28 00:46:19.973: INFO: Created: latency-svc-x8z62
  Aug 28 00:46:19.974: INFO: Created: latency-svc-wm2sz
  Aug 28 00:46:19.974: INFO: Created: latency-svc-wtp6l
  Aug 28 00:46:19.974: INFO: Created: latency-svc-xqcs5
  Aug 28 00:46:19.974: INFO: Created: latency-svc-vts4n
  Aug 28 00:46:19.977: INFO: Created: latency-svc-twvm4
  Aug 28 00:46:19.996: INFO: Created: latency-svc-vd7rp
  Aug 28 00:46:19.996: INFO: Created: latency-svc-5nqdr
  Aug 28 00:46:19.996: INFO: Created: latency-svc-zkwd7
  Aug 28 00:46:20.001: INFO: Created: latency-svc-glvw9
  Aug 28 00:46:20.005: INFO: Got endpoints: latency-svc-2dwzr [752.652937ms]
  Aug 28 00:46:20.009: INFO: Created: latency-svc-v9fpp
  Aug 28 00:46:20.030: INFO: Created: latency-svc-fzwtm
  Aug 28 00:46:20.053: INFO: Got endpoints: latency-svc-vts4n [585.023083ms]
  Aug 28 00:46:20.083: INFO: Got endpoints: latency-svc-twvm4 [712.206077ms]
  Aug 28 00:46:20.083: INFO: Got endpoints: latency-svc-p5lfw [310.70254ms]
  Aug 28 00:46:20.083: INFO: Got endpoints: latency-svc-xqcs5 [515.036591ms]
  Aug 28 00:46:20.095: INFO: Got endpoints: latency-svc-glvw9 [658.80621ms]
  Aug 28 00:46:20.134: INFO: Got endpoints: latency-svc-vd7rp [604.107491ms]
  Aug 28 00:46:20.154: INFO: Got endpoints: latency-svc-wtp6l [640.307611ms]
  Aug 28 00:46:20.154: INFO: Got endpoints: latency-svc-zkwd7 [838.054964ms]
  Aug 28 00:46:20.165: INFO: Got endpoints: latency-svc-x8z62 [852.741858ms]
  Aug 28 00:46:20.165: INFO: Got endpoints: latency-svc-wm2sz [467.524478ms]
  Aug 28 00:46:20.203: INFO: Created: latency-svc-82sgn
  Aug 28 00:46:20.204: INFO: Got endpoints: latency-svc-v9fpp [592.280875ms]
  Aug 28 00:46:20.205: INFO: Got endpoints: latency-svc-hb4tr [769.150343ms]
  Aug 28 00:46:20.208: INFO: Got endpoints: latency-svc-5nqdr [490.269188ms]
  Aug 28 00:46:20.208: INFO: Got endpoints: latency-svc-fzwtm [967.482786ms]
  Aug 28 00:46:20.269: INFO: Created: latency-svc-lg4nf
  Aug 28 00:46:20.275: INFO: Got endpoints: latency-svc-82sgn [269.160387ms]
  Aug 28 00:46:20.295: INFO: Got endpoints: latency-svc-lg4nf [242.05787ms]
  Aug 28 00:46:20.326: INFO: Created: latency-svc-l2g95
  Aug 28 00:46:20.347: INFO: Got endpoints: latency-svc-l2g95 [252.627247ms]
  Aug 28 00:46:20.368: INFO: Created: latency-svc-l4sqt
  Aug 28 00:46:20.381: INFO: Got endpoints: latency-svc-l4sqt [297.262224ms]
  Aug 28 00:46:20.405: INFO: Created: latency-svc-v94zx
  Aug 28 00:46:20.410: INFO: Created: latency-svc-4pf2k
  Aug 28 00:46:20.417: INFO: Got endpoints: latency-svc-v94zx [334.077762ms]
  Aug 28 00:46:20.429: INFO: Got endpoints: latency-svc-4pf2k [346.400808ms]
  Aug 28 00:46:20.441: INFO: Created: latency-svc-4snmq
  Aug 28 00:46:20.470: INFO: Created: latency-svc-xbkbw
  Aug 28 00:46:20.489: INFO: Got endpoints: latency-svc-4snmq [354.966188ms]
  Aug 28 00:46:20.500: INFO: Created: latency-svc-6zkg6
  Aug 28 00:46:20.528: INFO: Created: latency-svc-5wk6l
  Aug 28 00:46:20.530: INFO: Created: latency-svc-5sqjd
  E0828 00:46:20.531303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:20.537: INFO: Got endpoints: latency-svc-xbkbw [382.384901ms]
  Aug 28 00:46:20.549: INFO: Created: latency-svc-rmffl
  Aug 28 00:46:20.573: INFO: Created: latency-svc-vtwlg
  Aug 28 00:46:20.578: INFO: Got endpoints: latency-svc-6zkg6 [423.606151ms]
  Aug 28 00:46:20.592: INFO: Created: latency-svc-2k25z
  Aug 28 00:46:20.611: INFO: Created: latency-svc-snsjr
  Aug 28 00:46:20.629: INFO: Got endpoints: latency-svc-5sqjd [463.880774ms]
  Aug 28 00:46:20.633: INFO: Created: latency-svc-trr9l
  Aug 28 00:46:20.660: INFO: Created: latency-svc-7w6dt
  Aug 28 00:46:20.684: INFO: Got endpoints: latency-svc-5wk6l [518.790984ms]
  Aug 28 00:46:20.700: INFO: Created: latency-svc-rx5rl
  Aug 28 00:46:20.704: INFO: Created: latency-svc-8tdxp
  Aug 28 00:46:20.728: INFO: Created: latency-svc-jvslv
  Aug 28 00:46:20.729: INFO: Got endpoints: latency-svc-rmffl [524.70283ms]
  Aug 28 00:46:20.744: INFO: Created: latency-svc-7zr9d
  Aug 28 00:46:20.756: INFO: Created: latency-svc-hsvmq
  Aug 28 00:46:20.782: INFO: Created: latency-svc-l8s7q
  Aug 28 00:46:20.790: INFO: Got endpoints: latency-svc-vtwlg [581.596943ms]
  Aug 28 00:46:20.795: INFO: Created: latency-svc-tmdh9
  Aug 28 00:46:20.814: INFO: Created: latency-svc-4zjl5
  Aug 28 00:46:20.845: INFO: Got endpoints: latency-svc-2k25z [636.504247ms]
  Aug 28 00:46:20.865: INFO: Created: latency-svc-4g5lc
  Aug 28 00:46:20.881: INFO: Got endpoints: latency-svc-snsjr [676.031526ms]
  Aug 28 00:46:20.910: INFO: Created: latency-svc-hcbmg
  Aug 28 00:46:20.923: INFO: Created: latency-svc-b8mlb
  Aug 28 00:46:20.926: INFO: Created: latency-svc-vnzn6
  Aug 28 00:46:20.927: INFO: Created: latency-svc-r6j8h
  Aug 28 00:46:20.931: INFO: Got endpoints: latency-svc-trr9l [656.045482ms]
  Aug 28 00:46:20.956: INFO: Created: latency-svc-vs8sw
  Aug 28 00:46:20.984: INFO: Got endpoints: latency-svc-7w6dt [689.332136ms]
  Aug 28 00:46:21.030: INFO: Got endpoints: latency-svc-rx5rl [681.462166ms]
  Aug 28 00:46:21.032: INFO: Created: latency-svc-s744v
  Aug 28 00:46:21.092: INFO: Got endpoints: latency-svc-8tdxp [711.127501ms]
  Aug 28 00:46:21.093: INFO: Created: latency-svc-vrjs6
  Aug 28 00:46:21.134: INFO: Created: latency-svc-f5xk6
  Aug 28 00:46:21.135: INFO: Got endpoints: latency-svc-jvslv [718.539897ms]
  Aug 28 00:46:21.186: INFO: Got endpoints: latency-svc-7zr9d [756.81342ms]
  Aug 28 00:46:21.212: INFO: Created: latency-svc-k9hht
  Aug 28 00:46:21.227: INFO: Got endpoints: latency-svc-hsvmq [738.269975ms]
  Aug 28 00:46:21.237: INFO: Created: latency-svc-wvpfs
  Aug 28 00:46:21.261: INFO: Created: latency-svc-f4x49
  Aug 28 00:46:21.285: INFO: Got endpoints: latency-svc-l8s7q [747.735753ms]
  Aug 28 00:46:21.322: INFO: Created: latency-svc-ngcl5
  Aug 28 00:46:21.334: INFO: Got endpoints: latency-svc-tmdh9 [755.677948ms]
  Aug 28 00:46:21.362: INFO: Created: latency-svc-274zg
  Aug 28 00:46:21.373: INFO: Got endpoints: latency-svc-4zjl5 [744.376423ms]
  Aug 28 00:46:21.403: INFO: Created: latency-svc-8xkns
  Aug 28 00:46:21.431: INFO: Got endpoints: latency-svc-4g5lc [746.62691ms]
  Aug 28 00:46:21.475: INFO: Created: latency-svc-tg7hq
  Aug 28 00:46:21.492: INFO: Got endpoints: latency-svc-hcbmg [758.875127ms]
  Aug 28 00:46:21.521: INFO: Created: latency-svc-b52z9
  E0828 00:46:21.532219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:21.540: INFO: Got endpoints: latency-svc-b8mlb [658.047784ms]
  Aug 28 00:46:21.574: INFO: Created: latency-svc-dl4qd
  Aug 28 00:46:21.583: INFO: Got endpoints: latency-svc-r6j8h [737.646726ms]
  Aug 28 00:46:21.624: INFO: Created: latency-svc-bb9t7
  Aug 28 00:46:21.627: INFO: Got endpoints: latency-svc-vnzn6 [837.563725ms]
  Aug 28 00:46:21.677: INFO: Created: latency-svc-xnjct
  Aug 28 00:46:21.694: INFO: Got endpoints: latency-svc-vs8sw [762.936052ms]
  Aug 28 00:46:21.726: INFO: Got endpoints: latency-svc-s744v [741.816636ms]
  Aug 28 00:46:21.726: INFO: Created: latency-svc-7zvcc
  Aug 28 00:46:21.763: INFO: Created: latency-svc-bxms6
  Aug 28 00:46:21.775: INFO: Got endpoints: latency-svc-vrjs6 [744.354146ms]
  Aug 28 00:46:21.810: INFO: Created: latency-svc-lv9bd
  Aug 28 00:46:21.826: INFO: Got endpoints: latency-svc-f5xk6 [733.621011ms]
  Aug 28 00:46:21.864: INFO: Created: latency-svc-zww4x
  Aug 28 00:46:21.877: INFO: Got endpoints: latency-svc-k9hht [739.660019ms]
  Aug 28 00:46:21.907: INFO: Created: latency-svc-rx5jv
  Aug 28 00:46:21.931: INFO: Got endpoints: latency-svc-wvpfs [744.580678ms]
  Aug 28 00:46:21.955: INFO: Created: latency-svc-qzgwz
  Aug 28 00:46:21.986: INFO: Got endpoints: latency-svc-f4x49 [756.417957ms]
  Aug 28 00:46:22.029: INFO: Created: latency-svc-gdg8g
  Aug 28 00:46:22.031: INFO: Got endpoints: latency-svc-ngcl5 [745.44956ms]
  Aug 28 00:46:22.087: INFO: Got endpoints: latency-svc-274zg [752.322016ms]
  Aug 28 00:46:22.102: INFO: Created: latency-svc-fdq7x
  Aug 28 00:46:22.125: INFO: Got endpoints: latency-svc-8xkns [751.273609ms]
  Aug 28 00:46:22.136: INFO: Created: latency-svc-dvvn9
  Aug 28 00:46:22.162: INFO: Created: latency-svc-g4prq
  Aug 28 00:46:22.178: INFO: Got endpoints: latency-svc-tg7hq [746.587885ms]
  Aug 28 00:46:22.208: INFO: Created: latency-svc-xx8vk
  Aug 28 00:46:22.281: INFO: Got endpoints: latency-svc-dl4qd [741.163759ms]
  Aug 28 00:46:22.281: INFO: Got endpoints: latency-svc-b52z9 [787.967393ms]
  Aug 28 00:46:22.329: INFO: Created: latency-svc-kv98k
  Aug 28 00:46:22.333: INFO: Got endpoints: latency-svc-bb9t7 [748.591862ms]
  Aug 28 00:46:22.348: INFO: Created: latency-svc-cr5l4
  Aug 28 00:46:22.374: INFO: Created: latency-svc-8kt2r
  Aug 28 00:46:22.390: INFO: Got endpoints: latency-svc-xnjct [762.156232ms]
  Aug 28 00:46:22.434: INFO: Got endpoints: latency-svc-7zvcc [740.06999ms]
  Aug 28 00:46:22.438: INFO: Created: latency-svc-2w68m
  Aug 28 00:46:22.470: INFO: Created: latency-svc-9m52p
  Aug 28 00:46:22.478: INFO: Got endpoints: latency-svc-bxms6 [751.991573ms]
  Aug 28 00:46:22.520: INFO: Created: latency-svc-g27lf
  Aug 28 00:46:22.530: INFO: Got endpoints: latency-svc-lv9bd [755.327966ms]
  E0828 00:46:22.532140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:22.556: INFO: Created: latency-svc-rhhwn
  Aug 28 00:46:22.584: INFO: Got endpoints: latency-svc-zww4x [757.543132ms]
  Aug 28 00:46:22.620: INFO: Created: latency-svc-5lbgt
  Aug 28 00:46:22.628: INFO: Got endpoints: latency-svc-rx5jv [750.755277ms]
  Aug 28 00:46:22.666: INFO: Created: latency-svc-8xgkh
  Aug 28 00:46:22.678: INFO: Got endpoints: latency-svc-qzgwz [745.673614ms]
  Aug 28 00:46:22.706: INFO: Created: latency-svc-kmz8c
  Aug 28 00:46:22.729: INFO: Got endpoints: latency-svc-gdg8g [743.041429ms]
  Aug 28 00:46:22.755: INFO: Created: latency-svc-6lm7l
  Aug 28 00:46:22.776: INFO: Got endpoints: latency-svc-fdq7x [744.15289ms]
  Aug 28 00:46:22.806: INFO: Created: latency-svc-ftnlx
  Aug 28 00:46:22.833: INFO: Got endpoints: latency-svc-dvvn9 [746.074138ms]
  Aug 28 00:46:22.903: INFO: Got endpoints: latency-svc-g4prq [777.219759ms]
  Aug 28 00:46:22.917: INFO: Created: latency-svc-7rnl7
  Aug 28 00:46:22.934: INFO: Got endpoints: latency-svc-xx8vk [755.89531ms]
  Aug 28 00:46:22.991: INFO: Created: latency-svc-6gqwp
  Aug 28 00:46:23.006: INFO: Got endpoints: latency-svc-kv98k [725.415719ms]
  Aug 28 00:46:23.026: INFO: Created: latency-svc-cwqqd
  Aug 28 00:46:23.042: INFO: Got endpoints: latency-svc-cr5l4 [761.47015ms]
  Aug 28 00:46:23.054: INFO: Created: latency-svc-vllhr
  Aug 28 00:46:23.093: INFO: Got endpoints: latency-svc-8kt2r [759.351614ms]
  Aug 28 00:46:23.110: INFO: Created: latency-svc-rbqb6
  Aug 28 00:46:23.125: INFO: Created: latency-svc-9x8mk
  Aug 28 00:46:23.130: INFO: Got endpoints: latency-svc-2w68m [739.872433ms]
  Aug 28 00:46:23.165: INFO: Created: latency-svc-bzhht
  Aug 28 00:46:23.174: INFO: Got endpoints: latency-svc-9m52p [737.95885ms]
  Aug 28 00:46:23.201: INFO: Created: latency-svc-qc5rl
  Aug 28 00:46:23.226: INFO: Got endpoints: latency-svc-g27lf [747.634095ms]
  Aug 28 00:46:23.291: INFO: Got endpoints: latency-svc-rhhwn [760.719618ms]
  Aug 28 00:46:23.319: INFO: Created: latency-svc-q9vlj
  Aug 28 00:46:23.342: INFO: Got endpoints: latency-svc-5lbgt [757.927835ms]
  Aug 28 00:46:23.350: INFO: Created: latency-svc-j5vhp
  Aug 28 00:46:23.374: INFO: Got endpoints: latency-svc-8xgkh [746.490839ms]
  Aug 28 00:46:23.390: INFO: Created: latency-svc-957xk
  Aug 28 00:46:23.408: INFO: Created: latency-svc-jvs4t
  Aug 28 00:46:23.445: INFO: Got endpoints: latency-svc-kmz8c [766.961517ms]
  Aug 28 00:46:23.483: INFO: Created: latency-svc-nqlfz
  Aug 28 00:46:23.488: INFO: Got endpoints: latency-svc-6lm7l [759.11517ms]
  Aug 28 00:46:23.521: INFO: Got endpoints: latency-svc-ftnlx [745.440377ms]
  Aug 28 00:46:23.530: INFO: Created: latency-svc-z4vvz
  E0828 00:46:23.532478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:23.549: INFO: Created: latency-svc-ztvfd
  Aug 28 00:46:23.591: INFO: Got endpoints: latency-svc-7rnl7 [757.426893ms]
  Aug 28 00:46:23.644: INFO: Got endpoints: latency-svc-6gqwp [740.766049ms]
  Aug 28 00:46:23.649: INFO: Created: latency-svc-4h594
  Aug 28 00:46:23.681: INFO: Created: latency-svc-nsr4c
  Aug 28 00:46:23.690: INFO: Got endpoints: latency-svc-cwqqd [755.167281ms]
  Aug 28 00:46:23.738: INFO: Created: latency-svc-xrfb2
  Aug 28 00:46:23.740: INFO: Got endpoints: latency-svc-vllhr [733.156139ms]
  Aug 28 00:46:23.793: INFO: Created: latency-svc-7l7zv
  Aug 28 00:46:23.795: INFO: Got endpoints: latency-svc-rbqb6 [751.433642ms]
  Aug 28 00:46:23.837: INFO: Got endpoints: latency-svc-9x8mk [743.911081ms]
  Aug 28 00:46:23.862: INFO: Created: latency-svc-mj879
  Aug 28 00:46:23.903: INFO: Got endpoints: latency-svc-bzhht [772.807376ms]
  Aug 28 00:46:23.905: INFO: Created: latency-svc-2x55x
  Aug 28 00:46:23.938: INFO: Got endpoints: latency-svc-qc5rl [763.770706ms]
  Aug 28 00:46:23.967: INFO: Created: latency-svc-642h8
  Aug 28 00:46:23.983: INFO: Created: latency-svc-kf6ks
  Aug 28 00:46:23.984: INFO: Got endpoints: latency-svc-q9vlj [756.995645ms]
  Aug 28 00:46:24.031: INFO: Created: latency-svc-bqlg8
  Aug 28 00:46:24.054: INFO: Got endpoints: latency-svc-j5vhp [762.511387ms]
  Aug 28 00:46:24.082: INFO: Got endpoints: latency-svc-957xk [740.171239ms]
  Aug 28 00:46:24.107: INFO: Created: latency-svc-jqbm9
  Aug 28 00:46:24.130: INFO: Created: latency-svc-7g8xq
  Aug 28 00:46:24.143: INFO: Got endpoints: latency-svc-jvs4t [767.9618ms]
  Aug 28 00:46:24.179: INFO: Created: latency-svc-dzfwk
  Aug 28 00:46:24.196: INFO: Got endpoints: latency-svc-nqlfz [749.868893ms]
  Aug 28 00:46:24.267: INFO: Got endpoints: latency-svc-z4vvz [779.086258ms]
  Aug 28 00:46:24.293: INFO: Got endpoints: latency-svc-ztvfd [772.08143ms]
  Aug 28 00:46:24.306: INFO: Created: latency-svc-v66ct
  Aug 28 00:46:24.348: INFO: Got endpoints: latency-svc-4h594 [756.331708ms]
  Aug 28 00:46:24.361: INFO: Created: latency-svc-hhf2m
  Aug 28 00:46:24.389: INFO: Got endpoints: latency-svc-nsr4c [744.981399ms]
  Aug 28 00:46:24.424: INFO: Created: latency-svc-w68wb
  Aug 28 00:46:24.453: INFO: Got endpoints: latency-svc-xrfb2 [762.722915ms]
  Aug 28 00:46:24.481: INFO: Created: latency-svc-pj5gp
  Aug 28 00:46:24.483: INFO: Got endpoints: latency-svc-7l7zv [742.85786ms]
  Aug 28 00:46:24.527: INFO: Got endpoints: latency-svc-mj879 [732.050197ms]
  E0828 00:46:24.533298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:24.577: INFO: Got endpoints: latency-svc-2x55x [740.297557ms]
  Aug 28 00:46:24.627: INFO: Got endpoints: latency-svc-642h8 [723.983002ms]
  Aug 28 00:46:24.682: INFO: Got endpoints: latency-svc-kf6ks [743.766934ms]
  Aug 28 00:46:24.726: INFO: Got endpoints: latency-svc-bqlg8 [741.853615ms]
  Aug 28 00:46:24.786: INFO: Got endpoints: latency-svc-jqbm9 [731.940315ms]
  Aug 28 00:46:24.836: INFO: Got endpoints: latency-svc-7g8xq [754.415935ms]
  Aug 28 00:46:24.877: INFO: Got endpoints: latency-svc-dzfwk [732.819586ms]
  Aug 28 00:46:24.937: INFO: Got endpoints: latency-svc-v66ct [741.031565ms]
  Aug 28 00:46:24.979: INFO: Got endpoints: latency-svc-hhf2m [711.942171ms]
  Aug 28 00:46:25.024: INFO: Got endpoints: latency-svc-w68wb [729.971655ms]
  Aug 28 00:46:25.085: INFO: Got endpoints: latency-svc-pj5gp [737.643432ms]
  Aug 28 00:46:25.086: INFO: Latencies: [50.095121ms 112.072786ms 116.460162ms 129.209782ms 129.96675ms 179.193622ms 205.709294ms 239.300443ms 239.894882ms 242.05787ms 252.627247ms 258.151153ms 259.932866ms 269.160387ms 286.308003ms 292.302182ms 294.043521ms 294.50349ms 297.262224ms 299.260969ms 302.34616ms 302.386738ms 302.728814ms 303.845915ms 306.875891ms 310.357462ms 310.70254ms 334.077762ms 335.830578ms 341.769302ms 346.400808ms 348.565409ms 353.265368ms 354.966188ms 355.200304ms 355.206578ms 355.833473ms 357.079957ms 382.384901ms 388.446715ms 399.645959ms 401.040102ms 411.933595ms 412.254901ms 423.606151ms 427.333281ms 437.147017ms 463.880774ms 465.168618ms 467.524478ms 486.216254ms 488.738208ms 490.269188ms 502.688341ms 515.036591ms 518.790984ms 524.70283ms 527.246016ms 529.243964ms 562.656505ms 569.270479ms 581.596943ms 582.180738ms 585.023083ms 592.280875ms 604.107491ms 610.840391ms 615.953202ms 616.984695ms 622.491922ms 625.817436ms 632.833997ms 636.504247ms 638.18468ms 640.307611ms 656.045482ms 658.047784ms 658.80621ms 666.350014ms 673.252027ms 675.091035ms 676.031526ms 681.462166ms 689.332136ms 692.602991ms 695.702362ms 711.127501ms 711.942171ms 712.206077ms 718.539897ms 723.983002ms 725.415719ms 729.971655ms 731.940315ms 732.050197ms 732.819586ms 733.156139ms 733.621011ms 737.643432ms 737.646726ms 737.95885ms 738.269975ms 739.660019ms 739.872433ms 740.06999ms 740.171239ms 740.297557ms 740.766049ms 741.031565ms 741.163759ms 741.816636ms 741.853615ms 742.85786ms 743.041429ms 743.149488ms 743.766934ms 743.911081ms 744.15289ms 744.354146ms 744.376423ms 744.580678ms 744.981399ms 745.440377ms 745.44956ms 745.673614ms 746.074138ms 746.490839ms 746.587885ms 746.62691ms 747.634095ms 747.735753ms 748.591862ms 749.868893ms 750.755277ms 751.273609ms 751.433642ms 751.991573ms 752.322016ms 752.652937ms 754.415935ms 755.167281ms 755.327966ms 755.677948ms 755.89531ms 756.331708ms 756.417957ms 756.81342ms 756.995645ms 757.426893ms 757.543132ms 757.927835ms 758.875127ms 759.11517ms 759.351614ms 760.719618ms 761.47015ms 762.156232ms 762.511387ms 762.722915ms 762.936052ms 763.770706ms 764.254487ms 766.961517ms 767.9618ms 768.152823ms 769.150343ms 772.08143ms 772.807376ms 777.219759ms 778.581892ms 779.086258ms 787.967393ms 796.232443ms 797.636985ms 801.192163ms 825.142698ms 835.397388ms 836.015227ms 836.981301ms 837.563725ms 838.054964ms 839.42387ms 852.741858ms 854.246927ms 855.60654ms 877.011208ms 891.926744ms 895.785477ms 901.055334ms 910.168731ms 922.186111ms 959.999622ms 967.482786ms 1.026919411s 1.066704005s 1.09279628s 1.126802258s 1.205673478s 1.255512475s 1.413341807s]
  Aug 28 00:46:25.086: INFO: 50 %ile: 737.95885ms
  Aug 28 00:46:25.086: INFO: 90 %ile: 838.054964ms
  Aug 28 00:46:25.086: INFO: 99 %ile: 1.255512475s
  Aug 28 00:46:25.086: INFO: Total sample count: 200
  Aug 28 00:46:25.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6865" for this suite. @ 08/28/24 00:46:25.108
• [11.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 08/28/24 00:46:25.128
  Aug 28 00:46:25.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/28/24 00:46:25.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:46:25.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:46:25.174
  Aug 28 00:46:25.181: INFO: Creating deployment "test-recreate-deployment"
  Aug 28 00:46:25.192: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Aug 28 00:46:25.217: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0828 00:46:25.533455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:26.534396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:27.238: INFO: Waiting deployment "test-recreate-deployment" to complete
  Aug 28 00:46:27.251: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 46, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 46, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 46, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 46, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-5cf87b5b86\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:46:27.534403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:28.534871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:29.266: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Aug 28 00:46:29.309: INFO: Updating deployment test-recreate-deployment
  Aug 28 00:46:29.309: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E0828 00:46:29.535646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:46:29.744: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4850",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "489535b4-6193-4e8b-ad78-78e673efaa56",
      ResourceVersion: (string) (len=8) "38933342",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402785,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 28 00:46:29.805: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4850",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e5d3a68-3cb8-46bf-99e3-70c1b75c2b40",
      ResourceVersion: (string) (len=8) "38933339",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "489535b4-6193-4e8b-ad78-78e673efaa56",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 39 35 33 35  62 34 2d 36 31 39 33 2d  |\"489535b4-6193-|
              00000120  34 65 38 62 2d 61 64 37  38 2d 37 38 65 36 37 33  |4e8b-ad78-78e673|
              00000130  65 66 61 61 35 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |efaa56\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 28 00:46:29.822: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Aug 28 00:46:29.822: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4850",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46cb20af-b4a4-4b63-8ebf-147b59933065",
      ResourceVersion: (string) (len=8) "38933328",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402785,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "489535b4-6193-4e8b-ad78-78e673efaa56",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 39 35 33 35  62 34 2d 36 31 39 33 2d  |\"489535b4-6193-|
              00000120  34 65 38 62 2d 61 64 37  38 2d 37 38 65 36 37 33  |4e8b-ad78-78e673|
              00000130  65 66 61 61 35 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |efaa56\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 28 00:46:29.834: INFO: Pod "test-recreate-deployment-76fb77d45-bdl6p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-bdl6p",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-4850",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f56aca80-da6f-483a-915f-8fbf40f8a816",
      ResourceVersion: (string) (len=8) "38933341",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "9e5d3a68-3cb8-46bf-99e3-70c1b75c2b40",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 65  35 64 33 61 36 38 2d 33  |d\":\"9e5d3a68-3|
              00000090  63 62 38 2d 34 36 62 66  2d 39 39 65 33 2d 37 30  |cb8-46bf-99e3-70|
              000000a0  63 31 62 37 35 63 32 62  34 30 5c 22 7d 22 3a 7b  |c1b75c2b40\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tk746",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tk746",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860402789,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860402789,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:46:29.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4850" for this suite. @ 08/28/24 00:46:29.869
• [4.756 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 08/28/24 00:46:29.885
  Aug 28 00:46:29.885: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/28/24 00:46:29.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:46:29.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:46:29.951
  STEP: Creating configMap with name cm-test-opt-del-29de0795-1778-4825-a7ff-59f9b6a4d23b @ 08/28/24 00:46:29.993
  STEP: Creating configMap with name cm-test-opt-upd-ee2ea949-2a97-41a3-8b57-63e6e7b30128 @ 08/28/24 00:46:30.009
  STEP: Creating the pod @ 08/28/24 00:46:30.017
  E0828 00:46:30.536628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:31.536667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:32.538499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:33.543003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-29de0795-1778-4825-a7ff-59f9b6a4d23b @ 08/28/24 00:46:34.357
  STEP: Updating configmap cm-test-opt-upd-ee2ea949-2a97-41a3-8b57-63e6e7b30128 @ 08/28/24 00:46:34.403
  STEP: Creating configMap with name cm-test-opt-create-3a328aeb-116a-4042-b33b-82ce3077695b @ 08/28/24 00:46:34.425
  STEP: waiting to observe update in volume @ 08/28/24 00:46:34.469
  E0828 00:46:34.543374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:35.544659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:36.545800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:37.552751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:38.553504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:39.555121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:40.555466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:41.559107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:42.562486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:43.563794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:44.564006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:45.564940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:46.565506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:47.565934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:48.566192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:49.567075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:50.567732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:51.567886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:52.569645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:53.570762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:54.571248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:55.571941      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:56.572271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:57.573719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:58.574329      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:46:59.574735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:00.575125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:01.575278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:02.575991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:03.576214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:04.577239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:05.578151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:06.578647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:07.579367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:08.579662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:09.579665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:10.579875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:11.580041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:12.581193      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:13.581871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:14.582075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:15.582993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:16.583690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:17.584055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:18.584889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:19.585590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:20.585891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:21.586028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:22.586936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:23.588125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:24.588462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:25.589432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:26.589845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:27.590020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:28.590232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:29.591242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:30.591675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:31.592567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:32.595835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:33.596991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:34.597269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:35.597964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:36.598623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:37.599687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:38.600634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:39.600682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:40.601122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:41.602132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:42.602945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:43.603583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:44.603624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:45.604347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:46.605196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:47.605409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:48.606724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:49.607539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:50.607786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:51.607872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:52.608088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:53.608875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:54.610403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:55.611625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:56.611550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:57.611944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:58.612835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:47:59.613092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:00.614098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:01.614636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:02.615798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:03.616518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:03.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4215" for this suite. @ 08/28/24 00:48:03.791
• [93.926 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 08/28/24 00:48:03.812
  Aug 28 00:48:03.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-runtime @ 08/28/24 00:48:03.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:03.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:03.894
  STEP: create the container @ 08/28/24 00:48:03.9
  W0828 00:48:03.914237      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/28/24 00:48:03.914
  E0828 00:48:04.617494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:05.618428      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:06.619153      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:07.619967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/28/24 00:48:07.964
  STEP: the container should be terminated @ 08/28/24 00:48:07.973
  STEP: the termination message should be set @ 08/28/24 00:48:07.973
  Aug 28 00:48:07.974: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 08/28/24 00:48:07.976
  Aug 28 00:48:08.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7656" for this suite. @ 08/28/24 00:48:08.044
• [4.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 08/28/24 00:48:08.06
  Aug 28 00:48:08.060: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:48:08.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:08.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:08.112
  STEP: Setting up server cert @ 08/28/24 00:48:08.218
  E0828 00:48:08.620544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:48:09.257
  STEP: Deploying the webhook pod @ 08/28/24 00:48:09.278
  STEP: Wait for the deployment to be ready @ 08/28/24 00:48:09.344
  Aug 28 00:48:09.417: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:48:09.621431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:10.621564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:48:11.437
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:48:11.45
  E0828 00:48:11.622400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:12.452: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 08/28/24 00:48:12.469
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 08/28/24 00:48:12.526
  STEP: Creating a configMap that should not be mutated @ 08/28/24 00:48:12.544
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 08/28/24 00:48:12.575
  STEP: Creating a configMap that should be mutated @ 08/28/24 00:48:12.589
  E0828 00:48:12.622955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:13.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3136" for this suite. @ 08/28/24 00:48:13.054
  STEP: Destroying namespace "webhook-markers-773" for this suite. @ 08/28/24 00:48:13.08
• [5.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 08/28/24 00:48:13.121
  Aug 28 00:48:13.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 00:48:13.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:13.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:13.218
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:48:13.228
  E0828 00:48:13.623263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:14.623592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:15.623771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:16.623986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:48:17.299
  Aug 28 00:48:17.309: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-8e7fc6c5-c893-4fa1-be8d-51f5cedd56bb container client-container: <nil>
  STEP: delete the pod @ 08/28/24 00:48:17.329
  Aug 28 00:48:17.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6376" for this suite. @ 08/28/24 00:48:17.415
• [4.314 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 08/28/24 00:48:17.436
  Aug 28 00:48:17.436: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 00:48:17.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:17.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:17.505
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:48:17.52
  E0828 00:48:17.624473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:18.625061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:19.627649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:20.628475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:48:21.6
  Aug 28 00:48:21.610: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-395a3d9b-0e5e-4a9d-8cb1-ed096cfe9745 container client-container: <nil>
  STEP: delete the pod @ 08/28/24 00:48:21.626
  E0828 00:48:21.629100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:21.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6005" for this suite. @ 08/28/24 00:48:21.716
• [4.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 08/28/24 00:48:21.753
  Aug 28 00:48:21.753: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/28/24 00:48:21.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:21.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:21.801
  STEP: create the container to handle the HTTPGet hook request. @ 08/28/24 00:48:21.823
  E0828 00:48:22.630778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:23.631084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 08/28/24 00:48:23.872
  E0828 00:48:24.631525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:25.631882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 08/28/24 00:48:25.934
  STEP: delete the pod with lifecycle hook @ 08/28/24 00:48:25.996
  E0828 00:48:26.632895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:27.633259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:28.633576      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:29.633760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:30.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8909" for this suite. @ 08/28/24 00:48:30.082
• [8.366 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 08/28/24 00:48:30.12
  Aug 28 00:48:30.120: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/28/24 00:48:30.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:30.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:30.184
  STEP: creating a secret @ 08/28/24 00:48:30.194
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 08/28/24 00:48:30.211
  STEP: patching the secret @ 08/28/24 00:48:30.322
  STEP: deleting the secret using a LabelSelector @ 08/28/24 00:48:30.348
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 08/28/24 00:48:30.372
  Aug 28 00:48:30.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8044" for this suite. @ 08/28/24 00:48:30.461
• [0.367 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 08/28/24 00:48:30.489
  Aug 28 00:48:30.489: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename secrets @ 08/28/24 00:48:30.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:30.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:30.543
  STEP: Creating secret with name secret-test-3c1c89c9-bffd-4cbd-b971-f7f3c619f5e5 @ 08/28/24 00:48:30.604
  STEP: Creating a pod to test consume secrets @ 08/28/24 00:48:30.62
  E0828 00:48:30.635240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:31.635470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:32.635862      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:33.636685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:34.637450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:48:34.707
  Aug 28 00:48:34.713: INFO: Trying to get logs from node env1-test-worker-2 pod pod-secrets-f50209ee-0350-4aa9-8c97-d522b70efdd8 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/28/24 00:48:34.727
  Aug 28 00:48:34.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8318" for this suite. @ 08/28/24 00:48:34.792
  STEP: Destroying namespace "secret-namespace-6166" for this suite. @ 08/28/24 00:48:34.814
• [4.357 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 08/28/24 00:48:34.846
  Aug 28 00:48:34.846: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename gc @ 08/28/24 00:48:34.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:34.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:34.916
  Aug 28 00:48:35.054: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"5aa0510e-a01f-456f-8eaa-b40295cc9105", Controller:(*bool)(0xc003091fea), BlockOwnerDeletion:(*bool)(0xc003091feb)}}
  Aug 28 00:48:35.081: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"4d25fce5-578d-4ad4-9f04-13dc51e158b0", Controller:(*bool)(0xc001b8569a), BlockOwnerDeletion:(*bool)(0xc001b8569b)}}
  Aug 28 00:48:35.117: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"0b7d8467-5531-47a2-84c8-fc5b87c3cc8e", Controller:(*bool)(0xc001b85942), BlockOwnerDeletion:(*bool)(0xc001b85943)}}
  E0828 00:48:35.638406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:36.638487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:37.638800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:38.639958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:39.640341      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:40.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3664" for this suite. @ 08/28/24 00:48:40.171
• [5.373 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 08/28/24 00:48:40.22
  Aug 28 00:48:40.220: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 00:48:40.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:48:40.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:48:40.295
  STEP: Creating resourceQuota "e2e-rq-status-x2pj6" @ 08/28/24 00:48:40.319
  Aug 28 00:48:40.365: INFO: Resource quota "e2e-rq-status-x2pj6" reports spec: hard cpu limit of 500m
  Aug 28 00:48:40.365: INFO: Resource quota "e2e-rq-status-x2pj6" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-x2pj6" /status @ 08/28/24 00:48:40.365
  STEP: Confirm /status for "e2e-rq-status-x2pj6" resourceQuota via watch @ 08/28/24 00:48:40.409
  Aug 28 00:48:40.414: INFO: observed resourceQuota "e2e-rq-status-x2pj6" in namespace "resourcequota-59" with hard status: v1.ResourceList(nil)
  Aug 28 00:48:40.414: INFO: Found resourceQuota "e2e-rq-status-x2pj6" in namespace "resourcequota-59" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 28 00:48:40.414: INFO: ResourceQuota "e2e-rq-status-x2pj6" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 08/28/24 00:48:40.437
  Aug 28 00:48:40.480: INFO: Resource quota "e2e-rq-status-x2pj6" reports spec: hard cpu limit of 1
  Aug 28 00:48:40.480: INFO: Resource quota "e2e-rq-status-x2pj6" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-x2pj6" /status @ 08/28/24 00:48:40.48
  STEP: Confirm /status for "e2e-rq-status-x2pj6" resourceQuota via watch @ 08/28/24 00:48:40.502
  Aug 28 00:48:40.508: INFO: observed resourceQuota "e2e-rq-status-x2pj6" in namespace "resourcequota-59" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 28 00:48:40.508: INFO: Found resourceQuota "e2e-rq-status-x2pj6" in namespace "resourcequota-59" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Aug 28 00:48:40.509: INFO: ResourceQuota "e2e-rq-status-x2pj6" /status was patched
  STEP: Get "e2e-rq-status-x2pj6" /status @ 08/28/24 00:48:40.509
  Aug 28 00:48:40.522: INFO: Resourcequota "e2e-rq-status-x2pj6" reports status: hard cpu of 1
  Aug 28 00:48:40.522: INFO: Resourcequota "e2e-rq-status-x2pj6" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-x2pj6" /status before checking Spec is unchanged @ 08/28/24 00:48:40.535
  Aug 28 00:48:40.552: INFO: Resourcequota "e2e-rq-status-x2pj6" reports status: hard cpu of 2
  Aug 28 00:48:40.553: INFO: Resourcequota "e2e-rq-status-x2pj6" reports status: hard memory of 2Gi
  Aug 28 00:48:40.566: INFO: Found resourceQuota "e2e-rq-status-x2pj6" in namespace "resourcequota-59" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Aug 28 00:48:40.585: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e04918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e04960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e049c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:48:40.640993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:41.641742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:42.641494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:43.641875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:44.642278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:45.584: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbc0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbc138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbc168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:48:45.642840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:46.643451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:47.643690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:48.644162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:49.644744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:50.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbc510), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbc540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbc588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:48:50.644949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:51.645781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:52.645847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:53.646073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:54.646387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:48:55.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737410), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047374d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737500), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:48:55.647357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:56.647863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:57.648856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:58.648965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:48:59.649147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:00.580: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047377d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737830), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:00.649422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:01.649906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:02.650063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:03.650309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:04.650511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:05.574: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737aa0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737ad0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737b00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:05.651207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:06.651369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:07.651756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:08.651847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:09.652337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:10.580: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbcbe8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbcc48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbccc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:10.652837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:11.652931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:12.653762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:13.653934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:14.654517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:15.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737db8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737e60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004737ea8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:15.654593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:16.654844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:17.655927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:18.656359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:19.657204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:20.574: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001392288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001392318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001392360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:20.658357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:21.658546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:22.658713      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:23.659520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:24.659912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:25.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001392870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013928e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001392918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:25.660212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:26.661132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:27.661439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:28.662574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:29.663027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:30.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbd398), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbd3c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbd440), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:30.663997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:31.664772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:32.664992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:33.665236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:34.665719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:35.574: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e04f78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e04fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e05020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:35.666068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:36.666752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:37.667643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:38.668337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:39.669137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:40.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001392ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393098), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:40.670084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:41.670347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:42.670531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:43.670790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:44.671018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:45.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013934b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393560), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:45.671771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:46.672255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:47.672382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:48.672588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:49.672891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:50.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e056b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e056f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e05770), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:50.673650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:51.673894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:52.674047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:53.674683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:54.675008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:55.676064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:49:55.791: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393a28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393a88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393ae8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:49:56.676587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:57.676780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:58.677272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:49:59.677411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:00.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbd998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbd9e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbda58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:00.677549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:01.677920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:02.678005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:03.678803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:04.679814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:05.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e05db8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e05e18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e05e78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:05.680593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:06.681220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:07.681282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:08.681749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:09.681823      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:10.579: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbdf98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000cbdfe0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688048), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:10.682014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:11.682335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:12.682507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:13.682649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:14.683002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:15.574: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046883c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:15.683748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:16.684219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:17.685453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:18.685626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:19.686265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:20.574: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001393f80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858000), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858060), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:20.686562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:21.686980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:22.687870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:23.688131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:24.688592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:25.582: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038586a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038586f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858768), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:25.689298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:26.690479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:27.691640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:28.692382      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:29.693324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:30.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312888), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013129a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:30.694021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:31.694918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:32.696592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:33.697031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:34.698050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:35.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858f90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003859068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:35.698484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:36.699022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:37.699206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:38.699406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:39.700143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:40.580: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038583f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038584e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:40.700535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:41.701192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:42.702204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:43.703308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:44.703249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:45.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a821c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a821f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:45.703594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:46.703826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:47.703944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:48.704593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:49.705235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:50.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858cf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858d20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003858d98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:50.705975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:51.706439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:52.707508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:53.707650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:54.708132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:50:55.574: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038590f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003859170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038591a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:50:55.709128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:56.709642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:57.710686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:58.711068      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:50:59.711553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:00.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:00.712552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:01.712943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:02.713617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:03.713974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:04.714334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:05.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046886f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:05.715496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:06.715942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:07.716804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:08.717373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:09.717979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:10.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688c90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688cc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004688d50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:10.718840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:11.719504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:12.720121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:13.720691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:14.721346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:15.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82888), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:15.721645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:16.722120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:17.723136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:18.724297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:19.724496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:20.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82c30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:20.724800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:21.725112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:22.725096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:23.725393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:24.725746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:25.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82e58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a82e88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:25.726065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:26.726982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:27.727264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:28.727613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:29.727910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:30.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83188), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a831b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a831e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:30.728676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:31.728946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:32.729136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:33.729543      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:34.729629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:35.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004689638), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004689680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046896c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:35.730298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:36.730740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:37.731509      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:38.731345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:39.731565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:40.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004689998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046899f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004689a70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:40.732177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:41.732492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:42.732541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:43.732750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:44.732901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:45.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83500), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83548), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83578), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:45.733697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:46.734674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:47.735481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:48.736090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:49.736719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:50.574: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004689e30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004689e90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004689ef0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:50.736912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:51.737402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:52.737836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:53.738874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:54.739282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:51:55.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83a10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83a40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83a70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:51:55.740033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:56.740651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:57.741152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:58.741233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:51:59.741507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:00.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003859d40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003859dd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003859e48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:00.741607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:01.741789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:02.742071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:03.742098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:04.742414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:05.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013124f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:05.743285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:06.743296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:07.744010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:08.744858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:09.745292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:10.583: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83d88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83de8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a83e18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:10.746430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:11.746873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:12.747688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:13.748122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:14.749645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:15.580: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312cc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312d50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:15.749640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:16.750082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:17.750182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:18.750392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:19.750792      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:20.576: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044200c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044200f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004420120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:20.751753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:21.752324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:22.752972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:23.753522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:24.754014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:25.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0016644f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001664558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0016645a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:25.754283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:26.754741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:27.755161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:28.755785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:29.756240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:30.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013133b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001313428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001313458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:30.756407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:31.757305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:32.757910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:33.758493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:34.759109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:35.577: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001313830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001313908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001313980), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:35.759794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:36.760387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:37.761102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:38.761499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:39.762246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:40.583: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013122b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013122e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:40.762907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:41.763182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:42.763293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:43.763601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:44.763786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:45.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013127b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001312858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:45.764477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:46.765050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:47.765234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:48.765695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:49.766222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:50.575: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004420198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044201c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004420210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:50.766766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:51.767182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:52.767752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:53.768115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:54.768266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:52:55.579: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-x2pj6", GenerateName:"", Namespace:"resourcequota-59", SelfLink:"", UID:"0f130062-04e7-4f50-ae1f-324bd8e70aa1", ResourceVersion:"38935185", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-x2pj6"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004420420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004420450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 0, 48, 40, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044204b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0828 00:52:55.768411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:56.768925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:57.769776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:58.770223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:52:59.770567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:00.578: INFO: ResourceQuota "e2e-rq-status-x2pj6" Spec was unchanged and /status reset
  Aug 28 00:53:00.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-59" for this suite. @ 08/28/24 00:53:00.593
• [260.406 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 08/28/24 00:53:00.627
  Aug 28 00:53:00.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replication-controller @ 08/28/24 00:53:00.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:00.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:00.697
  Aug 28 00:53:00.710: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 08/28/24 00:53:00.738
  STEP: Checking rc "condition-test" has the desired failure condition set @ 08/28/24 00:53:00.749
  E0828 00:53:00.771226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 08/28/24 00:53:01.764
  E0828 00:53:01.771849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:01.797: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 08/28/24 00:53:01.797
  Aug 28 00:53:01.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2697" for this suite. @ 08/28/24 00:53:01.824
• [1.222 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 08/28/24 00:53:01.849
  Aug 28 00:53:01.849: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename aggregator @ 08/28/24 00:53:01.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:01.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:01.915
  Aug 28 00:53:01.924: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Registering the sample API server. @ 08/28/24 00:53:01.925
  E0828 00:53:02.772028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:02.892: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Aug 28 00:53:03.024: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0828 00:53:03.772849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:04.773456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:05.169: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:05.773842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:06.774616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:07.183: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:07.775567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:08.776559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:09.185: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:09.776767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:10.777218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:11.187: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:11.777033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:12.777438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:13.179: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:13.777494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:14.778259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:15.179: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:15.778787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:16.779010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:17.178: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:17.779030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:18.779593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:19.178: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:19.780771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:20.780861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:21.187: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:21.781654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:22.781747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:23.182: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:23.781992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:24.782248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:25.335: INFO: Waited 142.051566ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 08/28/24 00:53:25.47
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 08/28/24 00:53:25.481
  STEP: List APIServices @ 08/28/24 00:53:25.505
  Aug 28 00:53:25.521: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 08/28/24 00:53:25.521
  Aug 28 00:53:25.556: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 08/28/24 00:53:25.556
  Aug 28 00:53:25.589: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 25, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 08/28/24 00:53:25.589
  Aug 28 00:53:25.599: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-08-28 00:53:25 +0000 UTC Passed all checks passed}
  Aug 28 00:53:25.599: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 28 00:53:25.599: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 08/28/24 00:53:25.599
  Aug 28 00:53:25.630: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-783884871" @ 08/28/24 00:53:25.63
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 08/28/24 00:53:25.658
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 08/28/24 00:53:25.676
  STEP: Patch APIService Status @ 08/28/24 00:53:25.692
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 08/28/24 00:53:25.708
  Aug 28 00:53:25.720: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-08-28 00:53:25 +0000 UTC Passed all checks passed}
  Aug 28 00:53:25.720: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 28 00:53:25.720: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Aug 28 00:53:25.721: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 08/28/24 00:53:25.721
  STEP: Confirm that the generated APIService has been deleted @ 08/28/24 00:53:25.753
  Aug 28 00:53:25.753: INFO: Requesting list of APIServices to confirm quantity
  Aug 28 00:53:25.767: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Aug 28 00:53:25.767: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  E0828 00:53:25.782747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:26.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-395" for this suite. @ 08/28/24 00:53:26.241
• [24.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 08/28/24 00:53:26.272
  Aug 28 00:53:26.272: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:53:26.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:26.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:26.327
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/28/24 00:53:26.343
  E0828 00:53:26.783658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:27.785714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:28.786098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:29.787520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:53:30.402
  Aug 28 00:53:30.409: INFO: Trying to get logs from node env1-test-worker-2 pod pod-9fcc79c8-709f-4659-b299-e8bd97def875 container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:53:30.441
  Aug 28 00:53:30.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1434" for this suite. @ 08/28/24 00:53:30.504
• [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 08/28/24 00:53:30.527
  Aug 28 00:53:30.528: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename namespaces @ 08/28/24 00:53:30.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:30.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:30.57
  STEP: creating a Namespace @ 08/28/24 00:53:30.577
  STEP: patching the Namespace @ 08/28/24 00:53:30.621
  STEP: get the Namespace and ensuring it has the label @ 08/28/24 00:53:30.63
  Aug 28 00:53:30.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1336" for this suite. @ 08/28/24 00:53:30.662
  STEP: Destroying namespace "nspatchtest-17bfeb90-771e-4ce3-914e-114f8b219776-9257" for this suite. @ 08/28/24 00:53:30.687
• [0.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 08/28/24 00:53:30.712
  Aug 28 00:53:30.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svcaccounts @ 08/28/24 00:53:30.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:30.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:30.753
  STEP: creating a ServiceAccount @ 08/28/24 00:53:30.762
  STEP: watching for the ServiceAccount to be added @ 08/28/24 00:53:30.781
  STEP: patching the ServiceAccount @ 08/28/24 00:53:30.784
  E0828 00:53:30.787784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 08/28/24 00:53:30.799
  STEP: deleting the ServiceAccount @ 08/28/24 00:53:30.814
  Aug 28 00:53:30.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5130" for this suite. @ 08/28/24 00:53:30.861
• [0.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 08/28/24 00:53:30.886
  Aug 28 00:53:30.886: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/28/24 00:53:30.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:30.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:30.939
  STEP: creating a target pod @ 08/28/24 00:53:30.947
  E0828 00:53:31.788095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:32.788864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:33.789088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:34.789822      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 08/28/24 00:53:35.043
  E0828 00:53:35.790054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:36.790637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 08/28/24 00:53:37.119
  Aug 28 00:53:37.119: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7735 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 28 00:53:37.119: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  Aug 28 00:53:37.120: INFO: ExecWithOptions: Clientset creation
  Aug 28 00:53:37.120: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-7735/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 28 00:53:37.249: INFO: Exec stderr: ""
  Aug 28 00:53:37.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7735" for this suite. @ 08/28/24 00:53:37.31
• [6.478 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 08/28/24 00:53:37.366
  Aug 28 00:53:37.366: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 00:53:37.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:37.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:37.497
  STEP: Creating a ResourceQuota @ 08/28/24 00:53:37.506
  STEP: Getting a ResourceQuota @ 08/28/24 00:53:37.541
  STEP: Listing all ResourceQuotas with LabelSelector @ 08/28/24 00:53:37.559
  STEP: Patching the ResourceQuota @ 08/28/24 00:53:37.568
  STEP: Deleting a Collection of ResourceQuotas @ 08/28/24 00:53:37.613
  STEP: Verifying the deleted ResourceQuota @ 08/28/24 00:53:37.719
  Aug 28 00:53:37.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2701" for this suite. @ 08/28/24 00:53:37.778
  E0828 00:53:37.791835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.452 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 08/28/24 00:53:37.818
  Aug 28 00:53:37.818: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:53:37.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:37.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:37.983
  STEP: Setting up server cert @ 08/28/24 00:53:38.158
  E0828 00:53:38.792132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:53:38.831
  STEP: Deploying the webhook pod @ 08/28/24 00:53:38.851
  STEP: Wait for the deployment to be ready @ 08/28/24 00:53:38.891
  Aug 28 00:53:38.918: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:53:39.792802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:40.793570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:40.951: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 0, 53, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 0, 53, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 00:53:41.794227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:42.794987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:53:42.974
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:53:43.085
  E0828 00:53:43.796079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:44.086: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/28/24 00:53:44.108
  E0828 00:53:44.796781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a pod @ 08/28/24 00:53:45.202
  E0828 00:53:45.796826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:46.797215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 08/28/24 00:53:47.249
  Aug 28 00:53:47.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=webhook-1485 attach --namespace=webhook-1485 to-be-attached-pod -i -c=container1'
  Aug 28 00:53:47.446: INFO: rc: 1
  Aug 28 00:53:47.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1485" for this suite. @ 08/28/24 00:53:47.774
  E0828 00:53:47.799219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-7906" for this suite. @ 08/28/24 00:53:47.837
• [10.053 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 08/28/24 00:53:47.873
  Aug 28 00:53:47.874: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename gc @ 08/28/24 00:53:47.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:47.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:47.961
  STEP: create the deployment @ 08/28/24 00:53:47.971
  W0828 00:53:47.997599      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/28/24 00:53:47.998
  STEP: delete the deployment @ 08/28/24 00:53:48.522
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 08/28/24 00:53:48.541
  E0828 00:53:48.800226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/28/24 00:53:49.086
  Aug 28 00:53:49.261: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 28 00:53:49.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7057" for this suite. @ 08/28/24 00:53:49.271
• [1.415 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 08/28/24 00:53:49.29
  Aug 28 00:53:49.291: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 00:53:49.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:49.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:49.356
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3686 @ 08/28/24 00:53:49.364
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/28/24 00:53:49.397
  STEP: creating service externalsvc in namespace services-3686 @ 08/28/24 00:53:49.397
  STEP: creating replication controller externalsvc in namespace services-3686 @ 08/28/24 00:53:49.435
  I0828 00:53:49.450965      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3686, replica count: 2
  E0828 00:53:49.801125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:50.801412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:51.801640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0828 00:53:52.502905      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 08/28/24 00:53:52.512
  Aug 28 00:53:52.554: INFO: Creating new exec pod
  E0828 00:53:52.801890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:53.802178      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:54.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=services-3686 exec execpod2kdt7 -- /bin/sh -x -c nslookup clusterip-service.services-3686.svc.cluster.local'
  E0828 00:53:54.802884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:54.909: INFO: stderr: "+ nslookup clusterip-service.services-3686.svc.cluster.local\n"
  Aug 28 00:53:54.909: INFO: stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nclusterip-service.services-3686.svc.cluster.local\tcanonical name = externalsvc.services-3686.svc.cluster.local.\nName:\texternalsvc.services-3686.svc.cluster.local\nAddress: 10.233.45.39\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-3686, will wait for the garbage collector to delete the pods @ 08/28/24 00:53:54.91
  Aug 28 00:53:55.008: INFO: Deleting ReplicationController externalsvc took: 34.032673ms
  Aug 28 00:53:55.109: INFO: Terminating ReplicationController externalsvc pods took: 101.331015ms
  E0828 00:53:55.803695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:56.804348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:57.805533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:53:58.367: INFO: Cleaning up the ClusterIP to ExternalName test service
  Aug 28 00:53:58.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3686" for this suite. @ 08/28/24 00:53:58.437
• [9.167 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 08/28/24 00:53:58.458
  Aug 28 00:53:58.458: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename emptydir @ 08/28/24 00:53:58.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:53:58.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:53:58.512
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 08/28/24 00:53:58.521
  E0828 00:53:58.806518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:53:59.806715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:00.807086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:01.808088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:54:02.574
  Aug 28 00:54:02.586: INFO: Trying to get logs from node env1-test-worker-2 pod pod-af8c2105-d79b-43fb-a967-d40136766c01 container test-container: <nil>
  STEP: delete the pod @ 08/28/24 00:54:02.605
  Aug 28 00:54:02.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3715" for this suite. @ 08/28/24 00:54:02.667
• [4.229 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 08/28/24 00:54:02.692
  Aug 28 00:54:02.692: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename watch @ 08/28/24 00:54:02.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:54:02.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:54:02.744
  STEP: creating a new configmap @ 08/28/24 00:54:02.751
  STEP: modifying the configmap once @ 08/28/24 00:54:02.764
  STEP: modifying the configmap a second time @ 08/28/24 00:54:02.786
  E0828 00:54:02.808556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the configmap @ 08/28/24 00:54:02.84
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 08/28/24 00:54:02.905
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 08/28/24 00:54:02.909
  Aug 28 00:54:02.909: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7033  7da0b86d-31a8-42f9-b5d4-9328855502ba 38936902 0 2024-08-28 00:54:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-08-28 00:54:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 00:54:02.911: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7033  7da0b86d-31a8-42f9-b5d4-9328855502ba 38936904 0 2024-08-28 00:54:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-08-28 00:54:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 00:54:02.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7033" for this suite. @ 08/28/24 00:54:02.942
• [0.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 08/28/24 00:54:02.972
  Aug 28 00:54:02.972: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/28/24 00:54:02.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:54:03.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:54:03.055
  STEP: Creating service test in namespace statefulset-3921 @ 08/28/24 00:54:03.067
  STEP: Creating statefulset ss in namespace statefulset-3921 @ 08/28/24 00:54:03.091
  Aug 28 00:54:03.178: INFO: Found 0 stateful pods, waiting for 1
  E0828 00:54:03.809455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:04.810249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:05.810483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:06.811283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:07.811958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:08.812209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:09.812379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:10.812669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:11.812997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:12.813201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:54:13.169: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 08/28/24 00:54:13.182
  STEP: updating a scale subresource @ 08/28/24 00:54:13.189
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/28/24 00:54:13.208
  STEP: Patch a scale subresource @ 08/28/24 00:54:13.229
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/28/24 00:54:13.256
  Aug 28 00:54:13.282: INFO: Deleting all statefulset in ns statefulset-3921
  Aug 28 00:54:13.303: INFO: Scaling statefulset ss to 0
  E0828 00:54:13.814087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:14.814133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:15.815084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:16.815205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:17.816029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:18.816967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:19.817833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:20.818247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:21.819094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:22.819466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:54:23.424: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 28 00:54:23.433: INFO: Deleting statefulset ss
  Aug 28 00:54:23.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3921" for this suite. @ 08/28/24 00:54:23.552
• [20.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 08/28/24 00:54:23.583
  Aug 28 00:54:23.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl-logs @ 08/28/24 00:54:23.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:54:23.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:54:23.639
  STEP: creating an pod @ 08/28/24 00:54:23.646
  Aug 28 00:54:23.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Aug 28 00:54:23.816: INFO: stderr: ""
  Aug 28 00:54:23.816: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 08/28/24 00:54:23.817
  Aug 28 00:54:23.817: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0828 00:54:23.820355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:24.820779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:25.821064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:54:25.846: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 08/28/24 00:54:25.846
  Aug 28 00:54:25.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 logs logs-generator logs-generator'
  Aug 28 00:54:26.071: INFO: stderr: ""
  Aug 28 00:54:26.071: INFO: stdout: "I0828 00:54:24.871826       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/99z 493\nI0828 00:54:25.072310       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/whp4 397\nI0828 00:54:25.273168       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/glb 208\nI0828 00:54:25.472616       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/crgs 312\nI0828 00:54:25.672863       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/cv4 232\nI0828 00:54:25.872669       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/jdb 578\n"
  STEP: limiting log lines @ 08/28/24 00:54:26.071
  Aug 28 00:54:26.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 logs logs-generator logs-generator --tail=1'
  Aug 28 00:54:26.274: INFO: stderr: ""
  Aug 28 00:54:26.275: INFO: stdout: "I0828 00:54:26.072074       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/2rt 533\n"
  Aug 28 00:54:26.275: INFO: got output "I0828 00:54:26.072074       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/2rt 533\n"
  STEP: limiting log bytes @ 08/28/24 00:54:26.276
  Aug 28 00:54:26.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 logs logs-generator logs-generator --limit-bytes=1'
  Aug 28 00:54:26.426: INFO: stderr: ""
  Aug 28 00:54:26.426: INFO: stdout: "I"
  Aug 28 00:54:26.426: INFO: got output "I"
  STEP: exposing timestamps @ 08/28/24 00:54:26.426
  Aug 28 00:54:26.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 logs logs-generator logs-generator --tail=1 --timestamps'
  Aug 28 00:54:26.566: INFO: stderr: ""
  Aug 28 00:54:26.566: INFO: stdout: "2024-08-28T00:54:26.472938016Z I0828 00:54:26.472714       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/76z 549\n"
  Aug 28 00:54:26.566: INFO: got output "2024-08-28T00:54:26.472938016Z I0828 00:54:26.472714       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/76z 549\n"
  STEP: restricting to a time range @ 08/28/24 00:54:26.566
  E0828 00:54:26.821151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:27.821195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:28.821733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:54:29.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 logs logs-generator logs-generator --since=1s'
  Aug 28 00:54:29.206: INFO: stderr: ""
  Aug 28 00:54:29.206: INFO: stdout: "I0828 00:54:28.272364       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/j9x 209\nI0828 00:54:28.472804       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/f5mr 429\nI0828 00:54:28.672322       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/psn8 388\nI0828 00:54:28.872695       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/q6m 332\nI0828 00:54:29.072100       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/j6r 226\n"
  Aug 28 00:54:29.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 logs logs-generator logs-generator --since=24h'
  Aug 28 00:54:29.354: INFO: stderr: ""
  Aug 28 00:54:29.354: INFO: stdout: "I0828 00:54:24.871826       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/99z 493\nI0828 00:54:25.072310       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/whp4 397\nI0828 00:54:25.273168       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/glb 208\nI0828 00:54:25.472616       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/crgs 312\nI0828 00:54:25.672863       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/cv4 232\nI0828 00:54:25.872669       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/jdb 578\nI0828 00:54:26.072074       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/2rt 533\nI0828 00:54:26.271963       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/qm7 307\nI0828 00:54:26.472714       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/76z 549\nI0828 00:54:26.672132       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/kd2q 367\nI0828 00:54:26.872644       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/kq9s 591\nI0828 00:54:27.072078       1 logs_generator.go:76] 11 POST /api/v1/namespaces/ns/pods/8g68 522\nI0828 00:54:27.272548       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/dq69 548\nI0828 00:54:27.471954       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/wx75 554\nI0828 00:54:27.672542       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/482 475\nI0828 00:54:27.872041       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/kg5b 563\nI0828 00:54:28.072722       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/q45 231\nI0828 00:54:28.272364       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/j9x 209\nI0828 00:54:28.472804       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/f5mr 429\nI0828 00:54:28.672322       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/psn8 388\nI0828 00:54:28.872695       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/q6m 332\nI0828 00:54:29.072100       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/j6r 226\nI0828 00:54:29.272585       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/78x 462\n"
  Aug 28 00:54:29.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-logs-348 delete pod logs-generator'
  E0828 00:54:29.822041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:54:30.458: INFO: stderr: ""
  Aug 28 00:54:30.458: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Aug 28 00:54:30.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-348" for this suite. @ 08/28/24 00:54:30.48
• [6.914 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 08/28/24 00:54:30.497
  Aug 28 00:54:30.497: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename container-runtime @ 08/28/24 00:54:30.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:54:30.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:54:30.55
  STEP: create the container @ 08/28/24 00:54:30.556
  W0828 00:54:30.594833      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/28/24 00:54:30.595
  E0828 00:54:30.823194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:31.824055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:32.824303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:33.825139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 08/28/24 00:54:34.672
  STEP: the container should be terminated @ 08/28/24 00:54:34.677
  STEP: the termination message should be set @ 08/28/24 00:54:34.677
  Aug 28 00:54:34.677: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 08/28/24 00:54:34.677
  Aug 28 00:54:34.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5727" for this suite. @ 08/28/24 00:54:34.73
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 08/28/24 00:54:34.754
  Aug 28 00:54:34.754: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:54:34.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:54:34.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:54:34.813
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 00:54:34.822
  E0828 00:54:34.825222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:35.825515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:36.826112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:37.827726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:38.828668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:54:38.877
  Aug 28 00:54:38.885: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-93d43dfd-63c9-4f3b-a212-58fc7a06ba05 container client-container: <nil>
  STEP: delete the pod @ 08/28/24 00:54:38.903
  Aug 28 00:54:38.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6773" for this suite. @ 08/28/24 00:54:38.988
• [4.258 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 08/28/24 00:54:39.012
  Aug 28 00:54:39.012: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-watch @ 08/28/24 00:54:39.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:54:39.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:54:39.064
  Aug 28 00:54:39.071: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:54:39.828667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:40.829538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:41.829937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:42.831110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:43.831126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:44.831899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:45.832294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 08/28/24 00:54:46.74
  Aug 28 00:54:46.771: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-08-28T00:54:46Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-08-28T00:54:46Z]] name:name1 resourceVersion:38937301 uid:e45050ca-b3cc-4463-bd9c-6a1310f99804] num:map[num1:9223372036854775807 num2:1000000]]}
  E0828 00:54:46.832781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:47.833182      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:48.833444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:49.834253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:50.834538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:51.835194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:52.835683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:53.835875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:54.836682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:55.837551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 08/28/24 00:54:56.772
  Aug 28 00:54:56.790: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-08-28T00:54:56Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-08-28T00:54:56Z]] name:name2 resourceVersion:38937337 uid:5307db4d-0da3-445c-9889-37e1c5a6eac0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0828 00:54:56.838643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:57.838846      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:58.839025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:54:59.839332      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:00.839806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:01.840221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:02.840647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:03.841170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:04.841337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:05.841864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 08/28/24 00:55:06.791
  Aug 28 00:55:06.810: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-08-28T00:54:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-08-28T00:55:06Z]] name:name1 resourceVersion:38937374 uid:e45050ca-b3cc-4463-bd9c-6a1310f99804] num:map[num1:9223372036854775807 num2:1000000]]}
  E0828 00:55:06.842416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:07.842855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:08.843295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:09.843306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:10.844061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:11.844261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:12.844640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:13.845259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:14.846089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:15.846505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 08/28/24 00:55:16.811
  Aug 28 00:55:16.829: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-08-28T00:54:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-08-28T00:55:16Z]] name:name2 resourceVersion:38937410 uid:5307db4d-0da3-445c-9889-37e1c5a6eac0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0828 00:55:16.846767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:17.847084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:18.847466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:19.847783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:20.848267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:21.849015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:22.849286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:23.850036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:24.850594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:25.851771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 08/28/24 00:55:26.829
  E0828 00:55:26.852349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:26.855: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-08-28T00:54:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-08-28T00:55:06Z]] name:name1 resourceVersion:38937447 uid:e45050ca-b3cc-4463-bd9c-6a1310f99804] num:map[num1:9223372036854775807 num2:1000000]]}
  E0828 00:55:27.852659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:28.853059      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:29.853282      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:30.853734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:31.854751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:32.855083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:33.855609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:34.856036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:35.856647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 08/28/24 00:55:36.856
  E0828 00:55:36.857090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:36.897: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-08-28T00:54:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-08-28T00:55:16Z]] name:name2 resourceVersion:38937482 uid:5307db4d-0da3-445c-9889-37e1c5a6eac0] num:map[num1:9223372036854775807 num2:1000000]]}
  E0828 00:55:37.858005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:38.858486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:39.858873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:40.858982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:41.859944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:42.860044      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:43.860260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:44.860487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:45.860809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:55:46.861591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:47.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-681" for this suite. @ 08/28/24 00:55:47.453
• [68.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 08/28/24 00:55:47.476
  Aug 28 00:55:47.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename daemonsets @ 08/28/24 00:55:47.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:55:47.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:55:47.628
  Aug 28 00:55:47.724: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/28/24 00:55:47.744
  Aug 28 00:55:47.770: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:47.771: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:47.773: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:47.783: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:55:47.783: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:55:47.862394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:48.764: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:48.764: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:48.764: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:48.779: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:55:48.779: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:55:48.862289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:49.755: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:49.755: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:49.755: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:49.764: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:55:49.765: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:55:49.862805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:50.757: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:50.757: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:50.757: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:50.769: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 28 00:55:50.769: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 08/28/24 00:55:50.822
  E0828 00:55:50.863168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Check that daemon pods images are updated. @ 08/28/24 00:55:50.874
  Aug 28 00:55:50.916: INFO: Wrong image for pod: daemon-set-7gnb2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:50.916: INFO: Wrong image for pod: daemon-set-tgttl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:50.916: INFO: Wrong image for pod: daemon-set-w7qzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:50.928: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:50.928: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:50.929: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:55:51.864404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:51.887: INFO: Wrong image for pod: daemon-set-tgttl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:51.888: INFO: Wrong image for pod: daemon-set-w7qzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:51.912: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:51.912: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:51.912: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:55:52.864441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:52.908: INFO: Pod daemon-set-kj7bp is not available
  Aug 28 00:55:52.908: INFO: Wrong image for pod: daemon-set-tgttl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:52.908: INFO: Wrong image for pod: daemon-set-w7qzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:52.934: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:52.934: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:52.935: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:55:53.864762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:53.889: INFO: Wrong image for pod: daemon-set-tgttl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:53.901: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:53.901: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:53.901: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:55:54.865171      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:54.884: INFO: Wrong image for pod: daemon-set-tgttl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 28 00:55:54.884: INFO: Pod daemon-set-wbknn is not available
  Aug 28 00:55:54.894: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:54.894: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:54.894: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:55:55.865268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:55.907: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:55.909: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:55.912: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0828 00:55:56.866251      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:56.888: INFO: Pod daemon-set-q87cq is not available
  Aug 28 00:55:56.902: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:56.902: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:56.902: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 08/28/24 00:55:56.903
  Aug 28 00:55:56.916: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:56.917: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:56.918: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:56.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:55:56.936: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:55:57.867584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:57.917: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:57.918: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:57.918: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:57.930: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:55:57.930: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:55:58.868021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:58.918: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:58.918: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:58.918: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:58.927: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 28 00:55:58.928: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:55:59.868078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:55:59.914: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:59.914: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:59.914: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:55:59.923: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 28 00:55:59.923: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/28/24 00:55:59.959
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6576, will wait for the garbage collector to delete the pods @ 08/28/24 00:55:59.959
  Aug 28 00:56:00.033: INFO: Deleting DaemonSet.extensions daemon-set took: 14.179932ms
  Aug 28 00:56:00.234: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.987486ms
  E0828 00:56:00.869024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:01.870049      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:02.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:56:02.144: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 28 00:56:02.151: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38937736"},"items":null}

  Aug 28 00:56:02.159: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38937736"},"items":null}

  Aug 28 00:56:02.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6576" for this suite. @ 08/28/24 00:56:02.202
• [14.746 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 08/28/24 00:56:02.223
  Aug 28 00:56:02.223: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:56:02.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:02.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:02.26
  STEP: Setting up server cert @ 08/28/24 00:56:02.338
  E0828 00:56:02.870456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:56:03.829
  STEP: Deploying the webhook pod @ 08/28/24 00:56:03.845
  E0828 00:56:03.871655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 08/28/24 00:56:03.891
  Aug 28 00:56:03.922: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0828 00:56:04.872234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:05.872984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:56:05.974
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:56:06.056
  E0828 00:56:06.872966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:07.057: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 08/28/24 00:56:07.076
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 08/28/24 00:56:07.083
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 08/28/24 00:56:07.083
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 08/28/24 00:56:07.083
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 08/28/24 00:56:07.086
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/28/24 00:56:07.086
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/28/24 00:56:07.088
  Aug 28 00:56:07.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7411" for this suite. @ 08/28/24 00:56:07.217
  STEP: Destroying namespace "webhook-markers-303" for this suite. @ 08/28/24 00:56:07.238
• [5.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 08/28/24 00:56:07.264
  Aug 28 00:56:07.264: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename security-context-test @ 08/28/24 00:56:07.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:07.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:07.365
  E0828 00:56:07.873146      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:08.873791      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:09.874159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:10.874623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:11.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8894" for this suite. @ 08/28/24 00:56:11.452
• [4.210 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 08/28/24 00:56:11.473
  Aug 28 00:56:11.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/28/24 00:56:11.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:11.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:11.533
  STEP: Creating service test in namespace statefulset-5892 @ 08/28/24 00:56:11.538
  Aug 28 00:56:11.583: INFO: Found 0 stateful pods, waiting for 1
  E0828 00:56:11.875812      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:12.876565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:13.876939      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:14.876895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:15.877102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:16.877349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:17.877574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:18.877835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:19.878109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:20.878241      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:21.584: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 08/28/24 00:56:21.598
  W0828 00:56:21.620436      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Aug 28 00:56:21.636: INFO: Found 1 stateful pods, waiting for 2
  E0828 00:56:21.878537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:22.879007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:23.879664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:24.880343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:25.880736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:26.881486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:27.881938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:28.882255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:29.882692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:30.883243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:31.637: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:56:31.637: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 08/28/24 00:56:31.669
  STEP: Delete all of the StatefulSets @ 08/28/24 00:56:31.678
  STEP: Verify that StatefulSets have been deleted @ 08/28/24 00:56:31.703
  Aug 28 00:56:31.712: INFO: Deleting all statefulset in ns statefulset-5892
  Aug 28 00:56:31.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5892" for this suite. @ 08/28/24 00:56:31.83
• [20.388 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 08/28/24 00:56:31.866
  Aug 28 00:56:31.866: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/28/24 00:56:31.87
  E0828 00:56:31.883762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:31.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:31.935
  STEP: Creating configMap with name configmap-test-volume-map-f5c1a19e-a530-42c8-84e8-464c9224940e @ 08/28/24 00:56:31.945
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:56:31.957
  E0828 00:56:32.884610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:33.885221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:34.885385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:35.887667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:56:36.032
  Aug 28 00:56:36.054: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-29f680ec-5e1a-48b4-91ed-f35eaa95cf49 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:56:36.117
  Aug 28 00:56:36.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1902" for this suite. @ 08/28/24 00:56:36.193
• [4.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 08/28/24 00:56:36.21
  Aug 28 00:56:36.210: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename csistoragecapacity @ 08/28/24 00:56:36.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:36.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:36.281
  STEP: getting /apis @ 08/28/24 00:56:36.288
  STEP: getting /apis/storage.k8s.io @ 08/28/24 00:56:36.301
  STEP: getting /apis/storage.k8s.io/v1 @ 08/28/24 00:56:36.306
  STEP: creating @ 08/28/24 00:56:36.31
  STEP: watching @ 08/28/24 00:56:36.382
  Aug 28 00:56:36.382: INFO: starting watch
  STEP: getting @ 08/28/24 00:56:36.403
  STEP: listing in namespace @ 08/28/24 00:56:36.409
  STEP: listing across namespaces @ 08/28/24 00:56:36.417
  STEP: patching @ 08/28/24 00:56:36.423
  STEP: updating @ 08/28/24 00:56:36.456
  Aug 28 00:56:36.479: INFO: waiting for watch events with expected annotations in namespace
  Aug 28 00:56:36.480: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 08/28/24 00:56:36.48
  STEP: deleting a collection @ 08/28/24 00:56:36.522
  Aug 28 00:56:36.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-732" for this suite. @ 08/28/24 00:56:36.568
• [0.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 08/28/24 00:56:36.58
  Aug 28 00:56:36.580: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/28/24 00:56:36.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:36.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:36.626
  STEP: Creating service test in namespace statefulset-664 @ 08/28/24 00:56:36.63
  STEP: Creating statefulset ss in namespace statefulset-664 @ 08/28/24 00:56:36.666
  Aug 28 00:56:36.692: INFO: Found 0 stateful pods, waiting for 1
  E0828 00:56:36.888074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:37.889062      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:38.889345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:39.890429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:40.890999      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:41.891931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:42.892980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:43.893353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:44.893694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:45.894321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:46.701: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 08/28/24 00:56:46.728
  STEP: Getting /status @ 08/28/24 00:56:46.743
  Aug 28 00:56:46.750: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 08/28/24 00:56:46.75
  Aug 28 00:56:46.787: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 08/28/24 00:56:46.787
  Aug 28 00:56:46.796: INFO: Observed &StatefulSet event: ADDED
  Aug 28 00:56:46.796: INFO: Found Statefulset ss in namespace statefulset-664 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 28 00:56:46.796: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 08/28/24 00:56:46.796
  Aug 28 00:56:46.796: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 28 00:56:46.813: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 08/28/24 00:56:46.814
  Aug 28 00:56:46.823: INFO: Observed &StatefulSet event: ADDED
  Aug 28 00:56:46.824: INFO: Deleting all statefulset in ns statefulset-664
  Aug 28 00:56:46.835: INFO: Scaling statefulset ss to 0
  E0828 00:56:46.895645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:47.895647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:48.895929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:49.896886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:50.897147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:51.897860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:52.897969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:53.898321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:54.898693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:55.898946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:56.863: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 28 00:56:56.871: INFO: Deleting statefulset ss
  E0828 00:56:56.898926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:56:56.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-664" for this suite. @ 08/28/24 00:56:56.928
• [20.373 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 08/28/24 00:56:56.955
  Aug 28 00:56:56.956: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/28/24 00:56:56.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:57.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:57.008
  STEP: Starting the proxy @ 08/28/24 00:56:57.015
  Aug 28 00:56:57.016: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-5977 proxy --unix-socket=/tmp/kubectl-proxy-unix487980742/test'
  STEP: retrieving proxy /api/ output @ 08/28/24 00:56:57.138
  Aug 28 00:56:57.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5977" for this suite. @ 08/28/24 00:56:57.153
• [0.221 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 08/28/24 00:56:57.177
  Aug 28 00:56:57.177: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename apf @ 08/28/24 00:56:57.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:57.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:57.221
  STEP: getting /apis @ 08/28/24 00:56:57.228
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 08/28/24 00:56:57.238
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 08/28/24 00:56:57.242
  STEP: creating @ 08/28/24 00:56:57.245
  STEP: getting @ 08/28/24 00:56:57.337
  STEP: listing @ 08/28/24 00:56:57.344
  STEP: watching @ 08/28/24 00:56:57.353
  Aug 28 00:56:57.353: INFO: starting watch
  STEP: patching @ 08/28/24 00:56:57.356
  STEP: updating @ 08/28/24 00:56:57.393
  Aug 28 00:56:57.424: INFO: waiting for watch events with expected annotations
  Aug 28 00:56:57.425: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 08/28/24 00:56:57.427
  STEP: patching /status @ 08/28/24 00:56:57.437
  STEP: updating /status @ 08/28/24 00:56:57.463
  STEP: deleting @ 08/28/24 00:56:57.512
  STEP: deleting a collection @ 08/28/24 00:56:57.548
  Aug 28 00:56:57.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2160" for this suite. @ 08/28/24 00:56:57.64
• [0.494 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 08/28/24 00:56:57.671
  Aug 28 00:56:57.671: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename svcaccounts @ 08/28/24 00:56:57.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:56:57.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:56:57.731
  Aug 28 00:56:57.787: INFO: created pod
  E0828 00:56:57.899295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:58.899720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:56:59.900933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:00.901210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:57:01.832
  E0828 00:57:01.901986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:02.902839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:03.903032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:04.903288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:05.903574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:06.904183      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:07.904425      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:08.904778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:09.905225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:10.905629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:11.906644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:12.907131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:13.907460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:14.907652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:15.908353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:16.909125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:17.909531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:18.909928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:19.910369      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:20.910736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:21.912520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:22.912936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:23.913254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:24.913609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:25.914093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:26.914928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:27.915852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:28.916047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:29.917191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:30.917400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:57:31.833: INFO: polling logs
  Aug 28 00:57:31.849: INFO: Pod logs: 
  I0828 00:56:58.876303       1 log.go:245] OK: Got token
  I0828 00:56:58.876475       1 log.go:245] validating with in-cluster discovery
  I0828 00:56:58.877144       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0828 00:56:58.877193       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9497:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013080), NotBefore:(*jwt.NumericDate)(0xc000013168), IssuedAt:(*jwt.NumericDate)(0xc000013090), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9497", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4158e015-f80b-41ac-90aa-985b6d7b0974"}}}
  I0828 00:56:58.896732       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0828 00:56:58.904856       1 log.go:245] OK: Validated signature on JWT
  I0828 00:56:58.905189       1 log.go:245] OK: Got valid claims from token!
  I0828 00:56:58.905372       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9497:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000231360), NotBefore:(*jwt.NumericDate)(0xc0002313a8), IssuedAt:(*jwt.NumericDate)(0xc000231368), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9497", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"4158e015-f80b-41ac-90aa-985b6d7b0974"}}}

  Aug 28 00:57:31.850: INFO: completed pod
  Aug 28 00:57:31.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9497" for this suite. @ 08/28/24 00:57:31.875
• [34.221 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 08/28/24 00:57:31.893
  Aug 28 00:57:31.893: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename var-expansion @ 08/28/24 00:57:31.895
  E0828 00:57:31.918496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:57:31.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:57:31.95
  STEP: Creating a pod to test substitution in container's command @ 08/28/24 00:57:31.957
  E0828 00:57:32.918815      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:33.919296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:34.919765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:35.920535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:57:36.014
  Aug 28 00:57:36.032: INFO: Trying to get logs from node env1-test-worker-2 pod var-expansion-9318f7eb-5c8e-4535-8b2d-b3f22ee061df container dapi-container: <nil>
  STEP: delete the pod @ 08/28/24 00:57:36.063
  Aug 28 00:57:36.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4053" for this suite. @ 08/28/24 00:57:36.155
• [4.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 08/28/24 00:57:36.177
  Aug 28 00:57:36.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/28/24 00:57:36.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:57:36.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:57:36.241
  Aug 28 00:57:36.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 00:57:36.920859      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:37.921413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:38.922344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:39.923169      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:40.923777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:41.924076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:42.924129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:43.924351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:44.925513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:45.926580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 08/28/24 00:57:46.416
  Aug 28 00:57:46.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 create -f -'
  Aug 28 00:57:46.642: INFO: stderr: ""
  Aug 28 00:57:46.642: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 28 00:57:46.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 delete e2e-test-crd-publish-openapi-7032-crds test-foo'
  Aug 28 00:57:46.824: INFO: stderr: ""
  Aug 28 00:57:46.824: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Aug 28 00:57:46.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 apply -f -'
  E0828 00:57:46.927011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:57:47.061: INFO: stderr: ""
  Aug 28 00:57:47.061: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 28 00:57:47.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 delete e2e-test-crd-publish-openapi-7032-crds test-foo'
  Aug 28 00:57:47.267: INFO: stderr: ""
  Aug 28 00:57:47.267: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 08/28/24 00:57:47.267
  Aug 28 00:57:47.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 create -f -'
  Aug 28 00:57:47.436: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 08/28/24 00:57:47.437
  Aug 28 00:57:47.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 create -f -'
  Aug 28 00:57:47.628: INFO: rc: 1
  Aug 28 00:57:47.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 apply -f -'
  Aug 28 00:57:47.799: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 08/28/24 00:57:47.799
  Aug 28 00:57:47.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 create -f -'
  E0828 00:57:47.927905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:57:47.955: INFO: rc: 1
  Aug 28 00:57:47.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 --namespace=crd-publish-openapi-4509 apply -f -'
  Aug 28 00:57:48.125: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 08/28/24 00:57:48.125
  Aug 28 00:57:48.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 explain e2e-test-crd-publish-openapi-7032-crds'
  Aug 28 00:57:48.250: INFO: stderr: ""
  Aug 28 00:57:48.250: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 08/28/24 00:57:48.25
  Aug 28 00:57:48.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 explain e2e-test-crd-publish-openapi-7032-crds.metadata'
  Aug 28 00:57:48.399: INFO: stderr: ""
  Aug 28 00:57:48.399: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Aug 28 00:57:48.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 explain e2e-test-crd-publish-openapi-7032-crds.spec'
  Aug 28 00:57:48.562: INFO: stderr: ""
  Aug 28 00:57:48.562: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Aug 28 00:57:48.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 explain e2e-test-crd-publish-openapi-7032-crds.spec.bars'
  Aug 28 00:57:48.718: INFO: stderr: ""
  Aug 28 00:57:48.718: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 08/28/24 00:57:48.718
  Aug 28 00:57:48.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=crd-publish-openapi-4509 explain e2e-test-crd-publish-openapi-7032-crds.spec.bars2'
  Aug 28 00:57:48.866: INFO: rc: 1
  E0828 00:57:48.928456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:49.928620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:50.929132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:51.929315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:52.930494      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:57:53.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4509" for this suite. @ 08/28/24 00:57:53.222
• [17.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 08/28/24 00:57:53.242
  Aug 28 00:57:53.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename deployment @ 08/28/24 00:57:53.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:57:53.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:57:53.317
  Aug 28 00:57:53.325: INFO: Creating deployment "webserver-deployment"
  Aug 28 00:57:53.334: INFO: Waiting for observed generation 1
  E0828 00:57:53.930533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:54.930923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:57:55.355: INFO: Waiting for all required pods to come up
  Aug 28 00:57:55.373: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 08/28/24 00:57:55.374
  E0828 00:57:55.934354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:56.934132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:57:57.460: INFO: Waiting for deployment "webserver-deployment" to complete
  Aug 28 00:57:57.482: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Aug 28 00:57:57.519: INFO: Updating deployment webserver-deployment
  Aug 28 00:57:57.519: INFO: Waiting for observed generation 2
  E0828 00:57:57.939714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:57:58.939748      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:57:59.546: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Aug 28 00:57:59.558: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Aug 28 00:57:59.568: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 28 00:57:59.605: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Aug 28 00:57:59.605: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Aug 28 00:57:59.616: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 28 00:57:59.638: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Aug 28 00:57:59.638: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Aug 28 00:57:59.668: INFO: Updating deployment webserver-deployment
  Aug 28 00:57:59.668: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Aug 28 00:57:59.697: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  E0828 00:57:59.940676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:00.941940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:01.730: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Aug 28 00:58:01.768: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc571bb5-6ae1-4e39-865a-4a937a15cc4d",
      ResourceVersion: (string) (len=8) "38939009",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 28 00:58:01.784: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
      ResourceVersion: (string) (len=8) "38938996",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "bc571bb5-6ae1-4e39-865a-4a937a15cc4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 35 37 31 62  62 35 2d 36 61 65 31 2d  |\"bc571bb5-6ae1-|
              00000120  34 65 33 39 2d 38 36 35  61 2d 34 61 39 33 37 61  |4e39-865a-4a937a|
              00000130  31 35 63 63 34 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |15cc4d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 28 00:58:01.785: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Aug 28 00:58:01.785: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
      ResourceVersion: (string) (len=8) "38938981",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "bc571bb5-6ae1-4e39-865a-4a937a15cc4d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 63 35 37 31 62  62 35 2d 36 61 65 31 2d  |\"bc571bb5-6ae1-|
              00000120  34 65 33 39 2d 38 36 35  61 2d 34 61 39 33 37 61  |4e39-865a-4a937a|
              00000130  31 35 63 63 34 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |15cc4d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 28 00:58:01.818: INFO: Pod "webserver-deployment-557759b7c7-2fqjx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2fqjx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7020e0c2-b104-4800-90ad-18fda6d095a6",
      ResourceVersion: (string) (len=8) "38938786",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "01f16da630a6c9a316a15c5997bdad93a5ed9cab9c5cc89e6470e0646ce1751d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.140/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.140/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 34 30 5c 22 7d 22 3a  |.233.76.140\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hgdl7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hgdl7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403475,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://effd5457bc7f794e54e50772eb472760ebe434cf2b31556d954b42ce14afa2d2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.829: INFO: Pod "webserver-deployment-557759b7c7-5j4kq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5j4kq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff4d0a82-b40d-4ee9-8043-6a1d1df63545",
      ResourceVersion: (string) (len=8) "38939040",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.57/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f6a86a6d8c43324ba49985ce7fd55844a68e671af040ac63add74b1b21db9777",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.57/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j8sst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j8sst",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.835: INFO: Pod "webserver-deployment-557759b7c7-67m82" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-67m82",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "268ab2a3-97f5-402a-9a8b-8942a9dca9d9",
      ResourceVersion: (string) (len=8) "38939061",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d90b6e66c4eaafc8520c5af4a443d141888dd5c352132dc2460f9ce77b91b012",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vxhb2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vxhb2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.840: INFO: Pod "webserver-deployment-557759b7c7-69v94" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-69v94",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cf26bc4-6027-4175-b79a-429b4ba918c2",
      ResourceVersion: (string) (len=8) "38938803",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ad86be2582ac5b28a428aabc1666f7c06a0c11ddbe02ee7faf0783b278ee577a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.87.109/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.87.109/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 38 37 2e  31 30 39 5c 22 7d 22 3a  |.233.87.109\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rhw8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rhw8z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) (len=13) "10.233.87.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.87.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403475,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2d75e18c79238fcf2079cc13a2a5f83e787cbc6b91ac9747eb658481b3d8ce93",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.852: INFO: Pod "webserver-deployment-557759b7c7-8kjs8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8kjs8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22a9b7a1-7882-4a9f-a314-b54c66601879",
      ResourceVersion: (string) (len=8) "38938817",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.233.118.4/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "42328086acb8b652a4bb385c3cebf434a7722dbdba4d8be667c61e5e0e5e2a5b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.233.118.4/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 34 5c 22 7d 22 3a 7b  |.233.118.4\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pnmn4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pnmn4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=12) "10.233.118.4",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.118.4"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403474,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8d219254ce3a06053ad365a40821a0e2934709f099fe68813df831ce150b4c18",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.857: INFO: Pod "webserver-deployment-557759b7c7-drqsl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-drqsl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e540fcc-29fc-44e9-91c9-69d2adf01d57",
      ResourceVersion: (string) (len=8) "38938966",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pnc56",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pnc56",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.869: INFO: Pod "webserver-deployment-557759b7c7-ft459" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ft459",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18dc9b97-524e-44f9-8698-bd660e68cb83",
      ResourceVersion: (string) (len=8) "38938813",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d167f626a2c1b0cd52f8db475bf7641cd5494b9e0d69a71ae2f21b863dc9ad1b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.18/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403476,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 31 38 5c 22 7d 22 3a  |.233.118.18\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q6mnk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q6mnk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403475,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c1ed0abf62b209b66f8a6d1b5be22c07a2ef0a428aa20c808f2d627cdb54eb83",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.876: INFO: Pod "webserver-deployment-557759b7c7-lhg7j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lhg7j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c58d414-8e07-4365-ab28-e68a1c62da21",
      ResourceVersion: (string) (len=8) "38939041",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.165/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "03ecbe362e2d232d41996670404cc2669d9d66dae92338d4f0066be357b66a6b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.165/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z8xx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z8xx9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.887: INFO: Pod "webserver-deployment-557759b7c7-ltwh6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-ltwh6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7860d9de-b965-40e4-b191-a19f9387e0c0",
      ResourceVersion: (string) (len=8) "38938805",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "196a4a9b986ea7165c9ae1f971a3c6d86f4095e6fd8391bf45aca690ebe5370f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.87.118/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.87.118/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 38 37 2e  31 31 38 5c 22 7d 22 3a  |.233.87.118\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-khbm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-khbm6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) (len=13) "10.233.87.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.87.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403475,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6f32e4312f135cfe05cd5fec0e879dca82c231abd0da9d171733eb2b91e23e39",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.894: INFO: Pod "webserver-deployment-557759b7c7-mzm5r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mzm5r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edc76c88-5c72-4e29-aeb9-9647e48ce57a",
      ResourceVersion: (string) (len=8) "38939082",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "85d71106f142b9dd21800edfd145ed9c2cfe5228ea3d9ac5b03cd31a45863194",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.60/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.60/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mvtp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mvtp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.898: INFO: Pod "webserver-deployment-557759b7c7-nn2t6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nn2t6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58f460a6-721a-49e5-b821-5543d122ba4b",
      ResourceVersion: (string) (len=8) "38939011",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-72vvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-72vvf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403480,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.904: INFO: Pod "webserver-deployment-557759b7c7-q7kwm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q7kwm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd6a5c05-e925-41b6-baa9-660212e4759e",
      ResourceVersion: (string) (len=8) "38938810",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d9249f3327c34dd312a4445ba6670be0390bb1b96d208855cacea0f82865f47b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.13/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.13/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 31 33 5c 22 7d 22 3a  |.233.118.13\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j5c8t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j5c8t",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403475,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e73a2468bab7635badd8e405131c27952ea411e1769ec4ea80442b0b7121b446",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.913: INFO: Pod "webserver-deployment-557759b7c7-qbt9d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qbt9d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eff49a02-515d-41f0-a6e4-83b58d10d20f",
      ResourceVersion: (string) (len=8) "38938969",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6nk96",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6nk96",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.917: INFO: Pod "webserver-deployment-557759b7c7-rgtpr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rgtpr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c31b4e11-ca5f-45ce-b06d-c76c215fade9",
      ResourceVersion: (string) (len=8) "38938800",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3d7270f62d9223127b0bdb1e320ba592f33f9bc07739af41f2257641a3b900a0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.233.87.76/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.233.87.76/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 38 37 2e  37 36 5c 22 7d 22 3a 7b  |.233.87.76\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kbzwl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kbzwl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) (len=12) "10.233.87.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.87.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403475,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://89d5e3583726adaadd9c34df2bf995169c8bb03cc026aca31be8169f71f007b7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.926: INFO: Pod "webserver-deployment-557759b7c7-rrbbq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rrbbq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31aa116a-0bb3-4aa4-88ab-440428f46882",
      ResourceVersion: (string) (len=8) "38938797",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.178/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "57a5c1cdd4177e48eacd3a83f1ab4e3fb87ce844e0f0bb8987100fcbfbb0f84b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.178/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403474,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 37 38 5c 22 7d 22 3a  |.233.76.178\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2kcb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2kcb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63860403475,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a965dd497ea0c1d2294e62cb061bf3cdeb633152a40c42cdbd2467fa16d59138",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.931: INFO: Pod "webserver-deployment-557759b7c7-v7nzc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-v7nzc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9984639e-2452-4880-b2a4-c71d7fdb4a5e",
      ResourceVersion: (string) (len=8) "38938989",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nmkrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nmkrk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403480,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0828 00:58:01.942229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:01.942: INFO: Pod "webserver-deployment-557759b7c7-v8hmf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-v8hmf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d23ba1b-14b2-495f-ac07-37474d4c4754",
      ResourceVersion: (string) (len=8) "38939065",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9b8c455f0293fb1064953e95e503e8c8186c6215f15831f88a5cabeacaefed92",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.147/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.147/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-42pxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-42pxl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.971: INFO: Pod "webserver-deployment-557759b7c7-vrxv8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vrxv8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "118f34d6-8e97-434d-8f4d-fe15f7654ba0",
      ResourceVersion: (string) (len=8) "38938983",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lcjsg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lcjsg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:01.996: INFO: Pod "webserver-deployment-557759b7c7-xhj42" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xhj42",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f500dc2-f840-453c-8262-bb1191a79493",
      ResourceVersion: (string) (len=8) "38939014",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jw8wc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jw8wc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403480,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.000: INFO: Pod "webserver-deployment-557759b7c7-z2xkt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z2xkt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffe36188-6d34-4700-bb2e-010b48a1aaa7",
      ResourceVersion: (string) (len=8) "38938977",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "0ed4d991-55f9-4b16-a632-fa832465c34a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  64 34 64 39 39 31 2d 35  |d\":\"0ed4d991-5|
              00000090  35 66 39 2d 34 62 31 36  2d 61 36 33 32 2d 66 61  |5f9-4b16-a632-fa|
              000000a0  38 33 32 34 36 35 63 33  34 61 5c 22 7d 22 3a 7b  |832465c34a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q69r2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q69r2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.004: INFO: Pod "webserver-deployment-9b4f5bf69-4hrml" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4hrml",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c26ddbb-f86a-437e-95bc-5b3ea971367b",
      ResourceVersion: (string) (len=8) "38939069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.233.87.78/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5a788a2ae270e08ea4fec7974ac13a43ff1842e9866d678e8c1d2843e909821b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.233.87.78/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdq54",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdq54",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.026: INFO: Pod "webserver-deployment-9b4f5bf69-7vrwx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7vrwx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a76a8c9-ab01-467c-b27f-164c5cdd7bdd",
      ResourceVersion: (string) (len=8) "38938955",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5j2nc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5j2nc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.108: INFO: Pod "webserver-deployment-9b4f5bf69-9b9zr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9b9zr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0126ef7-174a-43d3-9356-077b3b1279d5",
      ResourceVersion: (string) (len=8) "38938899",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "abf22ad32d6000167cf9c82e6bc8ec1c86ac1c45f482099a5c10dde2f595cd22",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.49/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.49/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l72br",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l72br",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.125: INFO: Pod "webserver-deployment-9b4f5bf69-9ktvt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9ktvt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc562184-4977-4cda-b4fd-5d4647f42807",
      ResourceVersion: (string) (len=8) "38939048",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a74890c5b0ca5de57ec50c6c8622f7d3d454eccd3d7fcf0972aa9db0d06cea46",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.59/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.59/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 31 31 38 2e 35 39  5c 22 7d 22 3a 7b 22 2e  |3.118.59\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pvdgj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pvdgj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.131: INFO: Pod "webserver-deployment-9b4f5bf69-hj47g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hj47g",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd3bc877-4517-4383-acec-9846ef275522",
      ResourceVersion: (string) (len=8) "38939003",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-szcfm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-szcfm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.144: INFO: Pod "webserver-deployment-9b4f5bf69-j9tmj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j9tmj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69021c54-e46f-47c5-88a5-78a530c72585",
      ResourceVersion: (string) (len=8) "38939050",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.233.87.77/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.233.87.77/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7847b72f192036729fe32b807c5ace29f64dc67e493c9562402fe3b5529dba4e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qxwbd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qxwbd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.167: INFO: Pod "webserver-deployment-9b4f5bf69-k4vkt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k4vkt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c31d4d3-214b-45a6-9d48-d32c80c595bf",
      ResourceVersion: (string) (len=8) "38939063",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3b7b3d0ea578edc82412dd50d33fe36b5e21ec5325b49f91b3697781598dd6bf",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.160/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.160/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 37 36 2e 31 36 30  5c 22 7d 22 3a 7b 22 2e  |3.76.160\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vlrfg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vlrfg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.213: INFO: Pod "webserver-deployment-9b4f5bf69-k5pw2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k5pw2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f621f786-c65b-49cd-b72c-825974457e36",
      ResourceVersion: (string) (len=8) "38939075",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ce063d9b4f85670134eecea48a468870686129f056689405495ffc09a060e7ee",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.87.102/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.87.102/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 33  |:{\"ip\":\"10.23|
              00000290  33 2e 38 37 2e 31 30 32  5c 22 7d 22 3a 7b 22 2e  |3.87.102\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gztv8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gztv8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) (len=13) "10.233.87.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.87.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.218: INFO: Pod "webserver-deployment-9b4f5bf69-l8vgd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-l8vgd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fedfafa4-14bc-4c40-89aa-9cb9f975b109",
      ResourceVersion: (string) (len=8) "38939081",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7c1692b01f49ed1b087429918e2986a1ef83e0e16abcfc06bb51f2a1b6eefa78",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.143/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.143/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xrxlq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xrxlq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403480,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.244: INFO: Pod "webserver-deployment-9b4f5bf69-m685g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-m685g",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3294623-656c-4306-96aa-0f145274fb59",
      ResourceVersion: (string) (len=8) "38938900",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "559d00dc8fdc3f070db6d7c8faad7a38e4c1671ab20d8a019a8052cd512c8da9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.187/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.187/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4mmnr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4mmnr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.276: INFO: Pod "webserver-deployment-9b4f5bf69-pjjxw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pjjxw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4735daa6-fe94-4fcc-82eb-0620aaebb0a0",
      ResourceVersion: (string) (len=8) "38939051",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "389c6724f0ef956af96a7d2348aa4a24105bec302637ac2c3b58d6b25ce4d587",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.132/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.132/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403481,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2s75l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2s75l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.289: INFO: Pod "webserver-deployment-9b4f5bf69-svxmp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-svxmp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9bfc798-bbcd-45e5-a2f5-4f9ea8f13442",
      ResourceVersion: (string) (len=8) "38939013",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-44dln",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-44dln",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.305: INFO: Pod "webserver-deployment-9b4f5bf69-z7mp8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z7mp8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2768",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02230731-52d6-492c-86da-f464b6a87bc3",
      ResourceVersion: (string) (len=8) "38938968",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "93879f26-5e1f-4a2d-a3a3-2960b27fa914",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  38 37 39 66 32 36 2d 35  |d\":\"93879f26-5|
              00000090  65 31 66 2d 34 61 32 64  2d 61 33 61 33 2d 32 39  |e1f-4a2d-a3a3-29|
              000000a0  36 30 62 32 37 66 61 39  31 34 5c 22 7d 22 3a 7b  |60b27fa914\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z4gz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z4gz4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63860403479,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63860403479,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 28 00:58:02.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2768" for this suite. @ 08/28/24 00:58:02.33
• [9.117 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 08/28/24 00:58:02.36
  Aug 28 00:58:02.360: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename discovery @ 08/28/24 00:58:02.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:58:02.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:58:02.541
  STEP: Setting up server cert @ 08/28/24 00:58:02.61
  E0828 00:58:02.947588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:03.940: INFO: Checking APIGroup: apiregistration.k8s.io
  Aug 28 00:58:03.942: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Aug 28 00:58:03.942: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Aug 28 00:58:03.942: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Aug 28 00:58:03.942: INFO: Checking APIGroup: apps
  Aug 28 00:58:03.944: INFO: PreferredVersion.GroupVersion: apps/v1
  Aug 28 00:58:03.944: INFO: Versions found [{apps/v1 v1}]
  Aug 28 00:58:03.944: INFO: apps/v1 matches apps/v1
  Aug 28 00:58:03.944: INFO: Checking APIGroup: events.k8s.io
  E0828 00:58:03.947716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:03.954: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Aug 28 00:58:03.954: INFO: Versions found [{events.k8s.io/v1 v1}]
  Aug 28 00:58:03.954: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Aug 28 00:58:03.954: INFO: Checking APIGroup: authentication.k8s.io
  Aug 28 00:58:03.963: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Aug 28 00:58:03.963: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Aug 28 00:58:03.963: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Aug 28 00:58:03.963: INFO: Checking APIGroup: authorization.k8s.io
  Aug 28 00:58:03.971: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Aug 28 00:58:03.971: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Aug 28 00:58:03.971: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Aug 28 00:58:03.971: INFO: Checking APIGroup: autoscaling
  Aug 28 00:58:03.974: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Aug 28 00:58:03.974: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Aug 28 00:58:03.974: INFO: autoscaling/v2 matches autoscaling/v2
  Aug 28 00:58:03.974: INFO: Checking APIGroup: batch
  Aug 28 00:58:03.978: INFO: PreferredVersion.GroupVersion: batch/v1
  Aug 28 00:58:03.978: INFO: Versions found [{batch/v1 v1}]
  Aug 28 00:58:03.978: INFO: batch/v1 matches batch/v1
  Aug 28 00:58:03.978: INFO: Checking APIGroup: certificates.k8s.io
  Aug 28 00:58:03.984: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Aug 28 00:58:03.985: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Aug 28 00:58:03.985: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Aug 28 00:58:03.985: INFO: Checking APIGroup: networking.k8s.io
  Aug 28 00:58:03.991: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Aug 28 00:58:03.991: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Aug 28 00:58:03.991: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Aug 28 00:58:03.991: INFO: Checking APIGroup: policy
  Aug 28 00:58:03.994: INFO: PreferredVersion.GroupVersion: policy/v1
  Aug 28 00:58:03.994: INFO: Versions found [{policy/v1 v1}]
  Aug 28 00:58:03.994: INFO: policy/v1 matches policy/v1
  Aug 28 00:58:03.994: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Aug 28 00:58:03.999: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Aug 28 00:58:03.999: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Aug 28 00:58:03.999: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Aug 28 00:58:03.999: INFO: Checking APIGroup: storage.k8s.io
  Aug 28 00:58:04.002: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Aug 28 00:58:04.002: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Aug 28 00:58:04.002: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Aug 28 00:58:04.002: INFO: Checking APIGroup: admissionregistration.k8s.io
  Aug 28 00:58:04.004: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Aug 28 00:58:04.005: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Aug 28 00:58:04.005: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Aug 28 00:58:04.006: INFO: Checking APIGroup: apiextensions.k8s.io
  Aug 28 00:58:04.014: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Aug 28 00:58:04.014: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Aug 28 00:58:04.014: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Aug 28 00:58:04.014: INFO: Checking APIGroup: scheduling.k8s.io
  Aug 28 00:58:04.017: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Aug 28 00:58:04.017: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Aug 28 00:58:04.017: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Aug 28 00:58:04.017: INFO: Checking APIGroup: coordination.k8s.io
  Aug 28 00:58:04.029: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Aug 28 00:58:04.029: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Aug 28 00:58:04.029: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Aug 28 00:58:04.029: INFO: Checking APIGroup: node.k8s.io
  Aug 28 00:58:04.036: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Aug 28 00:58:04.036: INFO: Versions found [{node.k8s.io/v1 v1}]
  Aug 28 00:58:04.036: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Aug 28 00:58:04.036: INFO: Checking APIGroup: discovery.k8s.io
  Aug 28 00:58:04.041: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Aug 28 00:58:04.041: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Aug 28 00:58:04.041: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Aug 28 00:58:04.041: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Aug 28 00:58:04.044: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Aug 28 00:58:04.044: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Aug 28 00:58:04.045: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Aug 28 00:58:04.046: INFO: Checking APIGroup: crd.projectcalico.org
  Aug 28 00:58:04.050: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Aug 28 00:58:04.050: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Aug 28 00:58:04.051: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Aug 28 00:58:04.051: INFO: Checking APIGroup: monitoring.coreos.com
  Aug 28 00:58:04.059: INFO: PreferredVersion.GroupVersion: monitoring.coreos.com/v1
  Aug 28 00:58:04.060: INFO: Versions found [{monitoring.coreos.com/v1 v1} {monitoring.coreos.com/v1alpha1 v1alpha1}]
  Aug 28 00:58:04.060: INFO: monitoring.coreos.com/v1 matches monitoring.coreos.com/v1
  Aug 28 00:58:04.060: INFO: Checking APIGroup: velero.io
  Aug 28 00:58:04.066: INFO: PreferredVersion.GroupVersion: velero.io/v1
  Aug 28 00:58:04.066: INFO: Versions found [{velero.io/v1 v1} {velero.io/v2alpha1 v2alpha1}]
  Aug 28 00:58:04.066: INFO: velero.io/v1 matches velero.io/v1
  Aug 28 00:58:04.066: INFO: Checking APIGroup: cns.vmware.com
  Aug 28 00:58:04.070: INFO: PreferredVersion.GroupVersion: cns.vmware.com/v1alpha1
  Aug 28 00:58:04.070: INFO: Versions found [{cns.vmware.com/v1alpha1 v1alpha1}]
  Aug 28 00:58:04.070: INFO: cns.vmware.com/v1alpha1 matches cns.vmware.com/v1alpha1
  Aug 28 00:58:04.070: INFO: Checking APIGroup: traefik.containo.us
  Aug 28 00:58:04.074: INFO: PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  Aug 28 00:58:04.074: INFO: Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  Aug 28 00:58:04.074: INFO: traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  Aug 28 00:58:04.074: INFO: Checking APIGroup: traefik.io
  Aug 28 00:58:04.078: INFO: PreferredVersion.GroupVersion: traefik.io/v1alpha1
  Aug 28 00:58:04.078: INFO: Versions found [{traefik.io/v1alpha1 v1alpha1}]
  Aug 28 00:58:04.078: INFO: traefik.io/v1alpha1 matches traefik.io/v1alpha1
  Aug 28 00:58:04.078: INFO: Checking APIGroup: metrics.k8s.io
  Aug 28 00:58:04.081: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Aug 28 00:58:04.082: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Aug 28 00:58:04.082: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Aug 28 00:58:04.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4491" for this suite. @ 08/28/24 00:58:04.102
• [1.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 08/28/24 00:58:04.131
  Aug 28 00:58:04.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 00:58:04.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:58:04.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:58:04.216
  STEP: Creating the pod @ 08/28/24 00:58:04.227
  E0828 00:58:04.950111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:05.952808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:06.952705      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:07.951833      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:08.952039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:09.075: INFO: Successfully updated pod "labelsupdate79c800c8-75c7-4871-82fa-b6464640990b"
  E0828 00:58:09.954261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:10.954827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:11.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3838" for this suite. @ 08/28/24 00:58:11.219
• [7.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 08/28/24 00:58:11.243
  Aug 28 00:58:11.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename webhook @ 08/28/24 00:58:11.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:58:11.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:58:11.336
  STEP: Setting up server cert @ 08/28/24 00:58:11.463
  E0828 00:58:11.954610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:12.955226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/28/24 00:58:13.37
  STEP: Deploying the webhook pod @ 08/28/24 00:58:13.401
  STEP: Wait for the deployment to be ready @ 08/28/24 00:58:13.44
  Aug 28 00:58:13.480: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0828 00:58:13.956399      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:14.956407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 00:58:15.51
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 00:58:15.531
  E0828 00:58:15.969201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:16.532: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/28/24 00:58:16.732
  STEP: Creating a configMap that should be mutated @ 08/28/24 00:58:16.772
  STEP: Deleting the collection of validation webhooks @ 08/28/24 00:58:16.83
  E0828 00:58:16.969359      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that should not be mutated @ 08/28/24 00:58:16.997
  Aug 28 00:58:17.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8928" for this suite. @ 08/28/24 00:58:17.19
  STEP: Destroying namespace "webhook-markers-5578" for this suite. @ 08/28/24 00:58:17.223
• [6.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 08/28/24 00:58:17.253
  Aug 28 00:58:17.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 00:58:17.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:58:17.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:58:17.355
  STEP: Create a pod @ 08/28/24 00:58:17.373
  E0828 00:58:17.969644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:18.970331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:19.970945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:20.974826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/28/24 00:58:21.445
  Aug 28 00:58:21.467: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Aug 28 00:58:21.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1628" for this suite. @ 08/28/24 00:58:21.488
• [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 08/28/24 00:58:21.511
  Aug 28 00:58:21.511: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename daemonsets @ 08/28/24 00:58:21.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:58:21.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:58:21.586
  STEP: Creating simple DaemonSet "daemon-set" @ 08/28/24 00:58:21.647
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/28/24 00:58:21.662
  Aug 28 00:58:21.691: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:21.691: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:21.691: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:21.702: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:58:21.702: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:58:21.973485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:22.703: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:22.703: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:22.703: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:22.722: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:58:22.722: INFO: Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E0828 00:58:22.973773      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:23.682: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:23.682: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:23.682: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:23.703: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 28 00:58:23.703: INFO: Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E0828 00:58:23.974589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:24.674: INFO: DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:24.675: INFO: DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:24.675: INFO: DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 28 00:58:24.683: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 28 00:58:24.683: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 08/28/24 00:58:24.694
  Aug 28 00:58:24.705: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 08/28/24 00:58:24.705
  Aug 28 00:58:24.736: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 08/28/24 00:58:24.736
  Aug 28 00:58:24.740: INFO: Observed &DaemonSet event: ADDED
  Aug 28 00:58:24.740: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.740: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.741: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.741: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.741: INFO: Found daemon set daemon-set in namespace daemonsets-1940 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 28 00:58:24.741: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 08/28/24 00:58:24.741
  STEP: watching for the daemon set status to be patched @ 08/28/24 00:58:24.76
  Aug 28 00:58:24.764: INFO: Observed &DaemonSet event: ADDED
  Aug 28 00:58:24.764: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.771: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.772: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.772: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.773: INFO: Observed daemon set daemon-set in namespace daemonsets-1940 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 28 00:58:24.773: INFO: Observed &DaemonSet event: MODIFIED
  Aug 28 00:58:24.773: INFO: Found daemon set daemon-set in namespace daemonsets-1940 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Aug 28 00:58:24.774: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 08/28/24 00:58:24.792
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1940, will wait for the garbage collector to delete the pods @ 08/28/24 00:58:24.792
  Aug 28 00:58:24.864: INFO: Deleting DaemonSet.extensions daemon-set took: 14.746514ms
  Aug 28 00:58:24.965: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.094765ms
  E0828 00:58:24.975395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:25.977387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:26.977756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:27.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 28 00:58:27.178: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 28 00:58:27.189: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38939790"},"items":null}

  Aug 28 00:58:27.200: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38939790"},"items":null}

  Aug 28 00:58:27.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1940" for this suite. @ 08/28/24 00:58:27.252
• [5.767 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 08/28/24 00:58:27.28
  Aug 28 00:58:27.280: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/28/24 00:58:27.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:58:27.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:58:27.369
  STEP: Creating service test in namespace statefulset-9961 @ 08/28/24 00:58:27.377
  STEP: Creating stateful set ss in namespace statefulset-9961 @ 08/28/24 00:58:27.396
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9961 @ 08/28/24 00:58:27.412
  Aug 28 00:58:27.422: INFO: Found 0 stateful pods, waiting for 1
  E0828 00:58:27.977852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:28.977949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:29.978698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:30.978966      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:31.979665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:32.979874      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:33.980568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:34.980781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:35.981676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:36.982429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:37.424: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 08/28/24 00:58:37.424
  Aug 28 00:58:37.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-9961 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 28 00:58:37.703: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 00:58:37.703: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 00:58:37.703: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 00:58:37.711: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0828 00:58:37.982537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:38.982871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:39.983247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:40.983334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:41.984231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:42.984309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:43.984517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:44.984675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:45.985508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:58:46.986343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:47.714: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 00:58:47.714: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 28 00:58:47.770: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
  Aug 28 00:58:47.770: INFO: ss-0  env1-test-worker-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:37 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:27 +0000 UTC  }]
  Aug 28 00:58:47.770: INFO: 
  Aug 28 00:58:47.770: INFO: StatefulSet ss has not reached scale 3, at 1
  E0828 00:58:47.987025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:48.794: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.977834493s
  E0828 00:58:48.987353      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:49.809: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.954126314s
  E0828 00:58:49.988069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:50.825: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.938940306s
  E0828 00:58:50.988346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:51.836: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.921673713s
  E0828 00:58:51.989083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:52.867: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.911655066s
  E0828 00:58:52.990104      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:53.876: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.880326473s
  E0828 00:58:53.990260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:54.885: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.870956796s
  E0828 00:58:54.990308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:55.901: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.863139056s
  E0828 00:58:55.990629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:56.909: INFO: Verifying statefulset ss doesn't scale past 3 for another 846.322422ms
  E0828 00:58:56.991824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9961 @ 08/28/24 00:58:57.909
  Aug 28 00:58:57.944: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-9961 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0828 00:58:57.991989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:58.225: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 28 00:58:58.225: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 00:58:58.225: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 28 00:58:58.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-9961 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 28 00:58:58.572: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 28 00:58:58.572: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 00:58:58.572: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 28 00:58:58.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-9961 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 28 00:58:58.875: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 28 00:58:58.875: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 00:58:58.875: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 28 00:58:58.892: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:58:58.893: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 00:58:58.893: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 08/28/24 00:58:58.893
  Aug 28 00:58:58.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-9961 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0828 00:58:58.992903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:58:59.188: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 00:58:59.188: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 00:58:59.188: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 00:58:59.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-9961 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 28 00:58:59.486: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 00:58:59.486: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 00:58:59.486: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 00:58:59.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-9961 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 28 00:58:59.743: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 00:58:59.743: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 00:58:59.743: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 00:58:59.743: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 28 00:58:59.749: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0828 00:58:59.993747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:00.994385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:01.995172      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:02.995318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:03.995554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:04.996168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:06.007334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:07.008230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:08.008628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:09.009039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:09.772: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 00:59:09.772: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 00:59:09.773: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 00:59:09.839: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
  Aug 28 00:59:09.839: INFO: ss-0  env1-test-worker-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:27 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:27 +0000 UTC  }]
  Aug 28 00:59:09.839: INFO: ss-1  env1-test-worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC  }]
  Aug 28 00:59:09.839: INFO: ss-2  env1-test-worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC  }]
  Aug 28 00:59:09.839: INFO: 
  Aug 28 00:59:09.839: INFO: StatefulSet ss has not reached scale 0, at 3
  E0828 00:59:10.009899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:10.852: INFO: POD   NODE                PHASE      GRACE  CONDITIONS
  Aug 28 00:59:10.852: INFO: ss-0  env1-test-worker-2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:27 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:27 +0000 UTC  }]
  Aug 28 00:59:10.852: INFO: ss-1  env1-test-worker-1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC  }]
  Aug 28 00:59:10.852: INFO: ss-2  env1-test-worker-0  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:59:00 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-08-28 00:58:47 +0000 UTC  }]
  Aug 28 00:59:10.853: INFO: 
  Aug 28 00:59:10.853: INFO: StatefulSet ss has not reached scale 0, at 3
  E0828 00:59:11.010841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:11.866: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.964587987s
  E0828 00:59:12.011466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:12.886: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.957721742s
  E0828 00:59:13.012415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:13.895: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.936287606s
  E0828 00:59:14.012577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:14.902: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.928469904s
  E0828 00:59:15.013258      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:15.916: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.92033757s
  E0828 00:59:16.014255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:16.943: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.907335399s
  E0828 00:59:17.014477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:17.957: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.877707877s
  E0828 00:59:18.015806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:18.966: INFO: Verifying statefulset ss doesn't scale past 0 for another 865.762611ms
  E0828 00:59:19.016130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9961 @ 08/28/24 00:59:19.966
  Aug 28 00:59:19.976: INFO: Scaling statefulset ss to 0
  Aug 28 00:59:20.007: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 28 00:59:20.015: INFO: Deleting all statefulset in ns statefulset-9961
  E0828 00:59:20.016240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 00:59:20.021: INFO: Scaling statefulset ss to 0
  Aug 28 00:59:20.052: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 28 00:59:20.062: INFO: Deleting statefulset ss
  Aug 28 00:59:20.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9961" for this suite. @ 08/28/24 00:59:20.113
• [52.857 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 08/28/24 00:59:20.137
  Aug 28 00:59:20.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename configmap @ 08/28/24 00:59:20.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:59:20.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:59:20.208
  STEP: Creating configMap with name configmap-test-volume-03f7b502-1405-40e5-a48d-f3c6641c6a5f @ 08/28/24 00:59:20.219
  STEP: Creating a pod to test consume configMaps @ 08/28/24 00:59:20.232
  E0828 00:59:21.016572      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:22.017409      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:23.017588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:24.017989      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 00:59:24.288
  Aug 28 00:59:24.299: INFO: Trying to get logs from node env1-test-worker-2 pod pod-configmaps-a4970b88-1e39-44ba-9c7f-fc9a7e453015 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 00:59:24.323
  Aug 28 00:59:24.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7639" for this suite. @ 08/28/24 00:59:24.376
• [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 08/28/24 00:59:24.397
  Aug 28 00:59:24.397: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename gc @ 08/28/24 00:59:24.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 00:59:24.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 00:59:24.462
  STEP: create the rc @ 08/28/24 00:59:24.484
  W0828 00:59:24.495678      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0828 00:59:25.018621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:26.018926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:27.018897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:28.019681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:29.019687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:30.026450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 08/28/24 00:59:30.509
  STEP: wait for the rc to be deleted @ 08/28/24 00:59:30.531
  E0828 00:59:31.030034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:32.031176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:33.032420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:34.033726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:35.034055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 08/28/24 00:59:35.586
  E0828 00:59:36.034882      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:37.035816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:38.035837      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:39.036928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:40.037909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:41.039402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:42.039518      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:43.040032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:44.040911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:45.041237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:46.043754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:47.043825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:48.045285      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:49.045318      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:50.045964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:51.047334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:52.048010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:53.047642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:54.050060      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:55.050546      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:56.051231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:57.051694      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:58.052205      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 00:59:59.052856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:00.052869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:01.053723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:02.053890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:03.054084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:04.054864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:05.056455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/28/24 01:00:05.639
  Aug 28 01:00:05.880: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 28 01:00:05.881: INFO: Deleting pod "simpletest.rc-2gsxb" in namespace "gc-6306"
  Aug 28 01:00:05.915: INFO: Deleting pod "simpletest.rc-2vpnr" in namespace "gc-6306"
  Aug 28 01:00:06.007: INFO: Deleting pod "simpletest.rc-2zxjp" in namespace "gc-6306"
  E0828 01:00:06.062709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:06.158: INFO: Deleting pod "simpletest.rc-4cbr9" in namespace "gc-6306"
  Aug 28 01:00:06.233: INFO: Deleting pod "simpletest.rc-4kzzm" in namespace "gc-6306"
  Aug 28 01:00:06.297: INFO: Deleting pod "simpletest.rc-525bp" in namespace "gc-6306"
  Aug 28 01:00:06.387: INFO: Deleting pod "simpletest.rc-5cgz4" in namespace "gc-6306"
  Aug 28 01:00:06.469: INFO: Deleting pod "simpletest.rc-5x8js" in namespace "gc-6306"
  Aug 28 01:00:06.514: INFO: Deleting pod "simpletest.rc-6874g" in namespace "gc-6306"
  Aug 28 01:00:06.559: INFO: Deleting pod "simpletest.rc-6fgmf" in namespace "gc-6306"
  Aug 28 01:00:06.676: INFO: Deleting pod "simpletest.rc-6fstc" in namespace "gc-6306"
  Aug 28 01:00:06.842: INFO: Deleting pod "simpletest.rc-6r7rf" in namespace "gc-6306"
  Aug 28 01:00:06.935: INFO: Deleting pod "simpletest.rc-6tdgk" in namespace "gc-6306"
  Aug 28 01:00:06.998: INFO: Deleting pod "simpletest.rc-6wnv9" in namespace "gc-6306"
  E0828 01:00:07.063925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:07.090: INFO: Deleting pod "simpletest.rc-75nzf" in namespace "gc-6306"
  Aug 28 01:00:07.171: INFO: Deleting pod "simpletest.rc-7krjw" in namespace "gc-6306"
  Aug 28 01:00:07.290: INFO: Deleting pod "simpletest.rc-7txwp" in namespace "gc-6306"
  Aug 28 01:00:07.380: INFO: Deleting pod "simpletest.rc-88jdb" in namespace "gc-6306"
  Aug 28 01:00:07.496: INFO: Deleting pod "simpletest.rc-8kfhc" in namespace "gc-6306"
  Aug 28 01:00:07.572: INFO: Deleting pod "simpletest.rc-8qm86" in namespace "gc-6306"
  Aug 28 01:00:07.636: INFO: Deleting pod "simpletest.rc-8vhwh" in namespace "gc-6306"
  Aug 28 01:00:07.697: INFO: Deleting pod "simpletest.rc-92qs8" in namespace "gc-6306"
  Aug 28 01:00:07.810: INFO: Deleting pod "simpletest.rc-9f76b" in namespace "gc-6306"
  Aug 28 01:00:07.898: INFO: Deleting pod "simpletest.rc-9zhln" in namespace "gc-6306"
  Aug 28 01:00:07.962: INFO: Deleting pod "simpletest.rc-bdj5f" in namespace "gc-6306"
  Aug 28 01:00:08.038: INFO: Deleting pod "simpletest.rc-bkc7z" in namespace "gc-6306"
  E0828 01:00:08.065130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:08.110: INFO: Deleting pod "simpletest.rc-bzjb4" in namespace "gc-6306"
  Aug 28 01:00:08.174: INFO: Deleting pod "simpletest.rc-c8ctc" in namespace "gc-6306"
  Aug 28 01:00:08.226: INFO: Deleting pod "simpletest.rc-cb266" in namespace "gc-6306"
  Aug 28 01:00:08.355: INFO: Deleting pod "simpletest.rc-cndqx" in namespace "gc-6306"
  Aug 28 01:00:08.417: INFO: Deleting pod "simpletest.rc-cq4j4" in namespace "gc-6306"
  Aug 28 01:00:08.507: INFO: Deleting pod "simpletest.rc-cr9q6" in namespace "gc-6306"
  Aug 28 01:00:08.628: INFO: Deleting pod "simpletest.rc-cxfls" in namespace "gc-6306"
  Aug 28 01:00:08.840: INFO: Deleting pod "simpletest.rc-d6rvr" in namespace "gc-6306"
  Aug 28 01:00:08.919: INFO: Deleting pod "simpletest.rc-d8mjs" in namespace "gc-6306"
  E0828 01:00:09.068962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:09.078: INFO: Deleting pod "simpletest.rc-d96hv" in namespace "gc-6306"
  Aug 28 01:00:09.155: INFO: Deleting pod "simpletest.rc-dbwrb" in namespace "gc-6306"
  Aug 28 01:00:09.292: INFO: Deleting pod "simpletest.rc-dfzgd" in namespace "gc-6306"
  Aug 28 01:00:09.494: INFO: Deleting pod "simpletest.rc-dh8ql" in namespace "gc-6306"
  Aug 28 01:00:09.617: INFO: Deleting pod "simpletest.rc-dkp9r" in namespace "gc-6306"
  Aug 28 01:00:09.681: INFO: Deleting pod "simpletest.rc-dzhls" in namespace "gc-6306"
  Aug 28 01:00:09.749: INFO: Deleting pod "simpletest.rc-fht2k" in namespace "gc-6306"
  Aug 28 01:00:09.815: INFO: Deleting pod "simpletest.rc-fkpbk" in namespace "gc-6306"
  Aug 28 01:00:09.937: INFO: Deleting pod "simpletest.rc-g6wwb" in namespace "gc-6306"
  Aug 28 01:00:09.983: INFO: Deleting pod "simpletest.rc-ggp8c" in namespace "gc-6306"
  E0828 01:00:10.069315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:10.069: INFO: Deleting pod "simpletest.rc-gjjwc" in namespace "gc-6306"
  Aug 28 01:00:10.108: INFO: Deleting pod "simpletest.rc-gkm79" in namespace "gc-6306"
  Aug 28 01:00:10.156: INFO: Deleting pod "simpletest.rc-hlv52" in namespace "gc-6306"
  Aug 28 01:00:10.189: INFO: Deleting pod "simpletest.rc-hmgkj" in namespace "gc-6306"
  Aug 28 01:00:10.227: INFO: Deleting pod "simpletest.rc-hn6ww" in namespace "gc-6306"
  Aug 28 01:00:10.307: INFO: Deleting pod "simpletest.rc-hqf2l" in namespace "gc-6306"
  Aug 28 01:00:10.472: INFO: Deleting pod "simpletest.rc-j4dlv" in namespace "gc-6306"
  Aug 28 01:00:10.610: INFO: Deleting pod "simpletest.rc-j86wj" in namespace "gc-6306"
  Aug 28 01:00:10.702: INFO: Deleting pod "simpletest.rc-j94rf" in namespace "gc-6306"
  Aug 28 01:00:10.816: INFO: Deleting pod "simpletest.rc-jkfnz" in namespace "gc-6306"
  Aug 28 01:00:10.956: INFO: Deleting pod "simpletest.rc-jrtkf" in namespace "gc-6306"
  Aug 28 01:00:11.024: INFO: Deleting pod "simpletest.rc-kmmc5" in namespace "gc-6306"
  E0828 01:00:11.069550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:11.124: INFO: Deleting pod "simpletest.rc-lc9wq" in namespace "gc-6306"
  Aug 28 01:00:11.193: INFO: Deleting pod "simpletest.rc-lf72h" in namespace "gc-6306"
  Aug 28 01:00:11.258: INFO: Deleting pod "simpletest.rc-lg4tt" in namespace "gc-6306"
  Aug 28 01:00:11.363: INFO: Deleting pod "simpletest.rc-lnnzr" in namespace "gc-6306"
  Aug 28 01:00:11.432: INFO: Deleting pod "simpletest.rc-lsgt2" in namespace "gc-6306"
  Aug 28 01:00:11.476: INFO: Deleting pod "simpletest.rc-m5vcd" in namespace "gc-6306"
  Aug 28 01:00:11.569: INFO: Deleting pod "simpletest.rc-m7nmk" in namespace "gc-6306"
  Aug 28 01:00:11.635: INFO: Deleting pod "simpletest.rc-m7vh4" in namespace "gc-6306"
  Aug 28 01:00:11.760: INFO: Deleting pod "simpletest.rc-mh7f7" in namespace "gc-6306"
  Aug 28 01:00:11.838: INFO: Deleting pod "simpletest.rc-mr4n5" in namespace "gc-6306"
  Aug 28 01:00:11.913: INFO: Deleting pod "simpletest.rc-mxspp" in namespace "gc-6306"
  Aug 28 01:00:11.997: INFO: Deleting pod "simpletest.rc-mzmrw" in namespace "gc-6306"
  E0828 01:00:12.070110      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:12.100: INFO: Deleting pod "simpletest.rc-n4cr2" in namespace "gc-6306"
  Aug 28 01:00:12.208: INFO: Deleting pod "simpletest.rc-n7hr7" in namespace "gc-6306"
  Aug 28 01:00:12.304: INFO: Deleting pod "simpletest.rc-nb5mk" in namespace "gc-6306"
  Aug 28 01:00:12.467: INFO: Deleting pod "simpletest.rc-nmvfc" in namespace "gc-6306"
  Aug 28 01:00:12.600: INFO: Deleting pod "simpletest.rc-nsbxd" in namespace "gc-6306"
  Aug 28 01:00:12.667: INFO: Deleting pod "simpletest.rc-psn4r" in namespace "gc-6306"
  Aug 28 01:00:12.733: INFO: Deleting pod "simpletest.rc-pwk82" in namespace "gc-6306"
  Aug 28 01:00:12.824: INFO: Deleting pod "simpletest.rc-q9gpp" in namespace "gc-6306"
  E0828 01:00:13.075101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:13.197: INFO: Deleting pod "simpletest.rc-rrw7b" in namespace "gc-6306"
  Aug 28 01:00:13.363: INFO: Deleting pod "simpletest.rc-s54mc" in namespace "gc-6306"
  Aug 28 01:00:13.564: INFO: Deleting pod "simpletest.rc-s62d9" in namespace "gc-6306"
  Aug 28 01:00:13.676: INFO: Deleting pod "simpletest.rc-scrpj" in namespace "gc-6306"
  Aug 28 01:00:13.784: INFO: Deleting pod "simpletest.rc-sd69q" in namespace "gc-6306"
  Aug 28 01:00:13.918: INFO: Deleting pod "simpletest.rc-snt96" in namespace "gc-6306"
  Aug 28 01:00:14.013: INFO: Deleting pod "simpletest.rc-t8qj9" in namespace "gc-6306"
  E0828 01:00:14.075313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:14.133: INFO: Deleting pod "simpletest.rc-t9xhl" in namespace "gc-6306"
  Aug 28 01:00:14.203: INFO: Deleting pod "simpletest.rc-v2wtl" in namespace "gc-6306"
  Aug 28 01:00:14.367: INFO: Deleting pod "simpletest.rc-vsb69" in namespace "gc-6306"
  Aug 28 01:00:14.468: INFO: Deleting pod "simpletest.rc-vz2ts" in namespace "gc-6306"
  Aug 28 01:00:14.556: INFO: Deleting pod "simpletest.rc-w68t2" in namespace "gc-6306"
  Aug 28 01:00:14.604: INFO: Deleting pod "simpletest.rc-w7p6d" in namespace "gc-6306"
  Aug 28 01:00:14.686: INFO: Deleting pod "simpletest.rc-wcs2w" in namespace "gc-6306"
  Aug 28 01:00:14.791: INFO: Deleting pod "simpletest.rc-wfd4j" in namespace "gc-6306"
  Aug 28 01:00:14.872: INFO: Deleting pod "simpletest.rc-x7x6w" in namespace "gc-6306"
  Aug 28 01:00:14.995: INFO: Deleting pod "simpletest.rc-xj4n8" in namespace "gc-6306"
  E0828 01:00:15.075845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:15.123: INFO: Deleting pod "simpletest.rc-xrh2d" in namespace "gc-6306"
  Aug 28 01:00:15.190: INFO: Deleting pod "simpletest.rc-zd6d8" in namespace "gc-6306"
  Aug 28 01:00:15.295: INFO: Deleting pod "simpletest.rc-zgckx" in namespace "gc-6306"
  Aug 28 01:00:15.387: INFO: Deleting pod "simpletest.rc-znqck" in namespace "gc-6306"
  Aug 28 01:00:15.475: INFO: Deleting pod "simpletest.rc-zwqzt" in namespace "gc-6306"
  Aug 28 01:00:15.644: INFO: Deleting pod "simpletest.rc-zwz84" in namespace "gc-6306"
  Aug 28 01:00:15.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6306" for this suite. @ 08/28/24 01:00:15.748
• [51.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 08/28/24 01:00:15.823
  Aug 28 01:00:15.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename crd-webhook @ 08/28/24 01:00:15.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:00:15.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:00:15.964
  STEP: Setting up server cert @ 08/28/24 01:00:15.975
  E0828 01:00:16.076186      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/28/24 01:00:16.667
  STEP: Deploying the custom resource conversion webhook pod @ 08/28/24 01:00:16.708
  STEP: Wait for the deployment to be ready @ 08/28/24 01:00:16.771
  Aug 28 01:00:16.844: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0828 01:00:17.076816      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:18.077196      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:18.876: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 1, 0, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 1, 0, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 1, 0, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 1, 0, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 01:00:19.077339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:20.080071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:20.889: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.August, 28, 1, 0, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 1, 0, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.August, 28, 1, 0, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.August, 28, 1, 0, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0828 01:00:21.078632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:22.079314      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/28/24 01:00:22.897
  STEP: Verifying the service has paired with the endpoint @ 08/28/24 01:00:22.969
  E0828 01:00:23.080365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:23.970: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 28 01:00:24.017: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 01:00:24.080944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:25.081570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:26.081726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:27.082435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:28.083273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:29.083904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:30.084616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:31.085266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 08/28/24 01:00:31.669
  STEP: Create a v2 custom resource @ 08/28/24 01:00:31.728
  STEP: List CRs in v1 @ 08/28/24 01:00:31.834
  STEP: List CRs in v2 @ 08/28/24 01:00:31.844
  E0828 01:00:32.088262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:32.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1918" for this suite. @ 08/28/24 01:00:32.558
• [16.773 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 08/28/24 01:00:32.597
  Aug 28 01:00:32.597: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 01:00:32.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:00:32.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:00:32.674
  STEP: Create set of pods @ 08/28/24 01:00:32.706
  Aug 28 01:00:32.748: INFO: created test-pod-1
  Aug 28 01:00:32.772: INFO: created test-pod-2
  Aug 28 01:00:32.808: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 08/28/24 01:00:32.808
  E0828 01:00:33.088756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:34.090166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:35.090444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 08/28/24 01:00:35.093
  Aug 28 01:00:35.106: INFO: Pod quantity 3 is different from expected quantity 0
  E0828 01:00:36.091200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:36.113: INFO: Pod quantity 3 is different from expected quantity 0
  E0828 01:00:37.091753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:37.109: INFO: Pod quantity 3 is different from expected quantity 0
  E0828 01:00:38.092158      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:38.129: INFO: Pod quantity 3 is different from expected quantity 0
  E0828 01:00:39.092372      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:39.110: INFO: Pod quantity 1 is different from expected quantity 0
  E0828 01:00:40.093003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:40.100: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1866" for this suite. @ 08/28/24 01:00:40.11
• [7.522 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 08/28/24 01:00:40.121
  Aug 28 01:00:40.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 01:00:40.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:00:40.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:00:40.167
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 01:00:40.173
  E0828 01:00:41.093899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:42.094728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:43.095338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:44.095742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:00:44.221
  Aug 28 01:00:44.227: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-63df60cf-c3e2-4ed6-922d-93495ffb8c98 container client-container: <nil>
  STEP: delete the pod @ 08/28/24 01:00:44.25
  Aug 28 01:00:44.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4570" for this suite. @ 08/28/24 01:00:44.309
• [4.220 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 08/28/24 01:00:44.341
  Aug 28 01:00:44.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename containers @ 08/28/24 01:00:44.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:00:44.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:00:44.423
  STEP: Creating a pod to test override command @ 08/28/24 01:00:44.429
  E0828 01:00:45.095951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:46.096315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:47.097243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:48.097663      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:00:48.476
  Aug 28 01:00:48.485: INFO: Trying to get logs from node env1-test-worker-2 pod client-containers-d269a273-6bca-4f35-8a34-09d49ce13f22 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 01:00:48.503
  Aug 28 01:00:48.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5917" for this suite. @ 08/28/24 01:00:48.568
• [4.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 08/28/24 01:00:48.587
  Aug 28 01:00:48.587: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename statefulset @ 08/28/24 01:00:48.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:00:48.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:00:48.705
  STEP: Creating service test in namespace statefulset-7655 @ 08/28/24 01:00:48.714
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 08/28/24 01:00:48.726
  STEP: Creating stateful set ss in namespace statefulset-7655 @ 08/28/24 01:00:48.735
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7655 @ 08/28/24 01:00:48.768
  Aug 28 01:00:48.791: INFO: Found 0 stateful pods, waiting for 1
  E0828 01:00:49.097504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:50.098464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:51.098590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:52.099497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:53.100821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:54.100875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:55.101580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:56.103168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:57.104015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:00:58.104622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:58.797: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 08/28/24 01:00:58.797
  Aug 28 01:00:58.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0828 01:00:59.105134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:00:59.122: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 01:00:59.122: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 01:00:59.122: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 01:00:59.131: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0828 01:01:00.105647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:01.106582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:02.107560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:03.107836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:04.110441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:05.111532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:06.114176      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:07.114838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:08.115852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:09.116949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:09.135: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 01:01:09.135: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 28 01:01:09.216: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999453s
  E0828 01:01:10.116724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:10.231: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.965751912s
  E0828 01:01:11.119732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:11.240: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.94950527s
  E0828 01:01:12.120829      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:12.250: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.94083395s
  E0828 01:01:13.121150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:13.262: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.930960985s
  E0828 01:01:14.121827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:14.269: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.918916774s
  E0828 01:01:15.122667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:15.281: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.911911346s
  E0828 01:01:16.123404      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:16.290: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.900193216s
  E0828 01:01:17.123612      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:17.301: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.890703539s
  E0828 01:01:18.124142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:18.310: INFO: Verifying statefulset ss doesn't scale past 1 for another 879.473183ms
  E0828 01:01:19.124864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7655 @ 08/28/24 01:01:19.311
  Aug 28 01:01:19.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 28 01:01:19.717: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 28 01:01:19.717: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 01:01:19.717: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 28 01:01:19.736: INFO: Found 1 stateful pods, waiting for 3
  E0828 01:01:20.125786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:21.127072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:22.128113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:23.128249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:24.128646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:25.129123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:26.129957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:27.130974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:28.132016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:29.133085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:29.746: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 01:01:29.746: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 28 01:01:29.746: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 08/28/24 01:01:29.746
  STEP: Scale down will halt with unhealthy stateful pod @ 08/28/24 01:01:29.746
  Aug 28 01:01:29.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 28 01:01:30.099: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 01:01:30.099: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 01:01:30.099: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 01:01:30.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0828 01:01:30.133155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:30.465: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 01:01:30.465: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 01:01:30.465: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 01:01:30.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 28 01:01:30.913: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 28 01:01:30.913: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 28 01:01:30.913: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 28 01:01:30.913: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 28 01:01:30.926: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  E0828 01:01:31.133484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:32.133852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:33.134306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:34.134417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:35.135100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:36.136030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:37.136721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:38.137293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:39.137611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:40.138181      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:40.944: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 01:01:40.944: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 01:01:40.944: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 28 01:01:40.991: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999494s
  E0828 01:01:41.138802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:42.004: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.985152956s
  E0828 01:01:42.138932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:43.022: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.972963705s
  E0828 01:01:43.139940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:44.030: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.954274535s
  E0828 01:01:44.140621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:45.040: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.946651595s
  E0828 01:01:45.141264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:46.061: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.936379892s
  E0828 01:01:46.141484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:47.073: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.915315607s
  E0828 01:01:47.142170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:48.087: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.902883157s
  E0828 01:01:48.142247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:49.097: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.890019671s
  E0828 01:01:49.142361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:50.106: INFO: Verifying statefulset ss doesn't scale past 3 for another 879.46949ms
  E0828 01:01:50.142758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7655 @ 08/28/24 01:01:51.107
  Aug 28 01:01:51.135: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0828 01:01:51.142800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:01:51.433: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 28 01:01:51.433: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 01:01:51.433: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 28 01:01:51.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 28 01:01:51.710: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 28 01:01:51.710: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 01:01:51.710: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 28 01:01:51.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=statefulset-7655 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 28 01:01:52.010: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 28 01:01:52.010: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 28 01:01:52.010: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 28 01:01:52.010: INFO: Scaling statefulset ss to 0
  E0828 01:01:52.143701      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:53.144496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:54.144865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:55.145736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:56.146105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:57.146627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:58.147456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:01:59.147099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:00.147339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:01.148032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 08/28/24 01:02:02.046
  Aug 28 01:02:02.046: INFO: Deleting all statefulset in ns statefulset-7655
  Aug 28 01:02:02.058: INFO: Scaling statefulset ss to 0
  Aug 28 01:02:02.086: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 28 01:02:02.092: INFO: Deleting statefulset ss
  Aug 28 01:02:02.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7655" for this suite. @ 08/28/24 01:02:02.144
  E0828 01:02:02.148618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [73.578 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 08/28/24 01:02:02.165
  Aug 28 01:02:02.165: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 01:02:02.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:02:02.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:02:02.231
  STEP: Creating a pod to test downward api env vars @ 08/28/24 01:02:02.237
  E0828 01:02:03.149538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:04.150003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:05.150934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:06.151133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:02:06.31
  Aug 28 01:02:06.317: INFO: Trying to get logs from node env1-test-worker-2 pod downward-api-9648f14e-8d68-45eb-aa70-903a846b98e4 container dapi-container: <nil>
  STEP: delete the pod @ 08/28/24 01:02:06.334
  Aug 28 01:02:06.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3018" for this suite. @ 08/28/24 01:02:06.402
• [4.252 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 08/28/24 01:02:06.419
  Aug 28 01:02:06.419: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename pods @ 08/28/24 01:02:06.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:02:06.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:02:06.465
  STEP: creating pod @ 08/28/24 01:02:06.471
  E0828 01:02:07.151244      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:08.151596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:09.152800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:10.153212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:02:10.538: INFO: Pod pod-hostip-fe47cbbe-d5f8-4057-9951-e803f99a907c has hostIP: 10.61.1.202
  Aug 28 01:02:10.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6466" for this suite. @ 08/28/24 01:02:10.551
• [4.156 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 08/28/24 01:02:10.576
  Aug 28 01:02:10.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 01:02:10.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:02:10.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:02:10.655
  STEP: Counting existing ResourceQuota @ 08/28/24 01:02:10.673
  E0828 01:02:11.153626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:12.154584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:13.154613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:14.154984      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:15.155604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/28/24 01:02:15.689
  STEP: Ensuring resource quota status is calculated @ 08/28/24 01:02:15.709
  E0828 01:02:16.155828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:17.156484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 08/28/24 01:02:17.737
  STEP: Ensuring ResourceQuota status captures the pod usage @ 08/28/24 01:02:17.791
  E0828 01:02:18.157517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:19.158039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 08/28/24 01:02:19.799
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 08/28/24 01:02:19.804
  STEP: Ensuring a pod cannot update its resource requirements @ 08/28/24 01:02:19.809
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 08/28/24 01:02:19.826
  E0828 01:02:20.158378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:21.158699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 08/28/24 01:02:21.837
  STEP: Ensuring resource quota status released the pod usage @ 08/28/24 01:02:21.864
  E0828 01:02:22.158919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:23.159106      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:02:23.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2484" for this suite. @ 08/28/24 01:02:23.891
• [13.333 seconds]
------------------------------
SSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 08/28/24 01:02:23.912
  Aug 28 01:02:23.913: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename certificates @ 08/28/24 01:02:23.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:02:23.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:02:23.971
  E0828 01:02:24.159305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:25.160411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:26.160698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 08/28/24 01:02:26.349
  STEP: getting /apis/certificates.k8s.io @ 08/28/24 01:02:26.364
  STEP: getting /apis/certificates.k8s.io/v1 @ 08/28/24 01:02:26.366
  STEP: creating @ 08/28/24 01:02:26.368
  STEP: getting @ 08/28/24 01:02:26.418
  STEP: listing @ 08/28/24 01:02:26.423
  STEP: watching @ 08/28/24 01:02:26.431
  Aug 28 01:02:26.431: INFO: starting watch
  STEP: patching @ 08/28/24 01:02:26.433
  STEP: updating @ 08/28/24 01:02:26.451
  Aug 28 01:02:26.469: INFO: waiting for watch events with expected annotations
  Aug 28 01:02:26.469: INFO: saw patched and updated annotations
  STEP: getting /approval @ 08/28/24 01:02:26.47
  STEP: patching /approval @ 08/28/24 01:02:26.478
  STEP: updating /approval @ 08/28/24 01:02:26.504
  STEP: getting /status @ 08/28/24 01:02:26.518
  STEP: patching /status @ 08/28/24 01:02:26.524
  STEP: updating /status @ 08/28/24 01:02:26.545
  STEP: deleting @ 08/28/24 01:02:26.568
  STEP: deleting a collection @ 08/28/24 01:02:26.597
  Aug 28 01:02:26.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4397" for this suite. @ 08/28/24 01:02:26.655
• [2.771 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 08/28/24 01:02:26.683
  Aug 28 01:02:26.683: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename init-container @ 08/28/24 01:02:26.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:02:26.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:02:26.758
  STEP: creating the pod @ 08/28/24 01:02:26.767
  Aug 28 01:02:26.767: INFO: PodSpec: initContainers in spec.initContainers
  E0828 01:02:27.160933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:28.161215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:29.161278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:30.162238      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:31.162340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:32.163174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:33.163374      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:34.163730      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:35.164360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:36.164820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:37.165892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:38.167802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:39.168313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:40.168844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:41.169166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:42.169613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:43.169868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:44.170284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:45.170738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:46.171076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:47.171958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:48.172111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:49.172634      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:50.172758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:51.172919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:52.174699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:53.174858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:54.175058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:55.175930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:56.176155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:57.177013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:58.177298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:02:59.179864      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:00.180004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:01.180326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:02.181438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:03.181877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:04.181986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:05.182704      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:06.182913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:07.183144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:08.183540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:09.183686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:03:09.895: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-9bfb0062-c428-4c8b-96d0-d7d9aa273fa1", GenerateName:"", Namespace:"init-container-7168", SelfLink:"", UID:"b4a9f3b8-dfd4-4c5d-ba03-11b661f817bf", ResourceVersion:"38944054", Generation:0, CreationTimestamp:time.Date(2024, time.August, 28, 1, 2, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"767139405"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"8434700128194930ad734b9bba8ab9818f0227559effd66f0d82eeca19993a94", "cni.projectcalico.org/podIP":"10.233.76.188/32", "cni.projectcalico.org/podIPs":"10.233.76.188/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 1, 2, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c567c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 1, 2, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c567f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.August, 28, 1, 3, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003c56858), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-ztfbv", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000b376c0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ztfbv", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ztfbv", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ztfbv", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0097d57a8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"env1-test-worker-2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00003cfc0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0097d5820)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0097d5840)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0097d5848), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0097d584c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0011de400), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.August, 28, 1, 2, 28, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.August, 28, 1, 2, 26, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.August, 28, 1, 2, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.August, 28, 1, 2, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.August, 28, 1, 2, 26, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.61.1.202", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.61.1.202"}}, PodIP:"10.233.76.188", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.76.188"}}, StartTime:time.Date(2024, time.August, 28, 1, 2, 26, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00003d0a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00003d110)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://54b15b05b8c22435f705e246dbf03d20feab8190ff5741253b5908a4cb1fe46f", Started:(*bool)(0xc0097d58ea), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000b37780), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0097d58ff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000b37720), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0097d58cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Aug 28 01:03:09.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7168" for this suite. @ 08/28/24 01:03:09.919
• [43.256 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 08/28/24 01:03:09.942
  Aug 28 01:03:09.943: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/28/24 01:03:09.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:03:09.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:03:10.003
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/28/24 01:03:10.01
  Aug 28 01:03:10.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8710 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Aug 28 01:03:10.154: INFO: stderr: ""
  Aug 28 01:03:10.154: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 08/28/24 01:03:10.154
  Aug 28 01:03:10.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8710 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E0828 01:03:10.184371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:03:10.309: INFO: stderr: ""
  Aug 28 01:03:10.309: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/28/24 01:03:10.309
  Aug 28 01:03:10.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8710 delete pods e2e-test-httpd-pod'
  E0828 01:03:11.185703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:12.186252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:03:12.992: INFO: stderr: ""
  Aug 28 01:03:12.993: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 28 01:03:12.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8710" for this suite. @ 08/28/24 01:03:13.009
• [3.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 08/28/24 01:03:13.03
  Aug 28 01:03:13.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename watch @ 08/28/24 01:03:13.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:03:13.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:03:13.131
  STEP: creating a watch on configmaps @ 08/28/24 01:03:13.138
  STEP: creating a new configmap @ 08/28/24 01:03:13.14
  STEP: modifying the configmap once @ 08/28/24 01:03:13.154
  STEP: closing the watch once it receives two notifications @ 08/28/24 01:03:13.18
  Aug 28 01:03:13.180: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9567  54492651-022c-4ad6-bc8d-ecc1a349f66a 38944094 0 2024-08-28 01:03:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-08-28 01:03:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 01:03:13.181: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9567  54492651-022c-4ad6-bc8d-ecc1a349f66a 38944096 0 2024-08-28 01:03:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-08-28 01:03:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 08/28/24 01:03:13.182
  E0828 01:03:13.186591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 08/28/24 01:03:13.201
  STEP: deleting the configmap @ 08/28/24 01:03:13.204
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 08/28/24 01:03:13.214
  Aug 28 01:03:13.214: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9567  54492651-022c-4ad6-bc8d-ecc1a349f66a 38944097 0 2024-08-28 01:03:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-08-28 01:03:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 01:03:13.214: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9567  54492651-022c-4ad6-bc8d-ecc1a349f66a 38944098 0 2024-08-28 01:03:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-08-28 01:03:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 28 01:03:13.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9567" for this suite. @ 08/28/24 01:03:13.229
• [0.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 08/28/24 01:03:13.242
  Aug 28 01:03:13.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubectl @ 08/28/24 01:03:13.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:03:13.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:03:13.316
  Aug 28 01:03:13.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8572 create -f -'
  Aug 28 01:03:13.647: INFO: stderr: ""
  Aug 28 01:03:13.647: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Aug 28 01:03:13.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8572 create -f -'
  Aug 28 01:03:13.898: INFO: stderr: ""
  Aug 28 01:03:13.898: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/28/24 01:03:13.898
  E0828 01:03:14.187872      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:03:14.915: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 01:03:14.915: INFO: Found 1 / 1
  Aug 28 01:03:14.915: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 28 01:03:14.927: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 28 01:03:14.927: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 28 01:03:14.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8572 describe pod agnhost-primary-mw6z5'
  Aug 28 01:03:15.160: INFO: stderr: ""
  Aug 28 01:03:15.160: INFO: stdout: "Name:             agnhost-primary-mw6z5\nNamespace:        kubectl-8572\nPriority:         0\nService Account:  default\nNode:             env1-test-worker-2/10.61.1.202\nStart Time:       Wed, 28 Aug 2024 01:03:13 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 27bb47b9bb67c93d01a88f025cefc1db764df09517afa49c14306706a21f1254\n                  cni.projectcalico.org/podIP: 10.233.76.172/32\n                  cni.projectcalico.org/podIPs: 10.233.76.172/32\nStatus:           Running\nIP:               10.233.76.172\nIPs:\n  IP:           10.233.76.172\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://17b0461f41f1e72c17496f6b365a09aef909f3d0012713b4ab1529e310eebd47\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 28 Aug 2024 01:03:14 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6sv2r (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-6sv2r:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8572/agnhost-primary-mw6z5 to env1-test-worker-2\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Aug 28 01:03:15.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8572 describe rc agnhost-primary'
  E0828 01:03:15.189424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:03:15.346: INFO: stderr: ""
  Aug 28 01:03:15.346: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8572\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-mw6z5\n"
  Aug 28 01:03:15.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8572 describe service agnhost-primary'
  Aug 28 01:03:15.520: INFO: stderr: ""
  Aug 28 01:03:15.520: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8572\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.50.94\nIPs:               10.233.50.94\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.76.172:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Aug 28 01:03:15.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8572 describe node env1-test-master-0'
  Aug 28 01:03:15.764: INFO: stderr: ""
  Aug 28 01:03:15.764: INFO: stdout: "Name:               env1-test-master-0\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=vsphere-vm.cpu-2.mem-7gb.os-ubuntu\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=env1-test-master-0\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\n                    node.kubernetes.io/instance-type=vsphere-vm.cpu-2.mem-7gb.os-ubuntu\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 10.61.1.197\n                    csi.volume.kubernetes.io/nodeid: {\"csi.vsphere.vmware.com\":\"422692ca-c6ee-f8d8-dc62-5ca0ff24de6d\"}\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.61.1.197/26\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.233.93.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 22 Apr 2024 13:09:59 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  env1-test-master-0\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 28 Aug 2024 01:03:09 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 22 Jul 2024 15:40:50 +0000   Mon, 22 Jul 2024 15:40:50 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 28 Aug 2024 01:03:09 +0000   Thu, 27 Jun 2024 16:39:38 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 28 Aug 2024 01:03:09 +0000   Thu, 27 Jun 2024 16:39:38 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 28 Aug 2024 01:03:09 +0000   Thu, 27 Jun 2024 16:39:38 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 28 Aug 2024 01:03:09 +0000   Thu, 27 Jun 2024 16:42:15 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.61.1.197\n  ExternalIP:  10.61.1.197\n  Hostname:    env1-test-master-0\nCapacity:\n  cpu:                2\n  ephemeral-storage:  60795672Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8054876Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  56029291223\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7952476Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 4284f3e04f9c47a4b59e54ce697ed9a6\n  System UUID:                422692ca-c6ee-f8d8-dc62-5ca0ff24de6d\n  Boot ID:                    dbe28a5e-a4ac-46b9-b3c5-d18fab072b8f\n  Kernel Version:             5.4.0-67-generic\n  OS Image:                   Ubuntu 20.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.16\n  Kubelet Version:            v1.29.5\n  Kube-Proxy Version:         v1.29.5\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nProviderID:                   vsphere://422692ca-c6ee-f8d8-dc62-5ca0ff24de6d\nNon-terminated Pods:          (13 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  filebeat                    filebeat-filebeat-2xxrp                                    200m (10%)    1 (50%)     200Mi (2%)       1000Mi (12%)   128m\n  kube-system                 calico-node-59s9b                                          150m (7%)     300m (15%)  64M (0%)         500M (6%)      36d\n  kube-system                 dns-autoscaler-9875c9b44-dkjwr                             20m (1%)      0 (0%)      10Mi (0%)        0 (0%)         8d\n  kube-system                 kube-apiserver-env1-test-master-0                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         61d\n  kube-system                 kube-controller-manager-env1-test-master-0                 200m (10%)    0 (0%)      0 (0%)           0 (0%)         61d\n  kube-system                 kube-proxy-mvvlh                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         8h\n  kube-system                 kube-scheduler-env1-test-master-0                          100m (5%)     0 (0%)      0 (0%)           0 (0%)         61d\n  kube-system                 nodelocaldns-7dctx                                         100m (5%)     0 (0%)      70Mi (0%)        200Mi (2%)     61d\n  kube-system                 vsphere-cloud-controller-manager-wdvzq                     200m (10%)    0 (0%)      0 (0%)           0 (0%)         126d\n  kube-system                 vsphere-csi-controller-6658647f89-2pv7g                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         8h\n  kube-system                 vsphere-csi-node-p7mfr                                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         8h\n  prometheus                  prometheus-prometheus-node-exporter-lgt6d                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         126d\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-sgrgg    0 (0%)        0 (0%)      0 (0%)           0 (0%)         115m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests       Limits\n  --------           --------       ------\n  cpu                1220m (61%)    1300m (65%)\n  memory             349220Ki (4%)  1758291200 (21%)\n  ephemeral-storage  0 (0%)         0 (0%)\n  hugepages-1Gi      0 (0%)         0 (0%)\n  hugepages-2Mi      0 (0%)         0 (0%)\nEvents:              <none>\n"
  Aug 28 01:03:15.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2235641783 --namespace=kubectl-8572 describe namespace kubectl-8572'
  Aug 28 01:03:15.985: INFO: stderr: ""
  Aug 28 01:03:15.986: INFO: stdout: "Name:         kubectl-8572\nLabels:       e2e-framework=kubectl\n              e2e-run=e6c29178-78d2-42b6-a3e7-d67e287e2050\n              kubernetes.io/metadata.name=kubectl-8572\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Aug 28 01:03:15.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8572" for this suite. @ 08/28/24 01:03:16.012
• [2.822 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 08/28/24 01:03:16.066
  Aug 28 01:03:16.066: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename resourcequota @ 08/28/24 01:03:16.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:03:16.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:03:16.128
  STEP: Counting existing ResourceQuota @ 08/28/24 01:03:16.135
  E0828 01:03:16.190398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:17.190779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:18.191446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:19.191894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:20.192390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/28/24 01:03:21.153
  STEP: Ensuring resource quota status is calculated @ 08/28/24 01:03:21.182
  E0828 01:03:21.193443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:22.194256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:23.194580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:03:23.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1549" for this suite. @ 08/28/24 01:03:23.209
• [7.157 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 08/28/24 01:03:23.223
  Aug 28 01:03:23.224: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename taint-multiple-pods @ 08/28/24 01:03:23.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:03:23.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:03:23.276
  Aug 28 01:03:23.283: INFO: Waiting up to 1m0s for all nodes to be ready
  E0828 01:03:24.194910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:25.194921      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:26.196824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:27.196955      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:28.197636      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:29.198022      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:30.198395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:31.199014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:32.199373      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:33.199873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:34.201335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:35.202190      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:36.202615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:37.203604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:38.203731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:39.204385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:40.204831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:41.205530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:42.206438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:43.206870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:44.207249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:45.208141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:46.208532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:47.209385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:48.210008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:49.211109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:50.211526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:51.211581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:52.212215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:53.213355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:54.214103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:55.214208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:56.214273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:57.215055      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:58.216101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:03:59.216559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:00.217131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:01.217640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:02.217896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:03.218095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:04.218920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:05.219699      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:06.220866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:07.221600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:08.221951      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:09.222207      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:10.222441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:11.223352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:12.223673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:13.224448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:14.224668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:15.225102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:16.225206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:17.226056      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:18.226036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:19.226596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:20.226808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:21.227528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:22.228503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:23.228909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:04:23.284: INFO: Waiting for terminating namespaces to be deleted...
  Aug 28 01:04:23.294: INFO: Starting informer...
  STEP: Starting pods... @ 08/28/24 01:04:23.294
  Aug 28 01:04:23.401: INFO: Pod1 is running on env1-test-worker-2. Tainting Node
  E0828 01:04:24.229164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:25.230152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:04:25.669: INFO: Pod2 is running on env1-test-worker-2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/28/24 01:04:25.669
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/28/24 01:04:25.7
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 08/28/24 01:04:25.714
  E0828 01:04:26.230695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:27.231166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:28.231280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:29.231623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:30.231908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:31.232071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:32.233539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:04:32.314: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0828 01:04:33.233719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:34.233909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:35.234342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:36.234720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:37.235757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:38.237327      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:39.237666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:40.238076      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:41.238421      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:42.239307      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:43.239436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:44.239673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:45.240229      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:46.240388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:47.241014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:48.242159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:49.242338      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:50.251962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:51.243643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:52.244284      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:04:52.476: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/28/24 01:04:52.544
  Aug 28 01:04:52.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-376" for this suite. @ 08/28/24 01:04:52.589
• [89.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 08/28/24 01:04:52.614
  Aug 28 01:04:52.615: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename security-context-test @ 08/28/24 01:04:52.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:04:52.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:04:52.883
  E0828 01:04:53.244309      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:54.245294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:55.245440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:56.246150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:04:57.124: INFO: Got logs for pod "busybox-privileged-false-f3c4dceb-3186-4278-829d-5ddb00c20c94": "ip: RTNETLINK answers: Operation not permitted\n"
  Aug 28 01:04:57.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-532" for this suite. @ 08/28/24 01:04:57.145
• [4.546 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 08/28/24 01:04:57.163
  Aug 28 01:04:57.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename downward-api @ 08/28/24 01:04:57.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:04:57.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:04:57.232
  STEP: Creating a pod to test downward API volume plugin @ 08/28/24 01:04:57.239
  E0828 01:04:57.246688      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:58.246927      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:04:59.247977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:00.249086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:01.249637      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:05:01.291
  Aug 28 01:05:01.298: INFO: Trying to get logs from node env1-test-worker-2 pod downwardapi-volume-7209ad94-ac28-4b37-96d1-fe50edf96e86 container client-container: <nil>
  STEP: delete the pod @ 08/28/24 01:05:01.315
  Aug 28 01:05:01.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8096" for this suite. @ 08/28/24 01:05:01.385
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 08/28/24 01:05:01.41
  Aug 28 01:05:01.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/28/24 01:05:01.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:01.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:01.475
  Aug 28 01:05:01.483: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  E0828 01:05:02.249709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:03.250570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:04.251336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:05.251371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:06.252356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:07.252613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:05:07.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8419" for this suite. @ 08/28/24 01:05:07.548
• [6.156 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 08/28/24 01:05:07.566
  Aug 28 01:05:07.566: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename services @ 08/28/24 01:05:07.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:07.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:07.631
  STEP: creating a collection of services @ 08/28/24 01:05:07.636
  Aug 28 01:05:07.636: INFO: Creating e2e-svc-a-knkdh
  Aug 28 01:05:07.667: INFO: Creating e2e-svc-b-x2d6g
  Aug 28 01:05:07.687: INFO: Creating e2e-svc-c-ltbgj
  STEP: deleting service collection @ 08/28/24 01:05:07.724
  Aug 28 01:05:07.843: INFO: Collection of services has been deleted
  Aug 28 01:05:07.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4053" for this suite. @ 08/28/24 01:05:07.859
• [0.320 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 08/28/24 01:05:07.89
  Aug 28 01:05:07.891: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename namespaces @ 08/28/24 01:05:07.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:07.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:07.995
  STEP: Creating a test namespace @ 08/28/24 01:05:08.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:08.072
  STEP: Creating a service in the namespace @ 08/28/24 01:05:08.082
  STEP: Deleting the namespace @ 08/28/24 01:05:08.142
  STEP: Waiting for the namespace to be removed. @ 08/28/24 01:05:08.165
  E0828 01:05:08.252949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:09.253281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:10.254301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:11.255343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:12.256433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:13.257348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:14.258367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:15.258835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 08/28/24 01:05:16.18
  STEP: Verifying there is no service in the namespace @ 08/28/24 01:05:16.248
  Aug 28 01:05:16.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0828 01:05:16.259866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "namespaces-8623" for this suite. @ 08/28/24 01:05:16.268
  STEP: Destroying namespace "nsdeletetest-9968" for this suite. @ 08/28/24 01:05:16.286
  Aug 28 01:05:16.295: INFO: Namespace nsdeletetest-9968 was already deleted
  STEP: Destroying namespace "nsdeletetest-2051" for this suite. @ 08/28/24 01:05:16.295
• [8.423 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 08/28/24 01:05:16.316
  Aug 28 01:05:16.316: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename disruption @ 08/28/24 01:05:16.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:16.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:16.408
  STEP: Creating a kubernetes client @ 08/28/24 01:05:16.415
  Aug 28 01:05:16.416: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename disruption-2 @ 08/28/24 01:05:16.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:16.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:16.503
  STEP: Waiting for the pdb to be processed @ 08/28/24 01:05:16.522
  E0828 01:05:17.260957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:18.261653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/28/24 01:05:18.572
  E0828 01:05:19.261947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:20.262433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/28/24 01:05:20.605
  E0828 01:05:21.263301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:22.263447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 08/28/24 01:05:22.616
  STEP: listing a collection of PDBs in namespace disruption-376 @ 08/28/24 01:05:22.63
  STEP: deleting a collection of PDBs @ 08/28/24 01:05:22.661
  STEP: Waiting for the PDB collection to be deleted @ 08/28/24 01:05:22.74
  Aug 28 01:05:22.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1895" for this suite. @ 08/28/24 01:05:22.772
  Aug 28 01:05:22.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-376" for this suite. @ 08/28/24 01:05:22.985
• [6.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 08/28/24 01:05:23.041
  Aug 28 01:05:23.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename sched-pred @ 08/28/24 01:05:23.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:23.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:23.211
  Aug 28 01:05:23.216: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 28 01:05:23.262: INFO: Waiting for terminating namespaces to be deleted...
  E0828 01:05:23.264029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:05:23.273: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  Aug 28 01:05:23.315: INFO: filebeat-filebeat-qqtqs from filebeat started at 2024-08-27 22:55:02 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.316: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 01:05:23.316: INFO: calico-node-qzlxw from kube-system started at 2024-07-22 15:38:47 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.316: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 01:05:23.317: INFO: kube-proxy-4cppk from kube-system started at 2024-08-27 16:27:32 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.317: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 01:05:23.317: INFO: metrics-server-6d9b44975-c6sns from kube-system started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.317: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 28 01:05:23.317: INFO: nginx-proxy-env1-test-worker-0 from kube-system started at 2024-06-27 17:09:20 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.317: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 01:05:23.317: INFO: nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.318: INFO: 	Container node-cache ready: true, restart count 8
  Aug 28 01:05:23.318: INFO: vsphere-csi-node-nk49v from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 28 01:05:23.318: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 01:05:23.318: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 01:05:23.318: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 01:05:23.318: INFO: prometheus-kube-prometheus-operator-568f7ff5fd-jqcnd from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.318: INFO: 	Container kube-prometheus-stack ready: true, restart count 0
  Aug 28 01:05:23.318: INFO: prometheus-kube-state-metrics-59b5d58f8f-9tn8h from prometheus started at 2024-08-28 01:04:26 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.318: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 28 01:05:23.318: INFO: prometheus-prometheus-node-exporter-k7f6f from prometheus started at 2024-04-23 04:46:22 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.318: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 01:05:23.319: INFO: thanos-query-655b5549d7-vv7ft from prometheus started at 2024-08-27 23:14:25 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.319: INFO: 	Container query ready: true, restart count 0
  Aug 28 01:05:23.319: INFO: sonobuoy from sonobuoy started at 2024-08-27 23:07:34 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.319: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 28 01:05:23.319: INFO: sonobuoy-e2e-job-55c3907aea104346 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 01:05:23.319: INFO: 	Container e2e ready: true, restart count 0
  Aug 28 01:05:23.319: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 01:05:23.319: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-2l7x2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 01:05:23.320: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 01:05:23.320: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 28 01:05:23.320: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  Aug 28 01:05:23.361: INFO: filebeat-filebeat-svps2 from filebeat started at 2024-08-27 22:55:03 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.361: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 01:05:23.361: INFO: calico-kube-controllers-5b566ffb7d-mmmcr from kube-system started at 2024-07-30 12:12:30 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.361: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Aug 28 01:05:23.361: INFO: calico-node-nwcrj from kube-system started at 2024-07-22 15:40:30 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.361: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 01:05:23.361: INFO: kube-proxy-ldkk8 from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.361: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 01:05:23.361: INFO: nginx-proxy-env1-test-worker-1 from kube-system started at 2024-06-27 17:14:22 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.361: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 01:05:23.361: INFO: nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.361: INFO: 	Container node-cache ready: true, restart count 0
  Aug 28 01:05:23.361: INFO: vsphere-csi-node-zkn6p from kube-system started at 2024-08-27 16:36:04 +0000 UTC (3 container statuses recorded)
  Aug 28 01:05:23.361: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 01:05:23.361: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-08-19 14:42:39 +0000 UTC (3 container statuses recorded)
  Aug 28 01:05:23.362: INFO: 	Container config-reloader ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: 	Container prometheus ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: 	Container thanos-sidecar ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.362: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-s8jpj from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 01:05:23.362: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: velero-574996dd6-4drr8 from velero started at 2024-08-19 14:42:37 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.362: INFO: 	Container velero ready: true, restart count 0
  Aug 28 01:05:23.362: INFO: 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  Aug 28 01:05:23.491: INFO: filebeat-filebeat-lt9tp from filebeat started at 2024-08-28 01:04:52 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.491: INFO: 	Container filebeat ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: calico-node-8fvtb from kube-system started at 2024-07-22 15:39:38 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.492: INFO: 	Container calico-node ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: kube-proxy-znnpk from kube-system started at 2024-08-27 16:27:31 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.492: INFO: 	Container kube-proxy ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: nginx-proxy-env1-test-worker-2 from kube-system started at 2024-06-27 17:20:01 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.492: INFO: 	Container nginx-proxy ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.492: INFO: 	Container node-cache ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: vsphere-csi-node-kqgqv from kube-system started at 2024-08-27 16:36:03 +0000 UTC (3 container statuses recorded)
  Aug 28 01:05:23.492: INFO: 	Container liveness-probe ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: 	Container node-driver-registrar ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: 	Container vsphere-csi-node ready: true, restart count 0
  Aug 28 01:05:23.492: INFO: prometheus-prometheus-node-exporter-rwxkp from prometheus started at 2024-08-28 01:04:52 +0000 UTC (1 container statuses recorded)
  Aug 28 01:05:23.492: INFO: 	Container node-exporter ready: true, restart count 0
  Aug 28 01:05:23.493: INFO: sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-7kjt2 from sonobuoy started at 2024-08-27 23:07:36 +0000 UTC (2 container statuses recorded)
  Aug 28 01:05:23.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 28 01:05:23.493: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node env1-test-worker-0 @ 08/28/24 01:05:23.659
  STEP: verifying the node has the label node env1-test-worker-1 @ 08/28/24 01:05:23.803
  STEP: verifying the node has the label node env1-test-worker-2 @ 08/28/24 01:05:23.895
  Aug 28 01:05:24.024: INFO: Pod filebeat-filebeat-lt9tp requesting resource cpu=200m on Node env1-test-worker-2
  Aug 28 01:05:24.024: INFO: Pod filebeat-filebeat-qqtqs requesting resource cpu=200m on Node env1-test-worker-0
  Aug 28 01:05:24.024: INFO: Pod filebeat-filebeat-svps2 requesting resource cpu=200m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod calico-kube-controllers-5b566ffb7d-mmmcr requesting resource cpu=30m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod calico-node-8fvtb requesting resource cpu=150m on Node env1-test-worker-2
  Aug 28 01:05:24.025: INFO: Pod calico-node-nwcrj requesting resource cpu=150m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod calico-node-qzlxw requesting resource cpu=150m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod kube-proxy-4cppk requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod kube-proxy-ldkk8 requesting resource cpu=0m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod kube-proxy-znnpk requesting resource cpu=0m on Node env1-test-worker-2
  Aug 28 01:05:24.025: INFO: Pod metrics-server-6d9b44975-c6sns requesting resource cpu=100m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod nginx-proxy-env1-test-worker-0 requesting resource cpu=25m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod nginx-proxy-env1-test-worker-1 requesting resource cpu=25m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod nginx-proxy-env1-test-worker-2 requesting resource cpu=25m on Node env1-test-worker-2
  Aug 28 01:05:24.025: INFO: Pod nodelocaldns-72wf8 requesting resource cpu=100m on Node env1-test-worker-2
  Aug 28 01:05:24.025: INFO: Pod nodelocaldns-8q7t8 requesting resource cpu=100m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod nodelocaldns-zv48x requesting resource cpu=100m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod vsphere-csi-node-kqgqv requesting resource cpu=0m on Node env1-test-worker-2
  Aug 28 01:05:24.025: INFO: Pod vsphere-csi-node-nk49v requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod vsphere-csi-node-zkn6p requesting resource cpu=0m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod prometheus-kube-prometheus-operator-568f7ff5fd-jqcnd requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod prometheus-kube-state-metrics-59b5d58f8f-9tn8h requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod prometheus-prometheus-kube-prometheus-prometheus-0 requesting resource cpu=400m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod prometheus-prometheus-node-exporter-k7f6f requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod prometheus-prometheus-node-exporter-rwxkp requesting resource cpu=0m on Node env1-test-worker-2
  Aug 28 01:05:24.025: INFO: Pod prometheus-prometheus-node-exporter-w6llj requesting resource cpu=0m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod thanos-query-655b5549d7-vv7ft requesting resource cpu=10m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod sonobuoy requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod sonobuoy-e2e-job-55c3907aea104346 requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-2l7x2 requesting resource cpu=0m on Node env1-test-worker-0
  Aug 28 01:05:24.025: INFO: Pod sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-7kjt2 requesting resource cpu=0m on Node env1-test-worker-2
  Aug 28 01:05:24.025: INFO: Pod sonobuoy-systemd-logs-daemon-set-38a0bf39b9894d92-s8jpj requesting resource cpu=0m on Node env1-test-worker-1
  Aug 28 01:05:24.025: INFO: Pod velero-574996dd6-4drr8 requesting resource cpu=500m on Node env1-test-worker-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 08/28/24 01:05:24.025
  Aug 28 01:05:24.025: INFO: Creating a pod which consumes cpu=2390m on Node env1-test-worker-0
  Aug 28 01:05:24.079: INFO: Creating a pod which consumes cpu=1816m on Node env1-test-worker-1
  Aug 28 01:05:24.107: INFO: Creating a pod which consumes cpu=2467m on Node env1-test-worker-2
  E0828 01:05:24.264839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:25.265756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:26.266135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:27.266580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:28.266944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 08/28/24 01:05:28.326
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-343a2593-87fc-4171-9a54-2ace04c480df.17efbef0e51d37e7], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5638/filler-pod-343a2593-87fc-4171-9a54-2ace04c480df to env1-test-worker-0] @ 08/28/24 01:05:28.336
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-343a2593-87fc-4171-9a54-2ace04c480df.17efbef12819d91c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/28/24 01:05:28.336
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-343a2593-87fc-4171-9a54-2ace04c480df.17efbef128f9c6c8], Reason = [Created], Message = [Created container filler-pod-343a2593-87fc-4171-9a54-2ace04c480df] @ 08/28/24 01:05:28.336
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-343a2593-87fc-4171-9a54-2ace04c480df.17efbef133cc961c], Reason = [Started], Message = [Started container filler-pod-343a2593-87fc-4171-9a54-2ace04c480df] @ 08/28/24 01:05:28.336
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-55ac5133-6e03-4314-9079-53c9f37bfa0c.17efbef0e796a96b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5638/filler-pod-55ac5133-6e03-4314-9079-53c9f37bfa0c to env1-test-worker-2] @ 08/28/24 01:05:28.336
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-55ac5133-6e03-4314-9079-53c9f37bfa0c.17efbef12b0e19fe], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/28/24 01:05:28.337
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-55ac5133-6e03-4314-9079-53c9f37bfa0c.17efbef12c3bdab2], Reason = [Created], Message = [Created container filler-pod-55ac5133-6e03-4314-9079-53c9f37bfa0c] @ 08/28/24 01:05:28.337
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-55ac5133-6e03-4314-9079-53c9f37bfa0c.17efbef139dc5ee2], Reason = [Started], Message = [Started container filler-pod-55ac5133-6e03-4314-9079-53c9f37bfa0c] @ 08/28/24 01:05:28.337
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea7b205d-2fc8-46bd-9cda-00aae25e005d.17efbef0e8941dd2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5638/filler-pod-ea7b205d-2fc8-46bd-9cda-00aae25e005d to env1-test-worker-1] @ 08/28/24 01:05:28.337
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea7b205d-2fc8-46bd-9cda-00aae25e005d.17efbef12c8172a1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/28/24 01:05:28.338
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea7b205d-2fc8-46bd-9cda-00aae25e005d.17efbef12d7fcbac], Reason = [Created], Message = [Created container filler-pod-ea7b205d-2fc8-46bd-9cda-00aae25e005d] @ 08/28/24 01:05:28.338
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ea7b205d-2fc8-46bd-9cda-00aae25e005d.17efbef1389ab41a], Reason = [Started], Message = [Started container filler-pod-ea7b205d-2fc8-46bd-9cda-00aae25e005d] @ 08/28/24 01:05:28.338
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17efbef1dffcb8b8], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 3 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.] @ 08/28/24 01:05:28.375
  E0828 01:05:29.266913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node env1-test-worker-0 @ 08/28/24 01:05:29.368
  STEP: verifying the node doesn't have the label node @ 08/28/24 01:05:29.411
  STEP: removing the label node off the node env1-test-worker-1 @ 08/28/24 01:05:29.425
  STEP: verifying the node doesn't have the label node @ 08/28/24 01:05:29.461
  STEP: removing the label node off the node env1-test-worker-2 @ 08/28/24 01:05:29.476
  STEP: verifying the node doesn't have the label node @ 08/28/24 01:05:29.531
  Aug 28 01:05:29.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5638" for this suite. @ 08/28/24 01:05:29.557
• [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 08/28/24 01:05:29.582
  Aug 28 01:05:29.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename kubelet-test @ 08/28/24 01:05:29.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:29.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:29.67
  E0828 01:05:30.270032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:31.270552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:05:31.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7746" for this suite. @ 08/28/24 01:05:31.766
• [2.202 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 08/28/24 01:05:31.784
  Aug 28 01:05:31.784: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename containers @ 08/28/24 01:05:31.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:31.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:31.848
  STEP: Creating a pod to test override arguments @ 08/28/24 01:05:31.855
  E0828 01:05:32.270909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:33.272031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:34.272102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:35.272915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:36.273857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:37.274646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:05:37.917
  Aug 28 01:05:37.924: INFO: Trying to get logs from node env1-test-worker-2 pod client-containers-40b01eee-9ece-4ecd-b102-fee743b485d2 container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 01:05:37.938
  Aug 28 01:05:38.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9226" for this suite. @ 08/28/24 01:05:38.079
• [6.344 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 08/28/24 01:05:38.13
  Aug 28 01:05:38.130: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename subpath @ 08/28/24 01:05:38.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:05:38.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:05:38.258
  E0828 01:05:38.274863      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up data @ 08/28/24 01:05:38.289
  STEP: Creating pod pod-subpath-test-configmap-sdrv @ 08/28/24 01:05:38.352
  STEP: Creating a pod to test atomic-volume-subpath @ 08/28/24 01:05:38.353
  E0828 01:05:39.275302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:40.275623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:41.276228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:42.276271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:43.276469      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:44.276770      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:45.277723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:46.278416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:47.278651      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:48.278831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:49.279521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:50.279934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:51.280516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:52.280644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:53.281192      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:54.281604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:55.282228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:56.283002      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:57.283559      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:58.283884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:05:59.284007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:00.284412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:01.284741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:02.285495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:06:02.555
  Aug 28 01:06:02.579: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-configmap-sdrv container test-container-subpath-configmap-sdrv: <nil>
  STEP: delete the pod @ 08/28/24 01:06:02.611
  STEP: Deleting pod pod-subpath-test-configmap-sdrv @ 08/28/24 01:06:02.685
  Aug 28 01:06:02.685: INFO: Deleting pod "pod-subpath-test-configmap-sdrv" in namespace "subpath-7820"
  Aug 28 01:06:02.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7820" for this suite. @ 08/28/24 01:06:02.741
• [24.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 08/28/24 01:06:02.805
  Aug 28 01:06:02.806: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename proxy @ 08/28/24 01:06:02.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:06:02.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:06:02.961
  Aug 28 01:06:02.973: INFO: Creating pod...
  E0828 01:06:03.286384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:04.287953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:06:05.067: INFO: Creating service...
  Aug 28 01:06:05.105: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/pods/agnhost/proxy/some/path/with/DELETE
  Aug 28 01:06:05.144: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 28 01:06:05.145: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/pods/agnhost/proxy/some/path/with/GET
  Aug 28 01:06:05.167: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 28 01:06:05.167: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/pods/agnhost/proxy/some/path/with/HEAD
  Aug 28 01:06:05.189: INFO: http.Client request:HEAD | StatusCode:200
  Aug 28 01:06:05.189: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/pods/agnhost/proxy/some/path/with/OPTIONS
  Aug 28 01:06:05.203: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 28 01:06:05.203: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/pods/agnhost/proxy/some/path/with/PATCH
  Aug 28 01:06:05.217: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 28 01:06:05.217: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/pods/agnhost/proxy/some/path/with/POST
  Aug 28 01:06:05.228: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 28 01:06:05.228: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/pods/agnhost/proxy/some/path/with/PUT
  Aug 28 01:06:05.245: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 28 01:06:05.246: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/services/test-service/proxy/some/path/with/DELETE
  Aug 28 01:06:05.272: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 28 01:06:05.272: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/services/test-service/proxy/some/path/with/GET
  E0828 01:06:05.288249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:06:05.309: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 28 01:06:05.309: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/services/test-service/proxy/some/path/with/HEAD
  Aug 28 01:06:05.336: INFO: http.Client request:HEAD | StatusCode:200
  Aug 28 01:06:05.337: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/services/test-service/proxy/some/path/with/OPTIONS
  Aug 28 01:06:05.375: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 28 01:06:05.376: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/services/test-service/proxy/some/path/with/PATCH
  Aug 28 01:06:05.402: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 28 01:06:05.402: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/services/test-service/proxy/some/path/with/POST
  Aug 28 01:06:05.439: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 28 01:06:05.440: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8373/services/test-service/proxy/some/path/with/PUT
  Aug 28 01:06:05.469: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 28 01:06:05.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8373" for this suite. @ 08/28/24 01:06:05.485
• [2.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 08/28/24 01:06:05.51
  Aug 28 01:06:05.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename podtemplate @ 08/28/24 01:06:05.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:06:05.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:06:05.568
  STEP: Create a pod template @ 08/28/24 01:06:05.577
  STEP: Replace a pod template @ 08/28/24 01:06:05.595
  Aug 28 01:06:05.628: INFO: Found updated podtemplate annotation: "true"

  Aug 28 01:06:05.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8228" for this suite. @ 08/28/24 01:06:05.652
• [0.169 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 08/28/24 01:06:05.686
  Aug 28 01:06:05.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 01:06:05.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:06:05.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:06:05.743
  STEP: Creating the pod @ 08/28/24 01:06:05.757
  E0828 01:06:06.289936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:07.289911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:08.290718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:06:08.374: INFO: Successfully updated pod "annotationupdate05249a0d-97e7-4527-a613-35f60460a53b"
  E0828 01:06:09.291008      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:10.291443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:06:10.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4223" for this suite. @ 08/28/24 01:06:10.434
• [4.773 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 08/28/24 01:06:10.46
  Aug 28 01:06:10.460: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename subpath @ 08/28/24 01:06:10.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:06:10.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:06:10.523
  STEP: Setting up data @ 08/28/24 01:06:10.529
  STEP: Creating pod pod-subpath-test-projected-p8lr @ 08/28/24 01:06:10.564
  STEP: Creating a pod to test atomic-volume-subpath @ 08/28/24 01:06:10.564
  E0828 01:06:11.291579      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:12.292083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:13.292317      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:14.292481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:15.292717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:16.292965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:17.293465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:18.293746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:19.294202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:20.294845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:21.294993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:22.295650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:23.296558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:24.296981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:25.297782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:26.298213      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:27.299389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:28.299727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:29.300839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:30.301020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:31.301753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:32.302736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:33.303486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:34.303671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:06:34.756
  Aug 28 01:06:34.762: INFO: Trying to get logs from node env1-test-worker-2 pod pod-subpath-test-projected-p8lr container test-container-subpath-projected-p8lr: <nil>
  STEP: delete the pod @ 08/28/24 01:06:34.784
  STEP: Deleting pod pod-subpath-test-projected-p8lr @ 08/28/24 01:06:34.816
  Aug 28 01:06:34.816: INFO: Deleting pod "pod-subpath-test-projected-p8lr" in namespace "subpath-7880"
  Aug 28 01:06:34.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7880" for this suite. @ 08/28/24 01:06:34.849
• [24.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 08/28/24 01:06:34.871
  Aug 28 01:06:34.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename replicaset @ 08/28/24 01:06:34.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:06:34.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:06:34.921
  Aug 28 01:06:34.927: INFO: Creating ReplicaSet my-hostname-basic-ee6dbd8e-fe81-4ca1-b649-642ddb3db0bd
  Aug 28 01:06:34.943: INFO: Pod name my-hostname-basic-ee6dbd8e-fe81-4ca1-b649-642ddb3db0bd: Found 0 pods out of 1
  E0828 01:06:35.304645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:36.304687      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:37.304909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:38.305036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:39.305533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 28 01:06:39.956: INFO: Pod name my-hostname-basic-ee6dbd8e-fe81-4ca1-b649-642ddb3db0bd: Found 1 pods out of 1
  Aug 28 01:06:39.956: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-ee6dbd8e-fe81-4ca1-b649-642ddb3db0bd" is running
  Aug 28 01:06:39.966: INFO: Pod "my-hostname-basic-ee6dbd8e-fe81-4ca1-b649-642ddb3db0bd-v4xqx" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-28 01:06:36 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-28 01:06:34 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-28 01:06:36 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-28 01:06:36 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-08-28 01:06:34 +0000 UTC Reason: Message:}])
  Aug 28 01:06:39.966: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/28/24 01:06:39.966
  Aug 28 01:06:40.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-250" for this suite. @ 08/28/24 01:06:40.031
• [5.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 08/28/24 01:06:40.078
  Aug 28 01:06:40.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2235641783
  STEP: Building a namespace api object, basename projected @ 08/28/24 01:06:40.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/28/24 01:06:40.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/28/24 01:06:40.16
  STEP: Creating configMap with name projected-configmap-test-volume-8b324995-f581-4580-8ca2-20f979b8abb3 @ 08/28/24 01:06:40.167
  STEP: Creating a pod to test consume configMaps @ 08/28/24 01:06:40.179
  E0828 01:06:40.306752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:41.307168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:42.308081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0828 01:06:43.308274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/28/24 01:06:44.223
  Aug 28 01:06:44.229: INFO: Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-8b516d50-bafe-4b9c-b6b9-9c3edd00abde container agnhost-container: <nil>
  STEP: delete the pod @ 08/28/24 01:06:44.243
  Aug 28 01:06:44.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-598" for this suite. @ 08/28/24 01:06:44.297
  E0828 01:06:44.308855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Aug 28 01:06:44.321: INFO: Running AfterSuite actions on node 1
  Aug 28 01:06:44.321: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.104 seconds]
------------------------------

Ran 388 of 7408 Specs in 7116.972 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h58m39.425271263s
Test Suite Passed
