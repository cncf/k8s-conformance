  I0613 06:33:58.967447      18 e2e.go:117] Starting e2e run "0967254f-ba7a-4cba-9d6c-2964123d8ce5" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1718260435 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun 13 06:33:59.866: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 06:33:59.867: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun 13 06:33:59.951: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun 13 06:33:59.963: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'canal' (0 seconds elapsed)
  Jun 13 06:33:59.963: INFO: e2e test version: v1.29.5
  Jun 13 06:33:59.977: INFO: kube-apiserver version: v1.29.5
  Jun 13 06:33:59.977: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 06:33:59.994: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.128 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/13/24 06:34:00.85
  Jun 13 06:34:00.850: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename watch @ 06/13/24 06:34:00.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:34:00.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:34:00.941
  STEP: creating a watch on configmaps with a certain label @ 06/13/24 06:34:00.959
  STEP: creating a new configmap @ 06/13/24 06:34:00.96
  STEP: modifying the configmap once @ 06/13/24 06:34:00.976
  STEP: changing the label value of the configmap @ 06/13/24 06:34:00.994
  STEP: Expecting to observe a delete notification for the watched object @ 06/13/24 06:34:01.019
  Jun 13 06:34:01.019: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8119  bfafecf9-d7eb-4407-a61a-aa6cd012ef89 3477 0 2024-06-13 06:34:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 06:34:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 06:34:01.019: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8119  bfafecf9-d7eb-4407-a61a-aa6cd012ef89 3479 0 2024-06-13 06:34:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 06:34:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 06:34:01.019: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8119  bfafecf9-d7eb-4407-a61a-aa6cd012ef89 3480 0 2024-06-13 06:34:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 06:34:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/13/24 06:34:01.019
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/13/24 06:34:01.109
  STEP: changing the label value of the configmap back @ 06/13/24 06:34:11.11
  STEP: modifying the configmap a third time @ 06/13/24 06:34:11.124
  STEP: deleting the configmap @ 06/13/24 06:34:11.132
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/13/24 06:34:11.139
  Jun 13 06:34:11.139: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8119  bfafecf9-d7eb-4407-a61a-aa6cd012ef89 3504 0 2024-06-13 06:34:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 06:34:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 06:34:11.139: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8119  bfafecf9-d7eb-4407-a61a-aa6cd012ef89 3505 0 2024-06-13 06:34:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 06:34:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 06:34:11.139: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8119  bfafecf9-d7eb-4407-a61a-aa6cd012ef89 3506 0 2024-06-13 06:34:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-13 06:34:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 06:34:11.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8119" for this suite. @ 06/13/24 06:34:11.144
â€¢ [10.304 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/13/24 06:34:11.154
  Jun 13 06:34:11.154: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename chunking @ 06/13/24 06:34:11.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:34:11.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:34:11.213
  STEP: creating a large number of resources @ 06/13/24 06:34:11.219
  I0613 06:34:28.162186      18 request.go:697] Waited for 1.000110391s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-8513/podtemplates
  STEP: retrieving the first page @ 06/13/24 06:34:28.862
  Jun 13 06:34:28.945: INFO: Retrieved 40/40 results with rv 3957 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 06/13/24 06:34:28.945
  Jun 13 06:34:48.962: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:35:08.953: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:35:28.961: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:35:48.958: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:36:08.958: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:36:28.961: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:36:48.952: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:37:08.952: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:37:28.960: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:37:48.951: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:38:08.952: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:38:28.988: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:38:48.954: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:39:08.956: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:39:28.955: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:39:48.952: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:40:08.961: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:40:28.951: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:40:48.951: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:41:08.953: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:41:28.962: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:41:48.953: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:42:08.954: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk1Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  Jun 13 06:42:28.953: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun 13 06:42:28.953: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/13/24 06:42:28.953
  STEP: retrieving all remaining pages @ 06/13/24 06:42:28.959
  Jun 13 06:42:28.966: INFO: Retrieved 40/40 results with rv 4911 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDkxMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  Jun 13 06:42:28.977: INFO: Retrieved 40/40 results with rv 4911 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDkxMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  Jun 13 06:42:29.004: INFO: Retrieved 40/40 results with rv 4911 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDkxMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  Jun 13 06:42:29.009: INFO: Retrieved 40/40 results with rv 4911 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDkxMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  Jun 13 06:42:29.032: INFO: Retrieved 40/40 results with rv 4911 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDkxMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  Jun 13 06:42:29.073: INFO: Retrieved 40/40 results with rv 4911 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDkxMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  Jun 13 06:42:29.089: INFO: Retrieved 40/40 results with rv 4911 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDkxMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  Jun 13 06:42:29.127: INFO: Retrieved 40/40 results with rv 4911 and continue 
  Jun 13 06:42:29.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8513" for this suite. @ 06/13/24 06:42:29.134
â€¢ [498.000 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/13/24 06:42:29.181
  Jun 13 06:42:29.181: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename podtemplate @ 06/13/24 06:42:29.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:42:29.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:42:29.289
  Jun 13 06:42:29.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1873" for this suite. @ 06/13/24 06:42:29.476
â€¢ [0.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/13/24 06:42:29.537
  Jun 13 06:42:29.537: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 06:42:29.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:42:29.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:42:29.666
  Jun 13 06:42:29.734: INFO: created pod
  STEP: Saw pod success @ 06/13/24 06:42:43.843
  Jun 13 06:43:13.845: INFO: polling logs
  Jun 13 06:43:13.881: INFO: Pod logs: 
  I0613 06:42:41.774994       1 log.go:245] OK: Got token
  I0613 06:42:41.775175       1 log.go:245] validating with in-cluster discovery
  I0613 06:42:41.775594       1 log.go:245] OK: got issuer https://18.220.202.195:6443
  I0613 06:42:41.775621       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.220.202.195:6443", Subject:"system:serviceaccount:svcaccounts-4259:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000247a60), NotBefore:(*jwt.NumericDate)(0xc000247b48), IssuedAt:(*jwt.NumericDate)(0xc000247a70), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4259", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"bdde4ca1-5848-43c8-8cc3-a1130c587f95"}}}
  I0613 06:42:41.793526       1 log.go:245] OK: Constructed OIDC provider for issuer https://18.220.202.195:6443
  I0613 06:42:41.803044       1 log.go:245] OK: Validated signature on JWT
  I0613 06:42:41.803204       1 log.go:245] OK: Got valid claims from token!
  I0613 06:42:41.803250       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.220.202.195:6443", Subject:"system:serviceaccount:svcaccounts-4259:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000126e40), NotBefore:(*jwt.NumericDate)(0xc000126ec8), IssuedAt:(*jwt.NumericDate)(0xc000126e48), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4259", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"bdde4ca1-5848-43c8-8cc3-a1130c587f95"}}}

  Jun 13 06:43:13.883: INFO: completed pod
  Jun 13 06:43:13.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4259" for this suite. @ 06/13/24 06:43:13.9
â€¢ [44.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/13/24 06:43:13.93
  Jun 13 06:43:13.930: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 06:43:13.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:43:13.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:43:13.98
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 06:43:13.987
  STEP: Saw pod success @ 06/13/24 06:43:18.086
  Jun 13 06:43:18.090: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-976d5cab-f44c-47ad-805b-7f11231e4ae9 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 06:43:18.11
  Jun 13 06:43:18.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-792" for this suite. @ 06/13/24 06:43:18.143
â€¢ [4.226 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/13/24 06:43:18.157
  Jun 13 06:43:18.157: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 06:43:18.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:43:18.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:43:18.202
  Jun 13 06:43:18.206: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  W0613 06:43:20.873837      18 warnings.go:70] unknown field "alpha"
  W0613 06:43:20.873898      18 warnings.go:70] unknown field "beta"
  W0613 06:43:20.873908      18 warnings.go:70] unknown field "delta"
  W0613 06:43:20.873914      18 warnings.go:70] unknown field "epsilon"
  W0613 06:43:20.873939      18 warnings.go:70] unknown field "gamma"
  Jun 13 06:43:21.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-101" for this suite. @ 06/13/24 06:43:21.58
â€¢ [3.437 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/13/24 06:43:21.605
  Jun 13 06:43:21.605: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 06:43:21.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:43:21.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:43:21.764
  STEP: Creating a cronjob @ 06/13/24 06:43:21.798
  STEP: Ensuring more than one job is running at a time @ 06/13/24 06:43:21.926
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/13/24 06:45:01.938
  STEP: Removing cronjob @ 06/13/24 06:45:02.002
  Jun 13 06:45:02.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6109" for this suite. @ 06/13/24 06:45:02.049
â€¢ [100.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/13/24 06:45:02.084
  Jun 13 06:45:02.084: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 06:45:02.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:45:02.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:45:02.335
  Jun 13 06:45:02.370: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  W0613 06:45:02.371581      18 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000b358c0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0613 06:45:05.038811      18 warnings.go:70] unknown field "alpha"
  W0613 06:45:05.038974      18 warnings.go:70] unknown field "beta"
  W0613 06:45:05.039067      18 warnings.go:70] unknown field "delta"
  W0613 06:45:05.039199      18 warnings.go:70] unknown field "epsilon"
  W0613 06:45:05.039294      18 warnings.go:70] unknown field "gamma"
  Jun 13 06:45:05.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-409" for this suite. @ 06/13/24 06:45:05.756
â€¢ [3.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/13/24 06:45:05.794
  Jun 13 06:45:05.794: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-watch @ 06/13/24 06:45:05.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:45:05.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:45:05.918
  Jun 13 06:45:05.932: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Creating first CR  @ 06/13/24 06:45:08.674
  Jun 13 06:45:08.732: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T06:45:08Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T06:45:08Z]] name:name1 resourceVersion:5840 uid:bea5a80a-a65a-4465-b660-e1048fcbb11c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 06/13/24 06:45:18.781
  Jun 13 06:45:18.813: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T06:45:18Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T06:45:18Z]] name:name2 resourceVersion:5867 uid:92d86d3a-bb1e-4db3-a78d-4ee5da664c0c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 06/13/24 06:45:28.815
  Jun 13 06:45:28.827: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T06:45:08Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T06:45:28Z]] name:name1 resourceVersion:5887 uid:bea5a80a-a65a-4465-b660-e1048fcbb11c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 06/13/24 06:45:38.829
  Jun 13 06:45:38.837: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T06:45:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T06:45:38Z]] name:name2 resourceVersion:5919 uid:92d86d3a-bb1e-4db3-a78d-4ee5da664c0c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 06/13/24 06:45:48.841
  Jun 13 06:45:48.851: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T06:45:08Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T06:45:28Z]] name:name1 resourceVersion:5942 uid:bea5a80a-a65a-4465-b660-e1048fcbb11c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 06/13/24 06:45:58.857
  Jun 13 06:45:58.880: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-13T06:45:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-13T06:45:38Z]] name:name2 resourceVersion:5963 uid:92d86d3a-bb1e-4db3-a78d-4ee5da664c0c] num:map[num1:9223372036854775807 num2:1000000]]}
  Jun 13 06:46:09.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-8435" for this suite. @ 06/13/24 06:46:09.443
â€¢ [63.665 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/13/24 06:46:09.46
  Jun 13 06:46:09.460: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 06:46:09.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:09.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:09.523
  STEP: Creating configMap with name configmap-test-upd-0581ba12-4c3f-4000-bfc2-64944e495ef6 @ 06/13/24 06:46:09.553
  STEP: Creating the pod @ 06/13/24 06:46:09.582
  STEP: Waiting for pod with text data @ 06/13/24 06:46:13.681
  STEP: Waiting for pod with binary data @ 06/13/24 06:46:13.704
  Jun 13 06:46:13.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9640" for this suite. @ 06/13/24 06:46:13.725
â€¢ [4.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/13/24 06:46:13.742
  Jun 13 06:46:13.742: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 06:46:13.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:13.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:13.868
  STEP: Given a ReplicationController is created @ 06/13/24 06:46:13.905
  STEP: When the matched label of one of its pods change @ 06/13/24 06:46:13.932
  Jun 13 06:46:13.951: INFO: Pod name pod-release: Found 0 pods out of 1
  Jun 13 06:46:18.956: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/13/24 06:46:18.986
  Jun 13 06:46:20.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4314" for this suite. @ 06/13/24 06:46:20.025
â€¢ [6.292 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/13/24 06:46:20.034
  Jun 13 06:46:20.034: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 06:46:20.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:20.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:20.13
  STEP: Creating projection with secret that has name projected-secret-test-map-c9638120-51b4-4b6f-aa8a-89456b37190e @ 06/13/24 06:46:20.137
  STEP: Creating a pod to test consume secrets @ 06/13/24 06:46:20.148
  STEP: Saw pod success @ 06/13/24 06:46:26.215
  Jun 13 06:46:26.223: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-secrets-f4bee574-2f61-46b9-a7c8-64a2a821f4ed container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 06:46:26.244
  Jun 13 06:46:26.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2537" for this suite. @ 06/13/24 06:46:26.326
â€¢ [6.302 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/13/24 06:46:26.336
  Jun 13 06:46:26.336: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 06:46:26.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:26.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:26.459
  STEP: Updating Namespace "namespaces-5099" @ 06/13/24 06:46:26.495
  Jun 13 06:46:26.580: INFO: Namespace "namespaces-5099" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"0967254f-ba7a-4cba-9d6c-2964123d8ce5", "kubernetes.io/metadata.name":"namespaces-5099", "namespaces-5099":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun 13 06:46:26.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5099" for this suite. @ 06/13/24 06:46:26.609
â€¢ [0.289 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/13/24 06:46:26.628
  Jun 13 06:46:26.628: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sysctl @ 06/13/24 06:46:26.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:26.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:26.737
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/13/24 06:46:26.743
  Jun 13 06:46:26.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3415" for this suite. @ 06/13/24 06:46:26.785
â€¢ [0.164 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/13/24 06:46:26.793
  Jun 13 06:46:26.793: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 06:46:26.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:26.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:26.924
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 06:46:26.942
  STEP: Saw pod success @ 06/13/24 06:46:33.006
  Jun 13 06:46:33.025: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-d2629cc8-7f20-49e6-ac0a-956eeb2bdb36 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 06:46:33.042
  Jun 13 06:46:33.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8226" for this suite. @ 06/13/24 06:46:33.1
â€¢ [6.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/13/24 06:46:33.109
  Jun 13 06:46:33.109: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 06:46:33.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:33.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:33.208
  STEP: Setting up server cert @ 06/13/24 06:46:33.361
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 06:46:35.104
  STEP: Deploying the webhook pod @ 06/13/24 06:46:35.115
  STEP: Wait for the deployment to be ready @ 06/13/24 06:46:35.147
  Jun 13 06:46:35.195: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jun 13 06:46:37.235: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:46:39.247: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/13/24 06:46:41.249
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 06:46:41.267
  Jun 13 06:46:42.268: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/13/24 06:46:42.313
  STEP: create a pod @ 06/13/24 06:46:42.409
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/13/24 06:46:46.439
  Jun 13 06:46:46.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=webhook-4089 attach --namespace=webhook-4089 to-be-attached-pod -i -c=container1'
  Jun 13 06:46:46.701: INFO: rc: 1
  Jun 13 06:46:46.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4089" for this suite. @ 06/13/24 06:46:46.819
  STEP: Destroying namespace "webhook-markers-4617" for this suite. @ 06/13/24 06:46:46.845
â€¢ [13.764 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/13/24 06:46:46.873
  Jun 13 06:46:46.873: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename aggregator @ 06/13/24 06:46:46.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:46:46.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:46:46.973
  Jun 13 06:46:47.000: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Registering the sample API server. @ 06/13/24 06:46:47.001
  Jun 13 06:46:47.859: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun 13 06:46:48.009: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Jun 13 06:46:50.127: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:46:52.173: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:46:54.134: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:46:56.130: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:46:58.136: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:00.159: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:02.150: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:04.153: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:06.132: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:08.132: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:10.133: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:12.131: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 46, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:47:14.271: INFO: Waited 119.664783ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/13/24 06:47:14.384
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/13/24 06:47:14.402
  STEP: List APIServices @ 06/13/24 06:47:14.418
  Jun 13 06:47:14.453: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/13/24 06:47:14.453
  Jun 13 06:47:14.486: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/13/24 06:47:14.487
  Jun 13 06:47:14.500: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 13, 6, 47, 14, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/13/24 06:47:14.5
  Jun 13 06:47:14.503: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-13 06:47:14 +0000 UTC Passed all checks passed}
  Jun 13 06:47:14.503: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 06:47:14.503: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/13/24 06:47:14.504
  Jun 13 06:47:14.516: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1956590876" @ 06/13/24 06:47:14.517
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/13/24 06:47:14.563
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/13/24 06:47:14.578
  STEP: Patch APIService Status @ 06/13/24 06:47:14.586
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/13/24 06:47:14.601
  Jun 13 06:47:14.624: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-13 06:47:14 +0000 UTC Passed all checks passed}
  Jun 13 06:47:14.624: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 06:47:14.624: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun 13 06:47:14.624: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/13/24 06:47:14.624
  STEP: Confirm that the generated APIService has been deleted @ 06/13/24 06:47:14.678
  Jun 13 06:47:14.678: INFO: Requesting list of APIServices to confirm quantity
  Jun 13 06:47:14.687: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun 13 06:47:14.688: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun 13 06:47:15.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-3886" for this suite. @ 06/13/24 06:47:15.139
â€¢ [28.290 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/13/24 06:47:15.164
  Jun 13 06:47:15.166: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename taint-single-pod @ 06/13/24 06:47:15.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:47:15.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:47:15.342
  Jun 13 06:47:15.358: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun 13 06:48:15.359: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 06:48:15.363: INFO: Starting informer...
  STEP: Starting pod... @ 06/13/24 06:48:15.363
  Jun 13 06:48:15.580: INFO: Pod is running on ip-172-31-12-94. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/13/24 06:48:15.58
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 06:48:15.615
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/13/24 06:48:15.625
  Jun 13 06:48:15.625: INFO: Pod wasn't evicted. Proceeding
  Jun 13 06:48:15.625: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 06:48:15.794
  STEP: Waiting some time to make sure that toleration time passed. @ 06/13/24 06:48:15.798
  Jun 13 06:49:30.801: INFO: Pod wasn't evicted. Test successful
  Jun 13 06:49:30.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3012" for this suite. @ 06/13/24 06:49:30.807
â€¢ [135.674 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/13/24 06:49:30.839
  Jun 13 06:49:30.839: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 06:49:30.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:49:30.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:49:30.947
  STEP: Setting up server cert @ 06/13/24 06:49:31.027
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 06:49:31.985
  STEP: Deploying the webhook pod @ 06/13/24 06:49:32.012
  STEP: Wait for the deployment to be ready @ 06/13/24 06:49:32.042
  Jun 13 06:49:32.074: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jun 13 06:49:34.093: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 06:49:36.101: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 6, 49, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/13/24 06:49:38.099
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 06:49:38.117
  Jun 13 06:49:39.117: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/13/24 06:49:39.124
  STEP: create a pod that should be denied by the webhook @ 06/13/24 06:49:39.166
  STEP: create a pod that causes the webhook to hang @ 06/13/24 06:49:39.196
  STEP: create a configmap that should be denied by the webhook @ 06/13/24 06:49:49.21
  STEP: create a configmap that should be admitted by the webhook @ 06/13/24 06:49:49.365
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/13/24 06:49:49.394
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/13/24 06:49:49.427
  STEP: create a namespace that bypass the webhook @ 06/13/24 06:49:49.44
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/13/24 06:49:49.514
  Jun 13 06:49:49.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2682" for this suite. @ 06/13/24 06:49:49.858
  STEP: Destroying namespace "webhook-markers-2903" for this suite. @ 06/13/24 06:49:49.917
  STEP: Destroying namespace "exempted-namespace-8909" for this suite. @ 06/13/24 06:49:49.946
â€¢ [19.149 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/13/24 06:49:49.99
  Jun 13 06:49:49.990: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 06:49:49.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:49:50.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:49:50.138
  STEP: Creating service test in namespace statefulset-6090 @ 06/13/24 06:49:50.152
  STEP: Creating a new StatefulSet @ 06/13/24 06:49:50.174
  Jun 13 06:49:50.306: INFO: Found 0 stateful pods, waiting for 3
  Jun 13 06:50:00.315: INFO: Found 2 stateful pods, waiting for 3
  Jun 13 06:50:10.303: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:10.304: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:10.304: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Jun 13 06:50:20.295: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:20.295: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:20.295: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Jun 13 06:50:30.299: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:30.299: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:30.300: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Jun 13 06:50:40.293: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:40.293: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:40.293: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 06:50:40.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-6090 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 06:50:40.733: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 06:50:40.733: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 06:50:40.733: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/13/24 06:50:50.742
  Jun 13 06:50:50.766: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/13/24 06:50:50.766
  STEP: Updating Pods in reverse ordinal order @ 06/13/24 06:51:00.775
  Jun 13 06:51:00.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-6090 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 06:51:01.375: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 06:51:01.375: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 06:51:01.375: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 06:51:11.392: INFO: Waiting for StatefulSet statefulset-6090/ss2 to complete update
  Jun 13 06:51:11.392: INFO: Waiting for Pod statefulset-6090/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 06:51:11.392: INFO: Waiting for Pod statefulset-6090/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 06:51:21.401: INFO: Waiting for StatefulSet statefulset-6090/ss2 to complete update
  Jun 13 06:51:21.402: INFO: Waiting for Pod statefulset-6090/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 06:51:21.402: INFO: Waiting for Pod statefulset-6090/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 06:51:31.439: INFO: Waiting for StatefulSet statefulset-6090/ss2 to complete update
  Jun 13 06:51:31.439: INFO: Waiting for Pod statefulset-6090/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 06:51:41.406: INFO: Waiting for StatefulSet statefulset-6090/ss2 to complete update
  Jun 13 06:51:41.406: INFO: Waiting for Pod statefulset-6090/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 06:51:51.402: INFO: Waiting for StatefulSet statefulset-6090/ss2 to complete update
  Jun 13 06:51:51.402: INFO: Waiting for Pod statefulset-6090/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 06:52:01.398: INFO: Waiting for StatefulSet statefulset-6090/ss2 to complete update
  STEP: Rolling back to a previous revision @ 06/13/24 06:52:11.394
  Jun 13 06:52:11.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-6090 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 06:52:11.911: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 06:52:11.911: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 06:52:11.911: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 06:52:21.990: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 06/13/24 06:52:32.04
  Jun 13 06:52:32.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-6090 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 06:52:32.621: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 06:52:32.621: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 06:52:32.621: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 06:52:52.648: INFO: Waiting for StatefulSet statefulset-6090/ss2 to complete update
  Jun 13 06:53:02.671: INFO: Deleting all statefulset in ns statefulset-6090
  Jun 13 06:53:02.674: INFO: Scaling statefulset ss2 to 0
  Jun 13 06:53:12.702: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 06:53:12.704: INFO: Deleting statefulset ss2
  Jun 13 06:53:12.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6090" for this suite. @ 06/13/24 06:53:12.771
â€¢ [202.807 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/13/24 06:53:12.797
  Jun 13 06:53:12.797: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 06:53:12.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:53:12.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:53:12.876
  Jun 13 06:53:15.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6484" for this suite. @ 06/13/24 06:53:15.073
â€¢ [2.304 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/13/24 06:53:15.102
  Jun 13 06:53:15.102: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 06:53:15.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:53:15.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:53:15.24
  STEP: Creating configMap with name configmap-test-upd-229125cc-a671-4056-950f-c24a3914feb4 @ 06/13/24 06:53:15.256
  STEP: Creating the pod @ 06/13/24 06:53:15.263
  STEP: Updating configmap configmap-test-upd-229125cc-a671-4056-950f-c24a3914feb4 @ 06/13/24 06:53:19.504
  STEP: waiting to observe update in volume @ 06/13/24 06:53:19.54
  Jun 13 06:54:44.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4950" for this suite. @ 06/13/24 06:54:44.385
â€¢ [89.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/13/24 06:54:44.399
  Jun 13 06:54:44.400: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 06:54:44.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:54:44.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:54:44.513
  STEP: create the container @ 06/13/24 06:54:44.585
  W0613 06:54:44.621237      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/13/24 06:54:44.621
  STEP: get the container status @ 06/13/24 06:54:48.657
  STEP: the container should be terminated @ 06/13/24 06:54:48.663
  STEP: the termination message should be set @ 06/13/24 06:54:48.663
  Jun 13 06:54:48.663: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/13/24 06:54:48.663
  Jun 13 06:54:48.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2762" for this suite. @ 06/13/24 06:54:48.718
â€¢ [4.335 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/13/24 06:54:48.735
  Jun 13 06:54:48.735: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 06:54:48.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:54:48.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:54:48.96
  STEP: creating the pod @ 06/13/24 06:54:48.979
  Jun 13 06:54:48.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 create -f -'
  Jun 13 06:54:49.714: INFO: stderr: ""
  Jun 13 06:54:49.714: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/13/24 06:54:51.731
  Jun 13 06:54:51.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 label pods pause testing-label=testing-label-value'
  Jun 13 06:54:52.057: INFO: stderr: ""
  Jun 13 06:54:52.057: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/13/24 06:54:52.057
  Jun 13 06:54:52.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 get pod pause -L testing-label'
  Jun 13 06:54:52.249: INFO: stderr: ""
  Jun 13 06:54:52.249: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/13/24 06:54:52.249
  Jun 13 06:54:52.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 label pods pause testing-label-'
  Jun 13 06:54:52.412: INFO: stderr: ""
  Jun 13 06:54:52.412: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/13/24 06:54:52.412
  Jun 13 06:54:52.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 get pod pause -L testing-label'
  Jun 13 06:54:52.624: INFO: stderr: ""
  Jun 13 06:54:52.624: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 06/13/24 06:54:52.624
  Jun 13 06:54:52.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 delete --grace-period=0 --force -f -'
  Jun 13 06:54:52.846: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 06:54:52.846: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun 13 06:54:52.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 get rc,svc -l name=pause --no-headers'
  Jun 13 06:54:53.102: INFO: stderr: "No resources found in kubectl-7057 namespace.\n"
  Jun 13 06:54:53.102: INFO: stdout: ""
  Jun 13 06:54:53.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7057 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 13 06:54:53.383: INFO: stderr: ""
  Jun 13 06:54:53.383: INFO: stdout: ""
  Jun 13 06:54:53.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7057" for this suite. @ 06/13/24 06:54:53.389
â€¢ [4.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/13/24 06:54:53.408
  Jun 13 06:54:53.408: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename subpath @ 06/13/24 06:54:53.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:54:53.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:54:53.478
  STEP: Setting up data @ 06/13/24 06:54:53.509
  STEP: Creating pod pod-subpath-test-configmap-sgbb @ 06/13/24 06:54:53.532
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 06:54:53.536
  STEP: Saw pod success @ 06/13/24 06:55:17.663
  Jun 13 06:55:17.666: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-subpath-test-configmap-sgbb container test-container-subpath-configmap-sgbb: <nil>
  STEP: delete the pod @ 06/13/24 06:55:17.677
  STEP: Deleting pod pod-subpath-test-configmap-sgbb @ 06/13/24 06:55:17.717
  Jun 13 06:55:17.718: INFO: Deleting pod "pod-subpath-test-configmap-sgbb" in namespace "subpath-9323"
  Jun 13 06:55:17.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9323" for this suite. @ 06/13/24 06:55:17.74
â€¢ [24.346 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/13/24 06:55:17.756
  Jun 13 06:55:17.756: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 06:55:17.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:55:17.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:55:17.815
  Jun 13 06:55:18.005: INFO: Create a RollingUpdate DaemonSet
  Jun 13 06:55:18.049: INFO: Check that daemon pods launch on every node of the cluster
  Jun 13 06:55:18.077: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 06:55:18.077: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 06:55:19.058: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 06:55:19.058: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 06:55:20.069: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 06:55:20.069: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 06:55:21.072: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 06:55:21.094: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Jun 13 06:55:21.094: INFO: Update the DaemonSet to trigger a rollout
  Jun 13 06:55:21.163: INFO: Updating DaemonSet daemon-set
  Jun 13 06:55:23.230: INFO: Roll back the DaemonSet before rollout is complete
  Jun 13 06:55:23.250: INFO: Updating DaemonSet daemon-set
  Jun 13 06:55:23.250: INFO: Make sure DaemonSet rollback is complete
  Jun 13 06:55:23.261: INFO: Wrong image for pod: daemon-set-wffcs. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun 13 06:55:23.261: INFO: Pod daemon-set-wffcs is not available
  Jun 13 06:55:26.265: INFO: Pod daemon-set-h66xq is not available
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 06:55:26.284
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4935, will wait for the garbage collector to delete the pods @ 06/13/24 06:55:26.285
  Jun 13 06:55:26.374: INFO: Deleting DaemonSet.extensions daemon-set took: 26.025949ms
  Jun 13 06:55:26.575: INFO: Terminating DaemonSet.extensions daemon-set pods took: 201.356416ms
  Jun 13 06:55:29.081: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 06:55:29.081: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 06:55:29.088: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8353"},"items":null}

  Jun 13 06:55:29.094: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8353"},"items":null}

  Jun 13 06:55:29.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4935" for this suite. @ 06/13/24 06:55:29.129
â€¢ [11.408 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/13/24 06:55:29.164
  Jun 13 06:55:29.164: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 06:55:29.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:55:29.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:55:29.274
  STEP: creating a ServiceAccount @ 06/13/24 06:55:29.292
  STEP: watching for the ServiceAccount to be added @ 06/13/24 06:55:29.338
  STEP: patching the ServiceAccount @ 06/13/24 06:55:29.344
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/13/24 06:55:29.371
  STEP: deleting the ServiceAccount @ 06/13/24 06:55:29.39
  Jun 13 06:55:29.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-397" for this suite. @ 06/13/24 06:55:29.529
â€¢ [0.374 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/13/24 06:55:29.539
  Jun 13 06:55:29.539: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 06:55:29.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:55:29.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:55:29.796
  STEP: creating a Pod with a static label @ 06/13/24 06:55:29.869
  STEP: watching for Pod to be ready @ 06/13/24 06:55:29.885
  Jun 13 06:55:29.895: INFO: observed Pod pod-test in namespace pods-7690 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun 13 06:55:29.900: INFO: observed Pod pod-test in namespace pods-7690 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  }]
  Jun 13 06:55:29.992: INFO: observed Pod pod-test in namespace pods-7690 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  }]
  Jun 13 06:55:30.864: INFO: observed Pod pod-test in namespace pods-7690 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  }]
  Jun 13 06:55:32.436: INFO: Found Pod pod-test in namespace pods-7690 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:32 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:32 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 06:55:29 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/13/24 06:55:32.446
  STEP: getting the Pod and ensuring that it's patched @ 06/13/24 06:55:32.481
  STEP: replacing the Pod's status Ready condition to False @ 06/13/24 06:55:32.485
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/13/24 06:55:32.531
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/13/24 06:55:32.531
  STEP: watching for the Pod to be deleted @ 06/13/24 06:55:32.545
  Jun 13 06:55:32.550: INFO: observed event type MODIFIED
  Jun 13 06:55:32.956: INFO: observed event type MODIFIED
  Jun 13 06:55:34.859: INFO: observed event type MODIFIED
  Jun 13 06:55:35.125: INFO: observed event type MODIFIED
  Jun 13 06:55:35.517: INFO: observed event type MODIFIED
  Jun 13 06:55:35.606: INFO: observed event type MODIFIED
  Jun 13 06:55:35.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7690" for this suite. @ 06/13/24 06:55:35.641
â€¢ [6.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/13/24 06:55:35.696
  Jun 13 06:55:35.696: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 06:55:35.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:55:35.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:55:35.913
  STEP: Creating pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858 @ 06/13/24 06:55:35.961
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 06:55:38.051
  Jun 13 06:55:38.054: INFO: Initial restart count of pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 is 0
  Jun 13 06:55:38.063: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:40.067: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:42.086: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:44.089: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:46.101: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:48.107: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:50.111: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:52.116: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:54.121: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:56.149: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:58.173: INFO: Get pod liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 in namespace container-probe-7858
  Jun 13 06:55:58.174: INFO: Restart count of pod container-probe-7858/liveness-c6836021-57f8-4b03-b9ce-f0fae5bea8c9 is now 1 (20.120363294s elapsed)
  STEP: deleting the pod @ 06/13/24 06:55:58.175
  Jun 13 06:55:58.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7858" for this suite. @ 06/13/24 06:55:58.199
â€¢ [22.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/13/24 06:55:58.292
  Jun 13 06:55:58.292: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 06:55:58.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 06:55:58.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 06:55:58.354
  STEP: Creating a ForbidConcurrent cronjob @ 06/13/24 06:55:58.378
  STEP: Ensuring a job is scheduled @ 06/13/24 06:55:58.392
  STEP: Ensuring exactly one is scheduled @ 06/13/24 06:56:00.412
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/13/24 06:56:00.434
  STEP: Ensuring no more jobs are scheduled @ 06/13/24 06:56:00.438
  STEP: Removing cronjob @ 06/13/24 07:01:00.45
  Jun 13 07:01:00.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5545" for this suite. @ 06/13/24 07:01:00.488
â€¢ [302.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/13/24 07:01:00.502
  Jun 13 07:01:00.502: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename watch @ 06/13/24 07:01:00.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:01:00.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:01:00.666
  STEP: creating a new configmap @ 06/13/24 07:01:00.689
  STEP: modifying the configmap once @ 06/13/24 07:01:00.717
  STEP: modifying the configmap a second time @ 06/13/24 07:01:00.774
  STEP: deleting the configmap @ 06/13/24 07:01:00.825
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/13/24 07:01:00.849
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/13/24 07:01:00.852
  Jun 13 07:01:00.853: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2684  07c97d49-5113-45cd-982f-cbb0d5925835 9186 0 2024-06-13 07:01:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-13 07:01:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 07:01:00.854: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2684  07c97d49-5113-45cd-982f-cbb0d5925835 9187 0 2024-06-13 07:01:00 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-13 07:01:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 07:01:00.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2684" for this suite. @ 06/13/24 07:01:00.868
â€¢ [0.378 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/13/24 07:01:00.882
  Jun 13 07:01:00.882: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:01:00.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:01:01.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:01:01.035
  STEP: creating service in namespace services-5335 @ 06/13/24 07:01:01.051
  STEP: creating service affinity-nodeport in namespace services-5335 @ 06/13/24 07:01:01.051
  STEP: creating replication controller affinity-nodeport in namespace services-5335 @ 06/13/24 07:01:01.103
  I0613 07:01:01.181729      18 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-5335, replica count: 3
  I0613 07:01:04.234114      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 07:01:07.234955      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 07:01:10.235296      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 07:01:13.237431      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 07:01:16.242640      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 07:01:19.243638      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0613 07:01:22.243845      18 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 07:01:22.276: INFO: Creating new exec pod
  Jun 13 07:01:27.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-5335 exec execpod-affinity656cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun 13 07:01:30.445: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun 13 07:01:30.445: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:01:30.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-5335 exec execpod-affinity656cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.98.196 80'
  Jun 13 07:01:30.686: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.98.196 80\nConnection to 10.43.98.196 80 port [tcp/http] succeeded!\n"
  Jun 13 07:01:30.686: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:01:30.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-5335 exec execpod-affinity656cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.204 32690'
  Jun 13 07:01:31.107: INFO: stderr: "+ nc -v -t -w 2 172.31.11.204 32690\n+ echo hostName\nConnection to 172.31.11.204 32690 port [tcp/*] succeeded!\n"
  Jun 13 07:01:31.107: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:01:31.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-5335 exec execpod-affinity656cw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.12.94 32690'
  Jun 13 07:01:31.532: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.12.94 32690\nConnection to 172.31.12.94 32690 port [tcp/*] succeeded!\n"
  Jun 13 07:01:31.532: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:01:31.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-5335 exec execpod-affinity656cw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.204:32690/ ; done'
  Jun 13 07:01:32.387: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32690/\n"
  Jun 13 07:01:32.387: INFO: stdout: "\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7\naffinity-nodeport-dfjd7"
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.387: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.388: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.388: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.388: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.388: INFO: Received response from host: affinity-nodeport-dfjd7
  Jun 13 07:01:32.388: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5335, will wait for the garbage collector to delete the pods @ 06/13/24 07:01:32.436
  Jun 13 07:01:32.528: INFO: Deleting ReplicationController affinity-nodeport took: 16.676061ms
  Jun 13 07:01:32.729: INFO: Terminating ReplicationController affinity-nodeport pods took: 200.904894ms
  Jun 13 07:01:36.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5335" for this suite. @ 06/13/24 07:01:36.744
â€¢ [35.882 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/13/24 07:01:36.765
  Jun 13 07:01:36.765: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:01:36.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:01:36.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:01:36.974
  Jun 13 07:01:37.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4665" for this suite. @ 06/13/24 07:01:37.313
â€¢ [0.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/13/24 07:01:37.328
  Jun 13 07:01:37.328: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 07:01:37.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:01:37.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:01:37.48
  Jun 13 07:01:43.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8994" for this suite. @ 06/13/24 07:01:43.852
â€¢ [6.558 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/13/24 07:01:43.892
  Jun 13 07:01:43.895: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 07:01:43.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:01:44.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:01:44.242
  Jun 13 07:01:44.276: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: creating the pod @ 06/13/24 07:01:44.278
  STEP: submitting the pod to kubernetes @ 06/13/24 07:01:44.278
  Jun 13 07:01:46.831: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9327" for this suite. @ 06/13/24 07:01:46.839
â€¢ [2.959 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/13/24 07:01:46.853
  Jun 13 07:01:46.853: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 07:01:46.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:01:46.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:01:46.971
  Jun 13 07:01:51.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7115" for this suite. @ 06/13/24 07:01:51.091
â€¢ [4.248 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/13/24 07:01:51.104
  Jun 13 07:01:51.104: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename controllerrevisions @ 06/13/24 07:01:51.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:01:51.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:01:51.237
  STEP: Creating DaemonSet "e2e-4plrg-daemon-set" @ 06/13/24 07:01:51.36
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 07:01:51.372
  Jun 13 07:01:51.389: INFO: Number of nodes with available pods controlled by daemonset e2e-4plrg-daemon-set: 0
  Jun 13 07:01:51.389: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:01:52.443: INFO: Number of nodes with available pods controlled by daemonset e2e-4plrg-daemon-set: 0
  Jun 13 07:01:52.443: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:01:53.394: INFO: Number of nodes with available pods controlled by daemonset e2e-4plrg-daemon-set: 0
  Jun 13 07:01:53.414: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:01:54.394: INFO: Number of nodes with available pods controlled by daemonset e2e-4plrg-daemon-set: 2
  Jun 13 07:01:54.395: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:01:55.407: INFO: Number of nodes with available pods controlled by daemonset e2e-4plrg-daemon-set: 2
  Jun 13 07:01:55.407: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:01:56.409: INFO: Number of nodes with available pods controlled by daemonset e2e-4plrg-daemon-set: 3
  Jun 13 07:01:56.409: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-4plrg-daemon-set
  STEP: Confirm DaemonSet "e2e-4plrg-daemon-set" successfully created with "daemonset-name=e2e-4plrg-daemon-set" label @ 06/13/24 07:01:56.447
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-4plrg-daemon-set" @ 06/13/24 07:01:56.525
  Jun 13 07:01:56.556: INFO: Located ControllerRevision: "e2e-4plrg-daemon-set-7b595fbd4d"
  STEP: Patching ControllerRevision "e2e-4plrg-daemon-set-7b595fbd4d" @ 06/13/24 07:01:56.59
  Jun 13 07:01:56.615: INFO: e2e-4plrg-daemon-set-7b595fbd4d has been patched
  STEP: Create a new ControllerRevision @ 06/13/24 07:01:56.615
  Jun 13 07:01:56.631: INFO: Created ControllerRevision: e2e-4plrg-daemon-set-55c87b6554
  STEP: Confirm that there are two ControllerRevisions @ 06/13/24 07:01:56.631
  Jun 13 07:01:56.631: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 07:01:56.647: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-4plrg-daemon-set-7b595fbd4d" @ 06/13/24 07:01:56.647
  STEP: Confirm that there is only one ControllerRevision @ 06/13/24 07:01:56.713
  Jun 13 07:01:56.717: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 07:01:56.769: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-4plrg-daemon-set-55c87b6554" @ 06/13/24 07:01:56.781
  Jun 13 07:01:56.805: INFO: e2e-4plrg-daemon-set-55c87b6554 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/13/24 07:01:56.805
  W0613 07:01:56.861302      18 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/13/24 07:01:56.862
  Jun 13 07:01:56.863: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 07:01:57.865: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 07:01:57.876: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-4plrg-daemon-set-55c87b6554=updated" @ 06/13/24 07:01:57.878
  STEP: Confirm that there is only one ControllerRevision @ 06/13/24 07:01:57.903
  Jun 13 07:01:57.903: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun 13 07:01:57.912: INFO: Found 1 ControllerRevisions
  Jun 13 07:01:57.948: INFO: ControllerRevision "e2e-4plrg-daemon-set-769cfdf787" has revision 3
  STEP: Deleting DaemonSet "e2e-4plrg-daemon-set" @ 06/13/24 07:01:57.962
  STEP: deleting DaemonSet.extensions e2e-4plrg-daemon-set in namespace controllerrevisions-5526, will wait for the garbage collector to delete the pods @ 06/13/24 07:01:57.962
  Jun 13 07:01:58.072: INFO: Deleting DaemonSet.extensions e2e-4plrg-daemon-set took: 31.828221ms
  Jun 13 07:01:58.175: INFO: Terminating DaemonSet.extensions e2e-4plrg-daemon-set pods took: 103.012469ms
  Jun 13 07:02:00.602: INFO: Number of nodes with available pods controlled by daemonset e2e-4plrg-daemon-set: 0
  Jun 13 07:02:00.602: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-4plrg-daemon-set
  Jun 13 07:02:00.606: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"9661"},"items":null}

  Jun 13 07:02:00.618: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"9661"},"items":null}

  Jun 13 07:02:00.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5526" for this suite. @ 06/13/24 07:02:00.674
â€¢ [9.581 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/13/24 07:02:00.686
  Jun 13 07:02:00.686: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 07:02:00.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:02:00.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:02:00.785
  Jun 13 07:02:00.803: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:02:09.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2021" for this suite. @ 06/13/24 07:02:09.961
â€¢ [9.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/13/24 07:02:09.981
  Jun 13 07:02:09.981: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 07:02:09.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:02:10.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:02:10.155
  Jun 13 07:02:10.165: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/13/24 07:02:12.946
  Jun 13 07:02:12.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-7684 --namespace=crd-publish-openapi-7684 create -f -'
  Jun 13 07:02:13.175: INFO: stderr: ""
  Jun 13 07:02:13.175: INFO: stdout: "e2e-test-crd-publish-openapi-4171-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 13 07:02:13.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-7684 --namespace=crd-publish-openapi-7684 delete e2e-test-crd-publish-openapi-4171-crds test-cr'
  Jun 13 07:02:13.482: INFO: stderr: ""
  Jun 13 07:02:13.482: INFO: stdout: "e2e-test-crd-publish-openapi-4171-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun 13 07:02:13.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-7684 --namespace=crd-publish-openapi-7684 apply -f -'
  Jun 13 07:02:14.195: INFO: stderr: ""
  Jun 13 07:02:14.195: INFO: stdout: "e2e-test-crd-publish-openapi-4171-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun 13 07:02:14.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-7684 --namespace=crd-publish-openapi-7684 delete e2e-test-crd-publish-openapi-4171-crds test-cr'
  Jun 13 07:02:14.345: INFO: stderr: ""
  Jun 13 07:02:14.345: INFO: stdout: "e2e-test-crd-publish-openapi-4171-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/13/24 07:02:14.345
  Jun 13 07:02:14.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-7684 explain e2e-test-crd-publish-openapi-4171-crds'
  Jun 13 07:02:14.583: INFO: stderr: ""
  Jun 13 07:02:14.583: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4171-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jun 13 07:02:16.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7684" for this suite. @ 06/13/24 07:02:16.77
â€¢ [6.806 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/13/24 07:02:16.803
  Jun 13 07:02:16.803: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename limitrange @ 06/13/24 07:02:16.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:02:16.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:02:16.982
  STEP: Creating LimitRange "e2e-limitrange-nf7zz" in namespace "limitrange-2437" @ 06/13/24 07:02:17.027
  STEP: Creating another limitRange in another namespace @ 06/13/24 07:02:17.068
  Jun 13 07:02:17.210: INFO: Namespace "e2e-limitrange-nf7zz-2252" created
  Jun 13 07:02:17.210: INFO: Creating LimitRange "e2e-limitrange-nf7zz" in namespace "e2e-limitrange-nf7zz-2252"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-nf7zz" @ 06/13/24 07:02:17.254
  Jun 13 07:02:17.263: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-nf7zz" in "limitrange-2437" namespace @ 06/13/24 07:02:17.263
  Jun 13 07:02:17.287: INFO: LimitRange "e2e-limitrange-nf7zz" has been patched
  STEP: Delete LimitRange "e2e-limitrange-nf7zz" by Collection with labelSelector: "e2e-limitrange-nf7zz=patched" @ 06/13/24 07:02:17.287
  STEP: Confirm that the limitRange "e2e-limitrange-nf7zz" has been deleted @ 06/13/24 07:02:17.367
  Jun 13 07:02:17.367: INFO: Requesting list of LimitRange to confirm quantity
  Jun 13 07:02:17.391: INFO: Found 0 LimitRange with label "e2e-limitrange-nf7zz=patched"
  Jun 13 07:02:17.391: INFO: LimitRange "e2e-limitrange-nf7zz" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-nf7zz" @ 06/13/24 07:02:17.391
  Jun 13 07:02:17.400: INFO: Found 1 limitRange
  Jun 13 07:02:17.400: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2437" for this suite. @ 06/13/24 07:02:17.429
  STEP: Destroying namespace "e2e-limitrange-nf7zz-2252" for this suite. @ 06/13/24 07:02:17.44
â€¢ [0.662 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/13/24 07:02:17.474
  Jun 13 07:02:17.474: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 07:02:17.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:02:17.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:02:17.71
  STEP: creating the pod with failed condition @ 06/13/24 07:02:17.753
  STEP: updating the pod @ 06/13/24 07:04:17.805
  Jun 13 07:04:18.330: INFO: Successfully updated pod "var-expansion-0b8e6ee8-31a8-4acc-bd51-54070f54129b"
  STEP: waiting for pod running @ 06/13/24 07:04:18.33
  STEP: deleting the pod gracefully @ 06/13/24 07:04:22.353
  Jun 13 07:04:22.353: INFO: Deleting pod "var-expansion-0b8e6ee8-31a8-4acc-bd51-54070f54129b" in namespace "var-expansion-7375"
  Jun 13 07:04:22.368: INFO: Wait up to 5m0s for pod "var-expansion-0b8e6ee8-31a8-4acc-bd51-54070f54129b" to be fully deleted
  Jun 13 07:04:56.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7375" for this suite. @ 06/13/24 07:04:56.586
â€¢ [159.130 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/13/24 07:04:56.605
  Jun 13 07:04:56.605: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:04:56.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:04:56.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:04:56.734
  STEP: Setting up server cert @ 06/13/24 07:04:56.927
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:04:57.309
  STEP: Deploying the webhook pod @ 06/13/24 07:04:57.317
  STEP: Wait for the deployment to be ready @ 06/13/24 07:04:57.336
  Jun 13 07:04:57.348: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Jun 13 07:04:59.378: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 07:05:01.393: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 07:05:03.382: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 07:05:05.383: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 07:05:07.382: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 4, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/13/24 07:05:09.383
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:05:09.404
  Jun 13 07:05:10.404: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/13/24 07:05:10.41
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/13/24 07:05:10.472
  STEP: Creating a configMap that should not be mutated @ 06/13/24 07:05:10.49
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/13/24 07:05:10.507
  STEP: Creating a configMap that should be mutated @ 06/13/24 07:05:10.537
  Jun 13 07:05:10.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4371" for this suite. @ 06/13/24 07:05:10.715
  STEP: Destroying namespace "webhook-markers-3208" for this suite. @ 06/13/24 07:05:10.73
â€¢ [14.153 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/13/24 07:05:10.759
  Jun 13 07:05:10.759: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 07:05:10.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:05:10.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:05:10.92
  Jun 13 07:06:10.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7582" for this suite. @ 06/13/24 07:06:10.955
â€¢ [60.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/13/24 07:06:10.981
  Jun 13 07:06:10.981: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename job @ 06/13/24 07:06:10.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:06:11.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:06:11.047
  STEP: Creating a job @ 06/13/24 07:06:11.069
  STEP: Ensuring active pods == parallelism @ 06/13/24 07:06:11.095
  STEP: delete a job @ 06/13/24 07:06:15.103
  STEP: deleting Job.batch foo in namespace job-8791, will wait for the garbage collector to delete the pods @ 06/13/24 07:06:15.103
  Jun 13 07:06:15.167: INFO: Deleting Job.batch foo took: 8.74321ms
  Jun 13 07:06:15.367: INFO: Terminating Job.batch foo pods took: 200.740497ms
  STEP: Ensuring job was deleted @ 06/13/24 07:06:18.074
  Jun 13 07:06:18.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8791" for this suite. @ 06/13/24 07:06:18.103
â€¢ [7.128 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/13/24 07:06:18.109
  Jun 13 07:06:18.109: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sysctl @ 06/13/24 07:06:18.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:06:18.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:06:18.191
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/13/24 07:06:18.28
  STEP: Watching for error events or started pod @ 06/13/24 07:06:18.356
  STEP: Waiting for pod completion @ 06/13/24 07:06:20.361
  STEP: Checking that the pod succeeded @ 06/13/24 07:06:24.416
  STEP: Getting logs from the pod @ 06/13/24 07:06:24.416
  STEP: Checking that the sysctl is actually updated @ 06/13/24 07:06:24.442
  Jun 13 07:06:24.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1174" for this suite. @ 06/13/24 07:06:24.451
â€¢ [6.361 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/13/24 07:06:24.475
  Jun 13 07:06:24.475: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:06:24.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:06:24.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:06:24.613
  STEP: Creating secret with name secret-test-db6770ed-95a3-4775-b268-0059c1e25739 @ 06/13/24 07:06:24.616
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:06:24.642
  STEP: Saw pod success @ 06/13/24 07:06:30.743
  Jun 13 07:06:30.746: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-78516394-cddd-4896-866c-64a1262479c5 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:06:30.759
  Jun 13 07:06:30.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9415" for this suite. @ 06/13/24 07:06:30.805
â€¢ [6.337 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/13/24 07:06:30.812
  Jun 13 07:06:30.812: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 07:06:30.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:06:30.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:06:30.867
  STEP: creating a Deployment @ 06/13/24 07:06:30.881
  Jun 13 07:06:30.881: INFO: Creating simple deployment test-deployment-frsgk
  Jun 13 07:06:30.985: INFO: deployment "test-deployment-frsgk" doesn't have the required revision set
  Jun 13 07:06:32.995: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 6, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 6, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 6, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 6, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-frsgk-5d576bd769\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 06/13/24 07:06:35.037
  Jun 13 07:06:35.044: INFO: Deployment test-deployment-frsgk has Conditions: [{Available True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-frsgk-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/13/24 07:06:35.044
  Jun 13 07:06:35.064: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 6, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 6, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 6, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 6, 30, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-frsgk-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/13/24 07:06:35.064
  Jun 13 07:06:35.088: INFO: Observed &Deployment event: ADDED
  Jun 13 07:06:35.088: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:30 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-frsgk-5d576bd769"}
  Jun 13 07:06:35.089: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.089: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:30 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-frsgk-5d576bd769"}
  Jun 13 07:06:35.090: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 07:06:31 +0000 UTC 2024-06-13 07:06:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 07:06:35.090: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.091: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 07:06:31 +0000 UTC 2024-06-13 07:06:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 07:06:35.092: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:31 +0000 UTC 2024-06-13 07:06:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-frsgk-5d576bd769" is progressing.}
  Jun 13 07:06:35.097: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.099: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 07:06:35.100: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-frsgk-5d576bd769" has successfully progressed.}
  Jun 13 07:06:35.106: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.106: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 07:06:35.106: INFO: Observed Deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-frsgk-5d576bd769" has successfully progressed.}
  Jun 13 07:06:35.106: INFO: Found Deployment test-deployment-frsgk in namespace deployment-731 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 07:06:35.106: INFO: Deployment test-deployment-frsgk has an updated status
  STEP: patching the Statefulset Status @ 06/13/24 07:06:35.106
  Jun 13 07:06:35.106: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 13 07:06:35.131: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/13/24 07:06:35.131
  Jun 13 07:06:35.147: INFO: Observed &Deployment event: ADDED
  Jun 13 07:06:35.147: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:30 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-frsgk-5d576bd769"}
  Jun 13 07:06:35.148: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.148: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:30 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-frsgk-5d576bd769"}
  Jun 13 07:06:35.148: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 07:06:31 +0000 UTC 2024-06-13 07:06:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 07:06:35.148: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.149: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-13 07:06:31 +0000 UTC 2024-06-13 07:06:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun 13 07:06:35.149: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:31 +0000 UTC 2024-06-13 07:06:30 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-frsgk-5d576bd769" is progressing.}
  Jun 13 07:06:35.150: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.150: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 07:06:35.151: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-frsgk-5d576bd769" has successfully progressed.}
  Jun 13 07:06:35.151: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.151: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun 13 07:06:35.151: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-13 07:06:33 +0000 UTC 2024-06-13 07:06:30 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-frsgk-5d576bd769" has successfully progressed.}
  Jun 13 07:06:35.151: INFO: Observed deployment test-deployment-frsgk in namespace deployment-731 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 07:06:35.151: INFO: Observed &Deployment event: MODIFIED
  Jun 13 07:06:35.151: INFO: Found deployment test-deployment-frsgk in namespace deployment-731 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun 13 07:06:35.151: INFO: Deployment test-deployment-frsgk has a patched status
  Jun 13 07:06:35.161: INFO: Deployment "test-deployment-frsgk":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-frsgk",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-731",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d167a328-c86e-4df7-9082-4eb8b5909956",
      ResourceVersion: (string) (len=5) "10703",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859190,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859190,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859195,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-frsgk-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 07:06:35.180: INFO: New ReplicaSet "test-deployment-frsgk-5d576bd769" of Deployment "test-deployment-frsgk":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-frsgk-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-731",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d81938b-191e-4d33-a8dd-331a80eb2214",
      ResourceVersion: (string) (len=5) "10696",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859190,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-frsgk",
          UID: (types.UID) (len=36) "d167a328-c86e-4df7-9082-4eb8b5909956",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859190,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 31 36  |k:{\"uid\":\"d16|
              00000120  37 61 33 32 38 2d 63 38  36 65 2d 34 64 66 37 2d  |7a328-c86e-4df7-|
              00000130  39 30 38 32 2d 34 65 62  38 62 35 39 30 39 39 35  |9082-4eb8b590995|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 07:06:35.211: INFO: Pod "test-deployment-frsgk-5d576bd769-q52st" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-frsgk-5d576bd769-q52st",
      GenerateName: (string) (len=33) "test-deployment-frsgk-5d576bd769-",
      Namespace: (string) (len=14) "deployment-731",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47f08375-77ed-46f8-b538-a75eaa403e9f",
      ResourceVersion: (string) (len=5) "10695",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859190,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "56a25f78c3e8a0a73f773db9aeb9ad8b3ac4796c11a0ac33b1965779d710596c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.42/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.42/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-frsgk-5d576bd769",
          UID: (types.UID) (len=36) "7d81938b-191e-4d33-a8dd-331a80eb2214",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859190,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 64 38 31 39 33 38  62 2d 31 39 31 65 2d 34  |"7d81938b-191e-4|
              000000a0  64 33 33 2d 61 38 64 64  2d 33 33 31 61 38 30 65  |d33-a8dd-331a80e|
              000000b0  62 32 32 31 34 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b2214\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859192,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.42\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqbx9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqbx9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859193,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) (len=10) "10.42.1.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859191,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853859192,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://5025aca4ab73fb642b7eb34362acda4557c78c8dac270059cc145a31353eff61",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 07:06:35.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-731" for this suite. @ 06/13/24 07:06:35.223
â€¢ [4.451 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/13/24 07:06:35.264
  Jun 13 07:06:35.264: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 07:06:35.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:06:35.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:06:35.38
  STEP: Counting existing ResourceQuota @ 06/13/24 07:06:35.402
  STEP: Creating a ResourceQuota @ 06/13/24 07:06:40.421
  STEP: Ensuring resource quota status is calculated @ 06/13/24 07:06:40.448
  STEP: Creating a ReplicationController @ 06/13/24 07:06:42.454
  STEP: Ensuring resource quota status captures replication controller creation @ 06/13/24 07:06:42.493
  STEP: Deleting a ReplicationController @ 06/13/24 07:06:44.497
  STEP: Ensuring resource quota status released usage @ 06/13/24 07:06:44.537
  Jun 13 07:06:46.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6869" for this suite. @ 06/13/24 07:06:46.59
â€¢ [11.345 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/13/24 07:06:46.61
  Jun 13 07:06:46.610: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 07:06:46.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:06:46.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:06:46.737
  STEP: Creating ReplicationController "e2e-rc-qhsjg" @ 06/13/24 07:06:46.745
  Jun 13 07:06:46.791: INFO: Get Replication Controller "e2e-rc-qhsjg" to confirm replicas
  Jun 13 07:06:47.791: INFO: Get Replication Controller "e2e-rc-qhsjg" to confirm replicas
  Jun 13 07:06:47.795: INFO: Found 1 replicas for "e2e-rc-qhsjg" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-qhsjg" @ 06/13/24 07:06:47.795
  STEP: Updating a scale subresource @ 06/13/24 07:06:47.803
  STEP: Verifying replicas where modified for replication controller "e2e-rc-qhsjg" @ 06/13/24 07:06:47.819
  Jun 13 07:06:47.819: INFO: Get Replication Controller "e2e-rc-qhsjg" to confirm replicas
  Jun 13 07:06:48.819: INFO: Get Replication Controller "e2e-rc-qhsjg" to confirm replicas
  Jun 13 07:06:48.836: INFO: Found 2 replicas for "e2e-rc-qhsjg" replication controller
  Jun 13 07:06:48.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8021" for this suite. @ 06/13/24 07:06:48.868
â€¢ [2.274 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/13/24 07:06:48.884
  Jun 13 07:06:48.884: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 07:06:48.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:06:48.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:06:48.978
  STEP: Creating service test in namespace statefulset-123 @ 06/13/24 07:06:48.982
  STEP: Creating stateful set ss in namespace statefulset-123 @ 06/13/24 07:06:49.027
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-123 @ 06/13/24 07:06:49.121
  Jun 13 07:06:49.159: INFO: Found 0 stateful pods, waiting for 1
  Jun 13 07:06:59.129: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/13/24 07:06:59.13
  Jun 13 07:06:59.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-123 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 07:06:59.492: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:06:59.492: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:06:59.492: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:06:59.495: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun 13 07:07:09.498: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:07:09.498: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 07:07:09.528: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Jun 13 07:07:09.528: INFO: ss-0  ip-172-31-12-94  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC  }]
  Jun 13 07:07:09.528: INFO: 
  Jun 13 07:07:09.528: INFO: StatefulSet ss has not reached scale 3, at 1
  Jun 13 07:07:10.541: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.98481904s
  Jun 13 07:07:11.572: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.97183289s
  Jun 13 07:07:12.610: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.939820109s
  Jun 13 07:07:13.614: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.903018468s
  Jun 13 07:07:14.620: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.898557409s
  Jun 13 07:07:15.633: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.888232708s
  Jun 13 07:07:16.641: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.88051404s
  Jun 13 07:07:17.653: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.869403308s
  Jun 13 07:07:18.658: INFO: Verifying statefulset ss doesn't scale past 3 for another 859.847598ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-123 @ 06/13/24 07:07:19.662
  Jun 13 07:07:19.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-123 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 07:07:20.178: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 07:07:20.178: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 07:07:20.178: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 07:07:20.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-123 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 07:07:20.473: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 13 07:07:20.473: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 07:07:20.473: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 07:07:20.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-123 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 07:07:21.014: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun 13 07:07:21.014: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 07:07:21.014: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 07:07:21.019: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:07:21.019: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:07:21.019: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/13/24 07:07:21.019
  Jun 13 07:07:21.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-123 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 07:07:21.468: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:07:21.468: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:07:21.468: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:07:21.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-123 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 07:07:21.970: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:07:21.970: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:07:21.970: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:07:21.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-123 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 07:07:22.550: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:07:22.550: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:07:22.550: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:07:22.550: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 07:07:22.597: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Jun 13 07:07:32.559: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:07:32.559: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:07:32.559: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:07:32.629: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
  Jun 13 07:07:32.629: INFO: ss-0  ip-172-31-12-94   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC  }]
  Jun 13 07:07:32.629: INFO: ss-1  ip-172-31-2-92    Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  }]
  Jun 13 07:07:32.629: INFO: ss-2  ip-172-31-11-204  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  }]
  Jun 13 07:07:32.629: INFO: 
  Jun 13 07:07:32.629: INFO: StatefulSet ss has not reached scale 0, at 3
  Jun 13 07:07:33.640: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Jun 13 07:07:33.640: INFO: ss-0  ip-172-31-12-94   Running    30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC  }]
  Jun 13 07:07:33.640: INFO: ss-1  ip-172-31-2-92    Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  }]
  Jun 13 07:07:33.640: INFO: ss-2  ip-172-31-11-204  Running    30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  }]
  Jun 13 07:07:33.640: INFO: 
  Jun 13 07:07:33.640: INFO: StatefulSet ss has not reached scale 0, at 3
  Jun 13 07:07:34.644: INFO: POD   NODE              PHASE      GRACE  CONDITIONS
  Jun 13 07:07:34.644: INFO: ss-0  ip-172-31-12-94   Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:21 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:21 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:06:49 +0000 UTC  }]
  Jun 13 07:07:34.644: INFO: ss-2  ip-172-31-11-204  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:22 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-13 07:07:09 +0000 UTC  }]
  Jun 13 07:07:34.645: INFO: 
  Jun 13 07:07:34.645: INFO: StatefulSet ss has not reached scale 0, at 2
  Jun 13 07:07:35.651: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.93684805s
  Jun 13 07:07:36.655: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.930503443s
  Jun 13 07:07:37.663: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.924681922s
  Jun 13 07:07:38.667: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.917890613s
  Jun 13 07:07:39.671: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.914265499s
  Jun 13 07:07:40.674: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.910786881s
  Jun 13 07:07:41.681: INFO: Verifying statefulset ss doesn't scale past 0 for another 907.489802ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-123 @ 06/13/24 07:07:42.682
  Jun 13 07:07:42.686: INFO: Scaling statefulset ss to 0
  Jun 13 07:07:42.724: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 07:07:42.737: INFO: Deleting all statefulset in ns statefulset-123
  Jun 13 07:07:42.741: INFO: Scaling statefulset ss to 0
  Jun 13 07:07:42.757: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 07:07:42.761: INFO: Deleting statefulset ss
  Jun 13 07:07:42.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-123" for this suite. @ 06/13/24 07:07:42.802
â€¢ [53.933 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/13/24 07:07:42.818
  Jun 13 07:07:42.818: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 07:07:42.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:07:42.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:07:42.94
  Jun 13 07:07:42.955: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/13/24 07:07:43.982
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/13/24 07:07:43.988
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/13/24 07:07:45.005
  Jun 13 07:07:45.069: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/13/24 07:07:45.07
  Jun 13 07:07:46.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1367" for this suite. @ 06/13/24 07:07:46.139
â€¢ [3.367 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/13/24 07:07:46.184
  Jun 13 07:07:46.184: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 07:07:46.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:07:46.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:07:46.32
  Jun 13 07:07:46.454: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 07:07:46.492
  Jun 13 07:07:46.590: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:07:46.590: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:07:47.513: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:07:47.513: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:07:48.559: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:07:48.559: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:07:49.512: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:07:49.512: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:07:50.505: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 07:07:50.505: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/13/24 07:07:50.519
  STEP: Check that daemon pods images are updated. @ 06/13/24 07:07:50.542
  Jun 13 07:07:50.568: INFO: Wrong image for pod: daemon-set-6cgrb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:50.568: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:50.568: INFO: Wrong image for pod: daemon-set-thwzp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:51.636: INFO: Wrong image for pod: daemon-set-6cgrb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:51.636: INFO: Pod daemon-set-m2tdg is not available
  Jun 13 07:07:51.636: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:52.580: INFO: Wrong image for pod: daemon-set-6cgrb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:52.581: INFO: Pod daemon-set-m2tdg is not available
  Jun 13 07:07:52.581: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:53.557: INFO: Wrong image for pod: daemon-set-6cgrb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:53.557: INFO: Pod daemon-set-m2tdg is not available
  Jun 13 07:07:53.557: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:54.546: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:55.547: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:55.548: INFO: Pod daemon-set-ztm4j is not available
  Jun 13 07:07:56.550: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:56.550: INFO: Pod daemon-set-ztm4j is not available
  Jun 13 07:07:57.550: INFO: Wrong image for pod: daemon-set-n5dp2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun 13 07:07:57.550: INFO: Pod daemon-set-ztm4j is not available
  Jun 13 07:07:59.553: INFO: Pod daemon-set-bsjmh is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/13/24 07:07:59.558
  Jun 13 07:07:59.568: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:07:59.569: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:08:00.582: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:08:00.582: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:08:01.567: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:08:01.568: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:08:02.592: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 07:08:02.592: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 07:08:02.65
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4857, will wait for the garbage collector to delete the pods @ 06/13/24 07:08:02.65
  Jun 13 07:08:02.722: INFO: Deleting DaemonSet.extensions daemon-set took: 11.48054ms
  Jun 13 07:08:02.922: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.411246ms
  Jun 13 07:08:04.832: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:08:04.832: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 07:08:04.840: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11416"},"items":null}

  Jun 13 07:08:04.843: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11416"},"items":null}

  Jun 13 07:08:04.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4857" for this suite. @ 06/13/24 07:08:04.86
â€¢ [18.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/13/24 07:08:04.886
  Jun 13 07:08:04.886: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 07:08:04.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:08:04.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:08:04.988
  Jun 13 07:08:05.043: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 07:08:05.061: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 07:08:05.065: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-204 before test
  Jun 13 07:08:05.167: INFO: fleet-agent-0 from cattle-fleet-system started at 2024-06-13 06:20:09 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.167: INFO: 	Container fleet-agent ready: true, restart count 0
  Jun 13 07:08:05.167: INFO: 	Container fleet-agent-clusterstatus ready: true, restart count 0
  Jun 13 07:08:05.167: INFO: cattle-cluster-agent-744549dbb4-28hx8 from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.167: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 07:08:05.167: INFO: cattle-cluster-agent-744549dbb4-xtk7x from cattle-system started at 2024-06-13 06:21:03 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.167: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 07:08:05.168: INFO: cattle-node-agent-kjs2b from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.168: INFO: 	Container agent ready: true, restart count 0
  Jun 13 07:08:05.168: INFO: helm-operation-mm2l6 from cattle-system started at 2024-06-13 06:20:14 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.168: INFO: 	Container helm ready: false, restart count 0
  Jun 13 07:08:05.168: INFO: 	Container proxy ready: false, restart count 0
  Jun 13 07:08:05.168: INFO: kube-api-auth-wwvxs from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.168: INFO: 	Container kube-api-auth ready: true, restart count 0
  Jun 13 07:08:05.169: INFO: rancher-webhook-66ff948964-5r6sf from cattle-system started at 2024-06-13 06:20:57 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.169: INFO: 	Container rancher-webhook ready: true, restart count 0
  Jun 13 07:08:05.169: INFO: calico-kube-controllers-8485458bd8-xmp2w from kube-system started at 2024-06-13 06:18:18 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.169: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 07:08:05.169: INFO: canal-nmgr7 from kube-system started at 2024-06-13 06:18:18 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.169: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 07:08:05.169: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 07:08:05.170: INFO: coredns-7b7785bd9-knk5k from kube-system started at 2024-06-13 06:18:29 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.170: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 07:08:05.170: INFO: metrics-server-657c74b5d8-44q8w from kube-system started at 2024-06-13 06:18:43 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.170: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 07:08:05.170: INFO: rke-coredns-addon-deploy-job-zk2n9 from kube-system started at 2024-06-13 06:27:54 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.170: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 07:08:05.170: INFO: rke-metrics-addon-deploy-job-522gf from kube-system started at 2024-06-13 06:18:41 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.170: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 07:08:05.170: INFO: rke-network-plugin-deploy-job-nzfjk from kube-system started at 2024-06-13 06:18:15 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.170: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 07:08:05.171: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-hcrl9 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.171: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:08:05.171: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 07:08:05.171: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-94 before test
  Jun 13 07:08:05.205: INFO: cattle-node-agent-gppzj from cattle-system started at 2024-06-13 06:21:04 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.205: INFO: 	Container agent ready: true, restart count 0
  Jun 13 07:08:05.205: INFO: canal-7rrrm from kube-system started at 2024-06-13 06:21:04 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.205: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 07:08:05.205: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 07:08:05.205: INFO: coredns-7b7785bd9-7ljhs from kube-system started at 2024-06-13 06:21:06 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.205: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 07:08:05.205: INFO: coredns-autoscaler-6b7d888f49-gtz4n from kube-system started at 2024-06-13 06:27:58 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.205: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 07:08:05.205: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-5zbmz from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.205: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:08:05.205: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 07:08:05.205: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-92 before test
  Jun 13 07:08:05.215: INFO: cattle-node-agent-czvts from cattle-system started at 2024-06-13 06:21:16 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.215: INFO: 	Container agent ready: true, restart count 0
  Jun 13 07:08:05.215: INFO: helm-operation-ssktk from cattle-system started at 2024-06-13 06:27:43 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.215: INFO: 	Container helm ready: false, restart count 0
  Jun 13 07:08:05.215: INFO: 	Container proxy ready: false, restart count 0
  Jun 13 07:08:05.215: INFO: canal-4z8nx from kube-system started at 2024-06-13 06:21:16 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.215: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 07:08:05.215: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 07:08:05.215: INFO: sonobuoy from sonobuoy started at 2024-06-13 06:32:15 +0000 UTC (1 container statuses recorded)
  Jun 13 07:08:05.215: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 07:08:05.215: INFO: sonobuoy-e2e-job-8c45e5711e4845f4 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.215: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 07:08:05.215: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:08:05.215: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-cq7zb from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:08:05.215: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:08:05.215: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/13/24 07:08:05.215
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d87ea069d6b0a9], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 06/13/24 07:08:05.32
  Jun 13 07:08:06.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9647" for this suite. @ 06/13/24 07:08:06.312
â€¢ [1.448 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/13/24 07:08:06.335
  Jun 13 07:08:06.336: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:08:06.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:08:06.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:08:06.499
  STEP: Creating configMap configmap-520/configmap-test-e582174c-3aa1-46f8-85b7-c13e223ccf09 @ 06/13/24 07:08:06.531
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:08:06.555
  STEP: Saw pod success @ 06/13/24 07:08:10.672
  Jun 13 07:08:10.694: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-00cb841f-b284-4376-b107-194f20bd55e1 container env-test: <nil>
  STEP: delete the pod @ 06/13/24 07:08:10.817
  Jun 13 07:08:10.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-520" for this suite. @ 06/13/24 07:08:10.943
â€¢ [4.635 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/13/24 07:08:10.972
  Jun 13 07:08:10.972: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename discovery @ 06/13/24 07:08:10.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:08:11.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:08:11.287
  STEP: Setting up server cert @ 06/13/24 07:08:11.3
  STEP: Requesting APIResourceList from "/api/v1" @ 06/13/24 07:08:11.741
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/13/24 07:08:11.755
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/13/24 07:08:11.761
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/13/24 07:08:11.783
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/13/24 07:08:11.789
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/13/24 07:08:11.791
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/13/24 07:08:11.809
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/13/24 07:08:11.811
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/13/24 07:08:11.82
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/13/24 07:08:11.839
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/13/24 07:08:11.841
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/13/24 07:08:11.846
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/13/24 07:08:11.854
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/13/24 07:08:11.857
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/13/24 07:08:11.859
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/13/24 07:08:11.863
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/13/24 07:08:11.865
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/13/24 07:08:11.876
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/13/24 07:08:11.881
  Jun 13 07:08:11.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5267" for this suite. @ 06/13/24 07:08:11.901
â€¢ [0.941 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/13/24 07:08:11.913
  Jun 13 07:08:11.913: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 07:08:11.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:08:12.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:08:12.052
  STEP: Creating service test in namespace statefulset-9822 @ 06/13/24 07:08:12.094
  STEP: Creating a new StatefulSet @ 06/13/24 07:08:12.119
  Jun 13 07:08:12.250: INFO: Found 0 stateful pods, waiting for 3
  Jun 13 07:08:22.227: INFO: Found 2 stateful pods, waiting for 3
  Jun 13 07:08:32.225: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:08:32.225: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:08:32.225: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=false
  Jun 13 07:08:42.230: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:08:42.230: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:08:42.230: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/13/24 07:08:42.243
  Jun 13 07:08:42.275: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/13/24 07:08:42.275
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/13/24 07:08:52.286
  STEP: Performing a canary update @ 06/13/24 07:08:52.287
  Jun 13 07:08:52.307: INFO: Updating stateful set ss2
  Jun 13 07:08:52.333: INFO: Waiting for Pod statefulset-9822/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/13/24 07:09:02.333
  Jun 13 07:09:02.612: INFO: Found 2 stateful pods, waiting for 3
  Jun 13 07:09:12.580: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:09:12.580: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:09:12.580: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/13/24 07:09:12.594
  Jun 13 07:09:12.657: INFO: Updating stateful set ss2
  Jun 13 07:09:12.674: INFO: Waiting for Pod statefulset-9822/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 07:09:22.701: INFO: Updating stateful set ss2
  Jun 13 07:09:22.749: INFO: Waiting for StatefulSet statefulset-9822/ss2 to complete update
  Jun 13 07:09:22.749: INFO: Waiting for Pod statefulset-9822/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun 13 07:09:32.710: INFO: Deleting all statefulset in ns statefulset-9822
  Jun 13 07:09:32.715: INFO: Scaling statefulset ss2 to 0
  Jun 13 07:09:42.733: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 07:09:42.735: INFO: Deleting statefulset ss2
  Jun 13 07:09:42.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9822" for this suite. @ 06/13/24 07:09:42.77
â€¢ [90.867 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/13/24 07:09:42.78
  Jun 13 07:09:42.780: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 07:09:42.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:09:42.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:09:42.86
  STEP: set up a multi version CRD @ 06/13/24 07:09:42.87
  Jun 13 07:09:42.871: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: mark a version not serverd @ 06/13/24 07:09:48.074
  STEP: check the unserved version gets removed @ 06/13/24 07:09:48.279
  STEP: check the other version is not changed @ 06/13/24 07:09:50.841
  Jun 13 07:09:55.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9440" for this suite. @ 06/13/24 07:09:55.738
â€¢ [12.974 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/13/24 07:09:55.755
  Jun 13 07:09:55.755: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 07:09:55.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:09:55.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:09:55.873
  STEP: Create set of pods @ 06/13/24 07:09:55.885
  Jun 13 07:09:55.945: INFO: created test-pod-1
  Jun 13 07:09:55.965: INFO: created test-pod-2
  Jun 13 07:09:56.008: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/13/24 07:09:56.008
  STEP: waiting for all pods to be deleted @ 06/13/24 07:10:00.274
  Jun 13 07:10:00.294: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 13 07:10:01.349: INFO: Pod quantity 3 is different from expected quantity 0
  Jun 13 07:10:02.280: INFO: Pod quantity 2 is different from expected quantity 0
  Jun 13 07:10:03.281: INFO: Pod quantity 2 is different from expected quantity 0
  Jun 13 07:10:04.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7330" for this suite. @ 06/13/24 07:10:04.289
â€¢ [8.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/13/24 07:10:04.298
  Jun 13 07:10:04.298: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename disruption @ 06/13/24 07:10:04.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:10:04.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:10:04.524
  STEP: Creating a kubernetes client @ 06/13/24 07:10:04.547
  Jun 13 07:10:04.547: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename disruption-2 @ 06/13/24 07:10:04.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:10:04.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:10:04.671
  STEP: Waiting for the pdb to be processed @ 06/13/24 07:10:04.692
  STEP: Waiting for the pdb to be processed @ 06/13/24 07:10:06.719
  STEP: Waiting for the pdb to be processed @ 06/13/24 07:10:06.749
  STEP: listing a collection of PDBs across all namespaces @ 06/13/24 07:10:08.759
  STEP: listing a collection of PDBs in namespace disruption-3547 @ 06/13/24 07:10:08.765
  STEP: deleting a collection of PDBs @ 06/13/24 07:10:08.768
  STEP: Waiting for the PDB collection to be deleted @ 06/13/24 07:10:08.809
  Jun 13 07:10:08.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8825" for this suite. @ 06/13/24 07:10:08.837
  Jun 13 07:10:08.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3547" for this suite. @ 06/13/24 07:10:08.883
â€¢ [4.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/13/24 07:10:08.899
  Jun 13 07:10:08.899: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 07:10:08.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:10:09.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:10:09.019
  STEP: Performing setup for networking test in namespace pod-network-test-7013 @ 06/13/24 07:10:09.023
  STEP: creating a selector @ 06/13/24 07:10:09.023
  STEP: Creating the service pods in kubernetes @ 06/13/24 07:10:09.023
  Jun 13 07:10:09.023: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/13/24 07:10:31.342
  Jun 13 07:10:35.465: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 07:10:35.466: INFO: Going to poll 10.42.0.24 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 07:10:35.473: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.24 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7013 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:10:35.474: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:10:35.475: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:10:35.475: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7013/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.24+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 07:10:36.618: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 13 07:10:36.619: INFO: Going to poll 10.42.1.54 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 07:10:36.623: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.54 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7013 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:10:36.626: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:10:36.628: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:10:36.629: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7013/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.54+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 07:10:37.897: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 13 07:10:37.897: INFO: Going to poll 10.42.2.21 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 07:10:37.902: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.21 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7013 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:10:37.902: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:10:37.904: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:10:37.904: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7013/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.21+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 07:10:39.045: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 13 07:10:39.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7013" for this suite. @ 06/13/24 07:10:39.05
â€¢ [30.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/13/24 07:10:39.087
  Jun 13 07:10:39.087: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:10:39.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:10:39.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:10:39.181
  STEP: creating an Endpoint @ 06/13/24 07:10:39.194
  STEP: waiting for available Endpoint @ 06/13/24 07:10:39.212
  STEP: listing all Endpoints @ 06/13/24 07:10:39.229
  STEP: updating the Endpoint @ 06/13/24 07:10:39.269
  STEP: fetching the Endpoint @ 06/13/24 07:10:39.295
  STEP: patching the Endpoint @ 06/13/24 07:10:39.319
  STEP: fetching the Endpoint @ 06/13/24 07:10:39.367
  STEP: deleting the Endpoint by Collection @ 06/13/24 07:10:39.387
  STEP: waiting for Endpoint deletion @ 06/13/24 07:10:39.437
  STEP: fetching the Endpoint @ 06/13/24 07:10:39.44
  Jun 13 07:10:39.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3036" for this suite. @ 06/13/24 07:10:39.454
â€¢ [0.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/13/24 07:10:39.467
  Jun 13 07:10:39.467: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 07:10:39.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:10:39.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:10:39.553
  STEP: create the container @ 06/13/24 07:10:39.56
  W0613 07:10:39.587749      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/13/24 07:10:39.588
  STEP: get the container status @ 06/13/24 07:10:44.697
  STEP: the container should be terminated @ 06/13/24 07:10:44.754
  STEP: the termination message should be set @ 06/13/24 07:10:44.768
  Jun 13 07:10:44.768: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/13/24 07:10:44.768
  Jun 13 07:10:44.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2164" for this suite. @ 06/13/24 07:10:44.911
â€¢ [5.505 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/13/24 07:10:44.975
  Jun 13 07:10:44.975: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:10:44.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:10:45.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:10:45.137
  STEP: Setting up server cert @ 06/13/24 07:10:45.409
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:10:46.326
  STEP: Deploying the webhook pod @ 06/13/24 07:10:46.524
  STEP: Wait for the deployment to be ready @ 06/13/24 07:10:46.705
  Jun 13 07:10:46.795: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jun 13 07:10:48.814: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 10, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 07:10:50.838: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 10, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun 13 07:10:52.821: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 10, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 10, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/13/24 07:10:54.821
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:10:54.845
  Jun 13 07:10:55.847: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/13/24 07:10:55.855
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/13/24 07:10:55.908
  Jun 13 07:10:55.909: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:10:56.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9803" for this suite. @ 06/13/24 07:10:56.338
  STEP: Destroying namespace "webhook-markers-848" for this suite. @ 06/13/24 07:10:56.356
â€¢ [11.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/13/24 07:10:56.384
  Jun 13 07:10:56.384: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 07:10:56.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:10:56.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:10:56.557
  STEP: Creating a suspended cronjob @ 06/13/24 07:10:56.564
  STEP: Ensuring no jobs are scheduled @ 06/13/24 07:10:56.573
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/13/24 07:15:56.583
  STEP: Removing cronjob @ 06/13/24 07:15:56.589
  Jun 13 07:15:56.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3977" for this suite. @ 06/13/24 07:15:56.603
â€¢ [300.228 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/13/24 07:15:56.612
  Jun 13 07:15:56.612: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 07:15:56.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:15:56.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:15:56.707
  STEP: Creating a test headless service @ 06/13/24 07:15:56.719
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6499 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6499;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6499 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6499;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6499.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6499.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6499.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6499.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6499.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6499.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6499.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6499.svc;check="$$(dig +notcp +noall +answer +search 253.145.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.145.253_udp@PTR;check="$$(dig +tcp +noall +answer +search 253.145.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.145.253_tcp@PTR;sleep 1; done
   @ 06/13/24 07:15:56.781
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6499 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6499;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6499 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6499;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6499.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6499.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6499.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6499.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6499.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6499.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6499.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6499.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6499.svc;check="$$(dig +notcp +noall +answer +search 253.145.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.145.253_udp@PTR;check="$$(dig +tcp +noall +answer +search 253.145.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.145.253_tcp@PTR;sleep 1; done
   @ 06/13/24 07:15:56.781
  STEP: creating a pod to probe DNS @ 06/13/24 07:15:56.781
  STEP: submitting the pod to kubernetes @ 06/13/24 07:15:56.781
  STEP: retrieving the pod @ 06/13/24 07:16:33.041
  STEP: looking for the results for each expected name from probers @ 06/13/24 07:16:33.048
  Jun 13 07:16:33.053: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.057: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.075: INFO: Unable to read wheezy_udp@dns-test-service.dns-6499 from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.083: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6499 from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.092: INFO: Unable to read wheezy_udp@dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.098: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.103: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.113: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.186: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.213: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.221: INFO: Unable to read jessie_udp@dns-test-service.dns-6499 from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.226: INFO: Unable to read jessie_tcp@dns-test-service.dns-6499 from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.231: INFO: Unable to read jessie_udp@dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.247: INFO: Unable to read jessie_tcp@dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.263: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.267: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6499.svc from pod dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179: the server could not find the requested resource (get pods dns-test-de08e8bf-306b-4980-ae98-04c3717d1179)
  Jun 13 07:16:33.312: INFO: Lookups using dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6499 wheezy_tcp@dns-test-service.dns-6499 wheezy_udp@dns-test-service.dns-6499.svc wheezy_tcp@dns-test-service.dns-6499.svc wheezy_udp@_http._tcp.dns-test-service.dns-6499.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6499.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6499 jessie_tcp@dns-test-service.dns-6499 jessie_udp@dns-test-service.dns-6499.svc jessie_tcp@dns-test-service.dns-6499.svc jessie_udp@_http._tcp.dns-test-service.dns-6499.svc jessie_tcp@_http._tcp.dns-test-service.dns-6499.svc]

  Jun 13 07:16:33.353: INFO: Pod client logs for webserver: 
  Jun 13 07:16:33.362: INFO: Pod client logs for querier: 
  Jun 13 07:16:33.381: INFO: Pod client logs for jessie-querier: 
  Jun 13 07:16:38.434: INFO: DNS probes using dns-6499/dns-test-de08e8bf-306b-4980-ae98-04c3717d1179 succeeded

  STEP: deleting the pod @ 06/13/24 07:16:38.434
  STEP: deleting the test service @ 06/13/24 07:16:38.52
  STEP: deleting the test headless service @ 06/13/24 07:16:38.663
  Jun 13 07:16:38.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6499" for this suite. @ 06/13/24 07:16:38.729
â€¢ [42.170 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/13/24 07:16:38.783
  Jun 13 07:16:38.783: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 07:16:38.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:16:38.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:16:38.923
  Jun 13 07:16:39.027: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/13/24 07:16:39.086
  Jun 13 07:16:39.108: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:39.108: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/13/24 07:16:39.108
  Jun 13 07:16:39.299: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:39.299: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:40.215: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:40.215: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:41.215: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:41.216: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:42.223: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:42.223: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:43.225: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 13 07:16:43.225: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/13/24 07:16:43.244
  Jun 13 07:16:43.305: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:43.305: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/13/24 07:16:43.306
  Jun 13 07:16:43.444: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:43.444: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:44.423: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:44.424: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:45.420: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:45.421: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:46.419: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:46.419: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:47.413: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:47.413: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  Jun 13 07:16:48.411: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 13 07:16:48.411: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 07:16:48.427
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5669, will wait for the garbage collector to delete the pods @ 06/13/24 07:16:48.427
  Jun 13 07:16:48.510: INFO: Deleting DaemonSet.extensions daemon-set took: 29.143484ms
  Jun 13 07:16:48.611: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.353863ms
  Jun 13 07:16:51.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:16:51.936: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 07:16:51.939: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13531"},"items":null}

  Jun 13 07:16:51.942: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13531"},"items":null}

  Jun 13 07:16:52.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5669" for this suite. @ 06/13/24 07:16:52.028
â€¢ [13.258 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/13/24 07:16:52.042
  Jun 13 07:16:52.042: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 07:16:52.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:16:52.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:16:52.309
  STEP: creating a ReplicationController @ 06/13/24 07:16:52.323
  STEP: waiting for RC to be added @ 06/13/24 07:16:52.355
  STEP: waiting for available Replicas @ 06/13/24 07:16:52.358
  STEP: patching ReplicationController @ 06/13/24 07:16:59.062
  STEP: waiting for RC to be modified @ 06/13/24 07:16:59.082
  STEP: patching ReplicationController status @ 06/13/24 07:16:59.083
  STEP: waiting for RC to be modified @ 06/13/24 07:16:59.094
  STEP: waiting for available Replicas @ 06/13/24 07:16:59.118
  STEP: fetching ReplicationController status @ 06/13/24 07:16:59.118
  STEP: patching ReplicationController scale @ 06/13/24 07:16:59.122
  STEP: waiting for RC to be modified @ 06/13/24 07:16:59.129
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/13/24 07:16:59.129
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/13/24 07:17:05.717
  STEP: updating ReplicationController status @ 06/13/24 07:17:05.722
  STEP: waiting for RC to be modified @ 06/13/24 07:17:05.774
  STEP: listing all ReplicationControllers @ 06/13/24 07:17:05.782
  STEP: checking that ReplicationController has expected values @ 06/13/24 07:17:05.796
  STEP: deleting ReplicationControllers by collection @ 06/13/24 07:17:05.801
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/13/24 07:17:05.838
  Jun 13 07:17:06.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 07:17:06.124098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8376" for this suite. @ 06/13/24 07:17:06.142
â€¢ [14.123 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/13/24 07:17:06.165
  Jun 13 07:17:06.165: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:17:06.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:17:06.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:17:06.369
  STEP: Creating configMap with name cm-test-opt-del-b80d5594-5b21-4bfc-a73f-3d12be20b705 @ 06/13/24 07:17:06.417
  STEP: Creating configMap with name cm-test-opt-upd-c6abfcee-55d0-40a5-9dc6-e3c59b69df14 @ 06/13/24 07:17:06.439
  STEP: Creating the pod @ 06/13/24 07:17:06.462
  E0613 07:17:07.125164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:08.125779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:09.125891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:10.129577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-b80d5594-5b21-4bfc-a73f-3d12be20b705 @ 06/13/24 07:17:10.687
  STEP: Updating configmap cm-test-opt-upd-c6abfcee-55d0-40a5-9dc6-e3c59b69df14 @ 06/13/24 07:17:10.699
  STEP: Creating configMap with name cm-test-opt-create-875b80c0-35fc-4440-914b-1386050b1e72 @ 06/13/24 07:17:10.713
  STEP: waiting to observe update in volume @ 06/13/24 07:17:10.723
  E0613 07:17:11.129751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:12.130095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:13.130237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:14.131675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:14.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3679" for this suite. @ 06/13/24 07:17:14.863
â€¢ [8.706 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/13/24 07:17:14.871
  Jun 13 07:17:14.871: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename proxy @ 06/13/24 07:17:14.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:17:15.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:17:15.093
  Jun 13 07:17:15.107: INFO: Creating pod...
  E0613 07:17:15.133436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:16.137699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:17.139410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:18.139037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:19.140353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:19.215: INFO: Creating service...
  Jun 13 07:17:19.255: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/pods/agnhost/proxy/some/path/with/DELETE
  E0613 07:17:20.141129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:21.141519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:22.142493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:23.143130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:24.144149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:25.144580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:26.144762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:26.427: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 07:17:26.428: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/pods/agnhost/proxy/some/path/with/GET
  Jun 13 07:17:26.434: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 13 07:17:26.434: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/pods/agnhost/proxy/some/path/with/HEAD
  Jun 13 07:17:26.444: INFO: http.Client request:HEAD | StatusCode:200
  Jun 13 07:17:26.444: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun 13 07:17:26.452: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 07:17:26.452: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/pods/agnhost/proxy/some/path/with/PATCH
  Jun 13 07:17:26.467: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 07:17:26.467: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/pods/agnhost/proxy/some/path/with/POST
  Jun 13 07:17:26.479: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 07:17:26.479: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/pods/agnhost/proxy/some/path/with/PUT
  Jun 13 07:17:26.496: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 07:17:26.496: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/services/test-service/proxy/some/path/with/DELETE
  Jun 13 07:17:26.511: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 07:17:26.512: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/services/test-service/proxy/some/path/with/GET
  Jun 13 07:17:26.528: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun 13 07:17:26.529: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/services/test-service/proxy/some/path/with/HEAD
  Jun 13 07:17:26.544: INFO: http.Client request:HEAD | StatusCode:200
  Jun 13 07:17:26.544: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/services/test-service/proxy/some/path/with/OPTIONS
  Jun 13 07:17:26.555: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 07:17:26.555: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/services/test-service/proxy/some/path/with/PATCH
  Jun 13 07:17:26.584: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 07:17:26.584: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/services/test-service/proxy/some/path/with/POST
  Jun 13 07:17:26.601: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 07:17:26.601: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1796/services/test-service/proxy/some/path/with/PUT
  Jun 13 07:17:26.635: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 07:17:26.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1796" for this suite. @ 06/13/24 07:17:26.651
â€¢ [11.803 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/13/24 07:17:26.675
  Jun 13 07:17:26.675: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename proxy @ 06/13/24 07:17:26.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:17:26.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:17:26.817
  STEP: starting an echo server on multiple ports @ 06/13/24 07:17:26.917
  STEP: creating replication controller proxy-service-cs5fc in namespace proxy-112 @ 06/13/24 07:17:26.917
  I0613 07:17:26.978244      18 runners.go:197] Created replication controller with name: proxy-service-cs5fc, namespace: proxy-112, replica count: 1
  E0613 07:17:27.146490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:17:28.029497      18 runners.go:197] proxy-service-cs5fc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 07:17:28.146221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:17:29.031669      18 runners.go:197] proxy-service-cs5fc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 07:17:29.146611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:17:30.032112      18 runners.go:197] proxy-service-cs5fc Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0613 07:17:30.146980      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:17:31.033271      18 runners.go:197] proxy-service-cs5fc Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0613 07:17:31.155035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:17:32.036457      18 runners.go:197] proxy-service-cs5fc Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0613 07:17:32.149555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:17:33.059138      18 runners.go:197] proxy-service-cs5fc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 07:17:33.063: INFO: setup took 6.199388889s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/13/24 07:17:33.064
  Jun 13 07:17:33.091: INFO: (0) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 27.281087ms)
  Jun 13 07:17:33.093: INFO: (0) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 29.022042ms)
  Jun 13 07:17:33.104: INFO: (0) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 39.193488ms)
  Jun 13 07:17:33.109: INFO: (0) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 44.802295ms)
  Jun 13 07:17:33.110: INFO: (0) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 45.334282ms)
  Jun 13 07:17:33.114: INFO: (0) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 49.129869ms)
  Jun 13 07:17:33.114: INFO: (0) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 49.437721ms)
  Jun 13 07:17:33.117: INFO: (0) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 51.802879ms)
  Jun 13 07:17:33.117: INFO: (0) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 52.372022ms)
  Jun 13 07:17:33.117: INFO: (0) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 52.692373ms)
  Jun 13 07:17:33.118: INFO: (0) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 53.150902ms)
  Jun 13 07:17:33.118: INFO: (0) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 54.140928ms)
  Jun 13 07:17:33.118: INFO: (0) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 53.262171ms)
  Jun 13 07:17:33.124: INFO: (0) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 59.664353ms)
  Jun 13 07:17:33.124: INFO: (0) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 59.550951ms)
  Jun 13 07:17:33.125: INFO: (0) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 60.051209ms)
  E0613 07:17:33.150303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:33.161: INFO: (1) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 35.80603ms)
  Jun 13 07:17:33.163: INFO: (1) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 37.901222ms)
  Jun 13 07:17:33.166: INFO: (1) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 41.050806ms)
  Jun 13 07:17:33.166: INFO: (1) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 40.292033ms)
  Jun 13 07:17:33.166: INFO: (1) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 40.535949ms)
  Jun 13 07:17:33.166: INFO: (1) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 40.645409ms)
  Jun 13 07:17:33.166: INFO: (1) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 41.235163ms)
  Jun 13 07:17:33.166: INFO: (1) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 41.319047ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 41.911656ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 41.843189ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 41.770462ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 41.690289ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 41.760304ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 42.414256ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 41.982471ms)
  Jun 13 07:17:33.167: INFO: (1) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 42.081472ms)
  Jun 13 07:17:33.197: INFO: (2) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 28.244474ms)
  Jun 13 07:17:33.197: INFO: (2) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 27.373746ms)
  Jun 13 07:17:33.197: INFO: (2) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 27.59792ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 30.489398ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 30.803784ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 31.529358ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 31.470665ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 31.224742ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 31.172589ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 32.001938ms)
  Jun 13 07:17:33.200: INFO: (2) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 32.046896ms)
  Jun 13 07:17:33.201: INFO: (2) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 32.025576ms)
  Jun 13 07:17:33.203: INFO: (2) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 34.054711ms)
  Jun 13 07:17:33.204: INFO: (2) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 34.950792ms)
  Jun 13 07:17:33.205: INFO: (2) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 35.050867ms)
  Jun 13 07:17:33.205: INFO: (2) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 35.477245ms)
  Jun 13 07:17:33.234: INFO: (3) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 16.082041ms)
  Jun 13 07:17:33.274: INFO: (3) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 52.916848ms)
  Jun 13 07:17:33.275: INFO: (3) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 53.082646ms)
  Jun 13 07:17:33.282: INFO: (3) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 60.509191ms)
  Jun 13 07:17:33.285: INFO: (3) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 66.703133ms)
  Jun 13 07:17:33.285: INFO: (3) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 63.349369ms)
  Jun 13 07:17:33.292: INFO: (3) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 70.358623ms)
  Jun 13 07:17:33.292: INFO: (3) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 70.504595ms)
  Jun 13 07:17:33.293: INFO: (3) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 70.742815ms)
  Jun 13 07:17:33.293: INFO: (3) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 70.768819ms)
  Jun 13 07:17:33.299: INFO: (3) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 77.564707ms)
  Jun 13 07:17:33.309: INFO: (3) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 87.190731ms)
  Jun 13 07:17:33.311: INFO: (3) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 89.485248ms)
  Jun 13 07:17:33.311: INFO: (3) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 89.369149ms)
  Jun 13 07:17:33.311: INFO: (3) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 89.15341ms)
  Jun 13 07:17:33.311: INFO: (3) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 89.349736ms)
  Jun 13 07:17:33.322: INFO: (4) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 9.91319ms)
  Jun 13 07:17:33.349: INFO: (4) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 37.315578ms)
  Jun 13 07:17:33.372: INFO: (4) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 56.464331ms)
  Jun 13 07:17:33.393: INFO: (4) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 78.356219ms)
  Jun 13 07:17:33.393: INFO: (4) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 77.86755ms)
  Jun 13 07:17:33.393: INFO: (4) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 78.160157ms)
  Jun 13 07:17:33.393: INFO: (4) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 77.943465ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 80.255372ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 78.277953ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 78.152559ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 78.368363ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 81.627887ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 81.705549ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 78.460014ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 78.270429ms)
  Jun 13 07:17:33.394: INFO: (4) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 78.153934ms)
  Jun 13 07:17:33.409: INFO: (5) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 15.33551ms)
  Jun 13 07:17:33.409: INFO: (5) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 15.563173ms)
  Jun 13 07:17:33.410: INFO: (5) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 15.597442ms)
  Jun 13 07:17:33.437: INFO: (5) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 43.038506ms)
  Jun 13 07:17:33.439: INFO: (5) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 44.911516ms)
  Jun 13 07:17:33.440: INFO: (5) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 45.5012ms)
  Jun 13 07:17:33.440: INFO: (5) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 45.508678ms)
  Jun 13 07:17:33.440: INFO: (5) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 45.243996ms)
  Jun 13 07:17:33.440: INFO: (5) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 46.102604ms)
  Jun 13 07:17:33.440: INFO: (5) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 45.500543ms)
  Jun 13 07:17:33.455: INFO: (5) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 60.259594ms)
  Jun 13 07:17:33.455: INFO: (5) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 60.588468ms)
  Jun 13 07:17:33.455: INFO: (5) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 60.82388ms)
  Jun 13 07:17:33.455: INFO: (5) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 60.943312ms)
  Jun 13 07:17:33.455: INFO: (5) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 60.585017ms)
  Jun 13 07:17:33.466: INFO: (5) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 71.500807ms)
  Jun 13 07:17:33.504: INFO: (6) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 36.618366ms)
  Jun 13 07:17:33.504: INFO: (6) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 37.377146ms)
  Jun 13 07:17:33.505: INFO: (6) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 37.101196ms)
  Jun 13 07:17:33.505: INFO: (6) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 36.708868ms)
  Jun 13 07:17:33.505: INFO: (6) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 38.181183ms)
  Jun 13 07:17:33.505: INFO: (6) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 37.938996ms)
  Jun 13 07:17:33.505: INFO: (6) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 38.494822ms)
  Jun 13 07:17:33.505: INFO: (6) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 37.530448ms)
  Jun 13 07:17:33.505: INFO: (6) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 38.92295ms)
  Jun 13 07:17:33.507: INFO: (6) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 40.151648ms)
  Jun 13 07:17:33.526: INFO: (6) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 58.209861ms)
  Jun 13 07:17:33.526: INFO: (6) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 58.40857ms)
  Jun 13 07:17:33.530: INFO: (6) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 62.083323ms)
  Jun 13 07:17:33.530: INFO: (6) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 62.968699ms)
  Jun 13 07:17:33.530: INFO: (6) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 61.978879ms)
  Jun 13 07:17:33.530: INFO: (6) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 63.15818ms)
  Jun 13 07:17:33.536: INFO: (7) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 5.210613ms)
  Jun 13 07:17:33.568: INFO: (7) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 36.465759ms)
  Jun 13 07:17:33.569: INFO: (7) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 37.697875ms)
  Jun 13 07:17:33.573: INFO: (7) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 41.946299ms)
  Jun 13 07:17:33.573: INFO: (7) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 41.980384ms)
  Jun 13 07:17:33.573: INFO: (7) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 41.849972ms)
  Jun 13 07:17:33.573: INFO: (7) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 41.627935ms)
  Jun 13 07:17:33.573: INFO: (7) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 41.822345ms)
  Jun 13 07:17:33.573: INFO: (7) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 42.038806ms)
  Jun 13 07:17:33.580: INFO: (7) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 48.763704ms)
  Jun 13 07:17:33.585: INFO: (7) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 53.045964ms)
  Jun 13 07:17:33.586: INFO: (7) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 55.806011ms)
  Jun 13 07:17:33.589: INFO: (7) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 59.024458ms)
  Jun 13 07:17:33.590: INFO: (7) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 58.660899ms)
  Jun 13 07:17:33.590: INFO: (7) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 58.657497ms)
  Jun 13 07:17:33.590: INFO: (7) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 59.105787ms)
  Jun 13 07:17:33.635: INFO: (8) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 19.50369ms)
  Jun 13 07:17:33.635: INFO: (8) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 19.428351ms)
  Jun 13 07:17:33.635: INFO: (8) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 19.914292ms)
  Jun 13 07:17:33.645: INFO: (8) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 29.238179ms)
  Jun 13 07:17:33.656: INFO: (8) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 39.455135ms)
  Jun 13 07:17:33.659: INFO: (8) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 42.640258ms)
  Jun 13 07:17:33.659: INFO: (8) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 42.858939ms)
  Jun 13 07:17:33.659: INFO: (8) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 42.596783ms)
  Jun 13 07:17:33.659: INFO: (8) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 42.68197ms)
  Jun 13 07:17:33.659: INFO: (8) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 42.41454ms)
  Jun 13 07:17:33.660: INFO: (8) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 43.754795ms)
  Jun 13 07:17:33.660: INFO: (8) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 43.889553ms)
  Jun 13 07:17:33.660: INFO: (8) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 43.644692ms)
  Jun 13 07:17:33.662: INFO: (8) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 44.894112ms)
  Jun 13 07:17:33.662: INFO: (8) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 45.266437ms)
  Jun 13 07:17:33.662: INFO: (8) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 44.682897ms)
  Jun 13 07:17:33.670: INFO: (9) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 7.960936ms)
  Jun 13 07:17:33.677: INFO: (9) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 15.344326ms)
  Jun 13 07:17:33.689: INFO: (9) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 27.413415ms)
  Jun 13 07:17:33.694: INFO: (9) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 32.198901ms)
  Jun 13 07:17:33.694: INFO: (9) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 32.273021ms)
  Jun 13 07:17:33.698: INFO: (9) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 36.161958ms)
  Jun 13 07:17:33.700: INFO: (9) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 38.091994ms)
  Jun 13 07:17:33.700: INFO: (9) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 38.249152ms)
  Jun 13 07:17:33.703: INFO: (9) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 41.005585ms)
  Jun 13 07:17:33.704: INFO: (9) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 41.746329ms)
  Jun 13 07:17:33.704: INFO: (9) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 41.981048ms)
  Jun 13 07:17:33.704: INFO: (9) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 41.966685ms)
  Jun 13 07:17:33.705: INFO: (9) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 42.336368ms)
  Jun 13 07:17:33.710: INFO: (9) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 47.340763ms)
  Jun 13 07:17:33.710: INFO: (9) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 47.466592ms)
  Jun 13 07:17:33.710: INFO: (9) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 48.017575ms)
  Jun 13 07:17:33.733: INFO: (10) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 22.199532ms)
  Jun 13 07:17:33.733: INFO: (10) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 23.267315ms)
  Jun 13 07:17:33.737: INFO: (10) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 26.268683ms)
  Jun 13 07:17:33.737: INFO: (10) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 26.027517ms)
  Jun 13 07:17:33.737: INFO: (10) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 25.64167ms)
  Jun 13 07:17:33.740: INFO: (10) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 28.546751ms)
  Jun 13 07:17:33.740: INFO: (10) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 29.278704ms)
  Jun 13 07:17:33.740: INFO: (10) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 28.893771ms)
  Jun 13 07:17:33.742: INFO: (10) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 31.223046ms)
  Jun 13 07:17:33.745: INFO: (10) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 34.415771ms)
  Jun 13 07:17:33.749: INFO: (10) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 37.75813ms)
  Jun 13 07:17:33.752: INFO: (10) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 41.135553ms)
  Jun 13 07:17:33.752: INFO: (10) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 41.027081ms)
  Jun 13 07:17:33.752: INFO: (10) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 41.504167ms)
  Jun 13 07:17:33.752: INFO: (10) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 40.975418ms)
  Jun 13 07:17:33.761: INFO: (10) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 49.672216ms)
  Jun 13 07:17:33.794: INFO: (11) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 31.912933ms)
  Jun 13 07:17:33.795: INFO: (11) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 32.706507ms)
  Jun 13 07:17:33.796: INFO: (11) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 33.720749ms)
  Jun 13 07:17:33.796: INFO: (11) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 34.068784ms)
  Jun 13 07:17:33.797: INFO: (11) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 34.962825ms)
  Jun 13 07:17:33.797: INFO: (11) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 34.600874ms)
  Jun 13 07:17:33.797: INFO: (11) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 35.083483ms)
  Jun 13 07:17:33.798: INFO: (11) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 35.434708ms)
  Jun 13 07:17:33.804: INFO: (11) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 41.626308ms)
  Jun 13 07:17:33.830: INFO: (11) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 68.005724ms)
  Jun 13 07:17:33.831: INFO: (11) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 69.257808ms)
  Jun 13 07:17:33.831: INFO: (11) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 69.672646ms)
  Jun 13 07:17:33.835: INFO: (11) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 72.470308ms)
  Jun 13 07:17:33.835: INFO: (11) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 73.042241ms)
  Jun 13 07:17:33.840: INFO: (11) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 77.599877ms)
  Jun 13 07:17:33.840: INFO: (11) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 78.086223ms)
  Jun 13 07:17:33.912: INFO: (12) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 70.740735ms)
  Jun 13 07:17:33.913: INFO: (12) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 70.700312ms)
  Jun 13 07:17:33.913: INFO: (12) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 71.329744ms)
  Jun 13 07:17:33.905: INFO: (12) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 64.928049ms)
  Jun 13 07:17:33.913: INFO: (12) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 71.914313ms)
  Jun 13 07:17:33.918: INFO: (12) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 76.31123ms)
  Jun 13 07:17:33.927: INFO: (12) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 86.105984ms)
  Jun 13 07:17:33.927: INFO: (12) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 85.545325ms)
  Jun 13 07:17:33.927: INFO: (12) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 85.896943ms)
  Jun 13 07:17:33.931: INFO: (12) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 89.577052ms)
  Jun 13 07:17:33.931: INFO: (12) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 89.982835ms)
  Jun 13 07:17:33.931: INFO: (12) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 90.752585ms)
  Jun 13 07:17:33.931: INFO: (12) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 90.536874ms)
  Jun 13 07:17:33.932: INFO: (12) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 90.373346ms)
  Jun 13 07:17:33.935: INFO: (12) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 93.801961ms)
  Jun 13 07:17:33.935: INFO: (12) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 93.938111ms)
  Jun 13 07:17:33.994: INFO: (13) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 58.147578ms)
  Jun 13 07:17:33.994: INFO: (13) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 57.477872ms)
  Jun 13 07:17:34.004: INFO: (13) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 68.307863ms)
  Jun 13 07:17:34.004: INFO: (13) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 68.247218ms)
  Jun 13 07:17:34.004: INFO: (13) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 67.951061ms)
  Jun 13 07:17:34.006: INFO: (13) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 70.347886ms)
  Jun 13 07:17:34.006: INFO: (13) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 70.879884ms)
  Jun 13 07:17:34.007: INFO: (13) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 70.251232ms)
  Jun 13 07:17:34.007: INFO: (13) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 69.981308ms)
  Jun 13 07:17:34.007: INFO: (13) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 72.11659ms)
  Jun 13 07:17:34.008: INFO: (13) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 70.771588ms)
  Jun 13 07:17:34.008: INFO: (13) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 72.017353ms)
  Jun 13 07:17:34.009: INFO: (13) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 72.603262ms)
  Jun 13 07:17:34.009: INFO: (13) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 73.118013ms)
  Jun 13 07:17:34.009: INFO: (13) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 72.280559ms)
  Jun 13 07:17:34.009: INFO: (13) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 72.388355ms)
  Jun 13 07:17:34.050: INFO: (14) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 37.824378ms)
  Jun 13 07:17:34.060: INFO: (14) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 42.875734ms)
  Jun 13 07:17:34.060: INFO: (14) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 45.497492ms)
  Jun 13 07:17:34.060: INFO: (14) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 47.960972ms)
  Jun 13 07:17:34.061: INFO: (14) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 48.396964ms)
  Jun 13 07:17:34.062: INFO: (14) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 49.587191ms)
  Jun 13 07:17:34.062: INFO: (14) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 50.162467ms)
  Jun 13 07:17:34.068: INFO: (14) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 55.048933ms)
  Jun 13 07:17:34.068: INFO: (14) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 51.353964ms)
  Jun 13 07:17:34.068: INFO: (14) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 51.190499ms)
  Jun 13 07:17:34.068: INFO: (14) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 51.44799ms)
  Jun 13 07:17:34.069: INFO: (14) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 51.77411ms)
  Jun 13 07:17:34.069: INFO: (14) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 56.726693ms)
  Jun 13 07:17:34.069: INFO: (14) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 57.008826ms)
  Jun 13 07:17:34.073: INFO: (14) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 56.031903ms)
  Jun 13 07:17:34.074: INFO: (14) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 56.432746ms)
  Jun 13 07:17:34.115: INFO: (15) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 41.839638ms)
  E0613 07:17:34.152201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:34.152: INFO: (15) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 78.373963ms)
  Jun 13 07:17:34.152: INFO: (15) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 78.400721ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 78.639206ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 78.469062ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 78.748086ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 78.550855ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 78.837758ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 78.80433ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 79.200157ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 79.172712ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 79.134568ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 78.636937ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 79.091621ms)
  Jun 13 07:17:34.153: INFO: (15) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 78.726891ms)
  Jun 13 07:17:34.159: INFO: (15) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 84.090271ms)
  Jun 13 07:17:34.193: INFO: (16) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 33.55808ms)
  Jun 13 07:17:34.193: INFO: (16) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 34.011726ms)
  Jun 13 07:17:34.193: INFO: (16) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 34.014454ms)
  Jun 13 07:17:34.193: INFO: (16) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 34.338316ms)
  Jun 13 07:17:34.194: INFO: (16) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 34.27614ms)
  Jun 13 07:17:34.194: INFO: (16) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 34.471053ms)
  Jun 13 07:17:34.194: INFO: (16) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 34.694869ms)
  Jun 13 07:17:34.201: INFO: (16) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 41.989187ms)
  Jun 13 07:17:34.210: INFO: (16) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 51.035613ms)
  Jun 13 07:17:34.211: INFO: (16) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 51.314328ms)
  Jun 13 07:17:34.211: INFO: (16) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 51.469515ms)
  Jun 13 07:17:34.211: INFO: (16) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 51.298112ms)
  Jun 13 07:17:34.211: INFO: (16) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 51.368626ms)
  Jun 13 07:17:34.211: INFO: (16) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 51.485157ms)
  Jun 13 07:17:34.211: INFO: (16) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 51.720692ms)
  Jun 13 07:17:34.211: INFO: (16) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 52.008444ms)
  Jun 13 07:17:34.237: INFO: (17) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 25.131933ms)
  Jun 13 07:17:34.237: INFO: (17) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 25.315995ms)
  Jun 13 07:17:34.237: INFO: (17) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 25.287653ms)
  Jun 13 07:17:34.251: INFO: (17) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 38.976919ms)
  Jun 13 07:17:34.252: INFO: (17) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 35.02744ms)
  Jun 13 07:17:34.252: INFO: (17) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 35.110687ms)
  Jun 13 07:17:34.252: INFO: (17) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 40.04752ms)
  Jun 13 07:17:34.252: INFO: (17) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 35.40842ms)
  Jun 13 07:17:34.253: INFO: (17) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 35.634483ms)
  Jun 13 07:17:34.253: INFO: (17) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 35.86392ms)
  Jun 13 07:17:34.270: INFO: (17) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 52.446653ms)
  Jun 13 07:17:34.270: INFO: (17) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 53.040031ms)
  Jun 13 07:17:34.270: INFO: (17) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 53.132157ms)
  Jun 13 07:17:34.273: INFO: (17) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 55.706102ms)
  Jun 13 07:17:34.274: INFO: (17) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 56.398888ms)
  Jun 13 07:17:34.274: INFO: (17) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 61.965558ms)
  Jun 13 07:17:34.309: INFO: (18) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 34.259515ms)
  Jun 13 07:17:34.311: INFO: (18) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 35.78084ms)
  Jun 13 07:17:34.311: INFO: (18) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 36.412592ms)
  Jun 13 07:17:34.313: INFO: (18) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 37.652412ms)
  Jun 13 07:17:34.313: INFO: (18) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 38.561953ms)
  Jun 13 07:17:34.313: INFO: (18) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 37.928627ms)
  Jun 13 07:17:34.315: INFO: (18) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 40.6972ms)
  Jun 13 07:17:34.316: INFO: (18) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 40.459318ms)
  Jun 13 07:17:34.316: INFO: (18) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 41.436071ms)
  Jun 13 07:17:34.316: INFO: (18) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 41.104023ms)
  Jun 13 07:17:34.316: INFO: (18) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 41.583683ms)
  Jun 13 07:17:34.316: INFO: (18) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 41.896432ms)
  Jun 13 07:17:34.323: INFO: (18) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 47.709765ms)
  Jun 13 07:17:34.343: INFO: (18) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 67.940145ms)
  Jun 13 07:17:34.346: INFO: (18) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 70.530327ms)
  Jun 13 07:17:34.346: INFO: (18) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 70.838293ms)
  Jun 13 07:17:34.367: INFO: (19) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 21.208582ms)
  Jun 13 07:17:34.368: INFO: (19) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 13.834087ms)
  Jun 13 07:17:34.375: INFO: (19) /api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/http:proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">t... (200; 21.160556ms)
  Jun 13 07:17:34.376: INFO: (19) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:162/proxy/: bar (200; 29.853489ms)
  Jun 13 07:17:34.376: INFO: (19) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:460/proxy/: tls baz (200; 22.023681ms)
  Jun 13 07:17:34.385: INFO: (19) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:160/proxy/: foo (200; 30.926542ms)
  Jun 13 07:17:34.385: INFO: (19) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd/proxy/rewriteme">test</a> (200; 31.458065ms)
  Jun 13 07:17:34.385: INFO: (19) /api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/proxy-service-cs5fc-2wmcd:1080/proxy/rewriteme">test</... (200; 31.532837ms)
  Jun 13 07:17:34.387: INFO: (19) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/: <a href="/api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:443/proxy/tlsrewriteme... (200; 33.155087ms)
  Jun 13 07:17:34.390: INFO: (19) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname2/proxy/: bar (200; 36.056604ms)
  Jun 13 07:17:34.390: INFO: (19) /api/v1/namespaces/proxy-112/pods/https:proxy-service-cs5fc-2wmcd:462/proxy/: tls qux (200; 36.619408ms)
  Jun 13 07:17:34.391: INFO: (19) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname1/proxy/: foo (200; 37.080236ms)
  Jun 13 07:17:34.391: INFO: (19) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname2/proxy/: tls qux (200; 37.425633ms)
  Jun 13 07:17:34.392: INFO: (19) /api/v1/namespaces/proxy-112/services/proxy-service-cs5fc:portname1/proxy/: foo (200; 37.59876ms)
  Jun 13 07:17:34.392: INFO: (19) /api/v1/namespaces/proxy-112/services/http:proxy-service-cs5fc:portname2/proxy/: bar (200; 37.669019ms)
  Jun 13 07:17:34.392: INFO: (19) /api/v1/namespaces/proxy-112/services/https:proxy-service-cs5fc:tlsportname1/proxy/: tls baz (200; 38.098559ms)
  STEP: deleting ReplicationController proxy-service-cs5fc in namespace proxy-112, will wait for the garbage collector to delete the pods @ 06/13/24 07:17:34.392
  Jun 13 07:17:34.456: INFO: Deleting ReplicationController proxy-service-cs5fc took: 9.558492ms
  Jun 13 07:17:34.557: INFO: Terminating ReplicationController proxy-service-cs5fc pods took: 100.528706ms
  E0613 07:17:35.152673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:35.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-112" for this suite. @ 06/13/24 07:17:35.964
â€¢ [9.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/13/24 07:17:35.979
  Jun 13 07:17:35.979: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:17:35.98
  E0613 07:17:36.157011      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:17:36.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:17:36.205
  STEP: Creating secret with name secret-test-cd44349c-12cb-4ed4-a9d0-54b001d64fbd @ 06/13/24 07:17:36.229
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:17:36.249
  E0613 07:17:37.157330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:38.157527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:39.157970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:40.158722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:17:40.42
  Jun 13 07:17:40.434: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-c932f913-e52b-4890-a49e-d2f73826f307 container secret-env-test: <nil>
  STEP: delete the pod @ 06/13/24 07:17:40.451
  Jun 13 07:17:40.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9269" for this suite. @ 06/13/24 07:17:40.512
â€¢ [4.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/13/24 07:17:40.522
  Jun 13 07:17:40.522: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:17:40.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:17:40.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:17:40.622
  STEP: Setting up server cert @ 06/13/24 07:17:40.926
  E0613 07:17:41.161151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:17:41.451
  STEP: Deploying the webhook pod @ 06/13/24 07:17:41.497
  STEP: Wait for the deployment to be ready @ 06/13/24 07:17:41.566
  Jun 13 07:17:41.587: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0613 07:17:42.161993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:43.162929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:43.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:17:44.163704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:45.163796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:45.613: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 17, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:17:46.164227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:47.164693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 07:17:47.614
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:17:47.626
  E0613 07:17:48.165676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:48.628: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 07:17:48.645: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 07:17:49.165611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/13/24 07:17:49.192
  STEP: Creating a custom resource that should be denied by the webhook @ 06/13/24 07:17:49.276
  E0613 07:17:50.166292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:51.166610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/13/24 07:17:51.399
  STEP: Updating the custom resource with disallowed data should be denied @ 06/13/24 07:17:51.432
  STEP: Deleting the custom resource should be denied @ 06/13/24 07:17:51.446
  STEP: Remove the offending key and value from the custom resource data @ 06/13/24 07:17:51.498
  STEP: Deleting the updated custom resource should be successful @ 06/13/24 07:17:51.561
  E0613 07:17:52.167226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:52.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6594" for this suite. @ 06/13/24 07:17:52.647
  STEP: Destroying namespace "webhook-markers-693" for this suite. @ 06/13/24 07:17:52.681
â€¢ [12.183 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/13/24 07:17:52.706
  Jun 13 07:17:52.706: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 07:17:52.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:17:52.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:17:52.818
  E0613 07:17:53.167672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:54.169515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:55.170319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:56.173137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:17:57.132: INFO: Deleting pod "var-expansion-f356320e-c4ab-4906-93ce-36f820a27a6a" in namespace "var-expansion-2794"
  Jun 13 07:17:57.147: INFO: Wait up to 5m0s for pod "var-expansion-f356320e-c4ab-4906-93ce-36f820a27a6a" to be fully deleted
  E0613 07:17:57.173785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:58.179946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:17:59.180046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:00.182016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:01.185342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:18:01.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2794" for this suite. @ 06/13/24 07:18:01.226
â€¢ [8.565 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/13/24 07:18:01.294
  Jun 13 07:18:01.307: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 07:18:01.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:18:01.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:18:01.575
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/13/24 07:18:01.622
  Jun 13 07:18:01.747: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0613 07:18:02.186496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:03.187088      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:04.187759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:05.187943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:06.188769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:18:06.775: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 07:18:06.775
  STEP: getting scale subresource @ 06/13/24 07:18:06.775
  STEP: updating a scale subresource @ 06/13/24 07:18:06.813
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/13/24 07:18:06.877
  STEP: Patch a scale subresource @ 06/13/24 07:18:06.893
  Jun 13 07:18:07.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 07:18:07.190532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-353" for this suite. @ 06/13/24 07:18:07.194
â€¢ [6.054 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/13/24 07:18:07.349
  Jun 13 07:18:07.349: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 07:18:07.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:18:07.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:18:07.692
  Jun 13 07:18:07.713: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 07:18:07.783: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 07:18:07.862: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-204 before test
  Jun 13 07:18:07.995: INFO: fleet-agent-0 from cattle-fleet-system started at 2024-06-13 06:20:09 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container fleet-agent ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: 	Container fleet-agent-clusterstatus ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: cattle-cluster-agent-744549dbb4-28hx8 from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: cattle-cluster-agent-744549dbb4-xtk7x from cattle-system started at 2024-06-13 06:21:03 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: cattle-node-agent-kjs2b from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container agent ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: helm-operation-mm2l6 from cattle-system started at 2024-06-13 06:20:14 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container helm ready: false, restart count 0
  Jun 13 07:18:07.995: INFO: 	Container proxy ready: false, restart count 0
  Jun 13 07:18:07.995: INFO: kube-api-auth-wwvxs from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container kube-api-auth ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: rancher-webhook-66ff948964-5r6sf from cattle-system started at 2024-06-13 06:20:57 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container rancher-webhook ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: calico-kube-controllers-8485458bd8-xmp2w from kube-system started at 2024-06-13 06:18:18 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: canal-nmgr7 from kube-system started at 2024-06-13 06:18:18 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: coredns-7b7785bd9-knk5k from kube-system started at 2024-06-13 06:18:29 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: metrics-server-657c74b5d8-44q8w from kube-system started at 2024-06-13 06:18:43 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: rke-coredns-addon-deploy-job-zk2n9 from kube-system started at 2024-06-13 06:27:54 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 07:18:07.995: INFO: rke-metrics-addon-deploy-job-522gf from kube-system started at 2024-06-13 06:18:41 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 07:18:07.995: INFO: rke-network-plugin-deploy-job-nzfjk from kube-system started at 2024-06-13 06:18:15 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 07:18:07.995: INFO: test-rs-vwj2f from replicaset-353 started at 2024-06-13 07:18:07 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container httpd ready: false, restart count 0
  Jun 13 07:18:07.995: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-hcrl9 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:07.995: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 07:18:07.995: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-94 before test
  Jun 13 07:18:08.175: INFO: cattle-node-agent-gppzj from cattle-system started at 2024-06-13 06:21:04 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.175: INFO: 	Container agent ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: canal-7rrrm from kube-system started at 2024-06-13 06:21:04 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:08.175: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: coredns-7b7785bd9-7ljhs from kube-system started at 2024-06-13 06:21:06 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.175: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: coredns-autoscaler-6b7d888f49-gtz4n from kube-system started at 2024-06-13 06:27:58 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.175: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: test-rs-4k479 from replicaset-353 started at 2024-06-13 07:18:01 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.175: INFO: 	Container httpd ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: test-rs-rxd4m from replicaset-353 started at 2024-06-13 07:18:07 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.175: INFO: 	Container httpd ready: false, restart count 0
  Jun 13 07:18:08.175: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-5zbmz from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:08.175: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 07:18:08.175: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-92 before test
  E0613 07:18:08.191212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:18:08.359: INFO: cattle-node-agent-czvts from cattle-system started at 2024-06-13 06:21:16 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.359: INFO: 	Container agent ready: true, restart count 0
  Jun 13 07:18:08.359: INFO: helm-operation-ssktk from cattle-system started at 2024-06-13 06:27:43 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:08.359: INFO: 	Container helm ready: false, restart count 0
  Jun 13 07:18:08.359: INFO: 	Container proxy ready: false, restart count 0
  Jun 13 07:18:08.359: INFO: canal-4z8nx from kube-system started at 2024-06-13 06:21:16 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:08.359: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 07:18:08.359: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 07:18:08.359: INFO: test-rs-6ghnn from replicaset-353 started at 2024-06-13 07:18:06 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.359: INFO: 	Container httpd ready: false, restart count 0
  Jun 13 07:18:08.359: INFO: sonobuoy from sonobuoy started at 2024-06-13 06:32:15 +0000 UTC (1 container statuses recorded)
  Jun 13 07:18:08.359: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 07:18:08.359: INFO: sonobuoy-e2e-job-8c45e5711e4845f4 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:08.359: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 07:18:08.359: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:18:08.359: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-cq7zb from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 07:18:08.359: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 07:18:08.360: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/13/24 07:18:08.36
  E0613 07:18:09.197259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:10.197709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:11.199229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:12.199670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/13/24 07:18:12.586
  STEP: Trying to apply a random label on the found node. @ 06/13/24 07:18:12.688
  STEP: verifying the node has the label kubernetes.io/e2e-d38e1ac9-d3f8-4d04-97be-c7945c7adb67 42 @ 06/13/24 07:18:12.757
  STEP: Trying to relaunch the pod, now with labels. @ 06/13/24 07:18:12.769
  E0613 07:18:13.201718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:14.202108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:15.205134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:16.205126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-d38e1ac9-d3f8-4d04-97be-c7945c7adb67 off the node ip-172-31-12-94 @ 06/13/24 07:18:16.897
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d38e1ac9-d3f8-4d04-97be-c7945c7adb67 @ 06/13/24 07:18:16.94
  Jun 13 07:18:16.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4928" for this suite. @ 06/13/24 07:18:16.956
â€¢ [9.637 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/13/24 07:18:16.992
  Jun 13 07:18:16.992: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename subpath @ 06/13/24 07:18:16.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:18:17.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:18:17.11
  STEP: Setting up data @ 06/13/24 07:18:17.115
  STEP: Creating pod pod-subpath-test-projected-hlwq @ 06/13/24 07:18:17.173
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 07:18:17.178
  E0613 07:18:17.205836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:18.205953      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:19.206582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:20.206707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:21.207298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:22.207453      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:23.209259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:24.209976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:25.210090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:26.210590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:27.210741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:28.211265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:29.212098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:30.213808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:31.214063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:32.214857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:33.215357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:34.216297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:35.219119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:36.219293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:37.219691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:38.219726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:39.220052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:40.221300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:41.221540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:42.228151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:43.227686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:18:43.35
  Jun 13 07:18:43.354: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-subpath-test-projected-hlwq container test-container-subpath-projected-hlwq: <nil>
  STEP: delete the pod @ 06/13/24 07:18:43.367
  STEP: Deleting pod pod-subpath-test-projected-hlwq @ 06/13/24 07:18:43.4
  Jun 13 07:18:43.400: INFO: Deleting pod "pod-subpath-test-projected-hlwq" in namespace "subpath-8629"
  Jun 13 07:18:43.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8629" for this suite. @ 06/13/24 07:18:43.419
â€¢ [26.451 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/13/24 07:18:43.444
  Jun 13 07:18:43.444: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename prestop @ 06/13/24 07:18:43.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:18:43.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:18:43.535
  STEP: Creating server pod server in namespace prestop-4212 @ 06/13/24 07:18:43.544
  STEP: Waiting for pods to come up. @ 06/13/24 07:18:43.575
  E0613 07:18:44.227911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:45.228327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:46.228797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:47.229239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-4212 @ 06/13/24 07:18:47.615
  E0613 07:18:48.229318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:49.229556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:50.230544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:51.230860      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 06/13/24 07:18:51.674
  E0613 07:18:52.231291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:53.232217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:54.233107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:55.239791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:56.239875      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:18:56.695: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/13/24 07:18:56.696
  Jun 13 07:18:56.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4212" for this suite. @ 06/13/24 07:18:56.718
â€¢ [13.284 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/13/24 07:18:56.728
  Jun 13 07:18:56.728: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename ingressclass @ 06/13/24 07:18:56.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:18:56.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:18:56.851
  STEP: getting /apis @ 06/13/24 07:18:56.869
  STEP: getting /apis/networking.k8s.io @ 06/13/24 07:18:56.879
  STEP: getting /apis/networking.k8s.iov1 @ 06/13/24 07:18:56.881
  STEP: creating @ 06/13/24 07:18:56.884
  STEP: getting @ 06/13/24 07:18:56.974
  STEP: listing @ 06/13/24 07:18:56.98
  STEP: watching @ 06/13/24 07:18:57.01
  Jun 13 07:18:57.010: INFO: starting watch
  STEP: patching @ 06/13/24 07:18:57.022
  STEP: updating @ 06/13/24 07:18:57.042
  Jun 13 07:18:57.066: INFO: waiting for watch events with expected annotations
  Jun 13 07:18:57.066: INFO: saw patched and updated annotations
  STEP: deleting @ 06/13/24 07:18:57.066
  STEP: deleting a collection @ 06/13/24 07:18:57.103
  Jun 13 07:18:57.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3063" for this suite. @ 06/13/24 07:18:57.17
â€¢ [0.453 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/13/24 07:18:57.232
  Jun 13 07:18:57.233: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename proxy @ 06/13/24 07:18:57.234
  E0613 07:18:57.239962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:18:57.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:18:57.366
  Jun 13 07:18:57.400: INFO: Creating pod...
  E0613 07:18:58.240372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:18:59.240554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:00.241623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:01.242600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:01.548: INFO: Creating service...
  Jun 13 07:19:01.652: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/pods/agnhost/proxy?method=DELETE
  E0613 07:19:02.243017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:02.702: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 07:19:02.702: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/pods/agnhost/proxy?method=OPTIONS
  Jun 13 07:19:02.709: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 07:19:02.710: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/pods/agnhost/proxy?method=PATCH
  Jun 13 07:19:02.735: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 07:19:02.735: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/pods/agnhost/proxy?method=POST
  Jun 13 07:19:02.740: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 07:19:02.740: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/pods/agnhost/proxy?method=PUT
  Jun 13 07:19:02.755: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 07:19:02.756: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun 13 07:19:02.767: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun 13 07:19:02.767: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun 13 07:19:02.785: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun 13 07:19:02.785: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun 13 07:19:02.793: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun 13 07:19:02.793: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/services/e2e-proxy-test-service/proxy?method=POST
  Jun 13 07:19:02.805: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun 13 07:19:02.806: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/services/e2e-proxy-test-service/proxy?method=PUT
  Jun 13 07:19:02.823: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun 13 07:19:02.823: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/pods/agnhost/proxy?method=GET
  Jun 13 07:19:02.830: INFO: http.Client request:GET StatusCode:301
  Jun 13 07:19:02.830: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/services/e2e-proxy-test-service/proxy?method=GET
  Jun 13 07:19:02.839: INFO: http.Client request:GET StatusCode:301
  Jun 13 07:19:02.840: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/pods/agnhost/proxy?method=HEAD
  Jun 13 07:19:02.848: INFO: http.Client request:HEAD StatusCode:301
  Jun 13 07:19:02.866: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-1783/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun 13 07:19:02.898: INFO: http.Client request:HEAD StatusCode:301
  Jun 13 07:19:02.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1783" for this suite. @ 06/13/24 07:19:02.906
â€¢ [5.688 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/13/24 07:19:02.922
  Jun 13 07:19:02.922: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:19:02.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:03.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:03.029
  STEP: creating secret secrets-1372/secret-test-2fc6dd38-2b32-4471-be96-5a1cde7e7b0c @ 06/13/24 07:19:03.061
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:19:03.084
  E0613 07:19:03.243882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:04.244251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:05.245538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:06.246157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:19:07.186
  Jun 13 07:19:07.190: INFO: Trying to get logs from node ip-172-31-2-92 pod pod-configmaps-cc82fb00-f243-4b28-9b9f-b1cd11257fb6 container env-test: <nil>
  STEP: delete the pod @ 06/13/24 07:19:07.242
  E0613 07:19:07.247193      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:07.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1372" for this suite. @ 06/13/24 07:19:07.286
â€¢ [4.406 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/13/24 07:19:07.328
  Jun 13 07:19:07.329: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 07:19:07.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:07.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:07.467
  E0613 07:19:08.248585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:09.253565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:10.254602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:11.258965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:11.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5262" for this suite. @ 06/13/24 07:19:11.556
â€¢ [4.247 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/13/24 07:19:11.576
  Jun 13 07:19:11.576: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename lease-test @ 06/13/24 07:19:11.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:11.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:11.808
  E0613 07:19:12.260002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:12.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1854" for this suite. @ 06/13/24 07:19:12.306
â€¢ [0.752 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/13/24 07:19:12.329
  Jun 13 07:19:12.329: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:19:12.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:12.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:12.532
  STEP: Creating configMap with name configmap-test-volume-7c44d739-1a4a-4b7d-a67c-99bd3f2a6b12 @ 06/13/24 07:19:12.613
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:19:12.663
  E0613 07:19:13.260931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:14.261066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:15.263762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:16.264051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:17.264762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:18.264959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:19:18.847
  Jun 13 07:19:18.851: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-6e262d54-18f5-44e1-b8ba-094c35daf719 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:19:18.867
  Jun 13 07:19:18.906: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6882" for this suite. @ 06/13/24 07:19:18.931
â€¢ [6.612 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/13/24 07:19:18.941
  Jun 13 07:19:18.941: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 07:19:18.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:19.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:19.05
  STEP: Creating simple DaemonSet "daemon-set" @ 06/13/24 07:19:19.129
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 07:19:19.149
  Jun 13 07:19:19.173: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:19:19.173: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:19:19.266164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:20.176: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:19:20.176: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:19:20.266330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:21.168: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:19:21.168: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:19:21.269589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:22.175: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:19:22.175: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:19:22.270843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:23.156: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:19:23.157: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:19:23.271484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:24.185: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 07:19:24.185: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/13/24 07:19:24.195
  Jun 13 07:19:24.199: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/13/24 07:19:24.199
  Jun 13 07:19:24.255: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/13/24 07:19:24.255
  Jun 13 07:19:24.261: INFO: Observed &DaemonSet event: ADDED
  Jun 13 07:19:24.262: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.262: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.262: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.262: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.262: INFO: Found daemon set daemon-set in namespace daemonsets-4160 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 07:19:24.262: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/13/24 07:19:24.262
  E0613 07:19:24.271786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: watching for the daemon set status to be patched @ 06/13/24 07:19:24.281
  Jun 13 07:19:24.292: INFO: Observed &DaemonSet event: ADDED
  Jun 13 07:19:24.292: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.293: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.293: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.293: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.293: INFO: Observed daemon set daemon-set in namespace daemonsets-4160 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 07:19:24.293: INFO: Observed &DaemonSet event: MODIFIED
  Jun 13 07:19:24.293: INFO: Found daemon set daemon-set in namespace daemonsets-4160 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun 13 07:19:24.293: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 07:19:24.318
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4160, will wait for the garbage collector to delete the pods @ 06/13/24 07:19:24.318
  Jun 13 07:19:24.403: INFO: Deleting DaemonSet.extensions daemon-set took: 24.138826ms
  Jun 13 07:19:24.604: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.557681ms
  E0613 07:19:25.277201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:26.278138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:27.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:19:27.116: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 07:19:27.125: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14728"},"items":null}

  Jun 13 07:19:27.146: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14728"},"items":null}

  Jun 13 07:19:27.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4160" for this suite. @ 06/13/24 07:19:27.19
â€¢ [8.258 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/13/24 07:19:27.2
  Jun 13 07:19:27.200: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:19:27.204
  E0613 07:19:27.283726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:27.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:27.384
  Jun 13 07:19:27.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4645" for this suite. @ 06/13/24 07:19:27.425
â€¢ [0.268 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/13/24 07:19:27.47
  Jun 13 07:19:27.470: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename apf @ 06/13/24 07:19:27.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:27.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:27.759
  STEP: getting /apis @ 06/13/24 07:19:27.91
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/13/24 07:19:27.933
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/13/24 07:19:27.936
  STEP: creating @ 06/13/24 07:19:27.943
  STEP: getting @ 06/13/24 07:19:28.118
  STEP: listing @ 06/13/24 07:19:28.133
  STEP: watching @ 06/13/24 07:19:28.162
  Jun 13 07:19:28.162: INFO: starting watch
  STEP: patching @ 06/13/24 07:19:28.175
  STEP: updating @ 06/13/24 07:19:28.205
  Jun 13 07:19:28.250: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/13/24 07:19:28.251
  E0613 07:19:28.299373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/13/24 07:19:28.322
  STEP: updating /status @ 06/13/24 07:19:28.337
  STEP: deleting @ 06/13/24 07:19:28.372
  STEP: deleting a collection @ 06/13/24 07:19:28.416
  Jun 13 07:19:28.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4028" for this suite. @ 06/13/24 07:19:28.486
â€¢ [1.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/13/24 07:19:28.529
  Jun 13 07:19:28.529: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 07:19:28.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:28.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:28.7
  Jun 13 07:19:28.753: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun 13 07:19:28.833: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0613 07:19:29.299990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:30.300135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:31.300656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:32.300416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:33.304937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:33.844: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 07:19:33.844
  Jun 13 07:19:33.845: INFO: Creating deployment "test-rolling-update-deployment"
  Jun 13 07:19:33.854: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun 13 07:19:33.880: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0613 07:19:34.305679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:35.305789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:35.894: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun 13 07:19:35.897: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 19, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 19, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 19, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 19, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:19:36.306025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:37.306606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:37.902: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun 13 07:19:37.919: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2434",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8a1272d-ec63-470c-9535-18591fb4109f",
      ResourceVersion: (string) (len=5) "14858",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 07:19:37.926: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2434",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bd93197-69ab-42c0-8c19-fa30f80f762e",
      ResourceVersion: (string) (len=5) "14848",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a8a1272d-ec63-470c-9535-18591fb4109f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 38 61 31 32 37  32 64 2d 65 63 36 33 2d  |\"a8a1272d-ec63-|
              00000120  34 37 30 63 2d 39 35 33  35 2d 31 38 35 39 31 66  |470c-9535-18591f|
              00000130  62 34 31 30 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b4109f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 07:19:37.927: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun 13 07:19:37.928: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2434",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93bb46a7-3e5a-40d5-b39f-ef966863137d",
      ResourceVersion: (string) (len=5) "14857",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859968,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a8a1272d-ec63-470c-9535-18591fb4109f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859968,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 38 61 31 32 37 32  |"uid\":\"a8a1272|
              000000b0  64 2d 65 63 36 33 2d 34  37 30 63 2d 39 35 33 35  |d-ec63-470c-9535|
              000000c0  2d 31 38 35 39 31 66 62  34 31 30 39 66 5c 22 7d  |-18591fb4109f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 07:19:37.934: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-q58g7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-q58g7",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-2434",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d5462ce-ee53-42a7-82e1-191df76be3e3",
      ResourceVersion: (string) (len=5) "14847",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9b28a4fc7b44c419a92a4da2bff51336554a3f6b81255bd208c362c9bbbfcb3a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.77/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.77/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "4bd93197-69ab-42c0-8c19-fa30f80f762e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 62  64 39 33 31 39 37 2d 36  |d\":\"4bd93197-6|
              00000090  39 61 62 2d 34 32 63 30  2d 38 63 31 39 2d 66 61  |9ab-42c0-8c19-fa|
              000000a0  33 30 66 38 30 66 37 36  32 65 5c 22 7d 22 3a 7b  |30f80f762e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859975,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 37 37  5c 22 7d 22 3a 7b 22 2e  |.42.1.77\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wdbxd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wdbxd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853859973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) (len=10) "10.42.1.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853859973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853859975,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://148c7fd22fdbebdbb80fd4f6c51d5620108a27b29bc1381545113d03aa094066",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 07:19:37.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2434" for this suite. @ 06/13/24 07:19:37.96
â€¢ [9.462 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/13/24 07:19:37.991
  Jun 13 07:19:37.991: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 07:19:37.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:38.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:38.073
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/13/24 07:19:38.081
  E0613 07:19:38.314783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:39.309142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:40.309530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:41.309627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:42.309676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:43.309833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:19:44.209
  Jun 13 07:19:44.212: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-bb76d165-a5bf-463c-8d7f-9db30191c329 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 07:19:44.243
  Jun 13 07:19:44.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4212" for this suite. @ 06/13/24 07:19:44.307
  E0613 07:19:44.310781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [6.334 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/13/24 07:19:44.33
  Jun 13 07:19:44.330: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 07:19:44.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:44.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:44.389
  STEP: Read namespace status @ 06/13/24 07:19:44.425
  Jun 13 07:19:44.479: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/13/24 07:19:44.479
  Jun 13 07:19:44.499: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/13/24 07:19:44.5
  Jun 13 07:19:44.534: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun 13 07:19:44.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6755" for this suite. @ 06/13/24 07:19:44.544
â€¢ [0.246 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/13/24 07:19:44.576
  Jun 13 07:19:44.576: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/13/24 07:19:44.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:44.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:44.71
  STEP: Setting up the test @ 06/13/24 07:19:44.726
  STEP: Creating hostNetwork=false pod @ 06/13/24 07:19:44.726
  E0613 07:19:45.313211      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:46.313972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:47.314589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:48.314787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 06/13/24 07:19:48.929
  E0613 07:19:49.315527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:50.316213      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:51.317235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:52.317510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 06/13/24 07:19:52.982
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/13/24 07:19:52.982
  Jun 13 07:19:52.982: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:52.982: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:52.983: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:52.984: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 13 07:19:53.241: INFO: Exec stderr: ""
  Jun 13 07:19:53.256: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:53.256: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:53.256: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:53.256: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0613 07:19:53.318367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:53.532: INFO: Exec stderr: ""
  Jun 13 07:19:53.532: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:53.532: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:53.533: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:53.533: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 07:19:53.718: INFO: Exec stderr: ""
  Jun 13 07:19:53.719: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:53.720: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:53.721: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:53.721: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 07:19:53.929: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/13/24 07:19:53.929
  Jun 13 07:19:53.929: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:53.929: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:53.930: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:53.930: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun 13 07:19:54.125: INFO: Exec stderr: ""
  Jun 13 07:19:54.125: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:54.125: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:54.126: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:54.126: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0613 07:19:54.319158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:19:54.326: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/13/24 07:19:54.327
  Jun 13 07:19:54.327: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:54.327: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:54.328: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:54.328: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 13 07:19:54.555: INFO: Exec stderr: ""
  Jun 13 07:19:54.555: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:54.555: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:54.557: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:54.557: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun 13 07:19:54.683: INFO: Exec stderr: ""
  Jun 13 07:19:54.683: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:54.683: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:54.684: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:54.684: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 07:19:54.856: INFO: Exec stderr: ""
  Jun 13 07:19:54.856: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8377 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:19:54.856: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:19:54.859: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:19:54.859: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8377/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun 13 07:19:55.164: INFO: Exec stderr: ""
  Jun 13 07:19:55.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8377" for this suite. @ 06/13/24 07:19:55.168
â€¢ [10.599 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/13/24 07:19:55.2
  Jun 13 07:19:55.200: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:19:55.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:19:55.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:19:55.309
  STEP: creating service in namespace services-423 @ 06/13/24 07:19:55.314
  STEP: creating service affinity-clusterip-transition in namespace services-423 @ 06/13/24 07:19:55.314
  E0613 07:19:55.322112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip-transition in namespace services-423 @ 06/13/24 07:19:55.341
  I0613 07:19:55.433209      18 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-423, replica count: 3
  E0613 07:19:56.333588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:57.334119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:19:58.335182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:19:58.489888      18 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 07:19:59.335230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:00.336264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:01.336625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:20:01.494737      18 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 07:20:01.595: INFO: Creating new exec pod
  E0613 07:20:02.336746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:03.337070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:04.337709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:05.338493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:06.339131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:06.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-423 exec execpod-affinityns9mf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0613 07:20:07.340112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:08.341583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:09.344314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:09.731: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun 13 07:20:09.731: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:20:09.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-423 exec execpod-affinityns9mf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.102.81 80'
  Jun 13 07:20:10.314: INFO: stderr: "+ nc -v -t -w 2 10.43.102.81 80\n+ echo hostName\nConnection to 10.43.102.81 80 port [tcp/http] succeeded!\n"
  Jun 13 07:20:10.314: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:20:10.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-423 exec execpod-affinityns9mf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.102.81:80/ ; done'
  E0613 07:20:10.361779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:11.128: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n"
  Jun 13 07:20:11.128: INFO: stdout: "\naffinity-clusterip-transition-gl47g\naffinity-clusterip-transition-s2sgw\naffinity-clusterip-transition-gl47g\naffinity-clusterip-transition-gl47g\naffinity-clusterip-transition-s2sgw\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-gl47g\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-gl47g\naffinity-clusterip-transition-s2sgw\naffinity-clusterip-transition-gl47g\naffinity-clusterip-transition-gl47g\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-s2sgw"
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-gl47g
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-s2sgw
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-gl47g
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-gl47g
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-s2sgw
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-gl47g
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-gl47g
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-s2sgw
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-gl47g
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-gl47g
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.128: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.129: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.129: INFO: Received response from host: affinity-clusterip-transition-s2sgw
  Jun 13 07:20:11.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-423 exec execpod-affinityns9mf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.102.81:80/ ; done'
  E0613 07:20:11.364641      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:11.901: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.102.81:80/\n"
  Jun 13 07:20:11.901: INFO: stdout: "\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q\naffinity-clusterip-transition-fw44q"
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Received response from host: affinity-clusterip-transition-fw44q
  Jun 13 07:20:11.901: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-423, will wait for the garbage collector to delete the pods @ 06/13/24 07:20:11.954
  Jun 13 07:20:12.057: INFO: Deleting ReplicationController affinity-clusterip-transition took: 24.776796ms
  Jun 13 07:20:12.358: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 300.774905ms
  E0613 07:20:12.365439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:13.366202      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:14.366536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:15.367649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:16.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-423" for this suite. @ 06/13/24 07:20:16.355
  E0613 07:20:16.368290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [21.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/13/24 07:20:16.376
  Jun 13 07:20:16.376: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 07:20:16.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:20:16.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:20:16.621
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/13/24 07:20:16.639
  E0613 07:20:17.368410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:18.368875      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:19.368970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:20.369449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:21.369749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:22.369816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:20:22.687
  Jun 13 07:20:22.701: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-5936452b-c9b8-4055-bd5e-d33dc3143ea3 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 07:20:22.713
  Jun 13 07:20:22.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9632" for this suite. @ 06/13/24 07:20:22.749
â€¢ [6.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/13/24 07:20:22.774
  Jun 13 07:20:22.774: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 07:20:22.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:20:22.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:20:22.871
  Jun 13 07:20:22.897: INFO: Creating ReplicaSet my-hostname-basic-56a9575b-9488-411a-ad9d-b48adc408c99
  Jun 13 07:20:22.910: INFO: Pod name my-hostname-basic-56a9575b-9488-411a-ad9d-b48adc408c99: Found 0 pods out of 1
  E0613 07:20:23.370457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:24.371305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:25.374541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:26.374581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:27.374649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:27.927: INFO: Pod name my-hostname-basic-56a9575b-9488-411a-ad9d-b48adc408c99: Found 1 pods out of 1
  Jun 13 07:20:27.927: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-56a9575b-9488-411a-ad9d-b48adc408c99" is running
  Jun 13 07:20:27.951: INFO: Pod "my-hostname-basic-56a9575b-9488-411a-ad9d-b48adc408c99-7dnfg" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 07:20:25 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 07:20:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 07:20:25 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 07:20:25 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-13 07:20:22 +0000 UTC Reason: Message:}])
  Jun 13 07:20:27.951: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/13/24 07:20:27.952
  E0613 07:20:28.374975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:29.376765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:30.376012      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:31.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3017" for this suite. @ 06/13/24 07:20:31.045
â€¢ [8.282 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/13/24 07:20:31.057
  Jun 13 07:20:31.057: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 07:20:31.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:20:31.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:20:31.345
  E0613 07:20:31.376117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating service test in namespace statefulset-4082 @ 06/13/24 07:20:31.393
  STEP: Looking for a node to schedule stateful set and pod @ 06/13/24 07:20:31.463
  STEP: Creating pod with conflicting port in namespace statefulset-4082 @ 06/13/24 07:20:31.514
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4082 @ 06/13/24 07:20:31.657
  E0613 07:20:32.376985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:33.377452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:34.377217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:35.379590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:36.379763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:37.381582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4082 @ 06/13/24 07:20:37.811
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4082 @ 06/13/24 07:20:37.834
  Jun 13 07:20:37.882: INFO: Observed stateful pod in namespace: statefulset-4082, name: ss-0, uid: 8abb293f-db2f-4c03-802d-71900a825c22, status phase: Pending. Waiting for statefulset controller to delete.
  Jun 13 07:20:37.947: INFO: Observed stateful pod in namespace: statefulset-4082, name: ss-0, uid: 8abb293f-db2f-4c03-802d-71900a825c22, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 13 07:20:37.982: INFO: Observed stateful pod in namespace: statefulset-4082, name: ss-0, uid: 8abb293f-db2f-4c03-802d-71900a825c22, status phase: Failed. Waiting for statefulset controller to delete.
  Jun 13 07:20:37.998: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4082
  STEP: Removing pod with conflicting port in namespace statefulset-4082 @ 06/13/24 07:20:37.998
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4082 and will be in running state @ 06/13/24 07:20:38.075
  E0613 07:20:38.382103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:39.383199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:40.383532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:41.383967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:42.152: INFO: Deleting all statefulset in ns statefulset-4082
  Jun 13 07:20:42.157: INFO: Scaling statefulset ss to 0
  E0613 07:20:42.388071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:43.386370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:44.386443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:45.389158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:46.389519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:47.391034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:48.392703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:49.392779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:50.393299      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:51.393525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:20:52.190: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 07:20:52.196: INFO: Deleting statefulset ss
  Jun 13 07:20:52.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4082" for this suite. @ 06/13/24 07:20:52.25
â€¢ [21.218 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/13/24 07:20:52.287
  Jun 13 07:20:52.287: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 07:20:52.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:20:52.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:20:52.368
  STEP: Creating a pod to test env composition @ 06/13/24 07:20:52.376
  E0613 07:20:52.393986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:53.396193      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:54.397182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:55.399748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:56.400397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:20:56.516
  Jun 13 07:20:56.519: INFO: Trying to get logs from node ip-172-31-12-94 pod var-expansion-2b1e9a54-2fd7-4ac4-bdb2-f704f1aa18f5 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 07:20:56.527
  Jun 13 07:20:56.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6394" for this suite. @ 06/13/24 07:20:56.566
â€¢ [4.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/13/24 07:20:56.605
  Jun 13 07:20:56.605: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename conformance-tests @ 06/13/24 07:20:56.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:20:56.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:20:56.721
  STEP: Getting node addresses @ 06/13/24 07:20:56.746
  Jun 13 07:20:56.746: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun 13 07:20:56.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6331" for this suite. @ 06/13/24 07:20:56.773
â€¢ [0.219 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/13/24 07:20:56.825
  Jun 13 07:20:56.825: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename events @ 06/13/24 07:20:56.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:20:56.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:20:56.956
  STEP: creating a test event @ 06/13/24 07:20:56.979
  STEP: listing all events in all namespaces @ 06/13/24 07:20:56.997
  STEP: patching the test event @ 06/13/24 07:20:57.056
  STEP: fetching the test event @ 06/13/24 07:20:57.09
  STEP: updating the test event @ 06/13/24 07:20:57.103
  STEP: getting the test event @ 06/13/24 07:20:57.133
  STEP: deleting the test event @ 06/13/24 07:20:57.16
  STEP: listing all events in all namespaces @ 06/13/24 07:20:57.209
  Jun 13 07:20:57.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9587" for this suite. @ 06/13/24 07:20:57.228
â€¢ [0.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/13/24 07:20:57.25
  Jun 13 07:20:57.250: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 07:20:57.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:20:57.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:20:57.357
  E0613 07:20:57.400487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Performing setup for networking test in namespace pod-network-test-6289 @ 06/13/24 07:20:57.419
  STEP: creating a selector @ 06/13/24 07:20:57.419
  STEP: Creating the service pods in kubernetes @ 06/13/24 07:20:57.419
  Jun 13 07:20:57.420: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0613 07:20:58.401696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:20:59.402024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:00.402119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:01.403221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:02.403329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:03.405529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:04.405848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:05.406297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:06.406342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:07.406493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:08.417539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:09.418731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:10.418950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:11.420294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:12.420411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:13.422763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:14.422904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:15.423048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:16.423265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:17.423474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:18.424263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:19.425373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/13/24 07:21:19.813
  E0613 07:21:20.425517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:21.425609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:22.426492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:23.426966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:21:23.946: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 07:21:23.946: INFO: Going to poll 10.42.0.29 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 07:21:23.952: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.29:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6289 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:21:23.952: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:21:23.959: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:21:23.961: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6289/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.29%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 07:21:24.247: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun 13 07:21:24.247: INFO: Going to poll 10.42.1.85 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 07:21:24.251: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.85:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6289 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:21:24.251: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:21:24.252: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:21:24.252: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6289/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.85%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0613 07:21:24.429198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:21:24.628: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun 13 07:21:24.628: INFO: Going to poll 10.42.2.30 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Jun 13 07:21:24.632: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.30:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6289 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:21:24.632: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:21:24.633: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:21:24.633: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6289/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.30%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 07:21:24.816: INFO: Found all 1 expected endpoints: [netserver-2]
  Jun 13 07:21:24.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6289" for this suite. @ 06/13/24 07:21:24.826
â€¢ [27.586 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/13/24 07:21:24.857
  Jun 13 07:21:24.857: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:21:24.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:21:24.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:21:24.922
  STEP: Creating a pod to test downward api env vars @ 06/13/24 07:21:24.942
  E0613 07:21:25.428957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:26.431677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:27.433202      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:28.433517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:29.433901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:30.435979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:21:31.055
  Jun 13 07:21:31.070: INFO: Trying to get logs from node ip-172-31-2-92 pod downward-api-7aaba753-2653-41b0-80a1-f2c015747af7 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 07:21:31.123
  Jun 13 07:21:31.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-255" for this suite. @ 06/13/24 07:21:31.366
â€¢ [6.541 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/13/24 07:21:31.406
  Jun 13 07:21:31.406: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:21:31.407
  E0613 07:21:31.437603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:21:31.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:21:31.568
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9009 @ 06/13/24 07:21:31.603
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/13/24 07:21:31.721
  STEP: creating service externalsvc in namespace services-9009 @ 06/13/24 07:21:31.721
  STEP: creating replication controller externalsvc in namespace services-9009 @ 06/13/24 07:21:31.936
  I0613 07:21:31.989227      18 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9009, replica count: 2
  E0613 07:21:32.438599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:33.439015      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:34.441840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:21:35.039830      18 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/13/24 07:21:35.043
  Jun 13 07:21:35.067: INFO: Creating new exec pod
  E0613 07:21:35.447414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:36.442559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:37.443671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:38.443577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:21:39.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9009 exec execpodjxs9f -- /bin/sh -x -c nslookup nodeport-service.services-9009.svc.cluster.local'
  E0613 07:21:39.444638      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:40.445078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:41.445852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:42.449704      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:43.455251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:44.453553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:21:44.618: INFO: stderr: "+ nslookup nodeport-service.services-9009.svc.cluster.local\n"
  Jun 13 07:21:44.618: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-9009.svc.cluster.local\tcanonical name = externalsvc.services-9009.svc.cluster.local.\nName:\texternalsvc.services-9009.svc.cluster.local\nAddress: 10.43.2.165\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9009, will wait for the garbage collector to delete the pods @ 06/13/24 07:21:44.618
  Jun 13 07:21:44.680: INFO: Deleting ReplicationController externalsvc took: 9.075839ms
  Jun 13 07:21:44.783: INFO: Terminating ReplicationController externalsvc pods took: 102.245661ms
  E0613 07:21:45.454198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:46.457649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:47.458622      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:48.461537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:21:49.009: INFO: Cleaning up the NodePort to ExternalName test service
  Jun 13 07:21:49.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9009" for this suite. @ 06/13/24 07:21:49.047
â€¢ [17.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/13/24 07:21:49.079
  Jun 13 07:21:49.079: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:21:49.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:21:49.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:21:49.237
  STEP: creating service multi-endpoint-test in namespace services-7724 @ 06/13/24 07:21:49.258
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7724 to expose endpoints map[] @ 06/13/24 07:21:49.328
  Jun 13 07:21:49.375: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0613 07:21:49.462111      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:21:50.383: INFO: successfully validated that service multi-endpoint-test in namespace services-7724 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7724 @ 06/13/24 07:21:50.384
  E0613 07:21:50.464158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:51.464385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:52.464841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:53.464958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:54.466534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7724 to expose endpoints map[pod1:[100]] @ 06/13/24 07:21:54.47
  Jun 13 07:21:54.553: INFO: successfully validated that service multi-endpoint-test in namespace services-7724 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7724 @ 06/13/24 07:21:54.553
  E0613 07:21:55.468208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:56.473470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:57.476754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:21:58.478528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7724 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/13/24 07:21:58.639
  Jun 13 07:21:58.653: INFO: successfully validated that service multi-endpoint-test in namespace services-7724 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/13/24 07:21:58.653
  Jun 13 07:21:58.653: INFO: Creating new exec pod
  E0613 07:21:59.493201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:00.484217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:01.484321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:02.484517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:03.485044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:03.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7724 exec execpodzkcqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  E0613 07:22:04.485698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:05.487145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:06.488806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:06.645: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun 13 07:22:06.645: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:22:06.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7724 exec execpodzkcqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.10.33 80'
  Jun 13 07:22:07.056: INFO: stderr: "+ nc -v -t -w 2 10.43.10.33 80\nConnection to 10.43.10.33 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 13 07:22:07.056: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:22:07.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7724 exec execpodzkcqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun 13 07:22:07.445: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun 13 07:22:07.445: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:22:07.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7724 exec execpodzkcqb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.10.33 81'
  E0613 07:22:07.496278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:07.838: INFO: stderr: "+ nc -v -t -w 2 10.43.10.33 81\n+ echo hostName\nConnection to 10.43.10.33 81 port [tcp/*] succeeded!\n"
  Jun 13 07:22:07.838: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7724 @ 06/13/24 07:22:07.838
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7724 to expose endpoints map[pod2:[101]] @ 06/13/24 07:22:07.899
  Jun 13 07:22:07.929: INFO: successfully validated that service multi-endpoint-test in namespace services-7724 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7724 @ 06/13/24 07:22:07.93
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7724 to expose endpoints map[] @ 06/13/24 07:22:07.996
  E0613 07:22:08.496397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:09.056: INFO: successfully validated that service multi-endpoint-test in namespace services-7724 exposes endpoints map[]
  Jun 13 07:22:09.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7724" for this suite. @ 06/13/24 07:22:09.135
â€¢ [20.070 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/13/24 07:22:09.15
  Jun 13 07:22:09.151: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 07:22:09.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:22:09.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:22:09.365
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/13/24 07:22:09.385
  E0613 07:22:09.497278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:10.497504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:11.497835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:12.497991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:13.498050      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:22:13.536
  Jun 13 07:22:13.546: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-86ebbd41-2374-41c2-bb11-cfc5e089f764 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 07:22:13.593
  Jun 13 07:22:13.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1819" for this suite. @ 06/13/24 07:22:13.637
â€¢ [4.504 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/13/24 07:22:13.654
  Jun 13 07:22:13.654: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 07:22:13.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:22:13.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:22:13.749
  STEP: Creating a pod to test substitution in container's command @ 06/13/24 07:22:13.778
  E0613 07:22:14.498385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:15.498745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:16.508376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:17.508667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:18.511535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:19.512017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:22:19.876
  Jun 13 07:22:19.889: INFO: Trying to get logs from node ip-172-31-12-94 pod var-expansion-a0929482-b4ee-40da-80cd-dd8957907026 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 07:22:19.902
  Jun 13 07:22:19.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2442" for this suite. @ 06/13/24 07:22:19.965
â€¢ [6.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/13/24 07:22:20.005
  Jun 13 07:22:20.009: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:22:20.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:22:20.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:22:20.259
  E0613 07:22:20.512484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/13/24 07:22:20.64
  E0613 07:22:21.513012      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:22:21.963
  STEP: Deploying the webhook pod @ 06/13/24 07:22:21.998
  STEP: Wait for the deployment to be ready @ 06/13/24 07:22:22.034
  Jun 13 07:22:22.081: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 07:22:22.513297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:23.513541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:24.124: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:22:24.514108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:25.515927      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:26.130: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:22:26.516101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:27.516991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:28.131: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 22, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:22:28.518096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:29.519100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 07:22:30.148
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:22:30.196
  E0613 07:22:30.519241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:31.213: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/13/24 07:22:31.221
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/13/24 07:22:31.223
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/13/24 07:22:31.223
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/13/24 07:22:31.223
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/13/24 07:22:31.227
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/13/24 07:22:31.227
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/13/24 07:22:31.228
  Jun 13 07:22:31.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8593" for this suite. @ 06/13/24 07:22:31.362
  STEP: Destroying namespace "webhook-markers-8385" for this suite. @ 06/13/24 07:22:31.414
â€¢ [11.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/13/24 07:22:31.433
  Jun 13 07:22:31.433: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 07:22:31.434
  E0613 07:22:31.519664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:22:31.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:22:31.556
  E0613 07:22:32.519818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:33.521427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:34.523397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:35.522472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:36.523575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:37.523665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:38.523827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:39.524227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:40.524498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:41.524630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:42.530791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:43.533532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:44.537222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:45.536130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:46.536728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:47.537605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:48.538619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:49.538644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:50.539937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:51.540097      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:52.540164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:53.540409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:22:53.726: INFO: Container started at 2024-06-13 07:22:33 +0000 UTC, pod became ready at 2024-06-13 07:22:51 +0000 UTC
  Jun 13 07:22:53.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4908" for this suite. @ 06/13/24 07:22:53.752
â€¢ [22.338 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/13/24 07:22:53.772
  Jun 13 07:22:53.772: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:22:53.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:22:53.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:22:53.905
  STEP: Creating projection with secret that has name projected-secret-test-92cb22c4-5931-4564-b281-cdaa8f5c5a2e @ 06/13/24 07:22:53.915
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:22:53.922
  E0613 07:22:54.540536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:55.540734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:56.541711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:57.541880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:58.542297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:22:59.543019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:22:59.985
  Jun 13 07:22:59.989: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-secrets-21916e15-0786-46d3-b6c5-e3d6d5ad4cb6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:23:00.004
  Jun 13 07:23:00.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1855" for this suite. @ 06/13/24 07:23:00.123
â€¢ [6.366 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/13/24 07:23:00.141
  Jun 13 07:23:00.141: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename job @ 06/13/24 07:23:00.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:00.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:00.258
  STEP: Creating a job @ 06/13/24 07:23:00.28
  STEP: Ensuring job reaches completions @ 06/13/24 07:23:00.308
  E0613 07:23:00.545185      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:01.549482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:02.549562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:03.550200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:04.550996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:05.551267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:06.552183      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:07.552290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:08.553273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:09.554076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:10.555083      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:11.555147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:12.555891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:13.558040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:14.571677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:15.572119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:23:16.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1398" for this suite. @ 06/13/24 07:23:16.316
â€¢ [16.183 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/13/24 07:23:16.324
  Jun 13 07:23:16.324: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename certificates @ 06/13/24 07:23:16.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:16.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:16.453
  E0613 07:23:16.572588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:17.573747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 06/13/24 07:23:17.614
  STEP: getting /apis/certificates.k8s.io @ 06/13/24 07:23:17.622
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/13/24 07:23:17.624
  STEP: creating @ 06/13/24 07:23:17.626
  STEP: getting @ 06/13/24 07:23:17.67
  STEP: listing @ 06/13/24 07:23:17.674
  STEP: watching @ 06/13/24 07:23:17.686
  Jun 13 07:23:17.686: INFO: starting watch
  STEP: patching @ 06/13/24 07:23:17.689
  STEP: updating @ 06/13/24 07:23:17.72
  Jun 13 07:23:17.746: INFO: waiting for watch events with expected annotations
  Jun 13 07:23:17.746: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/13/24 07:23:17.746
  STEP: patching /approval @ 06/13/24 07:23:17.757
  STEP: updating /approval @ 06/13/24 07:23:17.783
  STEP: getting /status @ 06/13/24 07:23:17.823
  STEP: patching /status @ 06/13/24 07:23:17.832
  STEP: updating /status @ 06/13/24 07:23:17.853
  STEP: deleting @ 06/13/24 07:23:17.87
  STEP: deleting a collection @ 06/13/24 07:23:17.912
  Jun 13 07:23:17.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2839" for this suite. @ 06/13/24 07:23:17.971
â€¢ [1.674 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/13/24 07:23:18.026
  Jun 13 07:23:18.029: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:23:18.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:18.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:18.203
  STEP: creating service in namespace services-8869 @ 06/13/24 07:23:18.211
  STEP: creating service affinity-clusterip in namespace services-8869 @ 06/13/24 07:23:18.211
  STEP: creating replication controller affinity-clusterip in namespace services-8869 @ 06/13/24 07:23:18.242
  I0613 07:23:18.299599      18 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8869, replica count: 3
  E0613 07:23:18.574447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:19.577519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:20.578550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:23:21.358540      18 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 07:23:21.578993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:22.579041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:23.579178      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:23:24.361732      18 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 07:23:24.376: INFO: Creating new exec pod
  E0613 07:23:24.580232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:25.587709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:26.582492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:27.582547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:28.582617      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:23:29.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-8869 exec execpod-affinityr9wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0613 07:23:29.582634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:23:29.743: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun 13 07:23:29.743: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:23:29.744: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-8869 exec execpod-affinityr9wwj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.155.250 80'
  Jun 13 07:23:30.200: INFO: stderr: "+ nc -v -t -w 2 10.43.155.250 80\n+ echo hostName\nConnection to 10.43.155.250 80 port [tcp/http] succeeded!\n"
  Jun 13 07:23:30.200: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:23:30.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-8869 exec execpod-affinityr9wwj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.155.250:80/ ; done'
  E0613 07:23:30.585664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:23:30.778: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.155.250:80/\n"
  Jun 13 07:23:30.778: INFO: stdout: "\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f\naffinity-clusterip-5rm5f"
  Jun 13 07:23:30.778: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.778: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.778: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.778: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.778: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Received response from host: affinity-clusterip-5rm5f
  Jun 13 07:23:30.779: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8869, will wait for the garbage collector to delete the pods @ 06/13/24 07:23:30.81
  Jun 13 07:23:30.884: INFO: Deleting ReplicationController affinity-clusterip took: 12.232425ms
  Jun 13 07:23:31.085: INFO: Terminating ReplicationController affinity-clusterip pods took: 201.344666ms
  E0613 07:23:31.585808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:32.587263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:33.587420      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:34.593586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:23:35.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8869" for this suite. @ 06/13/24 07:23:35.315
â€¢ [17.319 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/13/24 07:23:35.346
  Jun 13 07:23:35.346: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename containers @ 06/13/24 07:23:35.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:35.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:35.476
  STEP: Creating a pod to test override arguments @ 06/13/24 07:23:35.481
  E0613 07:23:35.588382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:36.588974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:37.589013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:38.589868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:23:39.557
  Jun 13 07:23:39.567: INFO: Trying to get logs from node ip-172-31-12-94 pod client-containers-9f3c582b-b284-4142-bb59-9d82a491f01e container agnhost-container: <nil>
  E0613 07:23:39.590418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 06/13/24 07:23:39.59
  Jun 13 07:23:39.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2247" for this suite. @ 06/13/24 07:23:39.64
â€¢ [4.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/13/24 07:23:39.661
  Jun 13 07:23:39.661: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 07:23:39.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:39.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:39.774
  STEP: Creating a test namespace @ 06/13/24 07:23:39.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:39.901
  STEP: Creating a service in the namespace @ 06/13/24 07:23:39.934
  STEP: Deleting the namespace @ 06/13/24 07:23:39.978
  STEP: Waiting for the namespace to be removed. @ 06/13/24 07:23:39.996
  E0613 07:23:40.590576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:41.590700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:42.590797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:43.590947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:44.593316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:45.594064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:46.594198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/13/24 07:23:47.01
  STEP: Verifying there is no service in the namespace @ 06/13/24 07:23:47.072
  Jun 13 07:23:47.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5483" for this suite. @ 06/13/24 07:23:47.101
  STEP: Destroying namespace "nsdeletetest-1636" for this suite. @ 06/13/24 07:23:47.152
  Jun 13 07:23:47.172: INFO: Namespace nsdeletetest-1636 was already deleted
  STEP: Destroying namespace "nsdeletetest-9150" for this suite. @ 06/13/24 07:23:47.176
â€¢ [7.545 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/13/24 07:23:47.206
  Jun 13 07:23:47.206: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:23:47.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:47.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:47.287
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:23:47.34
  E0613 07:23:47.597676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:48.598597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:49.599864      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:50.599955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:23:51.458
  Jun 13 07:23:51.472: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-a67a2d96-ca50-4b1c-85a5-e57e912470a2 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:23:51.489
  Jun 13 07:23:51.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9797" for this suite. @ 06/13/24 07:23:51.558
â€¢ [4.361 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/13/24 07:23:51.568
  Jun 13 07:23:51.568: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:23:51.569
  E0613 07:23:51.600385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:51.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:51.7
  STEP: Creating configMap with name projected-configmap-test-volume-map-a690794b-529d-4f0f-b621-3477fc280ef0 @ 06/13/24 07:23:51.734
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:23:51.764
  E0613 07:23:52.601537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:53.602808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:54.603486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:55.605283      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:23:55.843
  Jun 13 07:23:55.846: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-configmaps-a03701ef-eda0-45fa-96ea-80016624ee39 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:23:55.858
  Jun 13 07:23:55.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7604" for this suite. @ 06/13/24 07:23:55.885
â€¢ [4.346 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/13/24 07:23:55.925
  Jun 13 07:23:55.925: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 07:23:55.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:23:55.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:23:56.011
  STEP: Creating a pod to test substitution in volume subpath @ 06/13/24 07:23:56.06
  E0613 07:23:56.606058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:57.606286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:58.606837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:23:59.608738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:24:00.211
  Jun 13 07:24:00.237: INFO: Trying to get logs from node ip-172-31-12-94 pod var-expansion-90f12585-1ede-4401-bba8-6fba841a53c7 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 07:24:00.288
  Jun 13 07:24:00.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5598" for this suite. @ 06/13/24 07:24:00.384
â€¢ [4.485 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/13/24 07:24:00.408
  Jun 13 07:24:00.408: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:24:00.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:00.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:00.523
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:24:00.54
  E0613 07:24:00.609312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:01.610112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:02.610554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:03.611114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:04.613078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:24:04.68
  Jun 13 07:24:04.683: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-88a4307a-7de3-4187-a2bf-d453274c4bdc container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:24:04.694
  Jun 13 07:24:04.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-103" for this suite. @ 06/13/24 07:24:04.734
â€¢ [4.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/13/24 07:24:04.759
  Jun 13 07:24:04.759: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 07:24:04.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:04.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:04.846
  E0613 07:24:05.614161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:06.614557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:07.621534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:08.625951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:09.623469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:10.624339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:11.625141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:12.625560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:13.627331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:14.627719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:24:15.078
  Jun 13 07:24:15.087: INFO: Trying to get logs from node ip-172-31-12-94 pod client-envvars-fa13f0e4-ecae-416d-a9bf-b1eeec203c5d container env3cont: <nil>
  STEP: delete the pod @ 06/13/24 07:24:15.105
  Jun 13 07:24:15.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3363" for this suite. @ 06/13/24 07:24:15.156
â€¢ [10.463 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/13/24 07:24:15.217
  Jun 13 07:24:15.217: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:24:15.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:15.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:15.31
  STEP: Creating configMap with name projected-configmap-test-volume-map-f3ec1bf9-5642-43ef-a8ee-3ba88d5618ff @ 06/13/24 07:24:15.32
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:24:15.33
  E0613 07:24:15.628622      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:16.628779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:17.629395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:18.633015      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:19.630358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:20.634137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:24:21.433
  Jun 13 07:24:21.436: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-configmaps-f209e1be-8946-4f16-9b19-7c619de7c83b container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:24:21.454
  Jun 13 07:24:21.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6929" for this suite. @ 06/13/24 07:24:21.492
â€¢ [6.292 seconds]
------------------------------
S
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/13/24 07:24:21.509
  Jun 13 07:24:21.509: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:24:21.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:21.625
  E0613 07:24:21.634426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:21.665
  STEP: creating a Service @ 06/13/24 07:24:21.696
  STEP: watching for the Service to be added @ 06/13/24 07:24:21.791
  Jun 13 07:24:21.809: INFO: Found Service test-service-h7hxg in namespace services-2302 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31548}]
  Jun 13 07:24:21.809: INFO: Service test-service-h7hxg created
  STEP: Getting /status @ 06/13/24 07:24:21.809
  Jun 13 07:24:21.825: INFO: Service test-service-h7hxg has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/13/24 07:24:21.826
  STEP: watching for the Service to be patched @ 06/13/24 07:24:21.843
  Jun 13 07:24:21.854: INFO: observed Service test-service-h7hxg in namespace services-2302 with annotations: map[] & LoadBalancer: {[]}
  Jun 13 07:24:21.854: INFO: Found Service test-service-h7hxg in namespace services-2302 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun 13 07:24:21.854: INFO: Service test-service-h7hxg has service status patched
  STEP: updating the ServiceStatus @ 06/13/24 07:24:21.854
  Jun 13 07:24:21.898: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/13/24 07:24:21.898
  Jun 13 07:24:21.901: INFO: Observed Service test-service-h7hxg in namespace services-2302 with annotations: map[] & Conditions: {[]}
  Jun 13 07:24:21.901: INFO: Observed event: &Service{ObjectMeta:{test-service-h7hxg  services-2302  fbb2fecb-a353-461f-936b-ee69b69a0bba 17064 0 2024-06-13 07:24:21 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-13 07:24:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-13 07:24:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31548,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.120.21,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.120.21],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun 13 07:24:21.901: INFO: Observed event: &Service{ObjectMeta:{test-service-h7hxg  services-2302  fbb2fecb-a353-461f-936b-ee69b69a0bba 17065 0 2024-06-13 07:24:21 +0000 UTC <nil> <nil> map[test-service-static:true] map[field.cattle.io/publicEndpoints:[{"addresses":["203.0.113.1"],"port":80,"protocol":"TCP","serviceName":"services-2302:test-service-h7hxg","allNodes":false}] patchedstatus:true] [] [] [{agent Update v1 2024-06-13 07:24:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:field.cattle.io/publicEndpoints":{}}}} } {e2e.test Update v1 2024-06-13 07:24:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-13 07:24:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31548,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.120.21,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.120.21],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun 13 07:24:21.901: INFO: Found Service test-service-h7hxg in namespace services-2302 with annotations: map[field.cattle.io/publicEndpoints:[{"addresses":["203.0.113.1"],"port":80,"protocol":"TCP","serviceName":"services-2302:test-service-h7hxg","allNodes":false}] patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 07:24:21.901: INFO: Service test-service-h7hxg has service status updated
  STEP: patching the service @ 06/13/24 07:24:21.902
  STEP: watching for the Service to be patched @ 06/13/24 07:24:21.958
  Jun 13 07:24:21.961: INFO: observed Service test-service-h7hxg in namespace services-2302 with labels: map[test-service-static:true]
  Jun 13 07:24:21.964: INFO: observed Service test-service-h7hxg in namespace services-2302 with labels: map[test-service-static:true]
  Jun 13 07:24:21.964: INFO: observed Service test-service-h7hxg in namespace services-2302 with labels: map[test-service-static:true]
  Jun 13 07:24:21.965: INFO: observed Service test-service-h7hxg in namespace services-2302 with labels: map[test-service-static:true]
  Jun 13 07:24:21.965: INFO: Found Service test-service-h7hxg in namespace services-2302 with labels: map[test-service:patched test-service-static:true]
  Jun 13 07:24:21.965: INFO: Service test-service-h7hxg patched
  STEP: deleting the service @ 06/13/24 07:24:21.965
  STEP: watching for the Service to be deleted @ 06/13/24 07:24:22.005
  Jun 13 07:24:22.009: INFO: Observed event: ADDED
  Jun 13 07:24:22.009: INFO: Observed event: MODIFIED
  Jun 13 07:24:22.009: INFO: Observed event: MODIFIED
  Jun 13 07:24:22.010: INFO: Observed event: MODIFIED
  Jun 13 07:24:22.010: INFO: Observed event: MODIFIED
  Jun 13 07:24:22.010: INFO: Found Service test-service-h7hxg in namespace services-2302 with labels: map[test-service:patched test-service-static:true] & annotations: map[field.cattle.io/publicEndpoints:[{"addresses":["203.0.113.1"],"port":80,"protocol":"TCP","serviceName":"services-2302:test-service-h7hxg","allNodes":false}] patchedstatus:true]
  Jun 13 07:24:22.010: INFO: Service test-service-h7hxg deleted
  Jun 13 07:24:22.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2302" for this suite. @ 06/13/24 07:24:22.017
â€¢ [0.522 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/13/24 07:24:22.031
  Jun 13 07:24:22.031: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:24:22.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:22.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:22.135
  STEP: Creating secret with name secret-test-map-22efd451-708a-4216-bde8-feb2f9c409a2 @ 06/13/24 07:24:22.159
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:24:22.184
  E0613 07:24:22.637656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:23.635481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:24.636346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:25.637688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:24:26.349
  Jun 13 07:24:26.377: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-a16a0db5-8714-4a6d-8361-525f5d81b452 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:24:26.41
  Jun 13 07:24:26.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7025" for this suite. @ 06/13/24 07:24:26.449
â€¢ [4.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/13/24 07:24:26.49
  Jun 13 07:24:26.490: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 07:24:26.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:26.609
  E0613 07:24:26.639231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:26.681
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/13/24 07:24:26.719
  E0613 07:24:27.642437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:28.642470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:29.642589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:30.642830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:31.644147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:32.644220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:24:33.143
  Jun 13 07:24:33.145: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-04668069-aa1e-43ff-974d-bd4c23c995d9 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 07:24:33.161
  Jun 13 07:24:33.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3349" for this suite. @ 06/13/24 07:24:33.212
â€¢ [6.735 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/13/24 07:24:33.227
  Jun 13 07:24:33.227: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:24:33.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:33.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:33.312
  STEP: creating Agnhost RC @ 06/13/24 07:24:33.318
  Jun 13 07:24:33.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-3324 create -f -'
  E0613 07:24:33.644966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:33.707: INFO: stderr: ""
  Jun 13 07:24:33.707: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/13/24 07:24:33.708
  E0613 07:24:34.645169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:34.714: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 07:24:34.714: INFO: Found 0 / 1
  E0613 07:24:35.645513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:35.729: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 07:24:35.729: INFO: Found 0 / 1
  E0613 07:24:36.645621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:36.712: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 07:24:36.712: INFO: Found 1 / 1
  Jun 13 07:24:36.712: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/13/24 07:24:36.712
  Jun 13 07:24:36.717: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 07:24:36.717: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 07:24:36.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-3324 patch pod agnhost-primary-vsrf5 -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun 13 07:24:36.889: INFO: stderr: ""
  Jun 13 07:24:36.889: INFO: stdout: "pod/agnhost-primary-vsrf5 patched\n"
  STEP: checking annotations @ 06/13/24 07:24:36.889
  Jun 13 07:24:36.902: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 07:24:36.902: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 07:24:36.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3324" for this suite. @ 06/13/24 07:24:36.906
â€¢ [3.687 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/13/24 07:24:36.915
  Jun 13 07:24:36.915: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:24:36.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:36.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:37
  STEP: fetching services @ 06/13/24 07:24:37.012
  Jun 13 07:24:37.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5111" for this suite. @ 06/13/24 07:24:37.062
â€¢ [0.178 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/13/24 07:24:37.093
  Jun 13 07:24:37.093: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:24:37.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:37.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:37.189
  Jun 13 07:24:37.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-4282 version'
  Jun 13 07:24:37.318: INFO: stderr: ""
  Jun 13 07:24:37.318: INFO: stdout: "Client Version: v1.29.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.5\n"
  Jun 13 07:24:37.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4282" for this suite. @ 06/13/24 07:24:37.324
â€¢ [0.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/13/24 07:24:37.336
  Jun 13 07:24:37.336: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 07:24:37.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:37.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:37.407
  STEP: creating pod @ 06/13/24 07:24:37.423
  E0613 07:24:37.649623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:38.648177      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:39.649610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:40.652239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:41.481: INFO: Pod pod-hostip-d5dac40a-c006-4b17-91ae-822854b5e93e has hostIP: 172.31.12.94
  Jun 13 07:24:41.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4144" for this suite. @ 06/13/24 07:24:41.485
â€¢ [4.170 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/13/24 07:24:41.506
  Jun 13 07:24:41.506: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-webhook @ 06/13/24 07:24:41.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:41.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:41.595
  STEP: Setting up server cert @ 06/13/24 07:24:41.599
  E0613 07:24:41.651297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/13/24 07:24:42.282
  STEP: Deploying the custom resource conversion webhook pod @ 06/13/24 07:24:42.366
  STEP: Wait for the deployment to be ready @ 06/13/24 07:24:42.444
  Jun 13 07:24:42.488: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0613 07:24:42.654854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:43.655316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:44.528: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:24:44.655770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:45.661503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:46.606: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:24:46.662194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:47.662469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:48.538: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:24:48.663002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:49.663204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:50.545: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 24, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:24:50.664289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:51.664374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 07:24:52.549
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:24:52.61
  E0613 07:24:52.665614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:53.611: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 13 07:24:53.623: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 07:24:53.665743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:54.667769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:24:55.667930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/13/24 07:24:56.604
  E0613 07:24:56.668834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create a v2 custom resource @ 06/13/24 07:24:56.734
  STEP: List CRs in v1 @ 06/13/24 07:24:56.776
  STEP: List CRs in v2 @ 06/13/24 07:24:56.93
  E0613 07:24:57.669450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:24:57.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1155" for this suite. @ 06/13/24 07:24:57.845
â€¢ [16.418 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/13/24 07:24:57.932
  Jun 13 07:24:57.932: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename events @ 06/13/24 07:24:57.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:58.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:58.216
  STEP: Create set of events @ 06/13/24 07:24:58.266
  STEP: get a list of Events with a label in the current namespace @ 06/13/24 07:24:58.367
  STEP: delete a list of events @ 06/13/24 07:24:58.398
  Jun 13 07:24:58.398: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/13/24 07:24:58.504
  Jun 13 07:24:58.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-750" for this suite. @ 06/13/24 07:24:58.522
â€¢ [0.644 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/13/24 07:24:58.578
  Jun 13 07:24:58.583: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 07:24:58.617
  E0613 07:24:58.670138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:58.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:58.913
  Jun 13 07:24:59.309: INFO: Endpoints addresses: [172.31.11.204] , ports: [6443]
  Jun 13 07:24:59.310: INFO: EndpointSlices addresses: [172.31.11.204] , ports: [6443]
  Jun 13 07:24:59.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7993" for this suite. @ 06/13/24 07:24:59.361
â€¢ [0.818 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/13/24 07:24:59.396
  Jun 13 07:24:59.396: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:24:59.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:24:59.614
  E0613 07:24:59.670781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:24:59.703
  STEP: Creating a pod to test downward api env vars @ 06/13/24 07:24:59.881
  E0613 07:25:00.671605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:01.673578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:02.674252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:03.675396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:04.679591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:05.677518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:25:06.116
  Jun 13 07:25:06.119: INFO: Trying to get logs from node ip-172-31-12-94 pod downward-api-d68a7d8c-08dd-444d-b7f6-a4dd3b5fca87 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 07:25:06.133
  Jun 13 07:25:06.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7061" for this suite. @ 06/13/24 07:25:06.161
â€¢ [6.775 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/13/24 07:25:06.171
  Jun 13 07:25:06.171: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:25:06.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:25:06.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:25:06.349
  STEP: creating a ConfigMap @ 06/13/24 07:25:06.363
  STEP: fetching the ConfigMap @ 06/13/24 07:25:06.405
  STEP: patching the ConfigMap @ 06/13/24 07:25:06.44
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/13/24 07:25:06.47
  STEP: deleting the ConfigMap by collection with a label selector @ 06/13/24 07:25:06.498
  STEP: listing all ConfigMaps in test namespace @ 06/13/24 07:25:06.517
  Jun 13 07:25:06.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8873" for this suite. @ 06/13/24 07:25:06.534
â€¢ [0.390 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/13/24 07:25:06.568
  Jun 13 07:25:06.568: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename events @ 06/13/24 07:25:06.574
  E0613 07:25:06.678108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:25:06.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:25:06.745
  STEP: creating a test event @ 06/13/24 07:25:06.771
  STEP: listing events in all namespaces @ 06/13/24 07:25:06.792
  STEP: listing events in test namespace @ 06/13/24 07:25:06.826
  STEP: listing events with field selection filtering on source @ 06/13/24 07:25:06.865
  STEP: listing events with field selection filtering on reportingController @ 06/13/24 07:25:06.869
  STEP: getting the test event @ 06/13/24 07:25:06.882
  STEP: patching the test event @ 06/13/24 07:25:06.89
  STEP: getting the test event @ 06/13/24 07:25:06.946
  STEP: updating the test event @ 06/13/24 07:25:06.958
  STEP: getting the test event @ 06/13/24 07:25:06.968
  STEP: deleting the test event @ 06/13/24 07:25:06.98
  STEP: listing events in all namespaces @ 06/13/24 07:25:06.998
  STEP: listing events in test namespace @ 06/13/24 07:25:07.042
  Jun 13 07:25:07.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7897" for this suite. @ 06/13/24 07:25:07.107
â€¢ [0.562 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/13/24 07:25:07.13
  Jun 13 07:25:07.130: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 07:25:07.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:25:07.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:25:07.234
  STEP: Performing setup for networking test in namespace pod-network-test-7347 @ 06/13/24 07:25:07.258
  STEP: creating a selector @ 06/13/24 07:25:07.258
  STEP: Creating the service pods in kubernetes @ 06/13/24 07:25:07.258
  Jun 13 07:25:07.258: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0613 07:25:07.685845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:08.686719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:09.686929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:10.686806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:11.687172      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:12.687366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:13.688040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:14.690128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:15.696176      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:16.696920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:17.697590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:18.697688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:19.698803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:20.698664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:21.699433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:22.702653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:23.703620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:24.703958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:25.705695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:26.706632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:27.707837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:28.710711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/13/24 07:25:29.633
  E0613 07:25:29.711057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:30.711102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:31.712611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:32.712155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:25:33.688: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 07:25:33.688: INFO: Breadth first check of 10.42.0.31 on host 172.31.11.204...
  Jun 13 07:25:33.691: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.116:9080/dial?request=hostname&protocol=http&host=10.42.0.31&port=8083&tries=1'] Namespace:pod-network-test-7347 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:25:33.691: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:25:33.692: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:25:33.692: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7347/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.31%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0613 07:25:33.713222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:34.714210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:35.715883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:36.716545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:37.716894      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:38.717431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:25:38.873: INFO: Waiting for responses: map[netserver-0:{}]
  E0613 07:25:39.717623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:40.718628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:25:40.874: INFO: 
  Output of kubectl describe pod pod-network-test-7347/netserver-0:

  Jun 13 07:25:40.874: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=pod-network-test-7347 describe pod netserver-0 --namespace=pod-network-test-7347'
  Jun 13 07:25:41.038: INFO: stderr: ""
  Jun 13 07:25:41.038: INFO: stdout: "Name:             netserver-0\nNamespace:        pod-network-test-7347\nPriority:         0\nService Account:  default\nNode:             ip-172-31-11-204/172.31.11.204\nStart Time:       Thu, 13 Jun 2024 07:25:07 +0000\nLabels:           selector-fd540bfd-c485-44e2-bcb8-4b1aec048be7=true\nAnnotations:      cni.projectcalico.org/containerID: 5aaf0005c365b68daa5a743dabec53a958dfed13eb6ee8d2651098554ee9ffe5\n                  cni.projectcalico.org/podIP: 10.42.0.31/32\n                  cni.projectcalico.org/podIPs: 10.42.0.31/32\nStatus:           Running\nIP:               10.42.0.31\nIPs:\n  IP:  10.42.0.31\nContainers:\n  webserver:\n    Container ID:  docker://a6947d74a87209f5cb3c0a759459523bce407e48d58c8b5b86a83e2fdb06a1fe\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Thu, 13 Jun 2024 07:25:09 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-f7fqg (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-f7fqg:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-11-204\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-7347/netserver-0 to ip-172-31-11-204\n  Normal  Pulled     32s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    32s   kubelet            Created container webserver\n  Normal  Started    32s   kubelet            Started container webserver\n"
  Jun 13 07:25:41.038: INFO: Name:             netserver-0
  Namespace:        pod-network-test-7347
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-11-204/172.31.11.204
  Start Time:       Thu, 13 Jun 2024 07:25:07 +0000
  Labels:           selector-fd540bfd-c485-44e2-bcb8-4b1aec048be7=true
  Annotations:      cni.projectcalico.org/containerID: 5aaf0005c365b68daa5a743dabec53a958dfed13eb6ee8d2651098554ee9ffe5
                    cni.projectcalico.org/podIP: 10.42.0.31/32
                    cni.projectcalico.org/podIPs: 10.42.0.31/32
  Status:           Running
  IP:               10.42.0.31
  IPs:
    IP:  10.42.0.31
  Containers:
    webserver:
      Container ID:  docker://a6947d74a87209f5cb3c0a759459523bce407e48d58c8b5b86a83e2fdb06a1fe
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Thu, 13 Jun 2024 07:25:09 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-f7fqg (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-f7fqg:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-11-204
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-7347/netserver-0 to ip-172-31-11-204
    Normal  Pulled     32s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    32s   kubelet            Created container webserver
    Normal  Started    32s   kubelet            Started container webserver

  Jun 13 07:25:41.058: INFO: 
  Output of kubectl describe pod pod-network-test-7347/netserver-1:

  Jun 13 07:25:41.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=pod-network-test-7347 describe pod netserver-1 --namespace=pod-network-test-7347'
  Jun 13 07:25:41.266: INFO: stderr: ""
  Jun 13 07:25:41.266: INFO: stdout: "Name:             netserver-1\nNamespace:        pod-network-test-7347\nPriority:         0\nService Account:  default\nNode:             ip-172-31-12-94/172.31.12.94\nStart Time:       Thu, 13 Jun 2024 07:25:07 +0000\nLabels:           selector-fd540bfd-c485-44e2-bcb8-4b1aec048be7=true\nAnnotations:      cni.projectcalico.org/containerID: be9b3ffb97189f4baa0250bee222024adbeb9c6aa83f3b1fe6433bee94e4763a\n                  cni.projectcalico.org/podIP: 10.42.1.115/32\n                  cni.projectcalico.org/podIPs: 10.42.1.115/32\nStatus:           Running\nIP:               10.42.1.115\nIPs:\n  IP:  10.42.1.115\nContainers:\n  webserver:\n    Container ID:  docker://f4139f6d1fbdc8dd5076530d533a3cd17036c0a65c78300d64fa6f0b37dfe094\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Thu, 13 Jun 2024 07:25:09 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-468bh (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-468bh:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-12-94\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-7347/netserver-1 to ip-172-31-12-94\n  Normal  Pulled     32s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    32s   kubelet            Created container webserver\n  Normal  Started    32s   kubelet            Started container webserver\n"
  Jun 13 07:25:41.266: INFO: Name:             netserver-1
  Namespace:        pod-network-test-7347
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-12-94/172.31.12.94
  Start Time:       Thu, 13 Jun 2024 07:25:07 +0000
  Labels:           selector-fd540bfd-c485-44e2-bcb8-4b1aec048be7=true
  Annotations:      cni.projectcalico.org/containerID: be9b3ffb97189f4baa0250bee222024adbeb9c6aa83f3b1fe6433bee94e4763a
                    cni.projectcalico.org/podIP: 10.42.1.115/32
                    cni.projectcalico.org/podIPs: 10.42.1.115/32
  Status:           Running
  IP:               10.42.1.115
  IPs:
    IP:  10.42.1.115
  Containers:
    webserver:
      Container ID:  docker://f4139f6d1fbdc8dd5076530d533a3cd17036c0a65c78300d64fa6f0b37dfe094
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Thu, 13 Jun 2024 07:25:09 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-468bh (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-468bh:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-12-94
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-7347/netserver-1 to ip-172-31-12-94
    Normal  Pulled     32s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    32s   kubelet            Created container webserver
    Normal  Started    32s   kubelet            Started container webserver

  Jun 13 07:25:41.267: INFO: 
  Output of kubectl describe pod pod-network-test-7347/netserver-2:

  Jun 13 07:25:41.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=pod-network-test-7347 describe pod netserver-2 --namespace=pod-network-test-7347'
  Jun 13 07:25:41.369: INFO: stderr: ""
  Jun 13 07:25:41.369: INFO: stdout: "Name:             netserver-2\nNamespace:        pod-network-test-7347\nPriority:         0\nService Account:  default\nNode:             ip-172-31-2-92/172.31.2.92\nStart Time:       Thu, 13 Jun 2024 07:25:07 +0000\nLabels:           selector-fd540bfd-c485-44e2-bcb8-4b1aec048be7=true\nAnnotations:      cni.projectcalico.org/containerID: c2aa5d4a7e5983b78d4cdc8e9a82b98805835df57d612b1f0049bea9017c19f1\n                  cni.projectcalico.org/podIP: 10.42.2.36/32\n                  cni.projectcalico.org/podIPs: 10.42.2.36/32\nStatus:           Running\nIP:               10.42.2.36\nIPs:\n  IP:  10.42.2.36\nContainers:\n  webserver:\n    Container ID:  docker://65e69a6a6d0c5141ebb56e15acac4d4c54ad971babbd66d1b3af060627fee725\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Thu, 13 Jun 2024 07:25:09 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-txkgb (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-txkgb:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-2-92\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-7347/netserver-2 to ip-172-31-2-92\n  Normal  Pulled     33s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    33s   kubelet            Created container webserver\n  Normal  Started    32s   kubelet            Started container webserver\n"
  Jun 13 07:25:41.369: INFO: Name:             netserver-2
  Namespace:        pod-network-test-7347
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-2-92/172.31.2.92
  Start Time:       Thu, 13 Jun 2024 07:25:07 +0000
  Labels:           selector-fd540bfd-c485-44e2-bcb8-4b1aec048be7=true
  Annotations:      cni.projectcalico.org/containerID: c2aa5d4a7e5983b78d4cdc8e9a82b98805835df57d612b1f0049bea9017c19f1
                    cni.projectcalico.org/podIP: 10.42.2.36/32
                    cni.projectcalico.org/podIPs: 10.42.2.36/32
  Status:           Running
  IP:               10.42.2.36
  IPs:
    IP:  10.42.2.36
  Containers:
    webserver:
      Container ID:  docker://65e69a6a6d0c5141ebb56e15acac4d4c54ad971babbd66d1b3af060627fee725
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Thu, 13 Jun 2024 07:25:09 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-txkgb (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-txkgb:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-2-92
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-7347/netserver-2 to ip-172-31-2-92
    Normal  Pulled     33s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    33s   kubelet            Created container webserver
    Normal  Started    32s   kubelet            Started container webserver

  Jun 13 07:25:41.370: INFO: encountered error during dial (did not find expected responses... 
  Tries 1
  Command curl -g -q -s 'http://10.42.1.116:9080/dial?request=hostname&protocol=http&host=10.42.0.31&port=8083&tries=1'
  retrieved map[]
  expected map[netserver-0:{}])
  Jun 13 07:25:41.370: INFO: ...failed...will try again in next pass
  Jun 13 07:25:41.370: INFO: Breadth first check of 10.42.1.115 on host 172.31.12.94...
  Jun 13 07:25:41.374: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.116:9080/dial?request=hostname&protocol=http&host=10.42.1.115&port=8083&tries=1'] Namespace:pod-network-test-7347 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:25:41.374: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:25:41.374: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:25:41.374: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7347/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.115%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 07:25:41.549: INFO: Waiting for responses: map[]
  Jun 13 07:25:41.549: INFO: reached 10.42.1.115 after 0/1 tries
  Jun 13 07:25:41.549: INFO: Breadth first check of 10.42.2.36 on host 172.31.2.92...
  Jun 13 07:25:41.552: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.116:9080/dial?request=hostname&protocol=http&host=10.42.2.36&port=8083&tries=1'] Namespace:pod-network-test-7347 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:25:41.552: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:25:41.553: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:25:41.553: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7347/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.36%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 07:25:41.716: INFO: Waiting for responses: map[]
  Jun 13 07:25:41.717: INFO: reached 10.42.2.36 after 0/1 tries
  Jun 13 07:25:41.717: INFO: Going to retry 1 out of 3 pods....
  Jun 13 07:25:41.717: INFO: Doublechecking 1 pods in host 172.31.11.204 which weren't seen the first time.
  Jun 13 07:25:41.717: INFO: Now attempting to probe pod [[[ 10.42.0.31 ]]]
  Jun 13 07:25:41.721: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.116:9080/dial?request=hostname&protocol=http&host=10.42.0.31&port=8083&tries=1'] Namespace:pod-network-test-7347 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:25:41.721: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:25:41.734: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:25:41.734: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7347/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.116%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.31%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0613 07:25:41.746825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:25:41.935: INFO: Waiting for responses: map[]
  Jun 13 07:25:41.936: INFO: reached 10.42.0.31 after 0/39 tries
  Jun 13 07:25:41.936: INFO: Was able to reach 10.42.0.31 on 172.31.11.204 
  Jun 13 07:25:41.936: INFO: ... Done probing pod [[[ 10.42.0.31 ]]]
  Jun 13 07:25:41.936: INFO: succeeded at polling 3 out of 3 connections
  Jun 13 07:25:41.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7347" for this suite. @ 06/13/24 07:25:41.949
â€¢ [34.827 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/13/24 07:25:41.958
  Jun 13 07:25:41.958: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename watch @ 06/13/24 07:25:41.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:25:42.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:25:42.05
  STEP: getting a starting resourceVersion @ 06/13/24 07:25:42.061
  STEP: starting a background goroutine to produce watch events @ 06/13/24 07:25:42.068
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/13/24 07:25:42.068
  E0613 07:25:42.746813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:43.747546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:44.747975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:25:44.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2312" for this suite. @ 06/13/24 07:25:44.817
â€¢ [2.911 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/13/24 07:25:44.87
  Jun 13 07:25:44.870: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:25:44.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:25:44.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:25:44.964
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:25:44.972
  E0613 07:25:45.748950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:46.749517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:47.751794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:48.754040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:49.754346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:50.754673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:25:51.041
  Jun 13 07:25:51.056: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-f8f176c0-6767-4a91-9894-e5fca0f08f36 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:25:51.071
  Jun 13 07:25:51.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2920" for this suite. @ 06/13/24 07:25:51.121
â€¢ [6.285 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/13/24 07:25:51.155
  Jun 13 07:25:51.155: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename job @ 06/13/24 07:25:51.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:25:51.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:25:51.271
  STEP: Creating a job @ 06/13/24 07:25:51.31
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/13/24 07:25:51.337
  E0613 07:25:51.756790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:52.761513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:53.763729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:54.764031      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/13/24 07:25:55.343
  STEP: updating /status @ 06/13/24 07:25:55.365
  STEP: get /status @ 06/13/24 07:25:55.389
  Jun 13 07:25:55.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6017" for this suite. @ 06/13/24 07:25:55.404
â€¢ [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/13/24 07:25:55.415
  Jun 13 07:25:55.415: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 07:25:55.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:25:55.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:25:55.519
  STEP: Creating pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081 @ 06/13/24 07:25:55.53
  E0613 07:25:55.764161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:56.764782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:57.765675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:25:58.765777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 07:25:59.642
  Jun 13 07:25:59.645: INFO: Initial restart count of pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 is 0
  Jun 13 07:25:59.648: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:25:59.766600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:00.766696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:01.674: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:01.768382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:02.768794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:03.697: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:03.768975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:04.770784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:05.701: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:05.770860      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:06.773076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:07.710: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:07.773972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:08.777542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:09.720: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:09.778654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:10.778730      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:11.728: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:11.778996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:12.780210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:13.742: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:13.780741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:14.781608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:15.776: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:15.781771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:16.783739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:17.781: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  Jun 13 07:26:17.790: INFO: Restart count of pod container-probe-9081/liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 is now 1 (18.145502036s elapsed)
  E0613 07:26:17.790525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:18.794938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:19.797586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:19.805: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:20.798613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:21.799006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:21.827: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:22.801554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:23.801652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:23.832: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:24.802163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:25.803159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:25.836: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:26.803741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:27.804106      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:27.840: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:28.804760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:29.805137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:29.845: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:30.808395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:31.808481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:31.851: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:32.812279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:33.809513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:33.856: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:34.810412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:35.811429      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:35.860: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:36.813535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:37.813797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:37.870: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  Jun 13 07:26:37.870: INFO: Restart count of pod container-probe-9081/liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 is now 2 (38.225278115s elapsed)
  E0613 07:26:38.814581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:39.820415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:39.877: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:40.821610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:41.821692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:41.888: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:42.822818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:43.822917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:43.895: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:44.823923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:45.824061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:45.901: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:46.824587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:47.824879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:47.907: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:48.825836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:49.825547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:49.912: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:50.827489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:51.827748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:51.923: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:52.829845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:53.830044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:53.936: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:54.830589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:55.830763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:55.956: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:26:56.830906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:57.830976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:57.962: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  Jun 13 07:26:57.962: INFO: Restart count of pod container-probe-9081/liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 is now 3 (58.316763548s elapsed)
  E0613 07:26:58.832006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:26:59.833513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:26:59.969: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:00.834352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:01.835379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:01.984: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:02.835504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:03.835589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:03.993: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:04.836111      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:05.837432      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:05.997: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:06.837575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:07.838610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:08.007: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:08.838804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:09.839395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:10.027: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:10.840246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:11.842084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:12.031: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:12.842218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:13.842840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:14.044: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:14.843888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:15.844018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:16.057: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:16.844769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:17.845065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:18.078: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  Jun 13 07:27:18.082: INFO: Restart count of pod container-probe-9081/liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 is now 4 (1m18.436783789s elapsed)
  E0613 07:27:18.845768      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:19.846651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:20.086: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:20.846823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:21.847783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:22.116: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:22.848502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:23.851176      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:24.121: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:24.853612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:25.855111      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:26.126: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:26.855503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:27.857132      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:28.130: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:28.858032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:29.858149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:30.133: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:30.858265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:31.858843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:32.143: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:32.861213      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:33.861332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:34.148: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:34.861551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:35.862609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:36.263: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:36.862723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:37.865533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:38.269: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:38.865972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:39.866329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:40.275: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:40.870848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:41.873557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:42.279: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:42.873745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:43.874792      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:44.283: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:44.874825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:45.874874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:46.290: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:46.875526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:47.875767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:48.299: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:48.875865      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:49.877583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:50.322: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:50.878158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:51.882789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:52.330: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:52.884194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:53.884552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:54.338: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:54.884753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:55.884995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:56.359: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:56.885036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:57.885324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:27:58.373: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:27:58.886677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:27:59.888189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:00.384: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:00.889519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:01.894398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:02.401: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:02.894217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:03.895173      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:04.414: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:04.895466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:05.897598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:06.420: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:06.897584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:07.898376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:08.428: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:08.898471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:09.898734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:10.435: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:10.899182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:11.900048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:12.440: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:12.900141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:13.905629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:14.454: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:14.906338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:15.906639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:16.478: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:16.906740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:17.906889      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:18.483: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  E0613 07:28:18.909103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:19.917591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:20.491: INFO: Get pod liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 in namespace container-probe-9081
  Jun 13 07:28:20.491: INFO: Restart count of pod container-probe-9081/liveness-e0dfc193-8d32-4f37-978d-370cc015bec0 is now 5 (2m20.846644162s elapsed)
  STEP: deleting the pod @ 06/13/24 07:28:20.492
  Jun 13 07:28:20.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9081" for this suite. @ 06/13/24 07:28:20.519
â€¢ [145.118 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/13/24 07:28:20.534
  Jun 13 07:28:20.534: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pod-network-test @ 06/13/24 07:28:20.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:28:20.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:28:20.662
  STEP: Performing setup for networking test in namespace pod-network-test-1726 @ 06/13/24 07:28:20.671
  STEP: creating a selector @ 06/13/24 07:28:20.672
  STEP: Creating the service pods in kubernetes @ 06/13/24 07:28:20.672
  Jun 13 07:28:20.672: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0613 07:28:20.913148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:21.913490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:22.913601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:23.914565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:24.915073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:25.920339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:26.920339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:27.920460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:28.920507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:29.921414      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:30.921535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:31.921776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:32.921725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:33.922461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:34.922729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:35.923626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:36.923784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:37.924067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:38.924245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:39.924330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:40.924565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:41.925340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:42.925674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/13/24 07:28:43.029
  E0613 07:28:43.926422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:44.929188      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:45.927703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:46.929564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:47.137: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Jun 13 07:28:47.137: INFO: Breadth first check of 10.42.0.32 on host 172.31.11.204...
  Jun 13 07:28:47.149: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.121:9080/dial?request=hostname&protocol=udp&host=10.42.0.32&port=8081&tries=1'] Namespace:pod-network-test-1726 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:28:47.150: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:28:47.150: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:28:47.166: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1726/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.32%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0613 07:28:47.930383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:48.931984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:49.931518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:50.931917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:51.932141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:52.320: INFO: Waiting for responses: map[netserver-0:{}]
  E0613 07:28:52.932418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:53.932890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:54.321: INFO: 
  Output of kubectl describe pod pod-network-test-1726/netserver-0:

  Jun 13 07:28:54.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=pod-network-test-1726 describe pod netserver-0 --namespace=pod-network-test-1726'
  Jun 13 07:28:54.457: INFO: stderr: ""
  Jun 13 07:28:54.457: INFO: stdout: "Name:             netserver-0\nNamespace:        pod-network-test-1726\nPriority:         0\nService Account:  default\nNode:             ip-172-31-11-204/172.31.11.204\nStart Time:       Thu, 13 Jun 2024 07:28:20 +0000\nLabels:           selector-8df2d0eb-a0ae-4174-966e-28f631e3bc3b=true\nAnnotations:      cni.projectcalico.org/containerID: 1a9c3738bf0cd2f1f0075763e02caa166ffa5c4c80cb55ced3b7f52c39bf43cc\n                  cni.projectcalico.org/podIP: 10.42.0.32/32\n                  cni.projectcalico.org/podIPs: 10.42.0.32/32\nStatus:           Running\nIP:               10.42.0.32\nIPs:\n  IP:  10.42.0.32\nContainers:\n  webserver:\n    Container ID:  docker://080c778878b7bae75bc1e8799f3c9fb368c700304e9640db44df67527f384867\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Thu, 13 Jun 2024 07:28:23 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7sbzc (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-7sbzc:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-11-204\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-1726/netserver-0 to ip-172-31-11-204\n  Normal  Pulled     32s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    31s   kubelet            Created container webserver\n  Normal  Started    31s   kubelet            Started container webserver\n"
  Jun 13 07:28:54.457: INFO: Name:             netserver-0
  Namespace:        pod-network-test-1726
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-11-204/172.31.11.204
  Start Time:       Thu, 13 Jun 2024 07:28:20 +0000
  Labels:           selector-8df2d0eb-a0ae-4174-966e-28f631e3bc3b=true
  Annotations:      cni.projectcalico.org/containerID: 1a9c3738bf0cd2f1f0075763e02caa166ffa5c4c80cb55ced3b7f52c39bf43cc
                    cni.projectcalico.org/podIP: 10.42.0.32/32
                    cni.projectcalico.org/podIPs: 10.42.0.32/32
  Status:           Running
  IP:               10.42.0.32
  IPs:
    IP:  10.42.0.32
  Containers:
    webserver:
      Container ID:  docker://080c778878b7bae75bc1e8799f3c9fb368c700304e9640db44df67527f384867
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Thu, 13 Jun 2024 07:28:23 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7sbzc (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-7sbzc:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-11-204
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-1726/netserver-0 to ip-172-31-11-204
    Normal  Pulled     32s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    31s   kubelet            Created container webserver
    Normal  Started    31s   kubelet            Started container webserver

  Jun 13 07:28:54.457: INFO: 
  Output of kubectl describe pod pod-network-test-1726/netserver-1:

  Jun 13 07:28:54.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=pod-network-test-1726 describe pod netserver-1 --namespace=pod-network-test-1726'
  Jun 13 07:28:54.595: INFO: stderr: ""
  Jun 13 07:28:54.595: INFO: stdout: "Name:             netserver-1\nNamespace:        pod-network-test-1726\nPriority:         0\nService Account:  default\nNode:             ip-172-31-12-94/172.31.12.94\nStart Time:       Thu, 13 Jun 2024 07:28:20 +0000\nLabels:           selector-8df2d0eb-a0ae-4174-966e-28f631e3bc3b=true\nAnnotations:      cni.projectcalico.org/containerID: 98be6641f2c2286bdf5ca96e0380344ee1f810a0dbe3acf14d3534b74fbb6fe5\n                  cni.projectcalico.org/podIP: 10.42.1.120/32\n                  cni.projectcalico.org/podIPs: 10.42.1.120/32\nStatus:           Running\nIP:               10.42.1.120\nIPs:\n  IP:  10.42.1.120\nContainers:\n  webserver:\n    Container ID:  docker://710cfb98c8538b6248b47cb13eae0603f36ba42753b2ea67f211c93c3d2b2a80\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Thu, 13 Jun 2024 07:28:22 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xfzrv (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-xfzrv:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-12-94\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-1726/netserver-1 to ip-172-31-12-94\n  Normal  Pulled     32s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    32s   kubelet            Created container webserver\n  Normal  Started    32s   kubelet            Started container webserver\n"
  Jun 13 07:28:54.595: INFO: Name:             netserver-1
  Namespace:        pod-network-test-1726
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-12-94/172.31.12.94
  Start Time:       Thu, 13 Jun 2024 07:28:20 +0000
  Labels:           selector-8df2d0eb-a0ae-4174-966e-28f631e3bc3b=true
  Annotations:      cni.projectcalico.org/containerID: 98be6641f2c2286bdf5ca96e0380344ee1f810a0dbe3acf14d3534b74fbb6fe5
                    cni.projectcalico.org/podIP: 10.42.1.120/32
                    cni.projectcalico.org/podIPs: 10.42.1.120/32
  Status:           Running
  IP:               10.42.1.120
  IPs:
    IP:  10.42.1.120
  Containers:
    webserver:
      Container ID:  docker://710cfb98c8538b6248b47cb13eae0603f36ba42753b2ea67f211c93c3d2b2a80
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Thu, 13 Jun 2024 07:28:22 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-xfzrv (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-xfzrv:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-12-94
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-1726/netserver-1 to ip-172-31-12-94
    Normal  Pulled     32s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    32s   kubelet            Created container webserver
    Normal  Started    32s   kubelet            Started container webserver

  Jun 13 07:28:54.595: INFO: 
  Output of kubectl describe pod pod-network-test-1726/netserver-2:

  Jun 13 07:28:54.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=pod-network-test-1726 describe pod netserver-2 --namespace=pod-network-test-1726'
  Jun 13 07:28:54.785: INFO: stderr: ""
  Jun 13 07:28:54.785: INFO: stdout: "Name:             netserver-2\nNamespace:        pod-network-test-1726\nPriority:         0\nService Account:  default\nNode:             ip-172-31-2-92/172.31.2.92\nStart Time:       Thu, 13 Jun 2024 07:28:20 +0000\nLabels:           selector-8df2d0eb-a0ae-4174-966e-28f631e3bc3b=true\nAnnotations:      cni.projectcalico.org/containerID: a2cf9b86d31c9f03b561a5f081da25304407c75a318a62f925c0e4b8827af170\n                  cni.projectcalico.org/podIP: 10.42.2.38/32\n                  cni.projectcalico.org/podIPs: 10.42.2.38/32\nStatus:           Running\nIP:               10.42.2.38\nIPs:\n  IP:  10.42.2.38\nContainers:\n  webserver:\n    Container ID:  docker://e37c3596ef7375f655ef12a90be641b98ea5e2fcc9797f7e284ded386a398b86\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Thu, 13 Jun 2024 07:28:23 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-v2zhl (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-v2zhl:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-2-92\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-1726/netserver-2 to ip-172-31-2-92\n  Normal  Pulled     32s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    32s   kubelet            Created container webserver\n  Normal  Started    31s   kubelet            Started container webserver\n"
  Jun 13 07:28:54.785: INFO: Name:             netserver-2
  Namespace:        pod-network-test-1726
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-2-92/172.31.2.92
  Start Time:       Thu, 13 Jun 2024 07:28:20 +0000
  Labels:           selector-8df2d0eb-a0ae-4174-966e-28f631e3bc3b=true
  Annotations:      cni.projectcalico.org/containerID: a2cf9b86d31c9f03b561a5f081da25304407c75a318a62f925c0e4b8827af170
                    cni.projectcalico.org/podIP: 10.42.2.38/32
                    cni.projectcalico.org/podIPs: 10.42.2.38/32
  Status:           Running
  IP:               10.42.2.38
  IPs:
    IP:  10.42.2.38
  Containers:
    webserver:
      Container ID:  docker://e37c3596ef7375f655ef12a90be641b98ea5e2fcc9797f7e284ded386a398b86
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Thu, 13 Jun 2024 07:28:23 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-v2zhl (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-v2zhl:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-2-92
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-1726/netserver-2 to ip-172-31-2-92
    Normal  Pulled     32s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    32s   kubelet            Created container webserver
    Normal  Started    31s   kubelet            Started container webserver

  Jun 13 07:28:54.786: INFO: encountered error during dial (did not find expected responses... 
  Tries 1
  Command curl -g -q -s 'http://10.42.1.121:9080/dial?request=hostname&protocol=udp&host=10.42.0.32&port=8081&tries=1'
  retrieved map[]
  expected map[netserver-0:{}])
  Jun 13 07:28:54.786: INFO: ...failed...will try again in next pass
  Jun 13 07:28:54.786: INFO: Breadth first check of 10.42.1.120 on host 172.31.12.94...
  Jun 13 07:28:54.799: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.121:9080/dial?request=hostname&protocol=udp&host=10.42.1.120&port=8081&tries=1'] Namespace:pod-network-test-1726 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:28:54.799: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:28:54.800: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:28:54.800: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1726/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.120%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0613 07:28:54.934211      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:28:55.025: INFO: Waiting for responses: map[]
  Jun 13 07:28:55.025: INFO: reached 10.42.1.120 after 0/1 tries
  Jun 13 07:28:55.025: INFO: Breadth first check of 10.42.2.38 on host 172.31.2.92...
  Jun 13 07:28:55.029: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.121:9080/dial?request=hostname&protocol=udp&host=10.42.2.38&port=8081&tries=1'] Namespace:pod-network-test-1726 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:28:55.029: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:28:55.029: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:28:55.029: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1726/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.38%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 07:28:55.362: INFO: Waiting for responses: map[]
  Jun 13 07:28:55.362: INFO: reached 10.42.2.38 after 0/1 tries
  Jun 13 07:28:55.362: INFO: Going to retry 1 out of 3 pods....
  Jun 13 07:28:55.362: INFO: Doublechecking 1 pods in host 172.31.11.204 which weren't seen the first time.
  Jun 13 07:28:55.362: INFO: Now attempting to probe pod [[[ 10.42.0.32 ]]]
  Jun 13 07:28:55.366: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.121:9080/dial?request=hostname&protocol=udp&host=10.42.0.32&port=8081&tries=1'] Namespace:pod-network-test-1726 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:28:55.366: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:28:55.369: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:28:55.369: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1726/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.121%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.32%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun 13 07:28:55.732: INFO: Waiting for responses: map[]
  Jun 13 07:28:55.732: INFO: reached 10.42.0.32 after 0/39 tries
  Jun 13 07:28:55.732: INFO: Was able to reach 10.42.0.32 on 172.31.11.204 
  Jun 13 07:28:55.732: INFO: ... Done probing pod [[[ 10.42.0.32 ]]]
  Jun 13 07:28:55.732: INFO: succeeded at polling 3 out of 3 connections
  Jun 13 07:28:55.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1726" for this suite. @ 06/13/24 07:28:55.736
â€¢ [35.224 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/13/24 07:28:55.761
  Jun 13 07:28:55.761: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:28:55.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:28:55.902
  E0613 07:28:55.935010      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:28:55.935
  STEP: Creating projection with secret that has name projected-secret-test-map-1e139122-34f1-4c21-ab38-b917596aea10 @ 06/13/24 07:28:55.99
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:28:56.003
  E0613 07:28:56.936158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:57.953707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:58.947614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:28:59.947746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:00.947951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:01.951333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:29:02.196
  Jun 13 07:29:02.262: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-secrets-460aba1e-983a-46f7-b7f1-8caa36d36f3e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:29:02.361
  Jun 13 07:29:02.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1120" for this suite. @ 06/13/24 07:29:02.518
â€¢ [6.830 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/13/24 07:29:02.597
  Jun 13 07:29:02.607: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 07:29:02.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:29:02.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:29:02.788
  STEP: apply creating a deployment @ 06/13/24 07:29:02.846
  Jun 13 07:29:02.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 07:29:02.976624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "field-validation-4129" for this suite. @ 06/13/24 07:29:03.001
â€¢ [0.448 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/13/24 07:29:03.04
  Jun 13 07:29:03.040: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:29:03.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:29:03.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:29:03.291
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:29:03.295
  E0613 07:29:03.952018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:04.952249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:05.952715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:06.953752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:29:07.391
  Jun 13 07:29:07.394: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-14f178d9-08fe-40cb-8246-8b09dc66dcee container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:29:07.423
  Jun 13 07:29:07.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-322" for this suite. @ 06/13/24 07:29:07.451
â€¢ [4.428 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/13/24 07:29:07.469
  Jun 13 07:29:07.469: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 07:29:07.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:29:07.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:29:07.56
  Jun 13 07:29:07.675: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0613 07:29:07.953993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:08.953954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:09.954013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:10.954612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:11.954883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:12.688: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 07:29:12.69
  Jun 13 07:29:12.690: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0613 07:29:12.955940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:13.956205      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:14.694: INFO: Creating deployment "test-rollover-deployment"
  Jun 13 07:29:14.733: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0613 07:29:14.965541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:15.969501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:16.751: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun 13 07:29:16.763: INFO: Ensure that both replica sets have 1 created replica
  Jun 13 07:29:16.772: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun 13 07:29:16.784: INFO: Updating deployment test-rollover-deployment
  Jun 13 07:29:16.784: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0613 07:29:16.970327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:17.971852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:18.797: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun 13 07:29:18.806: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun 13 07:29:18.824: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 07:29:18.824: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 17, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:29:18.972836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:19.972918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:20.856: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 07:29:20.856: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:29:20.973626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:21.976968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:22.833: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 07:29:22.835: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:29:22.977263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:23.982582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:24.835: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 07:29:24.835: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:29:24.982992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:25.983115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:26.834: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 07:29:26.834: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:29:26.983308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:27.983417      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:28.834: INFO: all replica sets need to contain the pod-template-hash label
  Jun 13 07:29:28.834: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 29, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:29:28.989518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:29.989629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:30.877: INFO: 
  Jun 13 07:29:30.877: INFO: Ensure that both old replica sets have no replicas
  Jun 13 07:29:30.907: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6f15d71-ce0b-4810-88ef-363cce189261",
      ResourceVersion: (string) (len=5) "18695",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853860554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 07:29:30.964: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "280ec7b9-f880-4c6a-a56c-0e5b2d870e2b",
      ResourceVersion: (string) (len=5) "18684",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853860556,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e6f15d71-ce0b-4810-88ef-363cce189261",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 36 66 31 35 64  37 31 2d 63 65 30 62 2d  |\"e6f15d71-ce0b-|
              00000120  34 38 31 30 2d 38 38 65  66 2d 33 36 33 63 63 65  |4810-88ef-363cce|
              00000130  31 38 39 32 36 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |189261\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 07:29:30.968: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun 13 07:29:30.971: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "daec0c8b-d118-4d7d-be76-7ad41d69f0d4",
      ResourceVersion: (string) (len=5) "18693",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853860547,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e6f15d71-ce0b-4810-88ef-363cce189261",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 36 66 31 35 64 37 31  2d 63 65 30 62 2d 34 38  |e6f15d71-ce0b-48|
              000000c0  31 30 2d 38 38 65 66 2d  33 36 33 63 63 65 31 38  |10-88ef-363cce18|
              000000d0  39 32 36 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |9261\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 07:29:30.997: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b9e99cc-64e0-4441-a233-5e1540f7e97d",
      ResourceVersion: (string) (len=5) "18644",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853860554,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e6f15d71-ce0b-4810-88ef-363cce189261",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 36 66 31 35 64  37 31 2d 63 65 30 62 2d  |\"e6f15d71-ce0b-|
              00000120  34 38 31 30 2d 38 38 65  66 2d 33 36 33 63 63 65  |4810-88ef-363cce|
              00000130  31 38 39 32 36 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |189261\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0613 07:29:30.990470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:29:31.022: INFO: Pod "test-rollover-deployment-68774655d5-xsnzf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-xsnzf",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-8138",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9e0c9a4-b7e3-4c36-bd49-fa98242354e1",
      ResourceVersion: (string) (len=5) "18660",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853860556,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.126/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3f69ab44d1f5ba1e40010aba7db7400da287d52e5f9f0e01e2d81e7d867f99e0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.126/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "280ec7b9-f880-4c6a-a56c-0e5b2d870e2b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 38  30 65 63 37 62 39 2d 66  |d\":\"280ec7b9-f|
              00000090  38 38 30 2d 34 63 36 61  2d 61 35 36 63 2d 30 65  |880-4c6a-a56c-0e|
              000000a0  35 62 32 64 38 37 30 65  32 62 5c 22 7d 22 3a 7b  |5b2d870e2b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860558,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  36 5c 22 7d 22 3a 7b 22  |.42.1.126\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bpfrd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bpfrd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860557,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860560,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853860556,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) (len=11) "10.42.1.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853860557,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853860559,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://af8b123b5f982340fe738603d27cf6daa81d55decb947240dc4993f69730233b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 07:29:31.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8138" for this suite. @ 06/13/24 07:29:31.047
â€¢ [23.609 seconds]
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/13/24 07:29:31.086
  Jun 13 07:29:31.086: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:29:31.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:29:31.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:29:31.266
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:29:31.326
  E0613 07:29:31.991224      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:32.991418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:33.991728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:34.991844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:29:35.485
  Jun 13 07:29:35.489: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-2ecaf8ef-a5ef-4740-9df7-3f92ee34f612 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:29:35.506
  Jun 13 07:29:35.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6146" for this suite. @ 06/13/24 07:29:35.544
â€¢ [4.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/13/24 07:29:35.622
  Jun 13 07:29:35.625: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:29:35.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:29:35.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:29:35.672
  STEP: Creating secret with name secret-test-1d893d93-0b79-4c44-a23a-a5b0631d3b9f @ 06/13/24 07:29:35.681
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:29:35.696
  E0613 07:29:35.995642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:36.997569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:37.997718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:38.998743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:40.000269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:41.000629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:29:41.798
  Jun 13 07:29:41.836: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-04fd3fb0-9de6-4bef-bbd5-76af87cb409e container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:29:41.854
  Jun 13 07:29:41.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9372" for this suite. @ 06/13/24 07:29:41.919
â€¢ [6.325 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/13/24 07:29:41.948
  Jun 13 07:29:41.948: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 07:29:41.95
  E0613 07:29:42.038354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:29:42.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:29:42.082
  E0613 07:29:43.038584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:44.041503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:45.042886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:46.043664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:47.043835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 06/13/24 07:29:47.479
  E0613 07:29:48.044087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:49.045934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:50.046717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:51.049419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:52.049646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 06/13/24 07:29:52.515
  E0613 07:29:53.049633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:54.049829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:55.052148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:56.052928      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:57.053500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/13/24 07:29:57.525
  E0613 07:29:58.054171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:29:59.058342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:00.107582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:01.081502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:02.088088      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 06/13/24 07:30:02.531
  Jun 13 07:30:02.639: INFO: EndpointSlice for Service endpointslice-5687/example-named-port not found
  E0613 07:30:03.088902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:04.089515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:05.094194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:06.094661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:07.094941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:08.094997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:09.097554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:10.098583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:11.099384      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:12.100128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:12.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5687" for this suite. @ 06/13/24 07:30:12.646
â€¢ [30.717 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/13/24 07:30:12.665
  Jun 13 07:30:12.665: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 07:30:12.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:30:12.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:30:12.78
  STEP: Creating replication controller my-hostname-basic-2531f4e4-568c-4d1e-b8bb-9b0d491f912f @ 06/13/24 07:30:12.817
  Jun 13 07:30:12.873: INFO: Pod name my-hostname-basic-2531f4e4-568c-4d1e-b8bb-9b0d491f912f: Found 1 pods out of 1
  Jun 13 07:30:12.881: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-2531f4e4-568c-4d1e-b8bb-9b0d491f912f" are running
  E0613 07:30:13.100985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:14.101968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:15.108590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:16.109860      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:17.016: INFO: Pod "my-hostname-basic-2531f4e4-568c-4d1e-b8bb-9b0d491f912f-66bjc" is running and ready(conditions: [])
  Jun 13 07:30:17.016: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/13/24 07:30:17.016
  E0613 07:30:17.110617      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:18.111100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:19.111837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:20.113586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:21.113661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:22.113792      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:23.113998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:24.114604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:24.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8163" for this suite. @ 06/13/24 07:30:24.163
â€¢ [11.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/13/24 07:30:24.184
  Jun 13 07:30:24.184: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename csi-storageclass @ 06/13/24 07:30:24.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:30:24.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:30:24.341
  STEP: Creating a StorageClass @ 06/13/24 07:30:24.361
  STEP: Get StorageClass "e2e-xbp5g" @ 06/13/24 07:30:24.377
  STEP: Patching the StorageClass "e2e-xbp5g" @ 06/13/24 07:30:24.407
  STEP: Delete StorageClass "e2e-xbp5g" @ 06/13/24 07:30:24.439
  STEP: Confirm deletion of StorageClass "e2e-xbp5g" @ 06/13/24 07:30:24.481
  STEP: Create a replacement StorageClass @ 06/13/24 07:30:24.512
  STEP: Updating StorageClass "e2e-v2-glxrl" @ 06/13/24 07:30:24.553
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-glxrl=updated" @ 06/13/24 07:30:24.581
  STEP: Deleting StorageClass "e2e-v2-glxrl" via DeleteCollection @ 06/13/24 07:30:24.601
  STEP: Confirm deletion of StorageClass "e2e-v2-glxrl" @ 06/13/24 07:30:24.622
  Jun 13 07:30:24.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-7927" for this suite. @ 06/13/24 07:30:24.656
â€¢ [0.494 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/13/24 07:30:24.678
  Jun 13 07:30:24.678: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename disruption @ 06/13/24 07:30:24.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:30:24.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:30:24.833
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/13/24 07:30:24.911
  STEP: Waiting for the pdb to be processed @ 06/13/24 07:30:24.923
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/13/24 07:30:25.02
  STEP: Waiting for all pods to be running @ 06/13/24 07:30:25.021
  Jun 13 07:30:25.053: INFO: pods: 0 < 3
  E0613 07:30:25.115418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:26.116847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:27.032: INFO: running pods: 0 < 3
  E0613 07:30:27.117816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:28.121327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:29.026: INFO: running pods: 2 < 3
  E0613 07:30:29.122129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:30.125503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/13/24 07:30:31.028
  STEP: Updating the pdb to allow a pod to be evicted @ 06/13/24 07:30:31.045
  STEP: Waiting for the pdb to be processed @ 06/13/24 07:30:31.065
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/13/24 07:30:31.069
  STEP: Waiting for all pods to be running @ 06/13/24 07:30:31.069
  STEP: Waiting for the pdb to observed all healthy pods @ 06/13/24 07:30:31.076
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/13/24 07:30:31.121
  E0613 07:30:31.122411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 06/13/24 07:30:31.148
  E0613 07:30:32.125454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:33.125766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/13/24 07:30:33.154
  Jun 13 07:30:33.167: INFO: running pods: 2 < 3
  E0613 07:30:34.125787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:35.127675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/13/24 07:30:35.202
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/13/24 07:30:35.236
  STEP: Waiting for the pdb to be deleted @ 06/13/24 07:30:35.266
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/13/24 07:30:35.277
  STEP: Waiting for all pods to be running @ 06/13/24 07:30:35.277
  Jun 13 07:30:35.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2099" for this suite. @ 06/13/24 07:30:35.351
â€¢ [10.719 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/13/24 07:30:35.414
  Jun 13 07:30:35.414: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 07:30:35.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:30:35.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:30:35.552
  STEP: Creating resourceQuota "e2e-rq-status-xgjhf" @ 06/13/24 07:30:35.558
  Jun 13 07:30:35.569: INFO: Resource quota "e2e-rq-status-xgjhf" reports spec: hard cpu limit of 500m
  Jun 13 07:30:35.570: INFO: Resource quota "e2e-rq-status-xgjhf" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-xgjhf" /status @ 06/13/24 07:30:35.571
  STEP: Confirm /status for "e2e-rq-status-xgjhf" resourceQuota via watch @ 06/13/24 07:30:35.599
  Jun 13 07:30:35.603: INFO: observed resourceQuota "e2e-rq-status-xgjhf" in namespace "resourcequota-4708" with hard status: v1.ResourceList(nil)
  Jun 13 07:30:35.604: INFO: Found resourceQuota "e2e-rq-status-xgjhf" in namespace "resourcequota-4708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 13 07:30:35.604: INFO: ResourceQuota "e2e-rq-status-xgjhf" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/13/24 07:30:35.61
  Jun 13 07:30:35.631: INFO: Resource quota "e2e-rq-status-xgjhf" reports spec: hard cpu limit of 1
  Jun 13 07:30:35.631: INFO: Resource quota "e2e-rq-status-xgjhf" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-xgjhf" /status @ 06/13/24 07:30:35.631
  STEP: Confirm /status for "e2e-rq-status-xgjhf" resourceQuota via watch @ 06/13/24 07:30:35.659
  Jun 13 07:30:35.665: INFO: observed resourceQuota "e2e-rq-status-xgjhf" in namespace "resourcequota-4708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun 13 07:30:35.665: INFO: Found resourceQuota "e2e-rq-status-xgjhf" in namespace "resourcequota-4708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun 13 07:30:35.665: INFO: ResourceQuota "e2e-rq-status-xgjhf" /status was patched
  STEP: Get "e2e-rq-status-xgjhf" /status @ 06/13/24 07:30:35.665
  Jun 13 07:30:35.693: INFO: Resourcequota "e2e-rq-status-xgjhf" reports status: hard cpu of 1
  Jun 13 07:30:35.694: INFO: Resourcequota "e2e-rq-status-xgjhf" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-xgjhf" /status before checking Spec is unchanged @ 06/13/24 07:30:35.7
  Jun 13 07:30:35.711: INFO: Resourcequota "e2e-rq-status-xgjhf" reports status: hard cpu of 2
  Jun 13 07:30:35.711: INFO: Resourcequota "e2e-rq-status-xgjhf" reports status: hard memory of 2Gi
  Jun 13 07:30:35.719: INFO: Found resourceQuota "e2e-rq-status-xgjhf" in namespace "resourcequota-4708" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun 13 07:30:35.723: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c6090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c60d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c6108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:30:36.127634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:37.127785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:38.128276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:39.128859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:40.129184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:40.727: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c6570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c65b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c6618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:30:41.129389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:42.129765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:43.129654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:44.130023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:45.134215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:45.725: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c6a68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c6a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c6b10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:30:46.134334      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:47.134862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:48.135165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:49.135546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:50.135766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:50.724: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f76840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f768b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f76900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:30:51.135887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:52.136142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:53.136216      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:54.137181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:55.138069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:30:55.723: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f76b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f76bb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f76c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:30:56.138920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:57.139359      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:58.143622      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:30:59.145463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:00.145648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:00.723: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c7218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c7278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c72d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:01.145910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:02.147445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:03.147541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:04.148197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:05.149576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:05.724: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f77668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f776c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f776f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:06.151108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:07.150962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:08.151164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:09.151481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:10.152035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:10.724: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c77a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c7800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c7848), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:11.152294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:12.152392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:13.152642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:14.152892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:15.155489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:15.725: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f77b18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f77b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f77ba8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:16.153939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:17.154787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:18.156878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:19.157298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:20.157499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:20.726: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f77ef0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f77f20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000f77f68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:21.157588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:22.157722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:23.157935      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:24.159767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:25.161515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:25.724: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043c7fe0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6018), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6060), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:26.213594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:27.209994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:28.210137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:29.210969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:30.211485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:30.724: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d984f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d985a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:31.211508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:32.213484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:33.213610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:34.215738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:35.216026      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:35.736: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98a50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98a80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98ae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:36.216735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:37.217510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:38.217574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:39.219069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:40.219078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:40.725: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98fc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:41.220085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:42.220181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:43.220591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:44.220769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:45.224810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:45.733: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd68d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:46.225103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:47.225440      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:48.225633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:49.227643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:50.228022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:50.723: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6cf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6d20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6d80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:51.228946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:52.230042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:53.230310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:54.230507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:55.230812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:31:55.725: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:31:56.233697      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:57.233745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:58.233898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:31:59.234756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:00.238000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:00.727: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d987c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d988d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:01.238028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:02.238912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:03.239961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:04.240790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:05.241078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:05.729: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d98c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:06.241429      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:07.241528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:08.244930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:09.249131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:10.249575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:10.732: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd65b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:11.250691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:12.250807      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:13.250991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:14.252801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:15.253081      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:15.723: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d99230), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d99278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d992d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:16.257642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:17.258336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:18.259469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:19.260181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:20.263358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:20.741: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6a98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6ae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:21.264400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:22.264585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:23.265140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:24.266535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:25.267029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:25.724: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6f00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6f78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd6fd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:26.267832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:27.268448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:28.270456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:29.270785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:30.270879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:30.738: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd73b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd7428), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd74d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:31.271094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:32.271152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:33.273659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:34.272344      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:35.272371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:35.741: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd7890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd79c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000fd7a10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:36.273256      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:37.273893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:38.274092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:39.274482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:40.277562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:40.726: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d99bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d99c50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002d99c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:41.278094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:42.279929      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:43.281536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:44.282529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:45.283576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:45.722: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00570c108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00570c138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00570c198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:46.288689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:47.289516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:48.289665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:49.291076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:50.292768      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:50.723: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xgjhf", GenerateName:"", Namespace:"resourcequota-4708", SelfLink:"", UID:"df9b3c2b-2919-4a43-abd1-4f11c4aead90", ResourceVersion:"19180", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xgjhf"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003610120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003610168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 7, 30, 35, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036101b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0613 07:32:51.293024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:52.293548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:53.293629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:54.294095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:32:55.294296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:32:55.723: INFO: ResourceQuota "e2e-rq-status-xgjhf" Spec was unchanged and /status reset
  Jun 13 07:32:55.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4708" for this suite. @ 06/13/24 07:32:55.729
â€¢ [140.320 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/13/24 07:32:55.734
  Jun 13 07:32:55.734: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:32:55.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:32:55.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:32:55.918
  STEP: validating cluster-info @ 06/13/24 07:32:55.961
  Jun 13 07:32:55.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-4168 cluster-info'
  Jun 13 07:32:56.162: INFO: stderr: ""
  Jun 13 07:32:56.162: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun 13 07:32:56.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4168" for this suite. @ 06/13/24 07:32:56.189
â€¢ [0.508 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/13/24 07:32:56.245
  Jun 13 07:32:56.245: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 07:32:56.255
  E0613 07:32:56.294581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:32:56.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:32:56.433
  Jun 13 07:32:56.468: INFO: Got root ca configmap in namespace "svcaccounts-868"
  Jun 13 07:32:56.490: INFO: Deleted root ca configmap in namespace "svcaccounts-868"
  STEP: waiting for a new root ca configmap created @ 06/13/24 07:32:56.991
  Jun 13 07:32:57.012: INFO: Recreated root ca configmap in namespace "svcaccounts-868"
  Jun 13 07:32:57.018: INFO: Updated root ca configmap in namespace "svcaccounts-868"
  E0613 07:32:57.295061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 06/13/24 07:32:57.52
  Jun 13 07:32:57.604: INFO: Reconciled root ca configmap in namespace "svcaccounts-868"
  Jun 13 07:32:57.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-868" for this suite. @ 06/13/24 07:32:57.635
â€¢ [1.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/13/24 07:32:57.678
  Jun 13 07:32:57.678: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename server-version @ 06/13/24 07:32:57.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:32:57.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:32:57.787
  STEP: Request ServerVersion @ 06/13/24 07:32:57.829
  STEP: Confirm major version @ 06/13/24 07:32:57.838
  Jun 13 07:32:57.839: INFO: Major version: 1
  STEP: Confirm minor version @ 06/13/24 07:32:57.839
  Jun 13 07:32:57.839: INFO: cleanMinorVersion: 29
  Jun 13 07:32:57.840: INFO: Minor version: 29
  Jun 13 07:32:57.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5776" for this suite. @ 06/13/24 07:32:57.866
â€¢ [0.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/13/24 07:32:57.892
  Jun 13 07:32:57.892: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/13/24 07:32:57.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:32:58.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:32:58.058
  STEP: creating @ 06/13/24 07:32:58.082
  STEP: getting @ 06/13/24 07:32:58.195
  STEP: listing in namespace @ 06/13/24 07:32:58.255
  STEP: patching @ 06/13/24 07:32:58.29
  E0613 07:32:58.295845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting @ 06/13/24 07:32:58.355
  Jun 13 07:32:58.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4939" for this suite. @ 06/13/24 07:32:58.454
â€¢ [0.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/13/24 07:32:58.496
  Jun 13 07:32:58.496: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svc-latency @ 06/13/24 07:32:58.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:32:58.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:32:58.6
  Jun 13 07:32:58.612: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-176 @ 06/13/24 07:32:58.613
  I0613 07:32:58.690289      18 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-176, replica count: 1
  E0613 07:32:59.305833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:32:59.741072      18 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 07:33:00.303057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:33:00.742874      18 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 07:33:01.303465      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:33:01.744831      18 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 07:33:02.049: INFO: Created: latency-svc-qrdqc
  Jun 13 07:33:02.097: INFO: Got endpoints: latency-svc-qrdqc [252.028271ms]
  Jun 13 07:33:02.286: INFO: Created: latency-svc-lqm4f
  Jun 13 07:33:02.298: INFO: Created: latency-svc-9sd75
  E0613 07:33:02.308525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:02.358: INFO: Got endpoints: latency-svc-lqm4f [252.53719ms]
  Jun 13 07:33:02.359: INFO: Got endpoints: latency-svc-9sd75 [250.436048ms]
  Jun 13 07:33:02.458: INFO: Created: latency-svc-n948h
  Jun 13 07:33:02.517: INFO: Got endpoints: latency-svc-n948h [409.67926ms]
  Jun 13 07:33:02.518: INFO: Created: latency-svc-dm5sh
  Jun 13 07:33:02.550: INFO: Got endpoints: latency-svc-dm5sh [442.750658ms]
  Jun 13 07:33:02.861: INFO: Created: latency-svc-4zvdd
  Jun 13 07:33:02.930: INFO: Created: latency-svc-j69kz
  Jun 13 07:33:02.930: INFO: Created: latency-svc-wcsns
  Jun 13 07:33:02.930: INFO: Created: latency-svc-s6vrx
  Jun 13 07:33:02.936: INFO: Created: latency-svc-bx99r
  Jun 13 07:33:02.949: INFO: Created: latency-svc-clv27
  Jun 13 07:33:02.950: INFO: Created: latency-svc-d66pm
  Jun 13 07:33:02.950: INFO: Created: latency-svc-4524b
  Jun 13 07:33:02.951: INFO: Created: latency-svc-j5ngv
  Jun 13 07:33:02.951: INFO: Created: latency-svc-m2dtf
  Jun 13 07:33:02.952: INFO: Created: latency-svc-2c97j
  Jun 13 07:33:02.953: INFO: Created: latency-svc-skkrl
  Jun 13 07:33:02.953: INFO: Created: latency-svc-rn2xl
  Jun 13 07:33:02.953: INFO: Created: latency-svc-2vbt2
  Jun 13 07:33:02.968: INFO: Got endpoints: latency-svc-4zvdd [861.692111ms]
  Jun 13 07:33:03.069: INFO: Created: latency-svc-h7974
  Jun 13 07:33:03.232: INFO: Got endpoints: latency-svc-d66pm [1.12393424s]
  Jun 13 07:33:03.233: INFO: Got endpoints: latency-svc-j69kz [683.035065ms]
  Jun 13 07:33:03.233: INFO: Got endpoints: latency-svc-4524b [1.124095422s]
  Jun 13 07:33:03.233: INFO: Got endpoints: latency-svc-bx99r [1.127441071s]
  Jun 13 07:33:03.246: INFO: Got endpoints: latency-svc-2vbt2 [1.138252121s]
  E0613 07:33:03.308707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:03.355: INFO: Created: latency-svc-ktxhq
  Jun 13 07:33:03.355: INFO: Got endpoints: latency-svc-skkrl [1.247154216s]
  Jun 13 07:33:03.355: INFO: Got endpoints: latency-svc-j5ngv [1.248496898s]
  Jun 13 07:33:03.355: INFO: Got endpoints: latency-svc-clv27 [1.247087724s]
  Jun 13 07:33:03.378: INFO: Got endpoints: latency-svc-h7974 [1.272282476s]
  Jun 13 07:33:03.378: INFO: Got endpoints: latency-svc-m2dtf [1.271723115s]
  Jun 13 07:33:03.452: INFO: Created: latency-svc-967hw
  Jun 13 07:33:03.462: INFO: Got endpoints: latency-svc-s6vrx [1.103094471s]
  Jun 13 07:33:03.468: INFO: Got endpoints: latency-svc-wcsns [1.109825539s]
  Jun 13 07:33:03.468: INFO: Got endpoints: latency-svc-rn2xl [1.361150167s]
  Jun 13 07:33:03.525: INFO: Got endpoints: latency-svc-2c97j [1.007303395s]
  Jun 13 07:33:03.553: INFO: Got endpoints: latency-svc-967hw [320.143152ms]
  Jun 13 07:33:03.553: INFO: Got endpoints: latency-svc-ktxhq [584.859079ms]
  Jun 13 07:33:03.566: INFO: Created: latency-svc-p87vj
  Jun 13 07:33:03.590: INFO: Got endpoints: latency-svc-p87vj [343.39049ms]
  Jun 13 07:33:04.003: INFO: Created: latency-svc-xqk5x
  Jun 13 07:33:04.003: INFO: Created: latency-svc-b4qgf
  Jun 13 07:33:04.003: INFO: Created: latency-svc-vwx5v
  Jun 13 07:33:04.004: INFO: Created: latency-svc-zlqdn
  Jun 13 07:33:04.004: INFO: Created: latency-svc-4fzsv
  Jun 13 07:33:04.004: INFO: Created: latency-svc-8mvcg
  Jun 13 07:33:04.004: INFO: Created: latency-svc-fmgcm
  Jun 13 07:33:04.059: INFO: Created: latency-svc-55tpm
  Jun 13 07:33:04.116: INFO: Created: latency-svc-xvtkh
  Jun 13 07:33:04.176: INFO: Created: latency-svc-f2qvb
  Jun 13 07:33:04.221: INFO: Created: latency-svc-zhzdr
  Jun 13 07:33:04.222: INFO: Created: latency-svc-6l6kc
  Jun 13 07:33:04.270: INFO: Created: latency-svc-ddwrx
  E0613 07:33:04.309726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:04.311: INFO: Created: latency-svc-j2bc9
  Jun 13 07:33:04.323: INFO: Created: latency-svc-tcm77
  Jun 13 07:33:04.435: INFO: Got endpoints: latency-svc-fmgcm [1.05642672s]
  Jun 13 07:33:04.447: INFO: Got endpoints: latency-svc-vwx5v [893.030139ms]
  Jun 13 07:33:04.447: INFO: Got endpoints: latency-svc-4fzsv [853.987599ms]
  Jun 13 07:33:04.448: INFO: Got endpoints: latency-svc-zlqdn [918.511895ms]
  Jun 13 07:33:04.448: INFO: Got endpoints: latency-svc-b4qgf [1.215731954s]
  Jun 13 07:33:04.639: INFO: Got endpoints: latency-svc-6l6kc [1.284465217s]
  Jun 13 07:33:04.640: INFO: Got endpoints: latency-svc-xqk5x [1.284534523s]
  Jun 13 07:33:04.640: INFO: Got endpoints: latency-svc-ddwrx [1.261116318s]
  Jun 13 07:33:04.640: INFO: Got endpoints: latency-svc-f2qvb [1.407157336s]
  Jun 13 07:33:04.640: INFO: Got endpoints: latency-svc-8mvcg [1.407288243s]
  Jun 13 07:33:04.763: INFO: Got endpoints: latency-svc-xvtkh [1.29463213s]
  Jun 13 07:33:04.764: INFO: Got endpoints: latency-svc-j2bc9 [1.408497991s]
  Jun 13 07:33:04.764: INFO: Got endpoints: latency-svc-tcm77 [1.301662653s]
  Jun 13 07:33:04.764: INFO: Got endpoints: latency-svc-zhzdr [1.294864316s]
  Jun 13 07:33:04.764: INFO: Got endpoints: latency-svc-55tpm [1.211090346s]
  Jun 13 07:33:04.767: INFO: Created: latency-svc-kfc8z
  Jun 13 07:33:04.822: INFO: Created: latency-svc-8lm2l
  Jun 13 07:33:04.906: INFO: Got endpoints: latency-svc-kfc8z [457.14494ms]
  Jun 13 07:33:04.908: INFO: Got endpoints: latency-svc-8lm2l [462.053837ms]
  Jun 13 07:33:04.909: INFO: Created: latency-svc-nvghp
  Jun 13 07:33:04.982: INFO: Got endpoints: latency-svc-nvghp [534.988121ms]
  Jun 13 07:33:05.065: INFO: Created: latency-svc-cdzwz
  Jun 13 07:33:05.141: INFO: Created: latency-svc-6p8pb
  Jun 13 07:33:05.190: INFO: Got endpoints: latency-svc-cdzwz [742.230979ms]
  Jun 13 07:33:05.258: INFO: Created: latency-svc-jl5lv
  Jun 13 07:33:05.273: INFO: Got endpoints: latency-svc-6p8pb [825.09009ms]
  E0613 07:33:05.310188      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:05.343: INFO: Created: latency-svc-55gw2
  Jun 13 07:33:05.437: INFO: Got endpoints: latency-svc-jl5lv [797.80642ms]
  Jun 13 07:33:05.510: INFO: Created: latency-svc-zz9bt
  Jun 13 07:33:05.519: INFO: Got endpoints: latency-svc-55gw2 [878.531855ms]
  Jun 13 07:33:05.547: INFO: Created: latency-svc-cc4jw
  Jun 13 07:33:05.606: INFO: Created: latency-svc-ldrfx
  Jun 13 07:33:05.612: INFO: Got endpoints: latency-svc-zz9bt [972.154093ms]
  Jun 13 07:33:05.668: INFO: Got endpoints: latency-svc-cc4jw [1.027750857s]
  Jun 13 07:33:05.726: INFO: Got endpoints: latency-svc-ldrfx [1.085722098s]
  Jun 13 07:33:05.746: INFO: Created: latency-svc-xx8sg
  Jun 13 07:33:05.746: INFO: Created: latency-svc-8dx7n
  Jun 13 07:33:05.792: INFO: Created: latency-svc-tfb5n
  Jun 13 07:33:05.836: INFO: Got endpoints: latency-svc-8dx7n [1.072236675s]
  Jun 13 07:33:05.836: INFO: Got endpoints: latency-svc-xx8sg [1.070223269s]
  Jun 13 07:33:05.879: INFO: Created: latency-svc-k5wv4
  Jun 13 07:33:05.910: INFO: Got endpoints: latency-svc-tfb5n [1.145709533s]
  Jun 13 07:33:06.060: INFO: Created: latency-svc-52dvm
  Jun 13 07:33:06.069: INFO: Got endpoints: latency-svc-k5wv4 [1.30424514s]
  Jun 13 07:33:06.094: INFO: Created: latency-svc-s646t
  Jun 13 07:33:06.113: INFO: Got endpoints: latency-svc-52dvm [1.347381012s]
  Jun 13 07:33:06.121: INFO: Created: latency-svc-krj95
  Jun 13 07:33:06.155: INFO: Created: latency-svc-mxtxm
  Jun 13 07:33:06.170: INFO: Created: latency-svc-xtmst
  Jun 13 07:33:06.285: INFO: Created: latency-svc-bkfw2
  E0613 07:33:06.310966      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:06.327: INFO: Got endpoints: latency-svc-s646t [1.421223518s]
  Jun 13 07:33:06.327: INFO: Got endpoints: latency-svc-krj95 [1.419021643s]
  Jun 13 07:33:06.411: INFO: Got endpoints: latency-svc-mxtxm [1.429145039s]
  Jun 13 07:33:06.428: INFO: Created: latency-svc-jdbj2
  Jun 13 07:33:06.440: INFO: Got endpoints: latency-svc-xtmst [1.250286777s]
  Jun 13 07:33:06.463: INFO: Created: latency-svc-zmmtp
  Jun 13 07:33:06.490: INFO: Got endpoints: latency-svc-jdbj2 [1.040738339s]
  Jun 13 07:33:06.490: INFO: Got endpoints: latency-svc-bkfw2 [1.204230853s]
  Jun 13 07:33:06.563: INFO: Created: latency-svc-5c5d8
  Jun 13 07:33:06.564: INFO: Got endpoints: latency-svc-zmmtp [1.045154595s]
  Jun 13 07:33:06.608: INFO: Created: latency-svc-shvsq
  Jun 13 07:33:06.628: INFO: Got endpoints: latency-svc-5c5d8 [1.015965752s]
  Jun 13 07:33:06.659: INFO: Got endpoints: latency-svc-shvsq [991.0446ms]
  Jun 13 07:33:06.673: INFO: Created: latency-svc-6pfj4
  Jun 13 07:33:06.717: INFO: Got endpoints: latency-svc-6pfj4 [210.06533ms]
  Jun 13 07:33:07.013: INFO: Created: latency-svc-r2cp9
  Jun 13 07:33:07.093: INFO: Got endpoints: latency-svc-r2cp9 [434.511995ms]
  Jun 13 07:33:07.109: INFO: Created: latency-svc-8frp9
  Jun 13 07:33:07.296: INFO: Got endpoints: latency-svc-8frp9 [731.737499ms]
  E0613 07:33:07.311073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:07.332: INFO: Created: latency-svc-xhc2t
  Jun 13 07:33:07.332: INFO: Created: latency-svc-bgbfd
  Jun 13 07:33:07.332: INFO: Created: latency-svc-sgjtc
  Jun 13 07:33:07.332: INFO: Got endpoints: latency-svc-sgjtc [916.790418ms]
  Jun 13 07:33:07.333: INFO: Created: latency-svc-hr4wk
  Jun 13 07:33:07.332: INFO: Created: latency-svc-vnn5d
  Jun 13 07:33:07.333: INFO: Created: latency-svc-lzskq
  Jun 13 07:33:07.333: INFO: Created: latency-svc-jmh7p
  Jun 13 07:33:07.333: INFO: Created: latency-svc-9595t
  Jun 13 07:33:07.333: INFO: Created: latency-svc-v5jfh
  Jun 13 07:33:07.333: INFO: Created: latency-svc-ldth8
  Jun 13 07:33:07.333: INFO: Created: latency-svc-v5f7b
  Jun 13 07:33:07.334: INFO: Created: latency-svc-vm6p7
  Jun 13 07:33:07.334: INFO: Got endpoints: latency-svc-ldth8 [1.221141688s]
  Jun 13 07:33:07.347: INFO: Created: latency-svc-xhkgg
  Jun 13 07:33:07.348: INFO: Created: latency-svc-kcg75
  Jun 13 07:33:07.389: INFO: Created: latency-svc-4xj52
  Jun 13 07:33:07.390: INFO: Got endpoints: latency-svc-jmh7p [1.063065109s]
  Jun 13 07:33:07.559: INFO: Created: latency-svc-sd9pn
  Jun 13 07:33:07.598: INFO: Got endpoints: latency-svc-vnn5d [880.386888ms]
  Jun 13 07:33:07.603: INFO: Got endpoints: latency-svc-xhc2t [975.204443ms]
  Jun 13 07:33:07.629: INFO: Got endpoints: latency-svc-v5jfh [1.719392654s]
  Jun 13 07:33:07.630: INFO: Got endpoints: latency-svc-vm6p7 [1.793843294s]
  Jun 13 07:33:07.653: INFO: Got endpoints: latency-svc-v5f7b [1.584295432s]
  Jun 13 07:33:07.688: INFO: Created: latency-svc-rsh9z
  Jun 13 07:33:07.739: INFO: Got endpoints: latency-svc-hr4wk [1.902988069s]
  Jun 13 07:33:07.739: INFO: Got endpoints: latency-svc-lzskq [1.246045944s]
  Jun 13 07:33:07.740: INFO: Got endpoints: latency-svc-9595t [1.412414278s]
  Jun 13 07:33:07.748: INFO: Got endpoints: latency-svc-bgbfd [1.307489943s]
  Jun 13 07:33:07.810: INFO: Created: latency-svc-vqhh6
  Jun 13 07:33:07.833: INFO: Got endpoints: latency-svc-xhkgg [2.107560884s]
  Jun 13 07:33:07.890: INFO: Got endpoints: latency-svc-kcg75 [792.263067ms]
  Jun 13 07:33:07.922: INFO: Created: latency-svc-bc9lb
  Jun 13 07:33:07.939: INFO: Got endpoints: latency-svc-4xj52 [641.519195ms]
  Jun 13 07:33:07.939: INFO: Got endpoints: latency-svc-vqhh6 [548.681344ms]
  Jun 13 07:33:07.939: INFO: Got endpoints: latency-svc-sd9pn [606.236017ms]
  Jun 13 07:33:07.940: INFO: Got endpoints: latency-svc-rsh9z [605.259568ms]
  Jun 13 07:33:07.958: INFO: Created: latency-svc-f2z4k
  Jun 13 07:33:08.024: INFO: Got endpoints: latency-svc-bc9lb [420.462832ms]
  Jun 13 07:33:08.055: INFO: Created: latency-svc-ml8kq
  Jun 13 07:33:08.094: INFO: Created: latency-svc-lntbt
  Jun 13 07:33:08.096: INFO: Got endpoints: latency-svc-f2z4k [466.148259ms]
  Jun 13 07:33:08.096: INFO: Got endpoints: latency-svc-ml8kq [488.135302ms]
  Jun 13 07:33:08.113: INFO: Created: latency-svc-crc4m
  Jun 13 07:33:08.119: INFO: Got endpoints: latency-svc-lntbt [466.071267ms]
  Jun 13 07:33:08.148: INFO: Got endpoints: latency-svc-crc4m [515.077007ms]
  Jun 13 07:33:08.173: INFO: Created: latency-svc-bqrqz
  Jun 13 07:33:08.208: INFO: Got endpoints: latency-svc-bqrqz [469.334796ms]
  Jun 13 07:33:08.213: INFO: Created: latency-svc-ftgrm
  Jun 13 07:33:08.229: INFO: Created: latency-svc-lzw67
  Jun 13 07:33:08.251: INFO: Got endpoints: latency-svc-ftgrm [503.25403ms]
  Jun 13 07:33:08.264: INFO: Created: latency-svc-d9h2z
  Jun 13 07:33:08.274: INFO: Got endpoints: latency-svc-lzw67 [534.999328ms]
  Jun 13 07:33:08.286: INFO: Got endpoints: latency-svc-d9h2z [546.101777ms]
  Jun 13 07:33:08.300: INFO: Created: latency-svc-kn6f8
  E0613 07:33:08.311449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:08.312: INFO: Got endpoints: latency-svc-kn6f8 [478.725816ms]
  Jun 13 07:33:08.334: INFO: Created: latency-svc-jv8kx
  Jun 13 07:33:08.352: INFO: Created: latency-svc-62nrv
  Jun 13 07:33:08.361: INFO: Got endpoints: latency-svc-jv8kx [470.981913ms]
  Jun 13 07:33:08.397: INFO: Created: latency-svc-q5b49
  Jun 13 07:33:08.417: INFO: Got endpoints: latency-svc-62nrv [478.130976ms]
  Jun 13 07:33:08.427: INFO: Got endpoints: latency-svc-q5b49 [487.595821ms]
  Jun 13 07:33:08.736: INFO: Created: latency-svc-62c5d
  Jun 13 07:33:08.765: INFO: Got endpoints: latency-svc-62c5d [825.783514ms]
  Jun 13 07:33:08.823: INFO: Created: latency-svc-x6t55
  Jun 13 07:33:08.823: INFO: Created: latency-svc-v2wzq
  Jun 13 07:33:08.824: INFO: Created: latency-svc-bmc5s
  Jun 13 07:33:08.824: INFO: Created: latency-svc-dhdgc
  Jun 13 07:33:08.824: INFO: Created: latency-svc-kc95q
  Jun 13 07:33:08.824: INFO: Created: latency-svc-k84dk
  Jun 13 07:33:08.824: INFO: Created: latency-svc-qjm6x
  Jun 13 07:33:08.825: INFO: Created: latency-svc-wm2lg
  Jun 13 07:33:08.825: INFO: Created: latency-svc-q6b9j
  Jun 13 07:33:08.826: INFO: Created: latency-svc-7p8rr
  Jun 13 07:33:08.826: INFO: Created: latency-svc-r7dpn
  Jun 13 07:33:08.826: INFO: Created: latency-svc-kj2tq
  Jun 13 07:33:08.826: INFO: Created: latency-svc-kc9vg
  Jun 13 07:33:08.827: INFO: Got endpoints: latency-svc-bmc5s [409.363929ms]
  Jun 13 07:33:08.827: INFO: Got endpoints: latency-svc-x6t55 [796.230218ms]
  Jun 13 07:33:08.827: INFO: Created: latency-svc-25xb8
  Jun 13 07:33:08.865: INFO: Created: latency-svc-2ncrt
  Jun 13 07:33:08.923: INFO: Got endpoints: latency-svc-kj2tq [827.256506ms]
  Jun 13 07:33:08.984: INFO: Created: latency-svc-85m6d
  Jun 13 07:33:09.000: INFO: Got endpoints: latency-svc-r7dpn [903.626723ms]
  Jun 13 07:33:09.000: INFO: Got endpoints: latency-svc-q6b9j [851.967028ms]
  Jun 13 07:33:09.001: INFO: Got endpoints: latency-svc-7p8rr [881.243545ms]
  Jun 13 07:33:09.001: INFO: Got endpoints: latency-svc-dhdgc [573.49551ms]
  Jun 13 07:33:09.077: INFO: Got endpoints: latency-svc-kc9vg [869.010167ms]
  Jun 13 07:33:09.211: INFO: Created: latency-svc-6kpdb
  Jun 13 07:33:09.214: INFO: Got endpoints: latency-svc-kc95q [851.937915ms]
  Jun 13 07:33:09.215: INFO: Got endpoints: latency-svc-wm2lg [939.830067ms]
  Jun 13 07:33:09.215: INFO: Got endpoints: latency-svc-k84dk [901.994671ms]
  Jun 13 07:33:09.215: INFO: Got endpoints: latency-svc-qjm6x [928.849762ms]
  Jun 13 07:33:09.231: INFO: Created: latency-svc-46qcj
  Jun 13 07:33:09.253: INFO: Got endpoints: latency-svc-v2wzq [1.31383846s]
  Jun 13 07:33:09.284: INFO: Created: latency-svc-vtgl9
  E0613 07:33:09.312291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:09.318: INFO: Created: latency-svc-n6l6z
  Jun 13 07:33:09.329: INFO: Got endpoints: latency-svc-6kpdb [502.378381ms]
  Jun 13 07:33:09.330: INFO: Got endpoints: latency-svc-25xb8 [1.07823658s]
  Jun 13 07:33:09.330: INFO: Got endpoints: latency-svc-46qcj [406.647458ms]
  Jun 13 07:33:09.342: INFO: Got endpoints: latency-svc-2ncrt [574.667597ms]
  Jun 13 07:33:09.342: INFO: Got endpoints: latency-svc-85m6d [515.119636ms]
  Jun 13 07:33:09.419: INFO: Got endpoints: latency-svc-vtgl9 [418.536498ms]
  Jun 13 07:33:09.438: INFO: Created: latency-svc-9mrs4
  Jun 13 07:33:09.438: INFO: Got endpoints: latency-svc-n6l6z [437.662869ms]
  Jun 13 07:33:09.438: INFO: Created: latency-svc-x5hhg
  Jun 13 07:33:09.438: INFO: Got endpoints: latency-svc-x5hhg [437.32751ms]
  Jun 13 07:33:09.439: INFO: Created: latency-svc-zc5r4
  Jun 13 07:33:09.439: INFO: Got endpoints: latency-svc-zc5r4 [438.050291ms]
  Jun 13 07:33:09.466: INFO: Got endpoints: latency-svc-9mrs4 [388.424451ms]
  Jun 13 07:33:09.485: INFO: Created: latency-svc-kkn6p
  Jun 13 07:33:09.485: INFO: Got endpoints: latency-svc-kkn6p [270.999756ms]
  Jun 13 07:33:09.652: INFO: Created: latency-svc-bph29
  Jun 13 07:33:09.674: INFO: Created: latency-svc-xfnc2
  Jun 13 07:33:09.674: INFO: Created: latency-svc-ttgfg
  Jun 13 07:33:09.675: INFO: Created: latency-svc-9c7dn
  Jun 13 07:33:09.675: INFO: Created: latency-svc-znxsk
  Jun 13 07:33:09.675: INFO: Created: latency-svc-6qhcz
  Jun 13 07:33:09.675: INFO: Created: latency-svc-lhlwd
  Jun 13 07:33:09.675: INFO: Created: latency-svc-dbx95
  Jun 13 07:33:09.675: INFO: Created: latency-svc-p27n5
  Jun 13 07:33:09.675: INFO: Created: latency-svc-xbsk7
  Jun 13 07:33:09.680: INFO: Got endpoints: latency-svc-bph29 [464.95421ms]
  Jun 13 07:33:09.742: INFO: Created: latency-svc-chtf4
  Jun 13 07:33:09.749: INFO: Got endpoints: latency-svc-xfnc2 [310.110208ms]
  Jun 13 07:33:09.750: INFO: Created: latency-svc-4wj8k
  Jun 13 07:33:09.751: INFO: Created: latency-svc-xbf9l
  Jun 13 07:33:09.751: INFO: Created: latency-svc-qrp7m
  Jun 13 07:33:09.751: INFO: Created: latency-svc-z8rxp
  Jun 13 07:33:09.878: INFO: Created: latency-svc-z9xfg
  Jun 13 07:33:09.905: INFO: Got endpoints: latency-svc-znxsk [420.285273ms]
  Jun 13 07:33:09.906: INFO: Got endpoints: latency-svc-9c7dn [439.798137ms]
  Jun 13 07:33:09.942: INFO: Got endpoints: latency-svc-lhlwd [726.716876ms]
  Jun 13 07:33:09.942: INFO: Got endpoints: latency-svc-6qhcz [727.046874ms]
  Jun 13 07:33:09.942: INFO: Got endpoints: latency-svc-dbx95 [688.242782ms]
  Jun 13 07:33:09.961: INFO: Got endpoints: latency-svc-p27n5 [619.69924ms]
  Jun 13 07:33:10.034: INFO: Got endpoints: latency-svc-xbsk7 [704.897735ms]
  Jun 13 07:33:10.034: INFO: Got endpoints: latency-svc-4wj8k [704.643964ms]
  Jun 13 07:33:10.039: INFO: Created: latency-svc-2kmhf
  Jun 13 07:33:10.045: INFO: Got endpoints: latency-svc-ttgfg [715.717406ms]
  Jun 13 07:33:10.102: INFO: Got endpoints: latency-svc-z8rxp [760.126974ms]
  Jun 13 07:33:10.173: INFO: Created: latency-svc-52tgf
  Jun 13 07:33:10.198: INFO: Got endpoints: latency-svc-xbf9l [778.75853ms]
  Jun 13 07:33:10.208: INFO: Created: latency-svc-ntnnp
  Jun 13 07:33:10.249: INFO: Got endpoints: latency-svc-chtf4 [810.44974ms]
  Jun 13 07:33:10.249: INFO: Got endpoints: latency-svc-qrp7m [810.957505ms]
  Jun 13 07:33:10.262: INFO: Got endpoints: latency-svc-52tgf [356.234828ms]
  Jun 13 07:33:10.262: INFO: Got endpoints: latency-svc-z9xfg [581.812591ms]
  Jun 13 07:33:10.262: INFO: Got endpoints: latency-svc-2kmhf [512.656118ms]
  Jun 13 07:33:10.285: INFO: Created: latency-svc-5v7qs
  Jun 13 07:33:10.308: INFO: Got endpoints: latency-svc-ntnnp [402.187648ms]
  Jun 13 07:33:10.308: INFO: Got endpoints: latency-svc-5v7qs [366.220349ms]
  E0613 07:33:10.313182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:10.314: INFO: Created: latency-svc-x69td
  Jun 13 07:33:10.367: INFO: Got endpoints: latency-svc-x69td [424.527344ms]
  Jun 13 07:33:10.368: INFO: Created: latency-svc-b9cdp
  Jun 13 07:33:10.368: INFO: Created: latency-svc-tv6sk
  Jun 13 07:33:10.385: INFO: Created: latency-svc-hrplf
  Jun 13 07:33:10.414: INFO: Got endpoints: latency-svc-tv6sk [471.197233ms]
  Jun 13 07:33:10.443: INFO: Created: latency-svc-smxrb
  Jun 13 07:33:10.456: INFO: Got endpoints: latency-svc-hrplf [421.437347ms]
  Jun 13 07:33:10.456: INFO: Got endpoints: latency-svc-b9cdp [494.541553ms]
  Jun 13 07:33:10.486: INFO: Got endpoints: latency-svc-smxrb [440.74737ms]
  Jun 13 07:33:10.489: INFO: Created: latency-svc-2xncg
  Jun 13 07:33:10.527: INFO: Got endpoints: latency-svc-2xncg [492.348755ms]
  Jun 13 07:33:10.663: INFO: Created: latency-svc-7xhkj
  Jun 13 07:33:10.663: INFO: Created: latency-svc-r2jqr
  Jun 13 07:33:10.664: INFO: Created: latency-svc-2s8vt
  Jun 13 07:33:10.666: INFO: Created: latency-svc-b9wlc
  Jun 13 07:33:10.666: INFO: Created: latency-svc-qtmkc
  Jun 13 07:33:10.666: INFO: Created: latency-svc-57q8r
  Jun 13 07:33:10.667: INFO: Created: latency-svc-gzkpq
  Jun 13 07:33:10.673: INFO: Created: latency-svc-g92bl
  Jun 13 07:33:10.676: INFO: Created: latency-svc-xxz7z
  Jun 13 07:33:10.676: INFO: Created: latency-svc-wrfhm
  Jun 13 07:33:10.676: INFO: Created: latency-svc-hqngn
  Jun 13 07:33:10.676: INFO: Created: latency-svc-kskjs
  Jun 13 07:33:10.677: INFO: Created: latency-svc-n62m8
  Jun 13 07:33:10.677: INFO: Created: latency-svc-r6bsl
  Jun 13 07:33:10.677: INFO: Created: latency-svc-rzsk5
  Jun 13 07:33:10.686: INFO: Got endpoints: latency-svc-7xhkj [424.280708ms]
  Jun 13 07:33:10.749: INFO: Got endpoints: latency-svc-qtmkc [221.678951ms]
  Jun 13 07:33:10.776: INFO: Got endpoints: latency-svc-g92bl [514.492246ms]
  Jun 13 07:33:10.777: INFO: Got endpoints: latency-svc-57q8r [578.79739ms]
  Jun 13 07:33:10.777: INFO: Got endpoints: latency-svc-r2jqr [527.445673ms]
  Jun 13 07:33:10.839: INFO: Created: latency-svc-svjcq
  Jun 13 07:33:10.851: INFO: Got endpoints: latency-svc-n62m8 [601.780891ms]
  Jun 13 07:33:10.851: INFO: Got endpoints: latency-svc-kskjs [542.447498ms]
  Jun 13 07:33:10.883: INFO: Got endpoints: latency-svc-b9wlc [574.78671ms]
  Jun 13 07:33:10.883: INFO: Created: latency-svc-z7jkt
  Jun 13 07:33:10.891: INFO: Got endpoints: latency-svc-hqngn [523.408871ms]
  Jun 13 07:33:10.891: INFO: Got endpoints: latency-svc-xxz7z [435.337555ms]
  Jun 13 07:33:10.891: INFO: Got endpoints: latency-svc-rzsk5 [789.311579ms]
  Jun 13 07:33:10.891: INFO: Got endpoints: latency-svc-wrfhm [435.026432ms]
  Jun 13 07:33:10.963: INFO: Created: latency-svc-f9p4l
  Jun 13 07:33:10.967: INFO: Got endpoints: latency-svc-gzkpq [480.340039ms]
  Jun 13 07:33:10.977: INFO: Got endpoints: latency-svc-r6bsl [714.570022ms]
  Jun 13 07:33:10.977: INFO: Got endpoints: latency-svc-2s8vt [563.23331ms]
  Jun 13 07:33:10.977: INFO: Got endpoints: latency-svc-svjcq [290.387142ms]
  Jun 13 07:33:10.997: INFO: Created: latency-svc-6wjjs
  Jun 13 07:33:11.067: INFO: Got endpoints: latency-svc-z7jkt [317.634048ms]
  Jun 13 07:33:11.095: INFO: Created: latency-svc-gjwq8
  Jun 13 07:33:11.124: INFO: Got endpoints: latency-svc-f9p4l [347.212708ms]
  Jun 13 07:33:11.141: INFO: Got endpoints: latency-svc-6wjjs [364.822718ms]
  Jun 13 07:33:11.174: INFO: Created: latency-svc-78lh9
  Jun 13 07:33:11.192: INFO: Got endpoints: latency-svc-gjwq8 [415.670287ms]
  Jun 13 07:33:11.212: INFO: Got endpoints: latency-svc-78lh9 [358.869197ms]
  Jun 13 07:33:11.221: INFO: Created: latency-svc-s2r6r
  Jun 13 07:33:11.253: INFO: Created: latency-svc-rn92n
  Jun 13 07:33:11.259: INFO: Got endpoints: latency-svc-s2r6r [407.801159ms]
  Jun 13 07:33:11.280: INFO: Got endpoints: latency-svc-rn92n [396.903241ms]
  E0613 07:33:11.313576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:11.332: INFO: Created: latency-svc-45nb9
  Jun 13 07:33:11.366: INFO: Got endpoints: latency-svc-45nb9 [474.136227ms]
  Jun 13 07:33:11.378: INFO: Created: latency-svc-rntk7
  Jun 13 07:33:11.398: INFO: Got endpoints: latency-svc-rntk7 [506.014472ms]
  Jun 13 07:33:11.417: INFO: Created: latency-svc-c9wdq
  Jun 13 07:33:11.426: INFO: Got endpoints: latency-svc-c9wdq [534.247769ms]
  Jun 13 07:33:11.439: INFO: Created: latency-svc-sfgng
  Jun 13 07:33:11.501: INFO: Got endpoints: latency-svc-sfgng [609.236004ms]
  Jun 13 07:33:11.518: INFO: Created: latency-svc-h2bt2
  Jun 13 07:33:11.542: INFO: Created: latency-svc-m2kq4
  Jun 13 07:33:11.582: INFO: Created: latency-svc-xnr6r
  Jun 13 07:33:11.589: INFO: Created: latency-svc-7k5vx
  Jun 13 07:33:11.594: INFO: Created: latency-svc-xgk7j
  Jun 13 07:33:11.617: INFO: Created: latency-svc-lnck7
  Jun 13 07:33:11.618: INFO: Got endpoints: latency-svc-m2kq4 [640.788667ms]
  Jun 13 07:33:11.618: INFO: Got endpoints: latency-svc-h2bt2 [651.22217ms]
  Jun 13 07:33:11.680: INFO: Created: latency-svc-6btmv
  Jun 13 07:33:11.681: INFO: Got endpoints: latency-svc-7k5vx [703.345449ms]
  Jun 13 07:33:11.726: INFO: Got endpoints: latency-svc-xgk7j [657.262073ms]
  Jun 13 07:33:11.726: INFO: Got endpoints: latency-svc-lnck7 [602.373315ms]
  Jun 13 07:33:11.727: INFO: Got endpoints: latency-svc-xnr6r [748.888743ms]
  Jun 13 07:33:11.768: INFO: Got endpoints: latency-svc-6btmv [613.758614ms]
  Jun 13 07:33:11.768: INFO: Created: latency-svc-72d2t
  Jun 13 07:33:11.784: INFO: Got endpoints: latency-svc-72d2t [591.074294ms]
  Jun 13 07:33:11.786: INFO: Created: latency-svc-8r697
  Jun 13 07:33:11.822: INFO: Got endpoints: latency-svc-8r697 [610.099538ms]
  Jun 13 07:33:11.847: INFO: Created: latency-svc-zc8jg
  Jun 13 07:33:11.851: INFO: Created: latency-svc-s8548
  Jun 13 07:33:11.870: INFO: Got endpoints: latency-svc-zc8jg [610.787474ms]
  Jun 13 07:33:11.899: INFO: Got endpoints: latency-svc-s8548 [618.885918ms]
  Jun 13 07:33:11.907: INFO: Created: latency-svc-4gxxr
  Jun 13 07:33:11.919: INFO: Got endpoints: latency-svc-4gxxr [535.704444ms]
  Jun 13 07:33:11.932: INFO: Created: latency-svc-677pr
  Jun 13 07:33:11.946: INFO: Created: latency-svc-qwvp4
  Jun 13 07:33:11.964: INFO: Created: latency-svc-xx25r
  Jun 13 07:33:12.011: INFO: Created: latency-svc-nzq27
  Jun 13 07:33:12.061: INFO: Got endpoints: latency-svc-677pr [662.602273ms]
  Jun 13 07:33:12.061: INFO: Got endpoints: latency-svc-xx25r [559.809146ms]
  Jun 13 07:33:12.061: INFO: Got endpoints: latency-svc-qwvp4 [634.171186ms]
  Jun 13 07:33:12.097: INFO: Created: latency-svc-l8pc6
  Jun 13 07:33:12.103: INFO: Created: latency-svc-82825
  Jun 13 07:33:12.124: INFO: Got endpoints: latency-svc-nzq27 [506.0403ms]
  Jun 13 07:33:12.141: INFO: Got endpoints: latency-svc-l8pc6 [523.016607ms]
  Jun 13 07:33:12.180: INFO: Created: latency-svc-z8j6l
  Jun 13 07:33:12.201: INFO: Got endpoints: latency-svc-82825 [520.511655ms]
  Jun 13 07:33:12.210: INFO: Created: latency-svc-9kl5l
  Jun 13 07:33:12.227: INFO: Got endpoints: latency-svc-z8j6l [499.691296ms]
  Jun 13 07:33:12.254: INFO: Got endpoints: latency-svc-9kl5l [526.596475ms]
  Jun 13 07:33:12.260: INFO: Created: latency-svc-2nv5s
  Jun 13 07:33:12.269: INFO: Created: latency-svc-7c7xb
  Jun 13 07:33:12.285: INFO: Got endpoints: latency-svc-2nv5s [558.324245ms]
  Jun 13 07:33:12.285: INFO: Created: latency-svc-6gnpx
  E0613 07:33:12.317888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:12.351: INFO: Created: latency-svc-tl7bl
  Jun 13 07:33:12.352: INFO: Got endpoints: latency-svc-7c7xb [568.014408ms]
  Jun 13 07:33:12.385: INFO: Got endpoints: latency-svc-6gnpx [615.97136ms]
  Jun 13 07:33:12.401: INFO: Created: latency-svc-vd8bt
  Jun 13 07:33:12.417: INFO: Got endpoints: latency-svc-tl7bl [594.598615ms]
  Jun 13 07:33:12.424: INFO: Created: latency-svc-vn6kr
  Jun 13 07:33:12.445: INFO: Got endpoints: latency-svc-vd8bt [575.262085ms]
  Jun 13 07:33:12.465: INFO: Created: latency-svc-lcsbb
  Jun 13 07:33:12.489: INFO: Got endpoints: latency-svc-vn6kr [590.346594ms]
  Jun 13 07:33:12.532: INFO: Got endpoints: latency-svc-lcsbb [613.264947ms]
  Jun 13 07:33:12.532: INFO: Latencies: [210.06533ms 221.678951ms 250.436048ms 252.53719ms 270.999756ms 290.387142ms 310.110208ms 317.634048ms 320.143152ms 343.39049ms 347.212708ms 356.234828ms 358.869197ms 364.822718ms 366.220349ms 388.424451ms 396.903241ms 402.187648ms 406.647458ms 407.801159ms 409.363929ms 409.67926ms 415.670287ms 418.536498ms 420.285273ms 420.462832ms 421.437347ms 424.280708ms 424.527344ms 434.511995ms 435.026432ms 435.337555ms 437.32751ms 437.662869ms 438.050291ms 439.798137ms 440.74737ms 442.750658ms 457.14494ms 462.053837ms 464.95421ms 466.071267ms 466.148259ms 469.334796ms 470.981913ms 471.197233ms 474.136227ms 478.130976ms 478.725816ms 480.340039ms 487.595821ms 488.135302ms 492.348755ms 494.541553ms 499.691296ms 502.378381ms 503.25403ms 506.014472ms 506.0403ms 512.656118ms 514.492246ms 515.077007ms 515.119636ms 520.511655ms 523.016607ms 523.408871ms 526.596475ms 527.445673ms 534.247769ms 534.988121ms 534.999328ms 535.704444ms 542.447498ms 546.101777ms 548.681344ms 558.324245ms 559.809146ms 563.23331ms 568.014408ms 573.49551ms 574.667597ms 574.78671ms 575.262085ms 578.79739ms 581.812591ms 584.859079ms 590.346594ms 591.074294ms 594.598615ms 601.780891ms 602.373315ms 605.259568ms 606.236017ms 609.236004ms 610.099538ms 610.787474ms 613.264947ms 613.758614ms 615.97136ms 618.885918ms 619.69924ms 634.171186ms 640.788667ms 641.519195ms 651.22217ms 657.262073ms 662.602273ms 683.035065ms 688.242782ms 703.345449ms 704.643964ms 704.897735ms 714.570022ms 715.717406ms 726.716876ms 727.046874ms 731.737499ms 742.230979ms 748.888743ms 760.126974ms 778.75853ms 789.311579ms 792.263067ms 796.230218ms 797.80642ms 810.44974ms 810.957505ms 825.09009ms 825.783514ms 827.256506ms 851.937915ms 851.967028ms 853.987599ms 861.692111ms 869.010167ms 878.531855ms 880.386888ms 881.243545ms 893.030139ms 901.994671ms 903.626723ms 916.790418ms 918.511895ms 928.849762ms 939.830067ms 972.154093ms 975.204443ms 991.0446ms 1.007303395s 1.015965752s 1.027750857s 1.040738339s 1.045154595s 1.05642672s 1.063065109s 1.070223269s 1.072236675s 1.07823658s 1.085722098s 1.103094471s 1.109825539s 1.12393424s 1.124095422s 1.127441071s 1.138252121s 1.145709533s 1.204230853s 1.211090346s 1.215731954s 1.221141688s 1.246045944s 1.247087724s 1.247154216s 1.248496898s 1.250286777s 1.261116318s 1.271723115s 1.272282476s 1.284465217s 1.284534523s 1.29463213s 1.294864316s 1.301662653s 1.30424514s 1.307489943s 1.31383846s 1.347381012s 1.361150167s 1.407157336s 1.407288243s 1.408497991s 1.412414278s 1.419021643s 1.421223518s 1.429145039s 1.584295432s 1.719392654s 1.793843294s 1.902988069s 2.107560884s]
  Jun 13 07:33:12.533: INFO: 50 %ile: 619.69924ms
  Jun 13 07:33:12.533: INFO: 90 %ile: 1.29463213s
  Jun 13 07:33:12.533: INFO: 99 %ile: 1.902988069s
  Jun 13 07:33:12.533: INFO: Total sample count: 200
  Jun 13 07:33:12.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-176" for this suite. @ 06/13/24 07:33:12.553
â€¢ [14.065 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/13/24 07:33:12.563
  Jun 13 07:33:12.563: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/13/24 07:33:12.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:33:12.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:33:12.654
  STEP: Creating two CSIDrivers @ 06/13/24 07:33:12.692
  STEP: Getting "inline-driver-f2fe3336-c45c-4b65-a434-437b5005d724" & "inline-driver-6b5a8498-85d9-4cc5-9cb2-569aab30ab7e" @ 06/13/24 07:33:12.796
  STEP: Patching the CSIDriver "inline-driver-6b5a8498-85d9-4cc5-9cb2-569aab30ab7e" @ 06/13/24 07:33:12.822
  STEP: Updating the CSIDriver "inline-driver-6b5a8498-85d9-4cc5-9cb2-569aab30ab7e" @ 06/13/24 07:33:12.891
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1410" @ 06/13/24 07:33:12.928
  STEP: Deleting CSIDriver "inline-driver-f2fe3336-c45c-4b65-a434-437b5005d724" @ 06/13/24 07:33:12.936
  STEP: Confirm deletion of CSIDriver "inline-driver-f2fe3336-c45c-4b65-a434-437b5005d724" @ 06/13/24 07:33:12.957
  STEP: Deleting CSIDriver "inline-driver-6b5a8498-85d9-4cc5-9cb2-569aab30ab7e" via DeleteCollection @ 06/13/24 07:33:12.961
  STEP: Confirm deletion of CSIDriver "inline-driver-6b5a8498-85d9-4cc5-9cb2-569aab30ab7e" @ 06/13/24 07:33:12.997
  Jun 13 07:33:13.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1410" for this suite. @ 06/13/24 07:33:13.017
â€¢ [0.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/13/24 07:33:13.027
  Jun 13 07:33:13.027: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 07:33:13.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:33:13.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:33:13.147
  STEP: Creating a cronjob @ 06/13/24 07:33:13.162
  STEP: creating @ 06/13/24 07:33:13.163
  STEP: getting @ 06/13/24 07:33:13.205
  STEP: listing @ 06/13/24 07:33:13.234
  STEP: watching @ 06/13/24 07:33:13.281
  Jun 13 07:33:13.294: INFO: starting watch
  STEP: cluster-wide listing @ 06/13/24 07:33:13.311
  E0613 07:33:13.316763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: cluster-wide watching @ 06/13/24 07:33:13.321
  Jun 13 07:33:13.321: INFO: starting watch
  STEP: patching @ 06/13/24 07:33:13.324
  STEP: updating @ 06/13/24 07:33:13.341
  Jun 13 07:33:13.369: INFO: waiting for watch events with expected annotations
  Jun 13 07:33:13.369: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/13/24 07:33:13.369
  STEP: updating /status @ 06/13/24 07:33:13.393
  STEP: get /status @ 06/13/24 07:33:13.404
  STEP: deleting @ 06/13/24 07:33:13.422
  STEP: deleting a collection @ 06/13/24 07:33:13.473
  Jun 13 07:33:13.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4641" for this suite. @ 06/13/24 07:33:13.498
â€¢ [0.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/13/24 07:33:13.533
  Jun 13 07:33:13.533: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 07:33:13.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:33:13.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:33:13.616
  STEP: creating the pod @ 06/13/24 07:33:13.646
  STEP: setting up watch @ 06/13/24 07:33:13.646
  STEP: submitting the pod to kubernetes @ 06/13/24 07:33:13.749
  STEP: verifying the pod is in kubernetes @ 06/13/24 07:33:13.764
  STEP: verifying pod creation was observed @ 06/13/24 07:33:13.787
  E0613 07:33:14.316930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:15.329342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:16.318562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:17.319884      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/13/24 07:33:17.85
  STEP: verifying pod deletion was observed @ 06/13/24 07:33:17.93
  E0613 07:33:18.321223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:19.321619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:20.322331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:20.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1506" for this suite. @ 06/13/24 07:33:20.547
â€¢ [7.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/13/24 07:33:20.687
  Jun 13 07:33:20.687: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 07:33:20.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:33:21.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:33:21.083
  E0613 07:33:21.323324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/13/24 07:33:21.648
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 07:33:21.687
  Jun 13 07:33:21.736: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:33:21.736: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:33:22.323474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:22.747: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:33:22.748: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:33:23.324204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:23.766: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:33:23.766: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:33:24.329287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:24.776: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun 13 07:33:24.776: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:33:25.326470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:25.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:33:25.831: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:33:26.326703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:26.784: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:33:26.784: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:33:27.329641      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:27.731: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:33:27.731: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:33:28.329288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:28.801: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 07:33:28.801: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/13/24 07:33:28.846
  Jun 13 07:33:29.005: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 07:33:29.005: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/13/24 07:33:29.005
  E0613 07:33:29.329564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 07:33:30.069
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1466, will wait for the garbage collector to delete the pods @ 06/13/24 07:33:30.069
  Jun 13 07:33:30.184: INFO: Deleting DaemonSet.extensions daemon-set took: 16.540363ms
  E0613 07:33:30.330632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:30.384: INFO: Terminating DaemonSet.extensions daemon-set pods took: 200.489331ms
  E0613 07:33:31.331676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:32.334014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:33.334420      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:34.339814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:35.341626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:36.341610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:37.342487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:38.342764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:39.204: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:33:39.204: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 07:33:39.225: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21399"},"items":null}

  Jun 13 07:33:39.240: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21400"},"items":null}

  Jun 13 07:33:39.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1466" for this suite. @ 06/13/24 07:33:39.312
  E0613 07:33:39.345628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [18.665 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/13/24 07:33:39.362
  Jun 13 07:33:39.362: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 07:33:39.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:33:39.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:33:39.554
  E0613 07:33:40.346658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:41.348040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:41.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7222" for this suite. @ 06/13/24 07:33:41.782
â€¢ [2.441 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/13/24 07:33:41.802
  Jun 13 07:33:41.802: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 07:33:41.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:33:41.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:33:41.942
  E0613 07:33:42.352144      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:43.352338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:44.352444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:45.354365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 06/13/24 07:33:46.177
  Jun 13 07:33:46.177: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9398 pod-service-account-350aa9a8-85d0-4867-ac53-32890aa6d020 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E0613 07:33:46.354492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 06/13/24 07:33:46.645
  Jun 13 07:33:46.645: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9398 pod-service-account-350aa9a8-85d0-4867-ac53-32890aa6d020 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/13/24 07:33:47.144
  Jun 13 07:33:47.144: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9398 pod-service-account-350aa9a8-85d0-4867-ac53-32890aa6d020 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  E0613 07:33:47.354596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:47.609: INFO: Got root ca configmap in namespace "svcaccounts-9398"
  Jun 13 07:33:47.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9398" for this suite. @ 06/13/24 07:33:47.619
â€¢ [5.829 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/13/24 07:33:47.631
  Jun 13 07:33:47.631: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:33:47.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:33:47.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:33:47.785
  STEP: Setting up server cert @ 06/13/24 07:33:47.928
  E0613 07:33:48.354865      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:33:48.695
  STEP: Deploying the webhook pod @ 06/13/24 07:33:48.713
  STEP: Wait for the deployment to be ready @ 06/13/24 07:33:48.74
  Jun 13 07:33:48.764: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 07:33:49.354885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:50.355043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:50.789: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:33:51.356810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:52.357133      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:52.795: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 33, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:33:53.358377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:54.359023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 07:33:54.793
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:33:54.808
  E0613 07:33:55.359147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:33:55.808: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/13/24 07:33:55.814
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 07:33:55.814
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/13/24 07:33:55.844
  E0613 07:33:56.360033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/13/24 07:33:56.863
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 07:33:56.863
  E0613 07:33:57.362597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 06/13/24 07:33:57.942
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 07:33:57.942
  E0613 07:33:58.361851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:33:59.362154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:00.362570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:01.362754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:02.362853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/13/24 07:34:03.009
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/13/24 07:34:03.009
  E0613 07:34:03.363303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:04.366192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:05.365508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:06.365844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:07.365710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:34:08.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6882" for this suite. @ 06/13/24 07:34:08.281
  STEP: Destroying namespace "webhook-markers-7135" for this suite. @ 06/13/24 07:34:08.293
â€¢ [20.677 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/13/24 07:34:08.317
  Jun 13 07:34:08.317: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pv @ 06/13/24 07:34:08.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:34:08.362
  E0613 07:34:08.366394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:34:08.37
  STEP: Creating initial PV and PVC @ 06/13/24 07:34:08.385
  Jun 13 07:34:08.386: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7514" @ 06/13/24 07:34:08.498
  STEP: Listing PVCs in namespace "pv-7514" @ 06/13/24 07:34:08.525
  STEP: Reading "pvc-tbxp7" Status @ 06/13/24 07:34:08.553
  STEP: Reading "pv-7514-pqphp" Status @ 06/13/24 07:34:08.561
  STEP: Patching "pvc-tbxp7" Status @ 06/13/24 07:34:08.569
  STEP: Patching "pv-7514-pqphp" Status @ 06/13/24 07:34:08.576
  STEP: Updating "pvc-tbxp7" Status @ 06/13/24 07:34:08.627
  STEP: Updating "pv-7514-pqphp" Status @ 06/13/24 07:34:08.639
  Jun 13 07:34:08.669: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 13 07:34:08.669: INFO: Deleting PersistentVolumeClaim "pvc-tbxp7"
  Jun 13 07:34:08.728: INFO: Deleting PersistentVolume "pv-7514-pqphp"
  Jun 13 07:34:08.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7514" for this suite. @ 06/13/24 07:34:08.83
â€¢ [0.543 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/13/24 07:34:08.86
  Jun 13 07:34:08.861: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:34:08.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:34:09.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:34:09.142
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 07:34:09.192
  Jun 13 07:34:09.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2686 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  E0613 07:34:09.366969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:34:09.427: INFO: stderr: ""
  Jun 13 07:34:09.427: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/13/24 07:34:09.427
  Jun 13 07:34:09.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2686 delete pods e2e-test-httpd-pod'
  E0613 07:34:10.367520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:34:10.979: INFO: stderr: ""
  Jun 13 07:34:10.979: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 13 07:34:10.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2686" for this suite. @ 06/13/24 07:34:11.005
â€¢ [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/13/24 07:34:11.044
  Jun 13 07:34:11.044: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 07:34:11.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:34:11.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:34:11.108
  Jun 13 07:34:11.215: INFO: created pod pod-service-account-defaultsa
  Jun 13 07:34:11.215: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun 13 07:34:11.294: INFO: created pod pod-service-account-mountsa
  Jun 13 07:34:11.294: INFO: pod pod-service-account-mountsa service account token volume mount: true
  E0613 07:34:11.368069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:34:11.371: INFO: created pod pod-service-account-nomountsa
  Jun 13 07:34:11.372: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun 13 07:34:11.420: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun 13 07:34:11.420: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun 13 07:34:11.469: INFO: created pod pod-service-account-mountsa-mountspec
  Jun 13 07:34:11.469: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun 13 07:34:11.516: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun 13 07:34:11.516: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun 13 07:34:11.694: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun 13 07:34:11.694: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun 13 07:34:11.844: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun 13 07:34:11.844: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun 13 07:34:11.991: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun 13 07:34:11.991: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun 13 07:34:11.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4113" for this suite. @ 06/13/24 07:34:12.072
â€¢ [1.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/13/24 07:34:12.157
  Jun 13 07:34:12.157: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename cronjob @ 06/13/24 07:34:12.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:34:12.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:34:12.341
  STEP: Creating a ReplaceConcurrent cronjob @ 06/13/24 07:34:12.354
  E0613 07:34:12.372415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring a job is scheduled @ 06/13/24 07:34:12.379
  E0613 07:34:13.372558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:14.377722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:15.378023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:16.378073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:17.378194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:18.378637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:19.379057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:20.379270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:21.383268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:22.382450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:23.380694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:24.381198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:25.381612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:26.382404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:27.383000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:28.383253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:29.383710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:30.389282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:31.389563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:32.390389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:33.392370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:34.392969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:35.401627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:36.401856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:37.401826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:38.402488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:39.407376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:40.407961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:41.408184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:42.408809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:43.409012      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:44.409767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:45.409879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:46.412946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:47.414158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:48.415190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:49.416200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:50.421517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:51.421658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:52.422409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:53.423862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:54.424735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:55.425119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:56.425528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:57.426576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:58.427294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:34:59.427900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 06/13/24 07:35:00.384
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/13/24 07:35:00.387
  STEP: Ensuring the job is replaced with a new one @ 06/13/24 07:35:00.39
  E0613 07:35:00.429543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:01.441518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:02.433959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:03.434152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:04.436842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:05.435944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:06.436686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:07.439232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:08.439775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:09.440752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:10.441566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:11.442727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:12.443958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:13.445915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:14.446356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:15.446488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:16.450577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:17.450753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:18.451640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:19.452349      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:20.457583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:21.457913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:22.458954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:23.459180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:24.459693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:25.460451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:26.461326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:27.461579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:28.465876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:29.465560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:30.469542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:31.473592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:32.480259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:33.483946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:34.484316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:35.485710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:36.488794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:37.488915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:38.489496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:39.489651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:40.489769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:41.489904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:42.491654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:43.491723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:44.493160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:45.493511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:46.496098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:47.496600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:48.498226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:49.497990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:50.499585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:51.500183      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:52.500872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:53.501598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:54.502388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:55.518418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:56.518874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:57.518992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:58.519816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:35:59.519936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 06/13/24 07:36:00.396
  Jun 13 07:36:00.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1257" for this suite. @ 06/13/24 07:36:00.467
â€¢ [108.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/13/24 07:36:00.488
  Jun 13 07:36:00.488: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 07:36:00.49
  E0613 07:36:00.520870      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:36:00.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:36:00.621
  STEP: Creating namespace "e2e-ns-jfjhc" @ 06/13/24 07:36:00.643
  Jun 13 07:36:00.708: INFO: Namespace "e2e-ns-jfjhc-6586" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-jfjhc-6586" @ 06/13/24 07:36:00.708
  Jun 13 07:36:00.749: INFO: Namespace "e2e-ns-jfjhc-6586" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-jfjhc-6586" @ 06/13/24 07:36:00.753
  Jun 13 07:36:00.786: INFO: Namespace "e2e-ns-jfjhc-6586" has []v1.FinalizerName{"kubernetes"}
  Jun 13 07:36:00.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-327" for this suite. @ 06/13/24 07:36:00.797
  STEP: Destroying namespace "e2e-ns-jfjhc-6586" for this suite. @ 06/13/24 07:36:00.81
â€¢ [0.358 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/13/24 07:36:00.847
  Jun 13 07:36:00.847: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename discovery @ 06/13/24 07:36:00.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:36:00.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:36:00.908
  STEP: Setting up server cert @ 06/13/24 07:36:00.915
  E0613 07:36:01.526279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:01.685: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun 13 07:36:01.687: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun 13 07:36:01.687: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun 13 07:36:01.687: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun 13 07:36:01.687: INFO: Checking APIGroup: apps
  Jun 13 07:36:01.689: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun 13 07:36:01.689: INFO: Versions found [{apps/v1 v1}]
  Jun 13 07:36:01.689: INFO: apps/v1 matches apps/v1
  Jun 13 07:36:01.689: INFO: Checking APIGroup: events.k8s.io
  Jun 13 07:36:01.691: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun 13 07:36:01.691: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun 13 07:36:01.691: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun 13 07:36:01.691: INFO: Checking APIGroup: authentication.k8s.io
  Jun 13 07:36:01.692: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun 13 07:36:01.692: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun 13 07:36:01.692: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun 13 07:36:01.692: INFO: Checking APIGroup: authorization.k8s.io
  Jun 13 07:36:01.693: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun 13 07:36:01.693: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun 13 07:36:01.693: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun 13 07:36:01.693: INFO: Checking APIGroup: autoscaling
  Jun 13 07:36:01.697: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun 13 07:36:01.697: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun 13 07:36:01.697: INFO: autoscaling/v2 matches autoscaling/v2
  Jun 13 07:36:01.697: INFO: Checking APIGroup: batch
  Jun 13 07:36:01.699: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun 13 07:36:01.699: INFO: Versions found [{batch/v1 v1}]
  Jun 13 07:36:01.699: INFO: batch/v1 matches batch/v1
  Jun 13 07:36:01.699: INFO: Checking APIGroup: certificates.k8s.io
  Jun 13 07:36:01.703: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun 13 07:36:01.703: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun 13 07:36:01.703: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun 13 07:36:01.703: INFO: Checking APIGroup: networking.k8s.io
  Jun 13 07:36:01.705: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun 13 07:36:01.705: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun 13 07:36:01.706: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun 13 07:36:01.706: INFO: Checking APIGroup: policy
  Jun 13 07:36:01.707: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun 13 07:36:01.707: INFO: Versions found [{policy/v1 v1}]
  Jun 13 07:36:01.707: INFO: policy/v1 matches policy/v1
  Jun 13 07:36:01.707: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun 13 07:36:01.709: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun 13 07:36:01.709: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun 13 07:36:01.709: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun 13 07:36:01.709: INFO: Checking APIGroup: storage.k8s.io
  Jun 13 07:36:01.711: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun 13 07:36:01.711: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun 13 07:36:01.711: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun 13 07:36:01.711: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun 13 07:36:01.712: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun 13 07:36:01.715: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun 13 07:36:01.722: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun 13 07:36:01.722: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun 13 07:36:01.734: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun 13 07:36:01.734: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun 13 07:36:01.734: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun 13 07:36:01.740: INFO: Checking APIGroup: scheduling.k8s.io
  Jun 13 07:36:01.745: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun 13 07:36:01.748: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun 13 07:36:01.748: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun 13 07:36:01.748: INFO: Checking APIGroup: coordination.k8s.io
  Jun 13 07:36:01.752: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun 13 07:36:01.752: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun 13 07:36:01.752: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun 13 07:36:01.752: INFO: Checking APIGroup: node.k8s.io
  Jun 13 07:36:01.754: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun 13 07:36:01.754: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun 13 07:36:01.754: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun 13 07:36:01.754: INFO: Checking APIGroup: discovery.k8s.io
  Jun 13 07:36:01.757: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun 13 07:36:01.757: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun 13 07:36:01.757: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun 13 07:36:01.757: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun 13 07:36:01.758: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun 13 07:36:01.759: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun 13 07:36:01.759: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun 13 07:36:01.759: INFO: Checking APIGroup: catalog.cattle.io
  Jun 13 07:36:01.764: INFO: PreferredVersion.GroupVersion: catalog.cattle.io/v1
  Jun 13 07:36:01.764: INFO: Versions found [{catalog.cattle.io/v1 v1}]
  Jun 13 07:36:01.764: INFO: catalog.cattle.io/v1 matches catalog.cattle.io/v1
  Jun 13 07:36:01.764: INFO: Checking APIGroup: crd.projectcalico.org
  Jun 13 07:36:01.766: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Jun 13 07:36:01.767: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Jun 13 07:36:01.767: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Jun 13 07:36:01.768: INFO: Checking APIGroup: ui.cattle.io
  Jun 13 07:36:01.781: INFO: PreferredVersion.GroupVersion: ui.cattle.io/v1
  Jun 13 07:36:01.781: INFO: Versions found [{ui.cattle.io/v1 v1}]
  Jun 13 07:36:01.781: INFO: ui.cattle.io/v1 matches ui.cattle.io/v1
  Jun 13 07:36:01.781: INFO: Checking APIGroup: cluster.cattle.io
  Jun 13 07:36:01.787: INFO: PreferredVersion.GroupVersion: cluster.cattle.io/v3
  Jun 13 07:36:01.787: INFO: Versions found [{cluster.cattle.io/v3 v3}]
  Jun 13 07:36:01.787: INFO: cluster.cattle.io/v3 matches cluster.cattle.io/v3
  Jun 13 07:36:01.787: INFO: Checking APIGroup: management.cattle.io
  Jun 13 07:36:01.798: INFO: PreferredVersion.GroupVersion: management.cattle.io/v3
  Jun 13 07:36:01.798: INFO: Versions found [{management.cattle.io/v3 v3}]
  Jun 13 07:36:01.798: INFO: management.cattle.io/v3 matches management.cattle.io/v3
  Jun 13 07:36:01.798: INFO: Checking APIGroup: metrics.k8s.io
  Jun 13 07:36:01.813: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Jun 13 07:36:01.816: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Jun 13 07:36:01.816: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Jun 13 07:36:01.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-895" for this suite. @ 06/13/24 07:36:01.826
â€¢ [0.996 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/13/24 07:36:01.842
  Jun 13 07:36:01.842: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 07:36:01.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:36:01.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:36:02.064
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 07:36:02.216
  E0613 07:36:02.522824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:03.523217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:04.525879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:05.527229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/13/24 07:36:06.462
  E0613 07:36:06.528106      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:07.528740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:08.529002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:09.529945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:10.531899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:11.531653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:12.531709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/13/24 07:36:12.595
  E0613 07:36:13.531924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:14.531998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:15.532064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:16.532231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/13/24 07:36:16.637
  Jun 13 07:36:16.699: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8002" for this suite. @ 06/13/24 07:36:16.702
â€¢ [14.868 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/13/24 07:36:16.711
  Jun 13 07:36:16.711: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:36:16.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:36:16.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:36:16.79
  STEP: creating a replication controller @ 06/13/24 07:36:16.818
  Jun 13 07:36:16.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 create -f -'
  Jun 13 07:36:17.071: INFO: stderr: ""
  Jun 13 07:36:17.071: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 07:36:17.072
  Jun 13 07:36:17.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:36:17.202: INFO: stderr: ""
  Jun 13 07:36:17.202: INFO: stdout: "update-demo-nautilus-d8blm update-demo-nautilus-ff8k6 "
  Jun 13 07:36:17.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-d8blm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:17.401: INFO: stderr: ""
  Jun 13 07:36:17.401: INFO: stdout: ""
  Jun 13 07:36:17.401: INFO: update-demo-nautilus-d8blm is created but not running
  E0613 07:36:17.533261      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:18.534161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:19.535044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:20.535241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:21.535438      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:22.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0613 07:36:22.535662      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:22.821: INFO: stderr: ""
  Jun 13 07:36:22.821: INFO: stdout: "update-demo-nautilus-d8blm update-demo-nautilus-ff8k6 "
  Jun 13 07:36:22.821: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-d8blm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:23.209: INFO: stderr: ""
  Jun 13 07:36:23.209: INFO: stdout: ""
  Jun 13 07:36:23.209: INFO: update-demo-nautilus-d8blm is created but not running
  E0613 07:36:23.536680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:24.537517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:25.538801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:26.539215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:27.539337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:28.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:36:28.449: INFO: stderr: ""
  Jun 13 07:36:28.449: INFO: stdout: "update-demo-nautilus-d8blm update-demo-nautilus-ff8k6 "
  Jun 13 07:36:28.449: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-d8blm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0613 07:36:28.540823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:28.576: INFO: stderr: ""
  Jun 13 07:36:28.576: INFO: stdout: ""
  Jun 13 07:36:28.576: INFO: update-demo-nautilus-d8blm is created but not running
  E0613 07:36:29.541842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:30.542943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:31.545520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:32.547881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:33.547969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:33.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:36:33.801: INFO: stderr: ""
  Jun 13 07:36:33.801: INFO: stdout: "update-demo-nautilus-d8blm update-demo-nautilus-ff8k6 "
  Jun 13 07:36:33.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-d8blm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:33.937: INFO: stderr: ""
  Jun 13 07:36:33.937: INFO: stdout: ""
  Jun 13 07:36:33.937: INFO: update-demo-nautilus-d8blm is created but not running
  E0613 07:36:34.548517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:35.548946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:36.549660      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:37.553059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:38.553939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:38.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:36:39.068: INFO: stderr: ""
  Jun 13 07:36:39.068: INFO: stdout: "update-demo-nautilus-d8blm update-demo-nautilus-ff8k6 "
  Jun 13 07:36:39.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-d8blm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:39.286: INFO: stderr: ""
  Jun 13 07:36:39.286: INFO: stdout: "true"
  Jun 13 07:36:39.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-d8blm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0613 07:36:39.554311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:39.643: INFO: stderr: ""
  Jun 13 07:36:39.643: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:36:39.643: INFO: validating pod update-demo-nautilus-d8blm
  Jun 13 07:36:39.659: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:36:39.659: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:36:39.659: INFO: update-demo-nautilus-d8blm is verified up and running
  Jun 13 07:36:39.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:39.891: INFO: stderr: ""
  Jun 13 07:36:39.891: INFO: stdout: "true"
  Jun 13 07:36:39.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 07:36:40.164: INFO: stderr: ""
  Jun 13 07:36:40.164: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:36:40.164: INFO: validating pod update-demo-nautilus-ff8k6
  Jun 13 07:36:40.178: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:36:40.178: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:36:40.178: INFO: update-demo-nautilus-ff8k6 is verified up and running
  STEP: scaling down the replication controller @ 06/13/24 07:36:40.178
  Jun 13 07:36:40.180: INFO: scanned /root for discovery docs: <nil>
  Jun 13 07:36:40.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0613 07:36:40.555348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:41.439: INFO: stderr: ""
  Jun 13 07:36:41.439: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 07:36:41.439
  Jun 13 07:36:41.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0613 07:36:41.556707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:41.629: INFO: stderr: ""
  Jun 13 07:36:41.629: INFO: stdout: "update-demo-nautilus-ff8k6 "
  Jun 13 07:36:41.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:41.906: INFO: stderr: ""
  Jun 13 07:36:41.906: INFO: stdout: "true"
  Jun 13 07:36:41.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 07:36:42.268: INFO: stderr: ""
  Jun 13 07:36:42.268: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:36:42.268: INFO: validating pod update-demo-nautilus-ff8k6
  Jun 13 07:36:42.274: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:36:42.274: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:36:42.274: INFO: update-demo-nautilus-ff8k6 is verified up and running
  STEP: scaling up the replication controller @ 06/13/24 07:36:42.274
  Jun 13 07:36:42.276: INFO: scanned /root for discovery docs: <nil>
  Jun 13 07:36:42.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0613 07:36:42.557554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:43.557583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:43.652: INFO: stderr: ""
  Jun 13 07:36:43.652: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 07:36:43.652
  Jun 13 07:36:43.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:36:43.827: INFO: stderr: ""
  Jun 13 07:36:43.827: INFO: stdout: "update-demo-nautilus-ff8k6 update-demo-nautilus-lvj87 "
  Jun 13 07:36:43.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:43.937: INFO: stderr: ""
  Jun 13 07:36:43.937: INFO: stdout: "true"
  Jun 13 07:36:43.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 07:36:44.225: INFO: stderr: ""
  Jun 13 07:36:44.225: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:36:44.225: INFO: validating pod update-demo-nautilus-ff8k6
  Jun 13 07:36:44.230: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:36:44.230: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:36:44.230: INFO: update-demo-nautilus-ff8k6 is verified up and running
  Jun 13 07:36:44.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-lvj87 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0613 07:36:44.558141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:44.573: INFO: stderr: ""
  Jun 13 07:36:44.573: INFO: stdout: ""
  Jun 13 07:36:44.573: INFO: update-demo-nautilus-lvj87 is created but not running
  E0613 07:36:45.559533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:46.560327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:47.563272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:48.563205      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:49.564187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:49.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:36:49.794: INFO: stderr: ""
  Jun 13 07:36:49.794: INFO: stdout: "update-demo-nautilus-ff8k6 update-demo-nautilus-lvj87 "
  Jun 13 07:36:49.794: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:49.934: INFO: stderr: ""
  Jun 13 07:36:49.934: INFO: stdout: "true"
  Jun 13 07:36:49.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-ff8k6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 07:36:50.086: INFO: stderr: ""
  Jun 13 07:36:50.086: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:36:50.086: INFO: validating pod update-demo-nautilus-ff8k6
  Jun 13 07:36:50.090: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:36:50.090: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:36:50.090: INFO: update-demo-nautilus-ff8k6 is verified up and running
  Jun 13 07:36:50.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-lvj87 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:36:50.241: INFO: stderr: ""
  Jun 13 07:36:50.241: INFO: stdout: "true"
  Jun 13 07:36:50.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods update-demo-nautilus-lvj87 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 07:36:50.317: INFO: stderr: ""
  Jun 13 07:36:50.318: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:36:50.318: INFO: validating pod update-demo-nautilus-lvj87
  Jun 13 07:36:50.329: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:36:50.330: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:36:50.330: INFO: update-demo-nautilus-lvj87 is verified up and running
  STEP: using delete to clean up resources @ 06/13/24 07:36:50.33
  Jun 13 07:36:50.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 delete --grace-period=0 --force -f -'
  Jun 13 07:36:50.538: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 07:36:50.538: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 13 07:36:50.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get rc,svc -l name=update-demo --no-headers'
  E0613 07:36:50.564547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:50.665: INFO: stderr: "No resources found in kubectl-5270 namespace.\n"
  Jun 13 07:36:50.665: INFO: stdout: ""
  Jun 13 07:36:50.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5270 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 13 07:36:50.882: INFO: stderr: ""
  Jun 13 07:36:50.883: INFO: stdout: ""
  Jun 13 07:36:50.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5270" for this suite. @ 06/13/24 07:36:50.889
â€¢ [34.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/13/24 07:36:50.91
  Jun 13 07:36:50.910: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename init-container @ 06/13/24 07:36:50.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:36:50.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:36:50.997
  STEP: creating the pod @ 06/13/24 07:36:51.037
  Jun 13 07:36:51.046: INFO: PodSpec: initContainers in spec.initContainers
  E0613 07:36:51.564789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:52.566223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:53.568393      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:54.566868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:55.568454      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:56.571900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:36:57.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5837" for this suite. @ 06/13/24 07:36:57.063
â€¢ [6.184 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/13/24 07:36:57.095
  Jun 13 07:36:57.095: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename endpointslice @ 06/13/24 07:36:57.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:36:57.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:36:57.202
  STEP: getting /apis @ 06/13/24 07:36:57.212
  STEP: getting /apis/discovery.k8s.io @ 06/13/24 07:36:57.23
  STEP: getting /apis/discovery.k8s.iov1 @ 06/13/24 07:36:57.235
  STEP: creating @ 06/13/24 07:36:57.236
  STEP: getting @ 06/13/24 07:36:57.41
  STEP: listing @ 06/13/24 07:36:57.416
  STEP: watching @ 06/13/24 07:36:57.424
  Jun 13 07:36:57.426: INFO: starting watch
  STEP: cluster-wide listing @ 06/13/24 07:36:57.428
  STEP: cluster-wide watching @ 06/13/24 07:36:57.436
  Jun 13 07:36:57.441: INFO: starting watch
  STEP: patching @ 06/13/24 07:36:57.457
  STEP: updating @ 06/13/24 07:36:57.486
  Jun 13 07:36:57.502: INFO: waiting for watch events with expected annotations
  Jun 13 07:36:57.502: INFO: saw patched and updated annotations
  STEP: deleting @ 06/13/24 07:36:57.502
  STEP: deleting a collection @ 06/13/24 07:36:57.54
  Jun 13 07:36:57.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 07:36:57.572780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "endpointslice-3722" for this suite. @ 06/13/24 07:36:57.577
â€¢ [0.551 seconds]
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/13/24 07:36:57.646
  Jun 13 07:36:57.646: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename security-context @ 06/13/24 07:36:57.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:36:57.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:36:57.753
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/13/24 07:36:57.767
  E0613 07:36:58.573237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:36:59.573820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:00.573991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:01.574141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:02.575399      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:03.574965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:37:03.823
  Jun 13 07:37:03.838: INFO: Trying to get logs from node ip-172-31-12-94 pod security-context-219f00d6-621b-4987-a3e4-6d10129a9015 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 07:37:03.979
  Jun 13 07:37:04.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2562" for this suite. @ 06/13/24 07:37:04.087
â€¢ [6.487 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/13/24 07:37:04.133
  Jun 13 07:37:04.133: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 07:37:04.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:37:04.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:37:04.306
  STEP: Create a Replicaset @ 06/13/24 07:37:04.344
  STEP: Verify that the required pods have come up. @ 06/13/24 07:37:04.381
  Jun 13 07:37:04.405: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0613 07:37:04.575514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:05.575578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:06.578239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:07.578309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:08.578462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:09.422: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 07:37:09.422
  STEP: Getting /status @ 06/13/24 07:37:09.422
  Jun 13 07:37:09.434: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/13/24 07:37:09.434
  Jun 13 07:37:09.476: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/13/24 07:37:09.476
  Jun 13 07:37:09.499: INFO: Observed &ReplicaSet event: ADDED
  Jun 13 07:37:09.499: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 07:37:09.499: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 07:37:09.500: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 07:37:09.500: INFO: Found replicaset test-rs in namespace replicaset-5734 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun 13 07:37:09.500: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/13/24 07:37:09.501
  Jun 13 07:37:09.501: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun 13 07:37:09.531: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/13/24 07:37:09.541
  Jun 13 07:37:09.560: INFO: Observed &ReplicaSet event: ADDED
  Jun 13 07:37:09.561: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 07:37:09.561: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 07:37:09.561: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 07:37:09.561: INFO: Observed replicaset test-rs in namespace replicaset-5734 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 07:37:09.562: INFO: Observed &ReplicaSet event: MODIFIED
  Jun 13 07:37:09.562: INFO: Found replicaset test-rs in namespace replicaset-5734 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun 13 07:37:09.562: INFO: Replicaset test-rs has a patched status
  Jun 13 07:37:09.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 07:37:09.579862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-5734" for this suite. @ 06/13/24 07:37:09.592
â€¢ [5.484 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/13/24 07:37:09.618
  Jun 13 07:37:09.618: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename disruption @ 06/13/24 07:37:09.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:37:09.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:37:09.742
  STEP: Waiting for the pdb to be processed @ 06/13/24 07:37:09.777
  E0613 07:37:10.580917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:11.581560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/13/24 07:37:11.929
  Jun 13 07:37:11.981: INFO: running pods: 0 < 3
  E0613 07:37:12.585141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:13.585633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:13.934: INFO: running pods: 0 < 3
  E0613 07:37:14.585760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:15.585924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:15.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8639" for this suite. @ 06/13/24 07:37:15.953
â€¢ [6.362 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/13/24 07:37:15.981
  Jun 13 07:37:15.981: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:37:15.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:37:16.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:37:16.183
  STEP: Creating configMap with name projected-configmap-test-volume-dbc3cf48-6497-4406-905b-92da8b3c52ad @ 06/13/24 07:37:16.197
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:37:16.295
  E0613 07:37:16.589844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:17.590609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:18.591218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:19.592229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:37:20.402
  Jun 13 07:37:20.404: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-configmaps-0c40b673-e373-4b2b-92d5-e6013da74772 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:37:20.44
  Jun 13 07:37:20.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9927" for this suite. @ 06/13/24 07:37:20.487
â€¢ [4.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/13/24 07:37:20.504
  Jun 13 07:37:20.504: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 07:37:20.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:37:20.58
  E0613 07:37:20.592970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:37:20.601
  Jun 13 07:37:20.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2571" for this suite. @ 06/13/24 07:37:20.669
â€¢ [0.212 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/13/24 07:37:20.716
  Jun 13 07:37:20.716: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 07:37:20.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:37:20.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:37:20.856
  STEP: Creating pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302 @ 06/13/24 07:37:20.888
  E0613 07:37:21.593070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:22.593218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:23.593408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:24.593510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 07:37:24.999
  Jun 13 07:37:25.002: INFO: Initial restart count of pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee is 0
  Jun 13 07:37:25.023: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:25.593817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:26.600911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:27.031: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:27.600669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:28.601572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:29.036: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:29.602607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:30.602784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:31.041: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:31.603095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:32.603193      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:33.046: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:33.604057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:34.604293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:35.056: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:35.604840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:36.605308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:37.060: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:37.605675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:38.605739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:39.090: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:39.606592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:40.611880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:41.125: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:41.612728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:42.613162      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:43.131: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:43.613773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:44.615557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:45.136: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:45.615891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:46.615921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:47.145: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:47.616061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:48.616926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:49.158: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:49.617804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:50.617527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:51.164: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:51.618556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:52.618834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:53.168: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:53.619179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:54.619543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:55.176: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:55.619398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:56.621565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:57.180: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:57.621610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:37:58.623440      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:37:59.186: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:37:59.624205      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:00.624732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:01.208: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:38:01.627298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:02.628225      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:03.218: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:38:03.629084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:04.630426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:05.225: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:38:05.636647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:06.637545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:07.232: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:38:07.649287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:08.641890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:09.236: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:38:09.647532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:10.652293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:11.241: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  E0613 07:38:11.649500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:12.651390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:13.245: INFO: Get pod busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee in namespace container-probe-6302
  Jun 13 07:38:13.245: INFO: Restart count of pod container-probe-6302/busybox-0f4326fa-f91f-4a32-882d-72ca3ef13cee is now 1 (48.243044344s elapsed)
  STEP: deleting the pod @ 06/13/24 07:38:13.246
  Jun 13 07:38:13.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6302" for this suite. @ 06/13/24 07:38:13.301
â€¢ [52.594 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/13/24 07:38:13.311
  Jun 13 07:38:13.311: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 07:38:13.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:38:13.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:38:13.419
  STEP: Creating simple DaemonSet "daemon-set" @ 06/13/24 07:38:13.517
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 07:38:13.62
  E0613 07:38:13.652447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:13.761: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:38:13.761: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:38:14.632: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:38:14.632: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:38:14.652914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:15.654690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:15.674: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:38:15.674: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  Jun 13 07:38:16.649: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:38:16.649: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 07:38:16.655157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:17.640: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 07:38:17.640: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/13/24 07:38:17.643
  E0613 07:38:17.656286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:17.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:38:17.713: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  E0613 07:38:18.656613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:18.728: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:38:18.728: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  E0613 07:38:19.657416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:19.696: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:38:19.696: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  E0613 07:38:20.657616      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:20.690: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun 13 07:38:20.690: INFO: Node ip-172-31-12-94 is running 0 daemon pod, expected 1
  E0613 07:38:21.658829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:21.692: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 07:38:21.693: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/13/24 07:38:21.697
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4511, will wait for the garbage collector to delete the pods @ 06/13/24 07:38:21.697
  Jun 13 07:38:21.760: INFO: Deleting DaemonSet.extensions daemon-set took: 7.704133ms
  Jun 13 07:38:21.861: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.218189ms
  E0613 07:38:22.659765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:23.660135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:24.663251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:24.869: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 07:38:24.869: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun 13 07:38:24.875: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23089"},"items":null}

  Jun 13 07:38:24.878: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23089"},"items":null}

  Jun 13 07:38:24.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4511" for this suite. @ 06/13/24 07:38:24.897
â€¢ [11.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/13/24 07:38:24.914
  Jun 13 07:38:24.914: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:38:24.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:38:24.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:38:25.014
  STEP: Creating configMap with name configmap-test-volume-0e398e8b-08fa-46d0-bc64-7b9d9674cce9 @ 06/13/24 07:38:25.026
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:38:25.033
  E0613 07:38:25.664040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:26.664143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:27.664278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:28.664653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:29.665163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:30.665520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:38:31.113
  Jun 13 07:38:31.127: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-24296545-93fb-466d-b6c5-2070abc92860 container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:38:31.166
  Jun 13 07:38:31.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8005" for this suite. @ 06/13/24 07:38:31.23
â€¢ [6.371 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/13/24 07:38:31.286
  Jun 13 07:38:31.287: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:38:31.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:38:31.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:38:31.493
  STEP: creating a replication controller @ 06/13/24 07:38:31.499
  Jun 13 07:38:31.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 create -f -'
  E0613 07:38:31.678246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:32.059: INFO: stderr: ""
  Jun 13 07:38:32.059: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/13/24 07:38:32.059
  Jun 13 07:38:32.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:38:32.262: INFO: stderr: ""
  Jun 13 07:38:32.262: INFO: stdout: "update-demo-nautilus-82zpn update-demo-nautilus-gjt6c "
  Jun 13 07:38:32.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods update-demo-nautilus-82zpn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:38:32.429: INFO: stderr: ""
  Jun 13 07:38:32.429: INFO: stdout: ""
  Jun 13 07:38:32.429: INFO: update-demo-nautilus-82zpn is created but not running
  E0613 07:38:32.678762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:33.679385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:34.682824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:35.682953      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:36.683116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:37.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun 13 07:38:37.657: INFO: stderr: ""
  Jun 13 07:38:37.657: INFO: stdout: "update-demo-nautilus-82zpn update-demo-nautilus-gjt6c "
  Jun 13 07:38:37.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods update-demo-nautilus-82zpn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0613 07:38:37.683964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:37.832: INFO: stderr: ""
  Jun 13 07:38:37.832: INFO: stdout: "true"
  Jun 13 07:38:37.832: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods update-demo-nautilus-82zpn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 07:38:38.012: INFO: stderr: ""
  Jun 13 07:38:38.012: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:38:38.012: INFO: validating pod update-demo-nautilus-82zpn
  Jun 13 07:38:38.032: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:38:38.032: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:38:38.032: INFO: update-demo-nautilus-82zpn is verified up and running
  Jun 13 07:38:38.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods update-demo-nautilus-gjt6c -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun 13 07:38:38.375: INFO: stderr: ""
  Jun 13 07:38:38.375: INFO: stdout: "true"
  Jun 13 07:38:38.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods update-demo-nautilus-gjt6c -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun 13 07:38:38.595: INFO: stderr: ""
  Jun 13 07:38:38.595: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun 13 07:38:38.595: INFO: validating pod update-demo-nautilus-gjt6c
  Jun 13 07:38:38.603: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun 13 07:38:38.603: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun 13 07:38:38.603: INFO: update-demo-nautilus-gjt6c is verified up and running
  STEP: using delete to clean up resources @ 06/13/24 07:38:38.603
  Jun 13 07:38:38.603: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 delete --grace-period=0 --force -f -'
  E0613 07:38:38.685241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:38:38.913: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 07:38:38.913: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun 13 07:38:38.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get rc,svc -l name=update-demo --no-headers'
  Jun 13 07:38:39.176: INFO: stderr: "No resources found in kubectl-2822 namespace.\n"
  Jun 13 07:38:39.176: INFO: stdout: ""
  Jun 13 07:38:39.176: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2822 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun 13 07:38:39.555: INFO: stderr: ""
  Jun 13 07:38:39.555: INFO: stdout: ""
  Jun 13 07:38:39.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2822" for this suite. @ 06/13/24 07:38:39.608
â€¢ [8.336 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/13/24 07:38:39.622
  Jun 13 07:38:39.622: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:38:39.623
  E0613 07:38:39.685573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:38:39.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:38:39.842
  Jun 13 07:38:39.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-378" for this suite. @ 06/13/24 07:38:40.002
â€¢ [0.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/13/24 07:38:40.129
  Jun 13 07:38:40.129: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename gc @ 06/13/24 07:38:40.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:38:40.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:38:40.354
  STEP: create the rc @ 06/13/24 07:38:40.36
  W0613 07:38:40.401063      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0613 07:38:40.685777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:41.685916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:42.686187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:43.687873      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:44.688867      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/13/24 07:38:45.442
  STEP: wait for all pods to be garbage collected @ 06/13/24 07:38:45.475
  E0613 07:38:45.689303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:46.690125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:47.690590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:48.690816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:49.690957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 07:38:50.5
  W0613 07:38:50.545310      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 07:38:50.545: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 07:38:50.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6231" for this suite. @ 06/13/24 07:38:50.551
â€¢ [10.438 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/13/24 07:38:50.567
  Jun 13 07:38:50.567: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:38:50.568
  E0613 07:38:50.691675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:38:50.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:38:50.809
  STEP: creating service endpoint-test2 in namespace services-2520 @ 06/13/24 07:38:50.816
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2520 to expose endpoints map[] @ 06/13/24 07:38:50.889
  Jun 13 07:38:51.072: INFO: successfully validated that service endpoint-test2 in namespace services-2520 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2520 @ 06/13/24 07:38:51.072
  E0613 07:38:51.692832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:52.693029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:53.694614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:54.695090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2520 to expose endpoints map[pod1:[80]] @ 06/13/24 07:38:55.198
  Jun 13 07:38:55.213: INFO: successfully validated that service endpoint-test2 in namespace services-2520 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/13/24 07:38:55.213
  Jun 13 07:38:55.214: INFO: Creating new exec pod
  E0613 07:38:55.695279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:56.695361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:57.695745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:58.696094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:38:59.697137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:00.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0613 07:39:00.697518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:01.698726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:02.699540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:03.700519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:04.700708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:05.702390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:05.844: INFO: rc: 1
  Jun 13 07:39:05.844: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: getaddrinfo: Try again
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 07:39:05.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 13 07:39:06.417: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 13 07:39:06.417: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:39:06.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.154.55 80'
  E0613 07:39:06.702486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:06.821: INFO: stderr: "+ nc -v -t -w 2 10.43.154.55 80\nConnection to 10.43.154.55 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 13 07:39:06.821: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-2520 @ 06/13/24 07:39:06.821
  E0613 07:39:07.703636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:08.704178      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:09.705534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:10.713669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2520 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/13/24 07:39:10.873
  Jun 13 07:39:10.902: INFO: successfully validated that service endpoint-test2 in namespace services-2520 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/13/24 07:39:10.902
  E0613 07:39:11.713804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:11.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0613 07:39:12.714121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:13.325: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 13 07:39:13.325: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:39:13.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.154.55 80'
  E0613 07:39:13.714932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:13.830: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.154.55 80\nConnection to 10.43.154.55 80 port [tcp/http] succeeded!\n"
  Jun 13 07:39:13.830: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2520 @ 06/13/24 07:39:13.83
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2520 to expose endpoints map[pod2:[80]] @ 06/13/24 07:39:13.922
  Jun 13 07:39:14.046: INFO: successfully validated that service endpoint-test2 in namespace services-2520 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/13/24 07:39:14.046
  E0613 07:39:14.715246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:15.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun 13 07:39:15.640: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun 13 07:39:15.640: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 07:39:15.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-2520 exec execpodh8xxj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.154.55 80'
  E0613 07:39:15.727108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:16.105: INFO: stderr: "+ nc -v -t -w 2 10.43.154.55 80\n+ echo hostName\nConnection to 10.43.154.55 80 port [tcp/http] succeeded!\n"
  Jun 13 07:39:16.105: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-2520 @ 06/13/24 07:39:16.105
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2520 to expose endpoints map[] @ 06/13/24 07:39:16.145
  Jun 13 07:39:16.223: INFO: successfully validated that service endpoint-test2 in namespace services-2520 exposes endpoints map[]
  Jun 13 07:39:16.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2520" for this suite. @ 06/13/24 07:39:16.42
â€¢ [25.887 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/13/24 07:39:16.454
  Jun 13 07:39:16.454: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 07:39:16.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:16.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:16.58
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/13/24 07:39:16.598
  E0613 07:39:16.717927      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:17.718753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:18.719209      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:19.720592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:39:20.697
  Jun 13 07:39:20.705: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-f7fb5f45-6a08-49e6-8b47-49f0fa1ab5cf container test-container: <nil>
  E0613 07:39:20.721461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 06/13/24 07:39:20.722
  Jun 13 07:39:20.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2008" for this suite. @ 06/13/24 07:39:20.764
â€¢ [4.328 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/13/24 07:39:20.782
  Jun 13 07:39:20.782: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename job @ 06/13/24 07:39:20.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:20.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:20.909
  STEP: Creating a job @ 06/13/24 07:39:20.924
  STEP: Ensuring active pods == parallelism @ 06/13/24 07:39:20.965
  E0613 07:39:21.752591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:22.753104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:23.754065      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:24.755125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 06/13/24 07:39:24.993
  Jun 13 07:39:25.535: INFO: Successfully updated pod "adopt-release-98cpp"
  STEP: Checking that the Job readopts the Pod @ 06/13/24 07:39:25.535
  E0613 07:39:25.757713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:26.758619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 06/13/24 07:39:27.556
  E0613 07:39:27.759469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:28.100: INFO: Successfully updated pod "adopt-release-98cpp"
  STEP: Checking that the Job releases the Pod @ 06/13/24 07:39:28.1
  E0613 07:39:28.760555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:29.761460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:30.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8183" for this suite. @ 06/13/24 07:39:30.121
â€¢ [9.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/13/24 07:39:30.134
  Jun 13 07:39:30.134: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename limitrange @ 06/13/24 07:39:30.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:30.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:30.286
  STEP: Creating a LimitRange @ 06/13/24 07:39:30.313
  STEP: Setting up watch @ 06/13/24 07:39:30.313
  STEP: Submitting a LimitRange @ 06/13/24 07:39:30.433
  STEP: Verifying LimitRange creation was observed @ 06/13/24 07:39:30.501
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/13/24 07:39:30.501
  Jun 13 07:39:30.508: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 13 07:39:30.509: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/13/24 07:39:30.509
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/13/24 07:39:30.529
  Jun 13 07:39:30.551: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun 13 07:39:30.551: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/13/24 07:39:30.551
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/13/24 07:39:30.569
  Jun 13 07:39:30.607: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun 13 07:39:30.623: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/13/24 07:39:30.633
  STEP: Failing to create a Pod with more than max resources @ 06/13/24 07:39:30.642
  STEP: Updating a LimitRange @ 06/13/24 07:39:30.658
  STEP: Verifying LimitRange updating is effective @ 06/13/24 07:39:30.666
  E0613 07:39:30.762151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:31.764819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 06/13/24 07:39:32.674
  STEP: Failing to create a Pod with more than max resources @ 06/13/24 07:39:32.686
  STEP: Deleting a LimitRange @ 06/13/24 07:39:32.713
  STEP: Verifying the LimitRange was deleted @ 06/13/24 07:39:32.735
  E0613 07:39:32.765014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:33.765881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:34.769654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:35.770582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:36.772070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:37.739: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/13/24 07:39:37.739
  Jun 13 07:39:37.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 07:39:37.771361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "limitrange-1791" for this suite. @ 06/13/24 07:39:37.804
â€¢ [7.711 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/13/24 07:39:37.845
  Jun 13 07:39:37.845: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename gc @ 06/13/24 07:39:37.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:37.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:37.918
  STEP: create the deployment @ 06/13/24 07:39:37.923
  W0613 07:39:37.932958      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/13/24 07:39:37.933
  STEP: delete the deployment @ 06/13/24 07:39:37.96
  STEP: wait for all rs to be garbage collected @ 06/13/24 07:39:38.041
  STEP: expected 0 pods, got 1 pods @ 06/13/24 07:39:38.08
  STEP: Gathering metrics @ 06/13/24 07:39:38.581
  W0613 07:39:38.598062      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 07:39:38.598: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 07:39:38.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2644" for this suite. @ 06/13/24 07:39:38.619
â€¢ [0.793 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/13/24 07:39:38.644
  Jun 13 07:39:38.644: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pv @ 06/13/24 07:39:38.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:38.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:38.764
  E0613 07:39:38.775874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating initial PV and PVC @ 06/13/24 07:39:38.783
  Jun 13 07:39:38.783: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8458" @ 06/13/24 07:39:38.823
  STEP: Listing PVCs in namespace "pv-8458" @ 06/13/24 07:39:38.832
  STEP: Patching the PV "pv-8458-bltqb" @ 06/13/24 07:39:38.841
  STEP: Patching the PVC "pvc-d2c8j" @ 06/13/24 07:39:38.889
  STEP: Getting PV "pv-8458-bltqb" @ 06/13/24 07:39:38.931
  STEP: Getting PVC "pvc-d2c8j" @ 06/13/24 07:39:38.94
  STEP: Deleting PVC "pvc-d2c8j" @ 06/13/24 07:39:38.956
  STEP: Confirm deletion of PVC "pvc-d2c8j" @ 06/13/24 07:39:38.977
  E0613 07:39:39.776204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:40.776167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8458-bltqb" @ 06/13/24 07:39:40.988
  STEP: Confirm deletion of PV "pv-8458-bltqb" @ 06/13/24 07:39:41.01
  E0613 07:39:41.777204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:42.777890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 06/13/24 07:39:43.023
  Jun 13 07:39:43.023: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8458-pqwqz" @ 06/13/24 07:39:43.055
  STEP: Updating the PVC "pvc-wdstn" @ 06/13/24 07:39:43.169
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-wdstn=updated" @ 06/13/24 07:39:43.195
  STEP: Deleting PVC "pvc-wdstn" via DeleteCollection @ 06/13/24 07:39:43.217
  STEP: Confirm deletion of PVC "pvc-wdstn" @ 06/13/24 07:39:43.23
  E0613 07:39:43.784259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:44.784708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8458-pqwqz" via DeleteCollection @ 06/13/24 07:39:45.26
  STEP: Confirm deletion of PV "pv-8458-pqwqz" @ 06/13/24 07:39:45.274
  Jun 13 07:39:45.293: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun 13 07:39:45.294: INFO: Deleting PersistentVolumeClaim "pvc-wdstn"
  Jun 13 07:39:45.298: INFO: Deleting PersistentVolume "pv-8458-pqwqz"
  Jun 13 07:39:45.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8458" for this suite. @ 06/13/24 07:39:45.313
â€¢ [6.681 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/13/24 07:39:45.326
  Jun 13 07:39:45.326: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 07:39:45.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:45.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:45.464
  STEP: Deleting RuntimeClass runtimeclass-9056-delete-me @ 06/13/24 07:39:45.54
  STEP: Waiting for the RuntimeClass to disappear @ 06/13/24 07:39:45.581
  Jun 13 07:39:45.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9056" for this suite. @ 06/13/24 07:39:45.619
â€¢ [0.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/13/24 07:39:45.641
  Jun 13 07:39:45.641: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:39:45.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:45.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:45.784
  E0613 07:39:45.784745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name projected-secret-test-36d03e3e-8b6b-42ae-ad4e-23b7e7db4b47 @ 06/13/24 07:39:45.81
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:39:45.844
  E0613 07:39:46.785586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:47.793123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:48.798371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:49.801979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:50.802657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:51.803528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:39:51.917
  Jun 13 07:39:51.948: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-secrets-2522d1e4-4bcd-43de-86a4-d1eb0b80779c container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:39:51.96
  Jun 13 07:39:52.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6184" for this suite. @ 06/13/24 07:39:52.022
â€¢ [6.389 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/13/24 07:39:52.031
  Jun 13 07:39:52.031: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/13/24 07:39:52.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:52.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:52.205
  STEP: creating a target pod @ 06/13/24 07:39:52.221
  E0613 07:39:52.804721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:53.805682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:54.806482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:55.806782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/13/24 07:39:56.511
  E0613 07:39:56.806939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:39:57.807723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/13/24 07:39:58.575
  Jun 13 07:39:58.576: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-125 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:39:58.576: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:39:58.591: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:39:58.591: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-125/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  E0613 07:39:58.809549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:39:58.832: INFO: Exec stderr: ""
  Jun 13 07:39:58.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-125" for this suite. @ 06/13/24 07:39:58.861
â€¢ [6.852 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/13/24 07:39:58.909
  Jun 13 07:39:58.909: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename containers @ 06/13/24 07:39:58.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:39:58.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:39:58.952
  STEP: Creating a pod to test override all @ 06/13/24 07:39:58.961
  E0613 07:39:59.812880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:00.813614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:01.814471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:02.814707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:03.815503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:04.815589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:40:05.062
  Jun 13 07:40:05.073: INFO: Trying to get logs from node ip-172-31-12-94 pod client-containers-8fefc67f-e9c8-4da1-9625-d470d76d1ffd container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:40:05.096
  Jun 13 07:40:05.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1995" for this suite. @ 06/13/24 07:40:05.233
â€¢ [6.343 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/13/24 07:40:05.253
  Jun 13 07:40:05.253: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:40:05.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:05.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:05.429
  STEP: Creating configMap that has name configmap-test-emptyKey-27eece17-84d3-435a-baf2-8e130726f3d6 @ 06/13/24 07:40:05.446
  Jun 13 07:40:05.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9365" for this suite. @ 06/13/24 07:40:05.45
â€¢ [0.206 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/13/24 07:40:05.459
  Jun 13 07:40:05.459: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:40:05.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:05.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:05.61
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 07:40:05.629
  Jun 13 07:40:05.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-8518 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0613 07:40:05.815910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:05.908: INFO: stderr: ""
  Jun 13 07:40:05.908: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/13/24 07:40:05.908
  E0613 07:40:06.816515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:07.816788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:08.818090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:09.818239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:10.823798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/13/24 07:40:10.962
  Jun 13 07:40:10.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-8518 get pod e2e-test-httpd-pod -o json'
  Jun 13 07:40:11.171: INFO: stderr: ""
  Jun 13 07:40:11.171: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"6dd3b9d89648f25ab7d4f869cd6b6dffd9d142d26006cd36be7511b4340faa80\",\n            \"cni.projectcalico.org/podIP\": \"10.42.1.165/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.1.165/32\"\n        },\n        \"creationTimestamp\": \"2024-06-13T07:40:05Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8518\",\n        \"resourceVersion\": \"23958\",\n        \"uid\": \"534d3ef4-b0e2-494c-b2f0-1794eb4bdda9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-cr2gz\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-12-94\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-cr2gz\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T07:40:08Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T07:40:05Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T07:40:08Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T07:40:08Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-13T07:40:05Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://d8876fcb6bc232129dab2ddf2cfb1e2c52692cf6617d89528a0793d6be60dc3c\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-13T07:40:07Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.12.94\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.12.94\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.165\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.165\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-13T07:40:05Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/13/24 07:40:11.171
  Jun 13 07:40:11.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-8518 replace -f -'
  Jun 13 07:40:11.507: INFO: stderr: ""
  Jun 13 07:40:11.507: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/13/24 07:40:11.507
  Jun 13 07:40:11.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-8518 delete pods e2e-test-httpd-pod'
  E0613 07:40:11.824100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:12.844352      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:13.396: INFO: stderr: ""
  Jun 13 07:40:13.396: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 13 07:40:13.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8518" for this suite. @ 06/13/24 07:40:13.401
â€¢ [7.955 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/13/24 07:40:13.414
  Jun 13 07:40:13.414: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:40:13.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:13.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:13.469
  STEP: Creating configMap with name configmap-test-volume-map-095b1e25-d5fa-42a7-aae9-28a0a209c674 @ 06/13/24 07:40:13.494
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:40:13.523
  E0613 07:40:13.842606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:14.842815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:15.843703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:16.843942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:40:17.673
  Jun 13 07:40:17.678: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-ae0b1576-d1ad-464c-93f1-554c853cc6ff container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:40:17.695
  Jun 13 07:40:17.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4848" for this suite. @ 06/13/24 07:40:17.76
â€¢ [4.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/13/24 07:40:17.779
  Jun 13 07:40:17.780: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:40:17.781
  E0613 07:40:17.844002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:17.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:17.987
  STEP: Creating the pod @ 06/13/24 07:40:18.009
  E0613 07:40:18.844189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:19.845080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:20.845885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:21.846608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:22.648: INFO: Successfully updated pod "labelsupdate5b0b3608-39cc-46bc-8bb8-f35e7e31c5f3"
  E0613 07:40:22.846768      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:23.846896      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:24.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2474" for this suite. @ 06/13/24 07:40:24.686
â€¢ [6.925 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/13/24 07:40:24.724
  Jun 13 07:40:24.724: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 07:40:24.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:24.808
  E0613 07:40:24.847090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:24.847
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/13/24 07:40:24.861
  E0613 07:40:25.847197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:26.847525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:27.847579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:28.848203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 06/13/24 07:40:29.024
  STEP: Then the orphan pod is adopted @ 06/13/24 07:40:29.058
  E0613 07:40:29.848290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 06/13/24 07:40:30.105
  Jun 13 07:40:30.137: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/13/24 07:40:30.232
  E0613 07:40:30.848327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:31.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-217" for this suite. @ 06/13/24 07:40:31.306
â€¢ [6.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/13/24 07:40:31.339
  Jun 13 07:40:31.339: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:40:31.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:31.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:31.423
  STEP: Creating secret with name secret-test-5f3f0a83-4e7a-4abc-b131-8c6e58051be0 @ 06/13/24 07:40:31.442
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:40:31.455
  E0613 07:40:31.850051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:32.850157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:33.854419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:34.855580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:35.857505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:36.858605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:40:37.643
  Jun 13 07:40:37.658: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-28a470ad-daee-4263-8714-fef10616fb8c container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:40:37.67
  Jun 13 07:40:37.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7647" for this suite. @ 06/13/24 07:40:37.711
â€¢ [6.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/13/24 07:40:37.722
  Jun 13 07:40:37.722: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 07:40:37.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:37.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:37.832
  E0613 07:40:37.858731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a Deployment @ 06/13/24 07:40:37.899
  STEP: waiting for Deployment to be created @ 06/13/24 07:40:37.926
  STEP: waiting for all Replicas to be Ready @ 06/13/24 07:40:37.942
  Jun 13 07:40:37.949: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 07:40:37.949: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 07:40:38.001: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 07:40:38.005: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 07:40:38.099: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 07:40:38.100: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 07:40:38.188: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun 13 07:40:38.191: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0613 07:40:38.859036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:39.859741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:40.334: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 13 07:40:40.334: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun 13 07:40:40.520: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/13/24 07:40:40.536
  Jun 13 07:40:40.578: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/13/24 07:40:40.578
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 0
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.590: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.597: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.597: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.694: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.694: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.777: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.777: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:40.833: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:40.833: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  E0613 07:40:40.860369      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:41.860542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:42.860645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:43.348: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:43.349: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:43.550: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  STEP: listing Deployments @ 06/13/24 07:40:43.55
  Jun 13 07:40:43.576: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/13/24 07:40:43.583
  Jun 13 07:40:43.681: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/13/24 07:40:43.681
  Jun 13 07:40:43.772: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 07:40:43.772: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0613 07:40:43.862636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:43.984: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 07:40:44.254: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 07:40:44.446: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0613 07:40:44.889724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:45.889669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:46.715: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0613 07:40:46.890165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:46.965: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 07:40:47.139: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun 13 07:40:47.165: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0613 07:40:47.891198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:48.891102      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:49.536: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/13/24 07:40:49.626
  STEP: fetching the DeploymentStatus @ 06/13/24 07:40:49.649
  Jun 13 07:40:49.678: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:49.679: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:49.679: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:49.680: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:49.680: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 1
  Jun 13 07:40:49.680: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:49.681: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 3
  Jun 13 07:40:49.681: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:49.681: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 2
  Jun 13 07:40:49.681: INFO: observed Deployment test-deployment in namespace deployment-8213 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/13/24 07:40:49.681
  Jun 13 07:40:49.706: INFO: observed event type MODIFIED
  Jun 13 07:40:49.706: INFO: observed event type MODIFIED
  Jun 13 07:40:49.706: INFO: observed event type MODIFIED
  Jun 13 07:40:49.706: INFO: observed event type MODIFIED
  Jun 13 07:40:49.706: INFO: observed event type MODIFIED
  Jun 13 07:40:49.707: INFO: observed event type MODIFIED
  Jun 13 07:40:49.707: INFO: observed event type MODIFIED
  Jun 13 07:40:49.707: INFO: observed event type MODIFIED
  Jun 13 07:40:49.707: INFO: observed event type MODIFIED
  Jun 13 07:40:49.708: INFO: observed event type MODIFIED
  Jun 13 07:40:49.708: INFO: observed event type MODIFIED
  Jun 13 07:40:49.708: INFO: observed event type MODIFIED
  Jun 13 07:40:49.708: INFO: observed event type MODIFIED
  Jun 13 07:40:49.723: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun 13 07:40:49.767: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8213",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87c9633b-8a04-404f-a3d4-ad8456998e97",
      ResourceVersion: (string) (len=5) "24397",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861240,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "29fd6248-cfed-4f18-a8ca-6313e42d9e6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 39 66 64  36 32 34 38 2d 63 66 65  |":\"29fd6248-cfe|
              00000130  64 2d 34 66 31 38 2d 61  38 63 61 2d 36 33 31 33  |d-4f18-a8ca-6313|
              00000140  65 34 32 64 39 65 36 65  5c 22 7d 22 3a 7b 7d 7d  |e42d9e6e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  E0613 07:40:49.892192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:40:49.932: INFO: pod: "test-deployment-64fd565c98-d7ns4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-d7ns4",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8213",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d4cbb7ae-fc50-41d6-a2e9-bb74f1c7a404",
      ResourceVersion: (string) (len=5) "24392",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861251,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0ca4086a53185387d98674890575fcf857b167d5297581826027aecc09fc4bf1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.55/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.55/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "87c9633b-8a04-404f-a3d4-ad8456998e97",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 37 63 39 36 33 33 62  |uid\":\"87c9633b|
              000000a0  2d 38 61 30 34 2d 34 30  34 66 2d 61 33 64 34 2d  |-8a04-404f-a3d4-|
              000000b0  61 64 38 34 35 36 39 39  38 65 39 37 5c 22 7d 22  |ad8456998e97\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 35 35  5c 22 7d 22 3a 7b 22 2e  |.42.2.55\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-96n6s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-96n6s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) (len=10) "10.42.2.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853861245,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=111) "docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=73) "docker://142d1967e34714dc78fbd3d8dded23042676d59f7588f69e2b3ed0174e257a4e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 13 07:40:49.953: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8213",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7f27abd-f74f-4b62-91eb-7d1d122d3cb9",
      ResourceVersion: (string) (len=5) "24389",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "29fd6248-cfed-4f18-a8ca-6313e42d9e6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 39 66 64  36 32 34 38 2d 63 66 65  |":\"29fd6248-cfe|
              00000130  64 2d 34 66 31 38 2d 61  38 63 61 2d 36 33 31 33  |d-4f18-a8ca-6313|
              00000140  65 34 32 64 39 65 36 65  5c 22 7d 22 3a 7b 7d 7d  |e42d9e6e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 13 07:40:49.986: INFO: pod: "test-deployment-79ff746c4-2sqnb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-2sqnb",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8213",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc3f30b6-51d6-4a85-87a1-24a3cc7942af",
      ResourceVersion: (string) (len=5) "24406",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861243,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861250,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.172/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.172/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c76c3641ce92082b8ef0f215ba7470ae7afc19309c9a934586b6b8b74f51c167"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "b7f27abd-f74f-4b62-91eb-7d1d122d3cb9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 37 66 32 37 61 62 64  |uid\":\"b7f27abd|
              000000a0  2d 66 37 34 66 2d 34 62  36 32 2d 39 31 65 62 2d  |-f74f-4b62-91eb-|
              000000b0  37 64 31 64 31 32 32 64  33 63 62 39 5c 22 7d 22  |7d1d122d3cb9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861245,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 37  32 5c 22 7d 22 3a 7b 22  |.42.1.172\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5bh9k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5bh9k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861244,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) (len=11) "10.42.1.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861244,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853861246,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://c7c0a8659c4d720b8070be8f0774f6c8f0667d1bd922e7521b3617945cfd3ba9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 13 07:40:49.989: INFO: pod: "test-deployment-79ff746c4-p2mk5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-p2mk5",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8213",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02717262-cb13-4aa5-8fb3-e53a5598606e",
      ResourceVersion: (string) (len=5) "24407",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861246,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861250,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d20cb4e4dc85eb3c1861037bc3ca9a4b5869ab177ea24b64384855f534fbb4bf",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.56/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.56/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "b7f27abd-f74f-4b62-91eb-7d1d122d3cb9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861246,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 37 66 32 37 61 62 64  |uid\":\"b7f27abd|
              000000a0  2d 66 37 34 66 2d 34 62  36 32 2d 39 31 65 62 2d  |-f74f-4b62-91eb-|
              000000b0  37 64 31 64 31 32 32 64  33 63 62 39 5c 22 7d 22  |7d1d122d3cb9\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861248,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 35 36  5c 22 7d 22 3a 7b 22 2e  |.42.2.56\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k45z7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k45z7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861249,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861247,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) (len=10) "10.42.2.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861247,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853861248,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://35afdc7f85a36151508e47ba177b1340f905d7244867c80a07bbf7f4df91d050",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun 13 07:40:49.992: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8213",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76229ab5-8fad-4582-96c3-4925770b9f53",
      ResourceVersion: (string) (len=5) "24286",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853861237,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "29fd6248-cfed-4f18-a8ca-6313e42d9e6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 39 66 64  36 32 34 38 2d 63 66 65  |":\"29fd6248-cfe|
              00000130  64 2d 34 66 31 38 2d 61  38 63 61 2d 36 33 31 33  |d-4f18-a8ca-6313|
              00000140  65 34 32 64 39 65 36 65  5c 22 7d 22 3a 7b 7d 7d  |e42d9e6e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853861243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun 13 07:40:50.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8213" for this suite. @ 06/13/24 07:40:50.041
â€¢ [12.352 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/13/24 07:40:50.086
  Jun 13 07:40:50.086: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:40:50.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:50.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:50.165
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:40:50.195
  E0613 07:40:50.897687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:51.897837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:52.898532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:53.898928      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:40:54.355
  Jun 13 07:40:54.362: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-627737b9-4cc8-44af-8917-ac979fe07641 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:40:54.388
  Jun 13 07:40:54.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7885" for this suite. @ 06/13/24 07:40:54.42
â€¢ [4.344 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/13/24 07:40:54.43
  Jun 13 07:40:54.430: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 07:40:54.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:40:54.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:40:54.513
  STEP: Creating a test headless service @ 06/13/24 07:40:54.538
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 45.58.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.58.45_udp@PTR;check="$$(dig +tcp +noall +answer +search 45.58.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.58.45_tcp@PTR;sleep 1; done
   @ 06/13/24 07:40:54.814
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7156.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7156.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7156.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7156.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 45.58.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.58.45_udp@PTR;check="$$(dig +tcp +noall +answer +search 45.58.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.58.45_tcp@PTR;sleep 1; done
   @ 06/13/24 07:40:54.814
  STEP: creating a pod to probe DNS @ 06/13/24 07:40:54.814
  STEP: submitting the pod to kubernetes @ 06/13/24 07:40:54.814
  E0613 07:40:54.899719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:55.899947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:56.900026      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:57.900103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:40:58.901533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 07:40:58.974
  STEP: looking for the results for each expected name from probers @ 06/13/24 07:40:58.981
  Jun 13 07:40:59.021: INFO: Unable to read wheezy_udp@dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.028: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.032: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.037: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.048: INFO: Unable to read wheezy_udp@_http._tcp.test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.052: INFO: Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.058: INFO: Unable to read 10.43.58.45_udp@PTR from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.074: INFO: Unable to read 10.43.58.45_tcp@PTR from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.078: INFO: Unable to read jessie_udp@dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.093: INFO: Unable to read jessie_tcp@dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.098: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.103: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.107: INFO: Unable to read jessie_udp@_http._tcp.test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.120: INFO: Unable to read jessie_tcp@_http._tcp.test-service-2.dns-7156.svc.cluster.local from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.127: INFO: Unable to read 10.43.58.45_udp@PTR from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.131: INFO: Unable to read 10.43.58.45_tcp@PTR from pod dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40: the server could not find the requested resource (get pods dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40)
  Jun 13 07:40:59.131: INFO: Lookups using dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40 failed for: [wheezy_udp@dns-test-service.dns-7156.svc.cluster.local wheezy_tcp@dns-test-service.dns-7156.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local wheezy_udp@_http._tcp.test-service-2.dns-7156.svc.cluster.local wheezy_tcp@_http._tcp.test-service-2.dns-7156.svc.cluster.local 10.43.58.45_udp@PTR 10.43.58.45_tcp@PTR jessie_udp@dns-test-service.dns-7156.svc.cluster.local jessie_tcp@dns-test-service.dns-7156.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7156.svc.cluster.local jessie_udp@_http._tcp.test-service-2.dns-7156.svc.cluster.local jessie_tcp@_http._tcp.test-service-2.dns-7156.svc.cluster.local 10.43.58.45_udp@PTR 10.43.58.45_tcp@PTR]

  Jun 13 07:40:59.146: INFO: Pod client logs for webserver: 
  Jun 13 07:40:59.167: INFO: Pod client logs for querier: 
  Jun 13 07:40:59.197: INFO: Pod client logs for jessie-querier: 
  E0613 07:40:59.901633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:00.903201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:01.904883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:02.903900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:03.910515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:41:04.100: INFO: DNS probes using dns-7156/dns-test-47d9254a-4116-4ed5-8126-2b0d17326b40 succeeded

  STEP: deleting the pod @ 06/13/24 07:41:04.1
  STEP: deleting the test service @ 06/13/24 07:41:04.137
  STEP: deleting the test headless service @ 06/13/24 07:41:04.232
  Jun 13 07:41:04.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7156" for this suite. @ 06/13/24 07:41:04.267
â€¢ [9.867 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/13/24 07:41:04.297
  Jun 13 07:41:04.297: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 07:41:04.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:41:04.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:41:04.452
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7903.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-7903.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/13/24 07:41:04.484
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7903.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7903.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/13/24 07:41:04.484
  STEP: creating a pod to probe /etc/hosts @ 06/13/24 07:41:04.484
  STEP: submitting the pod to kubernetes @ 06/13/24 07:41:04.484
  E0613 07:41:04.906156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:05.906148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:06.906423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:07.906423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 07:41:08.562
  STEP: looking for the results for each expected name from probers @ 06/13/24 07:41:08.564
  E0613 07:41:08.906540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:09.906682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:10.906895      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:41:11.614: INFO: Unable to read jessie_hosts@dns-querier-1.dns-test-service.dns-7903.svc.cluster.local from pod dns-7903/dns-test-352e3ef1-9fef-49ff-8cdf-2987232c327c: the server could not find the requested resource (get pods dns-test-352e3ef1-9fef-49ff-8cdf-2987232c327c)
  Jun 13 07:41:11.618: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-7903/dns-test-352e3ef1-9fef-49ff-8cdf-2987232c327c: the server could not find the requested resource (get pods dns-test-352e3ef1-9fef-49ff-8cdf-2987232c327c)
  Jun 13 07:41:11.618: INFO: Lookups using dns-7903/dns-test-352e3ef1-9fef-49ff-8cdf-2987232c327c failed for: [jessie_hosts@dns-querier-1.dns-test-service.dns-7903.svc.cluster.local jessie_hosts@dns-querier-1]

  Jun 13 07:41:11.635: INFO: Pod client logs for webserver: 
  Jun 13 07:41:11.646: INFO: Pod client logs for querier: 
  Jun 13 07:41:11.699: INFO: Pod client logs for jessie-querier: 
  E0613 07:41:11.920731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:12.910349      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:41:13.609: INFO: DNS probes using dns-7903/dns-test-352e3ef1-9fef-49ff-8cdf-2987232c327c succeeded

  STEP: deleting the pod @ 06/13/24 07:41:13.61
  Jun 13 07:41:13.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7903" for this suite. @ 06/13/24 07:41:13.636
â€¢ [9.354 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/13/24 07:41:13.657
  Jun 13 07:41:13.658: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename subjectreview @ 06/13/24 07:41:13.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:41:13.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:41:13.788
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5999" @ 06/13/24 07:41:13.843
  Jun 13 07:41:13.851: INFO: saUsername: "system:serviceaccount:subjectreview-5999:e2e"
  Jun 13 07:41:13.852: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5999"}
  Jun 13 07:41:13.852: INFO: saUID: "8fdcda07-99bf-4b7d-a8b1-452ac0db05c1"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5999:e2e" @ 06/13/24 07:41:13.852
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5999:e2e" @ 06/13/24 07:41:13.852
  Jun 13 07:41:13.854: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5999:e2e" api 'list' configmaps in "subjectreview-5999" namespace @ 06/13/24 07:41:13.855
  Jun 13 07:41:13.856: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5999:e2e" @ 06/13/24 07:41:13.86
  Jun 13 07:41:13.864: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun 13 07:41:13.868: INFO: LocalSubjectAccessReview has been verified
  Jun 13 07:41:13.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5999" for this suite. @ 06/13/24 07:41:13.873
â€¢ [0.230 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/13/24 07:41:13.896
  Jun 13 07:41:13.896: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:41:13.898
  E0613 07:41:13.912591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:41:14.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:41:14.068
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:41:14.094
  E0613 07:41:14.913290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:15.913620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:16.913740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:17.913842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:41:18.199
  Jun 13 07:41:18.209: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-6f88dd49-5cdc-45dd-b987-215f1f27a5a9 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:41:18.23
  Jun 13 07:41:18.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8872" for this suite. @ 06/13/24 07:41:18.273
â€¢ [4.385 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/13/24 07:41:18.281
  Jun 13 07:41:18.281: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 07:41:18.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:41:18.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:41:18.408
  STEP: Creating a ResourceQuota with best effort scope @ 06/13/24 07:41:18.425
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 07:41:18.456
  E0613 07:41:18.914723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:19.915495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 06/13/24 07:41:20.472
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 07:41:20.481
  E0613 07:41:20.916204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:21.916915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 06/13/24 07:41:22.485
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/13/24 07:41:22.552
  E0613 07:41:22.917579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:23.918274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/13/24 07:41:24.556
  E0613 07:41:24.918586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:25.919719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 07:41:26.565
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 07:41:26.608
  E0613 07:41:26.921927      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:27.922628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 06/13/24 07:41:28.612
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/13/24 07:41:28.633
  E0613 07:41:28.923342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:29.924176      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/13/24 07:41:30.637
  E0613 07:41:30.924558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:31.924669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 07:41:32.64
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 07:41:32.674
  E0613 07:41:32.925531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:33.926777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:41:34.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4285" for this suite. @ 06/13/24 07:41:34.683
â€¢ [16.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/13/24 07:41:34.695
  Jun 13 07:41:34.695: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 07:41:34.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:41:34.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:41:34.764
  STEP: Creating a test namespace @ 06/13/24 07:41:34.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:41:34.846
  STEP: Creating a pod in the namespace @ 06/13/24 07:41:34.892
  E0613 07:41:34.926180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pod to have running status @ 06/13/24 07:41:34.944
  E0613 07:41:35.926710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:36.926826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:37.927058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:38.927097      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 06/13/24 07:41:38.984
  STEP: Waiting for the namespace to be removed. @ 06/13/24 07:41:39.001
  E0613 07:41:39.927202      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:40.928034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:41.928094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:42.929983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:43.930072      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:44.931824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:45.939230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:46.939295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:47.940114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:48.941424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:49.941520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:50.947727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 06/13/24 07:41:51.03
  STEP: Verifying there are no pods in the namespace @ 06/13/24 07:41:51.132
  Jun 13 07:41:51.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-694" for this suite. @ 06/13/24 07:41:51.214
  STEP: Destroying namespace "nsdeletetest-9209" for this suite. @ 06/13/24 07:41:51.249
  Jun 13 07:41:51.264: INFO: Namespace nsdeletetest-9209 was already deleted
  STEP: Destroying namespace "nsdeletetest-9841" for this suite. @ 06/13/24 07:41:51.265
â€¢ [16.619 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/13/24 07:41:51.321
  Jun 13 07:41:51.321: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:41:51.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:41:51.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:41:51.488
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-de7f66c9-1e97-49f8-a43e-46aa9abbc9ee @ 06/13/24 07:41:51.55
  STEP: Creating the pod @ 06/13/24 07:41:51.804
  E0613 07:41:51.947852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:52.949323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:53.952882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:54.954158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:55.954329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-de7f66c9-1e97-49f8-a43e-46aa9abbc9ee @ 06/13/24 07:41:56.017
  STEP: waiting to observe update in volume @ 06/13/24 07:41:56.026
  E0613 07:41:56.954955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:57.955366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:58.955787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:41:59.960602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:00.960780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:01.971808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:02.971670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:03.971754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:04.973407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:05.973857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:06.974068      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:07.975138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:08.978177      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:09.978326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:10.978614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:11.978716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:12.980845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:13.981842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:14.982591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:15.983634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:16.985542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:17.985637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:18.986606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:19.989510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:20.990075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:21.990823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:22.991408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:23.992269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:24.992845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:25.993577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:26.996497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:27.996967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:28.999854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:30.000437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:31.000691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:32.000849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:33.001491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:34.001878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:35.002378      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:36.002610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:37.003442      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:38.003563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:39.004469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:40.005006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:41.007796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:42.008934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:43.009933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:44.010878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:45.011565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:46.012715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:47.019190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:48.015890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:49.016825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:50.017128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:51.017982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:52.018868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:53.019254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:54.020053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:55.020659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:56.021487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:57.021324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:58.021492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:42:59.022199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:00.028818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:01.028881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:02.028997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:02.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8845" for this suite. @ 06/13/24 07:43:02.633
â€¢ [71.322 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/13/24 07:43:02.644
  Jun 13 07:43:02.644: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename gc @ 06/13/24 07:43:02.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:43:02.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:43:02.746
  STEP: create the rc @ 06/13/24 07:43:02.795
  W0613 07:43:02.834511      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0613 07:43:03.030033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:04.030848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:05.033069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:06.034258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:07.034317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:08.035244      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/13/24 07:43:08.86
  STEP: wait for the rc to be deleted @ 06/13/24 07:43:08.914
  E0613 07:43:09.035730      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:10.037166      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:10.132: INFO: 84 pods remaining
  Jun 13 07:43:10.141: INFO: 82 pods has nil DeletionTimestamp
  Jun 13 07:43:10.141: INFO: 
  E0613 07:43:11.037372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:11.241: INFO: 72 pods remaining
  Jun 13 07:43:11.241: INFO: 70 pods has nil DeletionTimestamp
  Jun 13 07:43:11.241: INFO: 
  E0613 07:43:12.037628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:12.373: INFO: 60 pods remaining
  Jun 13 07:43:12.374: INFO: 60 pods has nil DeletionTimestamp
  Jun 13 07:43:12.374: INFO: 
  E0613 07:43:13.038163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:13.098: INFO: 42 pods remaining
  Jun 13 07:43:13.098: INFO: 40 pods has nil DeletionTimestamp
  Jun 13 07:43:13.098: INFO: 
  E0613 07:43:14.038312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:14.067: INFO: 33 pods remaining
  Jun 13 07:43:14.070: INFO: 33 pods has nil DeletionTimestamp
  Jun 13 07:43:14.070: INFO: 
  Jun 13 07:43:14.928: INFO: 20 pods remaining
  Jun 13 07:43:14.928: INFO: 20 pods has nil DeletionTimestamp
  Jun 13 07:43:14.928: INFO: 
  E0613 07:43:15.038379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:15.988: INFO: 0 pods remaining
  Jun 13 07:43:15.989: INFO: 0 pods has nil DeletionTimestamp
  Jun 13 07:43:15.989: INFO: 
  E0613 07:43:16.039751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 07:43:16.92
  W0613 07:43:16.927676      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 07:43:16.927: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 07:43:16.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2522" for this suite. @ 06/13/24 07:43:16.936
â€¢ [14.300 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/13/24 07:43:16.945
  Jun 13 07:43:16.945: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename containers @ 06/13/24 07:43:16.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:43:17.027
  E0613 07:43:17.040781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:43:17.107
  E0613 07:43:18.044880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:19.043599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:20.050084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:21.050145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:22.051762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:23.051828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:24.052941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:25.053215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:26.053701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:27.054175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:28.054822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:29.061452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:30.055101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:31.056077      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:32.056289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:33.056477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:34.056952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:35.057037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:36.057610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:37.057792      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:37.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5777" for this suite. @ 06/13/24 07:43:37.464
â€¢ [20.588 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/13/24 07:43:37.533
  Jun 13 07:43:37.533: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:43:37.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:43:37.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:43:37.718
  E0613 07:43:38.059595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/13/24 07:43:38.096
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:43:38.961
  STEP: Deploying the webhook pod @ 06/13/24 07:43:39.006
  E0613 07:43:39.065555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 06/13/24 07:43:39.225
  Jun 13 07:43:39.460: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 07:43:40.067686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:41.068773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:41.501: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:43:42.069649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:43.070101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:43.523: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:43:44.070891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:45.070988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:45.530: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 43, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:43:46.073497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:47.073891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 07:43:47.52
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:43:47.548
  E0613 07:43:48.075223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:48.549: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/13/24 07:43:48.557
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 07:43:48.588
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/13/24 07:43:48.62
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 07:43:48.645
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/13/24 07:43:48.681
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 07:43:48.714
  E0613 07:43:49.075230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:49.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3690" for this suite. @ 06/13/24 07:43:49.128
  STEP: Destroying namespace "webhook-markers-8253" for this suite. @ 06/13/24 07:43:49.176
â€¢ [11.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/13/24 07:43:49.243
  Jun 13 07:43:49.243: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 07:43:49.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:43:49.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:43:49.487
  STEP: Creating service test in namespace statefulset-9735 @ 06/13/24 07:43:49.547
  STEP: Creating statefulset ss in namespace statefulset-9735 @ 06/13/24 07:43:49.574
  Jun 13 07:43:49.686: INFO: Found 0 stateful pods, waiting for 1
  E0613 07:43:50.076249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:51.077135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:52.080964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:53.081633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:54.083099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:55.087173      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:56.092008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:57.097981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:58.098618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:43:59.099274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:43:59.613: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/13/24 07:43:59.62
  STEP: updating a scale subresource @ 06/13/24 07:43:59.627
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/13/24 07:43:59.651
  STEP: Patch a scale subresource @ 06/13/24 07:43:59.683
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/13/24 07:43:59.765
  Jun 13 07:43:59.800: INFO: Deleting all statefulset in ns statefulset-9735
  Jun 13 07:43:59.844: INFO: Scaling statefulset ss to 0
  E0613 07:44:00.106991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:01.107389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:02.108918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:03.113494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:04.113529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:05.113631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:06.114644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:07.114754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:08.120359      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:09.121134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:44:09.959: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 07:44:09.984: INFO: Deleting statefulset ss
  Jun 13 07:44:10.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9735" for this suite. @ 06/13/24 07:44:10.054
â€¢ [20.837 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/13/24 07:44:10.081
  Jun 13 07:44:10.081: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:44:10.082
  E0613 07:44:10.123192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:44:10.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:44:10.181
  STEP: Creating secret with name secret-test-bc1aeca0-4800-43c3-b077-92b12ffb7e95 @ 06/13/24 07:44:10.34
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:44:10.38
  E0613 07:44:11.123372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:12.132039      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:13.135211      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:14.135523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:44:14.604
  Jun 13 07:44:14.619: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-5be26bf9-0617-4619-b047-c055b85a4776 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:44:14.648
  Jun 13 07:44:14.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-412" for this suite. @ 06/13/24 07:44:14.722
  STEP: Destroying namespace "secret-namespace-1448" for this suite. @ 06/13/24 07:44:14.732
â€¢ [4.695 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/13/24 07:44:14.776
  Jun 13 07:44:14.776: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 07:44:14.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:44:14.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:44:14.88
  STEP: set up a multi version CRD @ 06/13/24 07:44:14.893
  Jun 13 07:44:14.893: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 07:44:15.143576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:16.141069      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:17.145613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:18.146381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:19.146540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:20.147903      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:21.149025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:22.151410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:23.151890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 06/13/24 07:44:23.266
  STEP: check the new version name is served @ 06/13/24 07:44:23.327
  E0613 07:44:24.155384      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 06/13/24 07:44:24.727
  E0613 07:44:25.156030      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 06/13/24 07:44:26.086
  E0613 07:44:26.156638      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:27.156633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:28.157160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:29.166797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:30.167881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:31.170394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:44:31.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4392" for this suite. @ 06/13/24 07:44:31.429
â€¢ [16.688 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/13/24 07:44:31.464
  Jun 13 07:44:31.465: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename gc @ 06/13/24 07:44:31.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:44:31.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:44:31.651
  STEP: create the rc1 @ 06/13/24 07:44:31.663
  STEP: create the rc2 @ 06/13/24 07:44:31.678
  E0613 07:44:32.174341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:33.174447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:34.176517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:35.177448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:36.177872      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:37.178375      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/13/24 07:44:37.775
  E0613 07:44:38.178818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:39.178957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:40.179936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:41.180287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:42.214158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/13/24 07:44:42.885
  STEP: wait for the rc to be deleted @ 06/13/24 07:44:42.919
  E0613 07:44:43.214560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:44.214999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:45.215406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:46.216134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:47.216390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:48.216485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:44:48.501: INFO: 69 pods remaining
  Jun 13 07:44:48.501: INFO: 69 pods has nil DeletionTimestamp
  Jun 13 07:44:48.501: INFO: 
  E0613 07:44:49.216685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:50.217644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:51.218117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:52.218185      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 07:44:52.956
  W0613 07:44:52.975333      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 07:44:52.975: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 07:44:52.980: INFO: Deleting pod "simpletest-rc-to-be-deleted-24tmm" in namespace "gc-9662"
  Jun 13 07:44:53.018: INFO: Deleting pod "simpletest-rc-to-be-deleted-2d6x9" in namespace "gc-9662"
  Jun 13 07:44:53.098: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qcgs" in namespace "gc-9662"
  Jun 13 07:44:53.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-2zbnr" in namespace "gc-9662"
  Jun 13 07:44:53.206: INFO: Deleting pod "simpletest-rc-to-be-deleted-4s8kf" in namespace "gc-9662"
  E0613 07:44:53.218600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:44:53.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tmw2" in namespace "gc-9662"
  Jun 13 07:44:53.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-4tzw4" in namespace "gc-9662"
  Jun 13 07:44:53.351: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wkf9" in namespace "gc-9662"
  Jun 13 07:44:53.408: INFO: Deleting pod "simpletest-rc-to-be-deleted-578qq" in namespace "gc-9662"
  Jun 13 07:44:53.517: INFO: Deleting pod "simpletest-rc-to-be-deleted-5grs7" in namespace "gc-9662"
  Jun 13 07:44:53.551: INFO: Deleting pod "simpletest-rc-to-be-deleted-66bs6" in namespace "gc-9662"
  Jun 13 07:44:53.639: INFO: Deleting pod "simpletest-rc-to-be-deleted-6kk66" in namespace "gc-9662"
  Jun 13 07:44:53.701: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lv89" in namespace "gc-9662"
  Jun 13 07:44:53.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-6mfth" in namespace "gc-9662"
  Jun 13 07:44:53.909: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nhrw" in namespace "gc-9662"
  Jun 13 07:44:54.058: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pb7l" in namespace "gc-9662"
  Jun 13 07:44:54.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-6trx9" in namespace "gc-9662"
  E0613 07:44:54.221187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:44:54.268: INFO: Deleting pod "simpletest-rc-to-be-deleted-7l4cs" in namespace "gc-9662"
  Jun 13 07:44:54.352: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ll22" in namespace "gc-9662"
  Jun 13 07:44:54.463: INFO: Deleting pod "simpletest-rc-to-be-deleted-7nfc9" in namespace "gc-9662"
  Jun 13 07:44:54.482: INFO: Deleting pod "simpletest-rc-to-be-deleted-7sjc8" in namespace "gc-9662"
  Jun 13 07:44:54.537: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tqkh" in namespace "gc-9662"
  Jun 13 07:44:54.592: INFO: Deleting pod "simpletest-rc-to-be-deleted-84m5r" in namespace "gc-9662"
  Jun 13 07:44:54.622: INFO: Deleting pod "simpletest-rc-to-be-deleted-85q4q" in namespace "gc-9662"
  Jun 13 07:44:54.644: INFO: Deleting pod "simpletest-rc-to-be-deleted-8grsh" in namespace "gc-9662"
  Jun 13 07:44:54.722: INFO: Deleting pod "simpletest-rc-to-be-deleted-8gt9x" in namespace "gc-9662"
  Jun 13 07:44:54.806: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jpsw" in namespace "gc-9662"
  Jun 13 07:44:54.943: INFO: Deleting pod "simpletest-rc-to-be-deleted-8q9n7" in namespace "gc-9662"
  Jun 13 07:44:55.142: INFO: Deleting pod "simpletest-rc-to-be-deleted-8rwhp" in namespace "gc-9662"
  Jun 13 07:44:55.186: INFO: Deleting pod "simpletest-rc-to-be-deleted-9c4v5" in namespace "gc-9662"
  E0613 07:44:55.222975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:44:55.244: INFO: Deleting pod "simpletest-rc-to-be-deleted-b289d" in namespace "gc-9662"
  Jun 13 07:44:55.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-brxbr" in namespace "gc-9662"
  Jun 13 07:44:55.317: INFO: Deleting pod "simpletest-rc-to-be-deleted-cdmtx" in namespace "gc-9662"
  Jun 13 07:44:55.353: INFO: Deleting pod "simpletest-rc-to-be-deleted-cknvg" in namespace "gc-9662"
  Jun 13 07:44:55.408: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnqgw" in namespace "gc-9662"
  Jun 13 07:44:55.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-dg2tk" in namespace "gc-9662"
  Jun 13 07:44:55.587: INFO: Deleting pod "simpletest-rc-to-be-deleted-dlnqz" in namespace "gc-9662"
  Jun 13 07:44:55.691: INFO: Deleting pod "simpletest-rc-to-be-deleted-dz5jc" in namespace "gc-9662"
  Jun 13 07:44:55.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzgbc" in namespace "gc-9662"
  Jun 13 07:44:55.779: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgw9c" in namespace "gc-9662"
  Jun 13 07:44:55.844: INFO: Deleting pod "simpletest-rc-to-be-deleted-fngbn" in namespace "gc-9662"
  Jun 13 07:44:55.887: INFO: Deleting pod "simpletest-rc-to-be-deleted-g9p2s" in namespace "gc-9662"
  Jun 13 07:44:55.933: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkcvz" in namespace "gc-9662"
  Jun 13 07:44:55.961: INFO: Deleting pod "simpletest-rc-to-be-deleted-grsl9" in namespace "gc-9662"
  Jun 13 07:44:56.012: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxztn" in namespace "gc-9662"
  Jun 13 07:44:56.051: INFO: Deleting pod "simpletest-rc-to-be-deleted-hfxdt" in namespace "gc-9662"
  Jun 13 07:44:56.064: INFO: Deleting pod "simpletest-rc-to-be-deleted-hp4bt" in namespace "gc-9662"
  Jun 13 07:44:56.083: INFO: Deleting pod "simpletest-rc-to-be-deleted-hxl8k" in namespace "gc-9662"
  Jun 13 07:44:56.097: INFO: Deleting pod "simpletest-rc-to-be-deleted-j6f56" in namespace "gc-9662"
  Jun 13 07:44:56.123: INFO: Deleting pod "simpletest-rc-to-be-deleted-jsmr5" in namespace "gc-9662"
  Jun 13 07:44:56.148: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9662" for this suite. @ 06/13/24 07:44:56.153
â€¢ [24.698 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/13/24 07:44:56.163
  Jun 13 07:44:56.164: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 07:44:56.165
  E0613 07:44:56.223227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:44:56.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:44:56.234
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 07:44:56.292
  E0613 07:44:57.224303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:58.225457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:44:59.226408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:00.226876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:01.229821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:02.236431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:03.232219      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:04.232590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:05.232692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:06.238599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:07.239312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:08.239404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:09.239534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:10.239652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:11.239789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:12.239887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/13/24 07:45:12.565
  E0613 07:45:13.241068      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:14.241035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:15.242180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:16.243603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/13/24 07:45:16.964
  E0613 07:45:17.244046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:18.244120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:19.246747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:20.247778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:21.249532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:22.249982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/13/24 07:45:23.179
  Jun 13 07:45:23.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4668" for this suite. @ 06/13/24 07:45:23.21
â€¢ [27.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/13/24 07:45:23.234
  Jun 13 07:45:23.234: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 07:45:23.236
  E0613 07:45:23.250327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:45:23.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:45:23.362
  STEP: Creating a ResourceQuota @ 06/13/24 07:45:23.371
  STEP: Getting a ResourceQuota @ 06/13/24 07:45:23.419
  STEP: Updating a ResourceQuota @ 06/13/24 07:45:23.473
  STEP: Verifying a ResourceQuota was modified @ 06/13/24 07:45:23.531
  STEP: Deleting a ResourceQuota @ 06/13/24 07:45:23.561
  STEP: Verifying the deleted ResourceQuota @ 06/13/24 07:45:23.738
  Jun 13 07:45:23.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2557" for this suite. @ 06/13/24 07:45:23.826
â€¢ [0.607 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/13/24 07:45:23.841
  Jun 13 07:45:23.841: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 07:45:23.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:45:23.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:45:24.001
  STEP: Creating service test in namespace statefulset-1831 @ 06/13/24 07:45:24.017
  Jun 13 07:45:24.138: INFO: Found 0 stateful pods, waiting for 1
  E0613 07:45:24.251194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:25.252297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:26.252795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:27.253622      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:28.270551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:29.267967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:30.269513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:31.269603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:32.270486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:33.270596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:45:34.102: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0613 07:45:34.271066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:35.271760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:36.273437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:37.273499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:38.273944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:39.274041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:40.274888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:41.277569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:42.278140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:43.283304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:45:44.103: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/13/24 07:45:44.11
  W0613 07:45:44.156372      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun 13 07:45:44.190: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:45:44.191: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0613 07:45:44.283934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:45.284086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:46.284840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:47.285611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:48.290221      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:49.291530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:50.293123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:51.319350      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:52.319481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:53.319567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:45:54.183: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0613 07:45:54.320300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:55.320428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:56.321327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:57.321502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:58.327645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:45:59.327716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:00.328256      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:01.328230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:02.329321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:03.329629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:46:04.176: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:46:04.176: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/13/24 07:46:04.187
  STEP: Delete all of the StatefulSets @ 06/13/24 07:46:04.19
  STEP: Verify that StatefulSets have been deleted @ 06/13/24 07:46:04.201
  Jun 13 07:46:04.206: INFO: Deleting all statefulset in ns statefulset-1831
  Jun 13 07:46:04.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1831" for this suite. @ 06/13/24 07:46:04.272
â€¢ [40.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/13/24 07:46:04.302
  Jun 13 07:46:04.302: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:46:04.303
  E0613 07:46:04.329765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:46:04.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:46:04.385
  STEP: Creating configMap with name configmap-test-volume-51fc8b2a-7cd4-4862-aab9-afae7cef3c49 @ 06/13/24 07:46:04.388
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:46:04.396
  E0613 07:46:05.329988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:06.330734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:07.330798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:08.330895      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:46:08.433
  Jun 13 07:46:08.440: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-5de49421-f384-49e0-9f2a-db24d9ea0a28 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:46:08.45
  Jun 13 07:46:08.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8466" for this suite. @ 06/13/24 07:46:08.497
â€¢ [4.237 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/13/24 07:46:08.54
  Jun 13 07:46:08.541: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 07:46:08.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:46:08.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:46:08.653
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/13/24 07:46:08.681
  E0613 07:46:09.330954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:10.331053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:11.333174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:12.336914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:46:12.749
  Jun 13 07:46:12.752: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-04e85d08-bca8-418c-b735-c751c5c52160 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 07:46:12.759
  Jun 13 07:46:12.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5704" for this suite. @ 06/13/24 07:46:12.798
â€¢ [4.280 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/13/24 07:46:12.821
  Jun 13 07:46:12.821: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 07:46:12.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:46:12.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:46:12.904
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/13/24 07:46:12.914
  Jun 13 07:46:12.914: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 07:46:13.337614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:14.338193      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:15.348540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:16.348663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:17.349329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:18.349552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:19.350969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:20.351492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:21.353815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:22.354651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/13/24 07:46:23.137
  Jun 13 07:46:23.141: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 07:46:23.356084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:24.356553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:25.367054      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:46:25.375: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 07:46:26.367138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:27.372581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:28.369062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:29.369604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:30.371015      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:31.371400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:32.373582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:33.373625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:46:33.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4876" for this suite. @ 06/13/24 07:46:33.88
â€¢ [21.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/13/24 07:46:33.893
  Jun 13 07:46:33.893: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:46:33.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:46:34.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:46:34.013
  STEP: Creating the pod @ 06/13/24 07:46:34.019
  E0613 07:46:34.374781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:35.376821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:36.381522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:37.377675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:38.380365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:46:38.619: INFO: Successfully updated pod "labelsupdatee5e5c666-af9c-480e-b13d-6855951a8d7e"
  E0613 07:46:39.381278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:40.381483      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:46:40.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7353" for this suite. @ 06/13/24 07:46:40.667
â€¢ [6.781 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/13/24 07:46:40.674
  Jun 13 07:46:40.674: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 07:46:40.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:46:40.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:46:40.776
  E0613 07:46:41.382371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:42.382479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:43.382692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:44.383198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:46:44.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6657" for this suite. @ 06/13/24 07:46:44.891
â€¢ [4.226 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/13/24 07:46:44.901
  Jun 13 07:46:44.901: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:46:44.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:46:44.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:46:44.968
  STEP: Creating a pod to test downward api env vars @ 06/13/24 07:46:44.975
  E0613 07:46:45.384084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:46.384362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:47.387863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:48.385588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:46:49.05
  Jun 13 07:46:49.065: INFO: Trying to get logs from node ip-172-31-12-94 pod downward-api-f82d0fb2-01f1-4ec0-86b7-21f67c3c582e container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 07:46:49.095
  Jun 13 07:46:49.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4495" for this suite. @ 06/13/24 07:46:49.129
â€¢ [4.239 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/13/24 07:46:49.14
  Jun 13 07:46:49.140: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 07:46:49.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:46:49.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:46:49.232
  STEP: Counting existing ResourceQuota @ 06/13/24 07:46:49.261
  E0613 07:46:49.388142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:50.392753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:51.396572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:52.397171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:53.397568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 07:46:54.272
  STEP: Ensuring resource quota status is calculated @ 06/13/24 07:46:54.296
  E0613 07:46:54.397921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:55.398770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 06/13/24 07:46:56.306
  STEP: Creating a NodePort Service @ 06/13/24 07:46:56.338
  E0613 07:46:56.399670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/13/24 07:46:56.408
  STEP: Ensuring resource quota status captures service creation @ 06/13/24 07:46:56.478
  E0613 07:46:57.400026      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:46:58.401149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 06/13/24 07:46:58.489
  STEP: Ensuring resource quota status released usage @ 06/13/24 07:46:58.636
  E0613 07:46:59.405568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:00.409528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:47:00.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1364" for this suite. @ 06/13/24 07:47:00.65
â€¢ [11.529 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/13/24 07:47:00.704
  Jun 13 07:47:00.704: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 07:47:00.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:47:00.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:47:00.758
  Jun 13 07:47:00.762: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: creating the pod @ 06/13/24 07:47:00.762
  STEP: submitting the pod to kubernetes @ 06/13/24 07:47:00.763
  E0613 07:47:01.409630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:02.410558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:47:02.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2549" for this suite. @ 06/13/24 07:47:02.831
â€¢ [2.137 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/13/24 07:47:02.844
  Jun 13 07:47:02.844: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 07:47:02.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:47:02.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:47:02.988
  STEP: fetching the /apis discovery document @ 06/13/24 07:47:02.997
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/13/24 07:47:03.001
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/13/24 07:47:03.002
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/13/24 07:47:03.002
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/13/24 07:47:03.006
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/13/24 07:47:03.006
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/13/24 07:47:03.011
  Jun 13 07:47:03.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6175" for this suite. @ 06/13/24 07:47:03.03
â€¢ [0.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/13/24 07:47:03.076
  Jun 13 07:47:03.076: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/13/24 07:47:03.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:47:03.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:47:03.197
  STEP: mirroring a new custom Endpoint @ 06/13/24 07:47:03.256
  Jun 13 07:47:03.332: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0613 07:47:03.411947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:04.412959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 06/13/24 07:47:05.337
  Jun 13 07:47:05.361: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0613 07:47:05.421547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:06.422312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 06/13/24 07:47:07.37
  Jun 13 07:47:07.387: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0613 07:47:07.423136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:08.423320      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:47:09.395: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8728" for this suite. @ 06/13/24 07:47:09.399
  E0613 07:47:09.423318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [6.348 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/13/24 07:47:09.424
  Jun 13 07:47:09.424: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:47:09.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:47:09.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:47:09.512
  STEP: Creating secret with name secret-test-map-977e7b8c-f5cb-4dfe-a096-ad38f46a5696 @ 06/13/24 07:47:09.521
  STEP: Creating a pod to test consume secrets @ 06/13/24 07:47:09.553
  E0613 07:47:10.424540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:11.433103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:12.433503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:13.434613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:47:13.592
  Jun 13 07:47:13.609: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-a9d8a428-09a4-4f37-89fc-a52173ffa032 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:47:13.696
  Jun 13 07:47:13.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8785" for this suite. @ 06/13/24 07:47:13.947
â€¢ [4.580 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/13/24 07:47:14.004
  Jun 13 07:47:14.005: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/13/24 07:47:14.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:47:14.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:47:14.214
  Jun 13 07:47:14.230: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 07:47:14.435554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:15.438423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:16.438767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:17.438876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:18.441975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:19.442521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:20.442564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:21.445820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:22.452755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:23.454576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:24.455198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:25.455386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:26.455909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:27.456833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:28.457572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:29.458579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:30.461504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:31.461901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:32.462644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:33.462817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:34.464000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:35.464326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:36.465613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:37.466337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:38.467033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:39.469520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:40.476629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:41.477050      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:42.477942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:43.501636      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:44.494535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:45.497640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:46.497919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:47.504618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:48.505101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:49.505181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:50.505862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:51.507036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:52.507107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:53.507204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:54.508289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:55.508634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:56.509113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:57.510155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:58.513593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:47:59.513742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:00.517551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:01.518479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:02.517844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:03.519835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:04.519918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:05.521590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:06.521862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:07.522720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:08.523316      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:09.523396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:10.524855      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:11.524656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:12.525553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:13.525693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:48:14.230: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 07:48:14.240: INFO: Starting informer...
  STEP: Starting pods... @ 06/13/24 07:48:14.24
  Jun 13 07:48:14.498: INFO: Pod1 is running on ip-172-31-12-94. Tainting Node
  E0613 07:48:14.526476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:15.527262      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:16.527386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:17.528122      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:18.528972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:48:18.792: INFO: Pod2 is running on ip-172-31-12-94. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/13/24 07:48:18.792
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 07:48:18.834
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/13/24 07:48:18.838
  E0613 07:48:19.529241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:20.529530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:21.529626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:22.529723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:23.535847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:24.537308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:48:25.248: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0613 07:48:25.537634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:26.538607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:27.540408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:28.540433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:29.542251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:30.542332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:31.542535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:32.542754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:33.546493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:34.547365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:35.549339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:36.549496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:37.549627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:38.549894      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:39.553267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:40.555372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:41.556407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:42.556651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:43.557524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:44.558226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:48:44.635: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/13/24 07:48:44.678
  Jun 13 07:48:44.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7225" for this suite. @ 06/13/24 07:48:44.845
â€¢ [90.873 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/13/24 07:48:44.878
  Jun 13 07:48:44.878: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 07:48:44.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:48:44.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:48:44.985
  Jun 13 07:48:45.097: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 07:48:45.560013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:46.560485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:47.560672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:48.561220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:49.561905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:50.562101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:51.564045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:52.565537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:53.565645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:54.568235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:55.569193      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:56.569513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:57.570634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:58.570910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:48:59.572409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:00.572222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:01.573968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:02.577595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:03.578679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:04.579246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:05.580596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:06.580859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:07.581696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:08.582331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:09.583073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:10.583365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:11.584046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:12.586075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:13.587151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:14.587232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:15.587318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:16.587882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:17.587907      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:18.588465      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:19.598328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:20.599057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:21.600652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:22.601569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:23.602581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:24.602681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:25.603186      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:26.603451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:27.603599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:28.608260      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:29.609074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:30.609429      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:31.609601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:32.609690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:33.613306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:34.613641      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:35.614142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:36.614313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:37.615446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:38.615300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:39.617089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:40.617805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:41.618625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:42.618899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:43.618932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:44.621529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:49:45.102: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/13/24 07:49:45.106
  Jun 13 07:49:45.106: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/13/24 07:49:45.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:49:45.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:49:45.164
  Jun 13 07:49:45.204: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun 13 07:49:45.213: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun 13 07:49:45.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-121" for this suite. @ 06/13/24 07:49:45.446
  Jun 13 07:49:45.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6135" for this suite. @ 06/13/24 07:49:45.475
â€¢ [60.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/13/24 07:49:45.495
  Jun 13 07:49:45.495: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 07:49:45.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:49:45.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:49:45.569
  STEP: Creating Pod @ 06/13/24 07:49:45.61
  E0613 07:49:45.622265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:46.622945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:47.623002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 06/13/24 07:49:47.683
  Jun 13 07:49:47.683: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-658 PodName:pod-sharedvolume-07c95f1b-3c79-4370-a55b-6a521833622c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:49:47.683: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:49:47.684: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:49:47.685: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-658/pods/pod-sharedvolume-07c95f1b-3c79-4370-a55b-6a521833622c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun 13 07:49:47.887: INFO: Exec stderr: ""
  Jun 13 07:49:47.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-658" for this suite. @ 06/13/24 07:49:47.893
â€¢ [2.414 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/13/24 07:49:47.91
  Jun 13 07:49:47.910: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:49:47.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:49:48.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:49:48.044
  STEP: Creating configMap with name projected-configmap-test-volume-map-c7107dc9-ef02-4bd3-802a-e482c5f47c75 @ 06/13/24 07:49:48.053
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:49:48.095
  E0613 07:49:48.623197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:49.623754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:50.624425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:51.624576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:49:52.197
  Jun 13 07:49:52.202: INFO: Trying to get logs from node ip-172-31-2-92 pod pod-projected-configmaps-0e749ce8-7c20-4601-9f9a-e812c80946b7 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:49:52.262
  Jun 13 07:49:52.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1235" for this suite. @ 06/13/24 07:49:52.324
â€¢ [4.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/13/24 07:49:52.341
  Jun 13 07:49:52.341: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 07:49:52.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:49:52.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:49:52.557
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 07:49:52.57
  E0613 07:49:52.625232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:53.625506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:54.625667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:55.626385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:56.629039      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:57.645084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:49:58.630059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/13/24 07:49:58.689
  E0613 07:49:59.630386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:00.641825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:01.634087      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:02.634284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/13/24 07:50:02.759
  STEP: delete the pod with lifecycle hook @ 06/13/24 07:50:02.816
  E0613 07:50:03.634779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:04.634964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:05.637759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:06.638210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:50:06.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5629" for this suite. @ 06/13/24 07:50:06.885
â€¢ [14.563 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/13/24 07:50:06.905
  Jun 13 07:50:06.905: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:50:06.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:50:06.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:50:07.004
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:50:07.038
  E0613 07:50:07.638703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:08.639153      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:09.640057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:10.641556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:50:11.159
  Jun 13 07:50:11.172: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-5361fe95-4f12-4aa9-9047-400d9bb95030 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:50:11.2
  Jun 13 07:50:11.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-741" for this suite. @ 06/13/24 07:50:11.254
â€¢ [4.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/13/24 07:50:11.262
  Jun 13 07:50:11.263: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 07:50:11.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:50:11.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:50:11.394
  STEP: Counting existing ResourceQuota @ 06/13/24 07:50:11.418
  E0613 07:50:11.642199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:12.645223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:13.649578      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:14.647534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:15.649562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 07:50:16.424
  STEP: Ensuring resource quota status is calculated @ 06/13/24 07:50:16.439
  E0613 07:50:16.650401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:17.652518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/13/24 07:50:18.443
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/13/24 07:50:18.556
  E0613 07:50:18.652744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:19.653154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/13/24 07:50:20.564
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/13/24 07:50:20.569
  STEP: Ensuring a pod cannot update its resource requirements @ 06/13/24 07:50:20.573
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/13/24 07:50:20.597
  E0613 07:50:20.653569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:21.653799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 07:50:22.605
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 07:50:22.649
  E0613 07:50:22.654362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:23.654720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:24.654921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:50:24.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4249" for this suite. @ 06/13/24 07:50:24.661
â€¢ [13.461 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/13/24 07:50:24.722
  Jun 13 07:50:24.722: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 07:50:24.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:50:24.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:50:24.902
  E0613 07:50:25.655921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:26.658169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:27.656654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:28.661092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:50:29.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8776" for this suite. @ 06/13/24 07:50:29.084
â€¢ [4.374 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/13/24 07:50:29.097
  Jun 13 07:50:29.097: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:50:29.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:50:29.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:50:29.206
  STEP: Creating configMap with name projected-configmap-test-volume-f9772234-9291-436b-8b73-31a3cc0d2354 @ 06/13/24 07:50:29.211
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:50:29.22
  E0613 07:50:29.661386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:30.664323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:31.672984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:32.666196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:33.666224      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:34.666560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:50:35.293
  Jun 13 07:50:35.296: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-configmaps-63882dd9-03dd-4e29-8a70-b68f87f82db8 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:50:35.305
  Jun 13 07:50:35.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-24" for this suite. @ 06/13/24 07:50:35.328
â€¢ [6.245 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/13/24 07:50:35.342
  Jun 13 07:50:35.342: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:50:35.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:50:35.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:50:35.473
  STEP: Setting up server cert @ 06/13/24 07:50:35.605
  E0613 07:50:35.666998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:36.669925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:50:36.728
  STEP: Deploying the webhook pod @ 06/13/24 07:50:36.74
  STEP: Wait for the deployment to be ready @ 06/13/24 07:50:36.773
  Jun 13 07:50:36.827: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 07:50:37.670111      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:38.683654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:50:38.854: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 50, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 50, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 50, 36, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 50, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:50:39.671819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:40.671791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 07:50:40.864
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:50:40.964
  E0613 07:50:41.672768      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:50:41.968: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/13/24 07:50:41.989
  STEP: create a pod that should be updated by the webhook @ 06/13/24 07:50:42.019
  Jun 13 07:50:42.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1288" for this suite. @ 06/13/24 07:50:42.59
  STEP: Destroying namespace "webhook-markers-2691" for this suite. @ 06/13/24 07:50:42.616
â€¢ [7.315 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/13/24 07:50:42.657
  Jun 13 07:50:42.657: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 07:50:42.658
  E0613 07:50:42.673013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:50:42.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:50:42.807
  STEP: Creating service test in namespace statefulset-4491 @ 06/13/24 07:50:42.821
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/13/24 07:50:42.831
  STEP: Creating stateful set ss in namespace statefulset-4491 @ 06/13/24 07:50:42.868
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4491 @ 06/13/24 07:50:42.913
  Jun 13 07:50:42.949: INFO: Found 0 stateful pods, waiting for 1
  E0613 07:50:43.681749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:44.674321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:45.674546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:46.676235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:47.676714      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:48.676854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:49.678278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:50.680398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:51.680795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:52.682531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:50:52.917: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/13/24 07:50:52.918
  Jun 13 07:50:52.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 07:50:53.390: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:50:53.390: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:50:53.390: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:50:53.421: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:50:53.421: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 07:50:53.450: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  E0613 07:50:53.683532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:54.689582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:55.689725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:56.690583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:57.690744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:58.690854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:50:59.691709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:00.691911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:01.696398      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:02.700328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:03.507: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999588s
  E0613 07:51:03.700493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:04.512: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.931078392s
  E0613 07:51:04.701539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:05.515: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.92630775s
  E0613 07:51:05.702195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:06.521: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.921350261s
  E0613 07:51:06.703873      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:07.525: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.916505176s
  E0613 07:51:07.704511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:08.529: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.913320706s
  E0613 07:51:08.706018      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:09.533: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.908590922s
  E0613 07:51:09.706436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:10.537: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.904451029s
  E0613 07:51:10.706564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:11.541: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.900572473s
  E0613 07:51:11.707126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:12.545: INFO: Verifying statefulset ss doesn't scale past 1 for another 896.746484ms
  E0613 07:51:12.707793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4491 @ 06/13/24 07:51:13.545
  Jun 13 07:51:13.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0613 07:51:13.708694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:13.972: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 07:51:13.972: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 07:51:13.972: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 07:51:13.977: INFO: Found 1 stateful pods, waiting for 3
  E0613 07:51:14.709523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:15.710572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:16.710689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:17.711502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:18.713239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:19.713514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:20.714987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:21.717501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:22.718688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:23.718659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:23.988: INFO: Found 2 stateful pods, waiting for 3
  E0613 07:51:24.719259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:25.719366      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:26.719603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:27.719823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:28.720331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:29.720444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:30.720546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:31.720682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:32.721514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:33.721674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:33.978: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:51:33.978: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:51:33.978: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=false
  E0613 07:51:34.723112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:35.723324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:36.723742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:37.724059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:38.726043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:39.726418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:40.728330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:41.728803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:42.736841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:43.736780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:43.978: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:51:43.978: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun 13 07:51:43.978: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/13/24 07:51:43.979
  STEP: Scale down will halt with unhealthy stateful pod @ 06/13/24 07:51:43.979
  Jun 13 07:51:43.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 07:51:44.184: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:51:44.184: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:51:44.184: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:51:44.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun 13 07:51:44.400: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:51:44.400: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:51:44.400: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:51:44.400: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0613 07:51:44.737508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:44.910: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun 13 07:51:44.910: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun 13 07:51:44.910: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun 13 07:51:44.910: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun 13 07:51:44.916: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0613 07:51:45.739182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:46.739684      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:47.740397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:48.740517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:49.741642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:50.741696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:51.743988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:52.745104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:53.745571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:51:54.745925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:54.921: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:51:54.921: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:51:54.921: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun 13 07:51:54.943: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999562s
  E0613 07:51:55.747230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:55.948: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994931284s
  E0613 07:51:56.748214      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:56.957: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989013128s
  E0613 07:51:57.757619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:57.964: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.981026711s
  E0613 07:51:58.748485      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:58.975: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.972578673s
  E0613 07:51:59.753490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:51:59.984: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.961901631s
  E0613 07:52:00.754456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:52:00.995: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.949640916s
  E0613 07:52:01.769939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:52:02.027: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.939857489s
  E0613 07:52:02.754799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:52:03.079: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.910278805s
  E0613 07:52:03.754997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:52:04.086: INFO: Verifying statefulset ss doesn't scale past 3 for another 857.812391ms
  E0613 07:52:04.755105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4491 @ 06/13/24 07:52:05.087
  Jun 13 07:52:05.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 07:52:05.445: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 07:52:05.445: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 07:52:05.445: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 07:52:05.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0613 07:52:05.757527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:52:06.011: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 07:52:06.011: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 07:52:06.011: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 07:52:06.011: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=statefulset-4491 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun 13 07:52:06.719: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun 13 07:52:06.720: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun 13 07:52:06.720: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun 13 07:52:06.720: INFO: Scaling statefulset ss to 0
  E0613 07:52:06.757791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:07.760308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:08.763621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:09.763717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:10.764053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:11.764001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:12.770187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:13.773612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:14.775186      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:15.777033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/13/24 07:52:16.736
  Jun 13 07:52:16.737: INFO: Deleting all statefulset in ns statefulset-4491
  Jun 13 07:52:16.741: INFO: Scaling statefulset ss to 0
  Jun 13 07:52:16.753: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 07:52:16.756: INFO: Deleting statefulset ss
  E0613 07:52:16.778079      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:52:16.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4491" for this suite. @ 06/13/24 07:52:16.802
â€¢ [94.165 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/13/24 07:52:16.823
  Jun 13 07:52:16.823: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:52:16.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:52:16.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:52:16.957
  STEP: Creating a pod to test downward api env vars @ 06/13/24 07:52:17.024
  E0613 07:52:17.779750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:18.786914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:19.786837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:20.786908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:52:21.149
  Jun 13 07:52:21.153: INFO: Trying to get logs from node ip-172-31-12-94 pod downward-api-aa066bca-c435-4115-861b-531f63b2acf8 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 07:52:21.178
  Jun 13 07:52:21.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6398" for this suite. @ 06/13/24 07:52:21.221
â€¢ [4.423 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/13/24 07:52:21.247
  Jun 13 07:52:21.247: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/13/24 07:52:21.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:52:21.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:52:21.382
  STEP: creating a target pod @ 06/13/24 07:52:21.461
  E0613 07:52:21.787706      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:22.788559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:23.789651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:24.789743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 06/13/24 07:52:25.555
  E0613 07:52:25.790610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:26.790632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 06/13/24 07:52:27.655
  Jun 13 07:52:27.659: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-9600 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:52:27.662: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:52:27.663: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:52:27.665: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-9600/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  E0613 07:52:27.790743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:52:27.812: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/13/24 07:52:27.838
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/13/24 07:52:27.863
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/13/24 07:52:27.901
  Jun 13 07:52:27.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-9600" for this suite. @ 06/13/24 07:52:27.936
â€¢ [6.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/13/24 07:52:27.958
  Jun 13 07:52:27.958: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:52:27.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:52:28.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:52:28.081
  STEP: Creating secret with name s-test-opt-del-b66c1703-30b9-49a2-8f49-294957d873a4 @ 06/13/24 07:52:28.099
  STEP: Creating secret with name s-test-opt-upd-5293efa6-bbe1-4290-97a7-2db43f0bdbd1 @ 06/13/24 07:52:28.129
  STEP: Creating the pod @ 06/13/24 07:52:28.162
  E0613 07:52:28.792494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:29.793079      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:30.793229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:31.805181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b66c1703-30b9-49a2-8f49-294957d873a4 @ 06/13/24 07:52:32.316
  STEP: Updating secret s-test-opt-upd-5293efa6-bbe1-4290-97a7-2db43f0bdbd1 @ 06/13/24 07:52:32.349
  STEP: Creating secret with name s-test-opt-create-36b7c811-fced-4791-a9ab-6c4a09818944 @ 06/13/24 07:52:32.358
  STEP: waiting to observe update in volume @ 06/13/24 07:52:32.369
  E0613 07:52:32.794772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:33.800550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:34.800802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:35.801057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:36.801202      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:37.801629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:38.805134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:39.803226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:40.812689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:41.812968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:42.814266      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:43.814716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:44.814837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:45.814962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:46.815006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:47.815203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:48.816156      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:49.816717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:50.817282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:51.817560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:52.818243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:53.821583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:54.821986      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:55.822279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:56.824549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:57.825017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:58.825827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:52:59.826222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:00.826693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:01.826758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:02.826976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:03.827130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:04.829063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:05.829125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:06.830179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:07.831769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:08.832610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:09.835592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:10.839989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:11.840219      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:12.841075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:13.841289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:14.841776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:15.842324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:16.842993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:17.843084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:18.845537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:19.845758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:20.846419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:21.846692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:22.847445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:23.847597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:24.849669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:25.852358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:26.853279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:27.853579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:28.854306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:29.854446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:30.854546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:31.854637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:32.854784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:33.854908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:34.857558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:53:34.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1627" for this suite. @ 06/13/24 07:53:34.981
â€¢ [67.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/13/24 07:53:34.995
  Jun 13 07:53:34.995: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename subpath @ 06/13/24 07:53:34.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:53:35.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:53:35.093
  STEP: Setting up data @ 06/13/24 07:53:35.101
  STEP: Creating pod pod-subpath-test-secret-c8rz @ 06/13/24 07:53:35.139
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 07:53:35.139
  E0613 07:53:35.859435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:36.859612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:37.872340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:38.860254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:39.862004      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:40.862293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:41.864076      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:42.864319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:43.867685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:44.868333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:45.868416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:46.868544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:47.868665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:48.870370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:49.871289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:50.871553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:51.872425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:52.873531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:53.874195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:54.874686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:55.877561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:56.880082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:57.880099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:58.881615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:53:59.883084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:00.883189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:54:01.285
  Jun 13 07:54:01.291: INFO: Trying to get logs from node ip-172-31-2-92 pod pod-subpath-test-secret-c8rz container test-container-subpath-secret-c8rz: <nil>
  STEP: delete the pod @ 06/13/24 07:54:01.327
  STEP: Deleting pod pod-subpath-test-secret-c8rz @ 06/13/24 07:54:01.375
  Jun 13 07:54:01.376: INFO: Deleting pod "pod-subpath-test-secret-c8rz" in namespace "subpath-6092"
  Jun 13 07:54:01.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6092" for this suite. @ 06/13/24 07:54:01.392
â€¢ [26.411 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/13/24 07:54:01.405
  Jun 13 07:54:01.405: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replication-controller @ 06/13/24 07:54:01.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:01.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:01.611
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/13/24 07:54:01.644
  E0613 07:54:01.886635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:02.886892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:03.889252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:04.889514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 06/13/24 07:54:05.869
  STEP: Then the orphan pod is adopted @ 06/13/24 07:54:05.879
  E0613 07:54:05.889609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:06.892483      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:06.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4163" for this suite. @ 06/13/24 07:54:06.94
â€¢ [5.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/13/24 07:54:07.018
  Jun 13 07:54:07.018: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:54:07.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:07.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:07.2
  STEP: Setting up server cert @ 06/13/24 07:54:07.473
  E0613 07:54:07.893259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 07:54:07.901
  STEP: Deploying the webhook pod @ 06/13/24 07:54:07.913
  STEP: Wait for the deployment to be ready @ 06/13/24 07:54:07.945
  Jun 13 07:54:08.018: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 07:54:08.896810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:09.896944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:10.051: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 54, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 54, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 54, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 54, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:54:10.897760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:11.897541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:12.058: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 7, 54, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 54, 8, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 7, 54, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 7, 54, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 07:54:12.898094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:13.898540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 07:54:14.099
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 07:54:14.306
  E0613 07:54:14.899417      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:15.308: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/13/24 07:54:15.533
  STEP: Creating a configMap that should be mutated @ 06/13/24 07:54:15.56
  STEP: Deleting the collection of validation webhooks @ 06/13/24 07:54:15.612
  STEP: Creating a configMap that should not be mutated @ 06/13/24 07:54:15.75
  E0613 07:54:15.900251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:16.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1389" for this suite. @ 06/13/24 07:54:16.053
  STEP: Destroying namespace "webhook-markers-3134" for this suite. @ 06/13/24 07:54:16.119
â€¢ [9.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/13/24 07:54:16.179
  Jun 13 07:54:16.179: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:54:16.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:16.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:16.334
  STEP: creating service nodeport-test with type=NodePort in namespace services-9803 @ 06/13/24 07:54:16.361
  STEP: creating replication controller nodeport-test in namespace services-9803 @ 06/13/24 07:54:16.435
  I0613 07:54:16.532141      18 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-9803, replica count: 2
  E0613 07:54:16.900678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:17.902692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:18.902920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:54:19.583154      18 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 07:54:19.583: INFO: Creating new exec pod
  E0613 07:54:19.905686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:20.906849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:21.908336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:22.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0613 07:54:22.909515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:23.910910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:24.911312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:25.912019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:26.913084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:27.907: INFO: rc: 1
  Jun 13 07:54:27.907: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 nodeport-test 80
  nc: getaddrinfo: Try again
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 07:54:27.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0613 07:54:27.915464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:28.915527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:29.915649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:30.868: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun 13 07:54:30.868: INFO: stdout: ""
  Jun 13 07:54:30.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0613 07:54:30.915733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:31.168: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun 13 07:54:31.168: INFO: stdout: "nodeport-test-hz2kk"
  Jun 13 07:54:31.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.173.15 80'
  Jun 13 07:54:31.515: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.173.15 80\nConnection to 10.43.173.15 80 port [tcp/http] succeeded!\n"
  Jun 13 07:54:31.516: INFO: stdout: ""
  E0613 07:54:31.917505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:32.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.173.15 80'
  Jun 13 07:54:32.590: INFO: stderr: "+ nc -v -t -w 2 10.43.173.15 80\nConnection to 10.43.173.15 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Jun 13 07:54:32.590: INFO: stdout: "nodeport-test-hqnbm"
  Jun 13 07:54:32.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.92 30417'
  E0613 07:54:32.921639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:32.940: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.92 30417\nConnection to 172.31.2.92 30417 port [tcp/*] succeeded!\n"
  Jun 13 07:54:32.940: INFO: stdout: ""
  Jun 13 07:54:33.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.92 30417'
  Jun 13 07:54:33.885: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.92 30417\nConnection to 172.31.2.92 30417 port [tcp/*] succeeded!\n"
  Jun 13 07:54:33.885: INFO: stdout: "nodeport-test-hqnbm"
  Jun 13 07:54:33.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.12.94 30417'
  E0613 07:54:33.922051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:34.181: INFO: stderr: "+ nc -v -t -w 2 172.31.12.94 30417\n+ echo hostName\nConnection to 172.31.12.94 30417 port [tcp/*] succeeded!\n"
  Jun 13 07:54:34.181: INFO: stdout: ""
  Jun 13 07:54:34.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.12.94 30417'
  E0613 07:54:34.923120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:35.302: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.12.94 30417\nConnection to 172.31.12.94 30417 port [tcp/*] succeeded!\n"
  Jun 13 07:54:35.302: INFO: stdout: ""
  Jun 13 07:54:35.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-9803 exec execpodhpm7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.12.94 30417'
  E0613 07:54:35.923943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:54:36.181: INFO: stderr: "+ nc -v -t -w 2 172.31.12.94 30417\nConnection to 172.31.12.94 30417 port [tcp/*] succeeded!\n+ echo hostName\n"
  Jun 13 07:54:36.181: INFO: stdout: "nodeport-test-hqnbm"
  Jun 13 07:54:36.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9803" for this suite. @ 06/13/24 07:54:36.186
â€¢ [20.015 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/13/24 07:54:36.195
  Jun 13 07:54:36.195: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:54:36.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:36.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:36.368
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:54:36.372
  E0613 07:54:36.924175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:37.924302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:38.925605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:39.925702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:54:40.445
  Jun 13 07:54:40.458: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-74e3fa08-00d7-42a4-b42d-73bf2e60e3b4 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:54:40.47
  Jun 13 07:54:40.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5615" for this suite. @ 06/13/24 07:54:40.511
â€¢ [4.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/13/24 07:54:40.588
  Jun 13 07:54:40.593: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 07:54:40.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:40.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:40.684
  STEP: apply creating a deployment @ 06/13/24 07:54:40.69
  Jun 13 07:54:40.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3725" for this suite. @ 06/13/24 07:54:40.807
â€¢ [0.271 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/13/24 07:54:40.859
  Jun 13 07:54:40.859: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 07:54:40.86
  E0613 07:54:40.926798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:41.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:41.159
  STEP: Creating configMap with name configmap-test-volume-map-83c68377-cf40-4157-95b6-c3e7afaa0934 @ 06/13/24 07:54:41.179
  STEP: Creating a pod to test consume configMaps @ 06/13/24 07:54:41.196
  E0613 07:54:41.926972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:42.927098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:43.927603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:44.928791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:54:45.327
  Jun 13 07:54:45.333: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-c54cf8db-c764-4168-95f7-bcc48fd7a059 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:54:45.344
  Jun 13 07:54:45.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4313" for this suite. @ 06/13/24 07:54:45.386
â€¢ [4.533 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/13/24 07:54:45.393
  Jun 13 07:54:45.393: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 07:54:45.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:45.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:45.512
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 07:54:45.538
  E0613 07:54:45.929663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:46.929823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:47.930879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:48.932292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:54:49.651
  Jun 13 07:54:49.655: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-f551a926-7ee9-4cb5-be4d-3f7c1ea64053 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 07:54:49.673
  Jun 13 07:54:49.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5127" for this suite. @ 06/13/24 07:54:49.777
â€¢ [4.404 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/13/24 07:54:49.824
  Jun 13 07:54:49.824: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 07:54:49.825
  E0613 07:54:49.932832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:49.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:49.957
  STEP: Creating a pod to test service account token:  @ 06/13/24 07:54:49.964
  E0613 07:54:50.933630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:51.933679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:52.934353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:53.937581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:54:54.024
  Jun 13 07:54:54.043: INFO: Trying to get logs from node ip-172-31-12-94 pod test-pod-a601ff41-0802-4cb4-adc8-d14a87712b8b container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 07:54:54.065
  Jun 13 07:54:54.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-763" for this suite. @ 06/13/24 07:54:54.113
â€¢ [4.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/13/24 07:54:54.129
  Jun 13 07:54:54.129: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 07:54:54.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:54.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:54.26
  STEP: create the container @ 06/13/24 07:54:54.28
  W0613 07:54:54.306490      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/13/24 07:54:54.306
  E0613 07:54:54.938461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:55.938555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:56.939212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:57.939304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/13/24 07:54:58.378
  STEP: the container should be terminated @ 06/13/24 07:54:58.396
  STEP: the termination message should be set @ 06/13/24 07:54:58.396
  Jun 13 07:54:58.396: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/13/24 07:54:58.403
  Jun 13 07:54:58.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6393" for this suite. @ 06/13/24 07:54:58.428
â€¢ [4.314 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/13/24 07:54:58.444
  Jun 13 07:54:58.445: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 07:54:58.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:54:58.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:54:58.532
  STEP: Creating pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612 @ 06/13/24 07:54:58.541
  E0613 07:54:58.939445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:54:59.939947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 07:55:00.614
  Jun 13 07:55:00.618: INFO: Initial restart count of pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f is 0
  Jun 13 07:55:00.625: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:00.940939      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:01.941559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:02.638: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:02.941573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:03.941772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:04.649: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:04.948315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:05.948878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:06.660: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:06.952430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:07.952880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:08.666: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:08.953945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:09.953981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:10.672: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:10.955020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:11.955467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:12.676: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:12.956302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:13.957791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:14.686: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:14.957181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:15.958370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:16.698: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:16.958489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:17.959117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:18.703: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:18.960593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:19.960709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:20.715: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:20.961321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:21.961816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:22.722: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:22.964476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:23.965952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:24.736: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:24.966577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:25.966658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:26.742: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:26.970473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:27.971991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:28.747: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:28.972591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:29.973671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:30.757: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:30.977513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:31.981505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:32.762: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:32.982490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:33.982875      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:34.766: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:34.982914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:35.983526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:36.769: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:36.983687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:37.984941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:38.776: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:38.985607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:39.986961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:40.786: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:40.988670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:41.989494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:42.806: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:42.989919      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:43.990719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:44.814: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:44.991574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:45.992556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:46.817: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:46.992838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:47.997182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:48.821: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:49.009942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:50.010019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:50.828: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:51.010972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:52.017913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:52.833: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:53.017957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:54.018898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:54.849: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:55.020488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:56.020981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:56.857: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:57.024788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:55:58.025797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:55:58.869: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:55:59.025672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:00.029203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:00.875: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:01.029494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:02.032534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:02.879: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:03.033678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:04.035918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:04.884: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:05.038611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:06.036469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:06.888: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:07.036852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:08.037203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:08.892: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:09.037699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:10.048191      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:10.896: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:11.039425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:12.052912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:12.915: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:13.041291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:14.043721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:14.918: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:15.043899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:16.045501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:16.922: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:17.046161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:18.046771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:18.926: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:19.047129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:20.047297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:20.929: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:21.051716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:22.061286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:22.937: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:23.064296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:24.064770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:24.950: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:25.065891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:26.066287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:26.967: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:27.069737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:28.069807      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:28.976: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:29.070618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:30.070841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:30.988: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:31.071631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:32.071759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:33.018: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:33.072845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:34.073055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:35.022: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:35.077829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:36.077910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:37.032: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:37.078259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:38.078386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:39.036: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:39.078674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:40.078901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:41.041: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:41.079437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:42.079702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:43.045: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:43.081037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:44.083646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:45.052: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:45.085059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:46.086278      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:47.059: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:47.087099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:48.089977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:49.064: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:49.092863      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:50.093027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:51.068: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:51.093433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:52.097530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:53.079: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:53.098446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:54.099050      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:55.084: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:55.099615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:56.101834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:57.093: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:57.109705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:56:58.105649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:56:59.101: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:56:59.106310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:00.113096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:01.106: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:01.114051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:02.127491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:03.115: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:03.120240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:04.120877      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:05.121: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:05.121911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:06.122732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:07.124067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:07.126: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:08.124218      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:09.125526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:09.145: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:10.125808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:11.125912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:11.162: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:12.127556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:13.127681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:13.167: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:14.128424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:15.128797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:15.172: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:16.129794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:17.131285      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:17.176: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:18.130113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:19.131091      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:19.200: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:20.131280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:21.131422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:21.215: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:22.131574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:23.131631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:23.223: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:24.132969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:25.133546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:25.226: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:26.140965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:27.141524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:27.247: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:28.141617      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:29.144335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:29.254: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:30.144468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:31.144565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:31.260: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:32.144703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:33.145669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:33.278: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:34.145981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:35.148310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:35.303: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:36.146658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:37.163318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:37.311: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:38.149137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:39.150022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:39.316: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:40.150158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:41.157117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:41.336: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:42.155774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:43.155868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:43.351: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:44.156006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:45.156236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:45.374: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:46.156354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:47.156804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:47.380: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:48.157580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:49.158135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:49.389: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:50.158559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:51.158607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:51.421: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:52.159048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:53.160780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:53.429: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:54.164148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:55.164368      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:55.440: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:56.165573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:57.167365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:57.445: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:57:58.168409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:57:59.169524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:57:59.449: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:00.172140      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:01.174200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:01.475: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:02.174915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:03.175990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:03.490: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:04.176840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:05.176987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:05.497: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:06.177286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:07.177511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:07.503: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:08.178662      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:09.178847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:09.507: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:10.179987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:11.180471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:11.525: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:12.181795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:13.181853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:13.531: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:14.182367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:15.182271      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:15.537: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:16.184497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:17.184830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:17.547: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:18.185537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:19.187395      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:19.552: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:20.187522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:21.187780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:21.558: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:22.191325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:23.193205      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:23.563: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:24.192415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:25.193644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:25.573: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:26.192851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:27.192970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:27.585: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:28.193013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:29.193778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:29.593: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:30.194024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:31.194048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:31.600: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:32.194273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:33.197301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:33.608: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:34.197442      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:35.198174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:35.620: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:36.198279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:37.198392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:37.628: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:38.199058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:39.200001      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:39.634: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:40.202759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:41.202868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:41.638: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:42.204340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:43.209517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:43.659: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:44.211619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:45.212252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:45.671: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:46.212848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:47.212968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:47.677: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:48.214397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:49.215463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:49.682: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:50.215853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:51.215877      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:51.685: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:52.216005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:53.216107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:53.691: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:54.217985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:55.218125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:55.698: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:56.225612      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:57.226585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:57.703: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:58:58.233594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:58:59.237497      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:58:59.709: INFO: Get pod busybox-a8f23aba-02cf-4400-a082-68afa06c8c2f in namespace container-probe-8612
  E0613 07:59:00.237549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:01.237643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/13/24 07:59:01.71
  Jun 13 07:59:01.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8612" for this suite. @ 06/13/24 07:59:01.77
â€¢ [243.347 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/13/24 07:59:01.8
  Jun 13 07:59:01.800: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 07:59:01.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:01.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:01.943
  STEP: Creating configMap with name configmap-projected-all-test-volume-aa4a3327-0f91-4483-aa0f-286ef34abc0d @ 06/13/24 07:59:01.988
  STEP: Creating secret with name secret-projected-all-test-volume-3567e491-688b-43f3-b4c6-ce308b01609f @ 06/13/24 07:59:02.012
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/13/24 07:59:02.031
  E0613 07:59:02.238363      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:03.238682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:04.239334      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:05.243028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 07:59:06.129
  Jun 13 07:59:06.193: INFO: Trying to get logs from node ip-172-31-12-94 pod projected-volume-2e795168-7330-4cac-be7b-33bb213cc2c0 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 07:59:06.229
  E0613 07:59:06.243781      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:06.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1038" for this suite. @ 06/13/24 07:59:06.302
â€¢ [4.554 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/13/24 07:59:06.355
  Jun 13 07:59:06.355: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename hostport @ 06/13/24 07:59:06.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:06.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:06.456
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/13/24 07:59:06.487
  E0613 07:59:07.243756      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:08.245506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:09.246440      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:10.246567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:11.253235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:12.252462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.2.92 on the node which pod1 resides and expect scheduled @ 06/13/24 07:59:12.593
  E0613 07:59:13.253246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:14.254040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:15.254587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:16.254682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:17.254815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:18.257771      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.2.92 but use UDP protocol on the node which pod2 resides @ 06/13/24 07:59:18.643
  E0613 07:59:19.258779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:20.259712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:21.261594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:22.261692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:23.265519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:24.266456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:25.267328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:26.267242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/13/24 07:59:26.72
  Jun 13 07:59:26.720: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.2.92 http://127.0.0.1:54323/hostname] Namespace:hostport-4087 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:59:26.720: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:59:26.721: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:59:26.721: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-4087/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.2.92+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.2.92, port: 54323 @ 06/13/24 07:59:26.85
  Jun 13 07:59:26.851: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.2.92:54323/hostname] Namespace:hostport-4087 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:59:26.851: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:59:26.851: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:59:26.851: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-4087/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.2.92%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.2.92, port: 54323 UDP @ 06/13/24 07:59:26.992
  Jun 13 07:59:26.994: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.2.92 54323] Namespace:hostport-4087 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 07:59:26.995: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 07:59:26.996: INFO: ExecWithOptions: Clientset creation
  Jun 13 07:59:26.996: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-4087/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.2.92+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0613 07:59:27.267906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:28.272902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:29.273821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:30.273810      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:31.276628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:32.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4087" for this suite. @ 06/13/24 07:59:32.198
â€¢ [25.851 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/13/24 07:59:32.206
  Jun 13 07:59:32.206: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 07:59:32.207
  E0613 07:59:32.277658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:32.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:32.34
  STEP: Creating projection with secret that has name secret-emptykey-test-cfdc2eb6-847c-459d-a21e-a2fe02f8bb69 @ 06/13/24 07:59:32.353
  Jun 13 07:59:32.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6348" for this suite. @ 06/13/24 07:59:32.381
â€¢ [0.224 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/13/24 07:59:32.43
  Jun 13 07:59:32.430: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 07:59:32.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:32.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:32.521
  Jun 13 07:59:32.533: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 07:59:33.278269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/13/24 07:59:34.204
  Jun 13 07:59:34.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6061 --namespace=crd-publish-openapi-6061 create -f -'
  E0613 07:59:34.279945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:34.782: INFO: stderr: ""
  Jun 13 07:59:34.782: INFO: stdout: "e2e-test-crd-publish-openapi-2990-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 13 07:59:34.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6061 --namespace=crd-publish-openapi-6061 delete e2e-test-crd-publish-openapi-2990-crds test-cr'
  Jun 13 07:59:35.049: INFO: stderr: ""
  Jun 13 07:59:35.049: INFO: stdout: "e2e-test-crd-publish-openapi-2990-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun 13 07:59:35.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6061 --namespace=crd-publish-openapi-6061 apply -f -'
  Jun 13 07:59:35.210: INFO: stderr: ""
  Jun 13 07:59:35.210: INFO: stdout: "e2e-test-crd-publish-openapi-2990-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun 13 07:59:35.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6061 --namespace=crd-publish-openapi-6061 delete e2e-test-crd-publish-openapi-2990-crds test-cr'
  E0613 07:59:35.281555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:35.584: INFO: stderr: ""
  Jun 13 07:59:35.584: INFO: stdout: "e2e-test-crd-publish-openapi-2990-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/13/24 07:59:35.584
  Jun 13 07:59:35.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6061 explain e2e-test-crd-publish-openapi-2990-crds'
  Jun 13 07:59:35.664: INFO: stderr: ""
  Jun 13 07:59:35.664: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2990-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0613 07:59:36.284553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:37.285100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:37.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6061" for this suite. @ 06/13/24 07:59:38.062
â€¢ [5.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/13/24 07:59:38.081
  Jun 13 07:59:38.081: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 07:59:38.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:38.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:38.235
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 07:59:38.251
  Jun 13 07:59:38.252: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5280 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0613 07:59:38.285609      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:38.564: INFO: stderr: ""
  Jun 13 07:59:38.564: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/13/24 07:59:38.565
  Jun 13 07:59:38.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5280 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun 13 07:59:38.914: INFO: stderr: ""
  Jun 13 07:59:38.914: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/13/24 07:59:38.914
  Jun 13 07:59:38.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-5280 delete pods e2e-test-httpd-pod'
  E0613 07:59:39.286662      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:40.287740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:41.288727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:41.656: INFO: stderr: ""
  Jun 13 07:59:41.656: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun 13 07:59:41.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5280" for this suite. @ 06/13/24 07:59:41.66
â€¢ [3.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/13/24 07:59:41.672
  Jun 13 07:59:41.672: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename apf @ 06/13/24 07:59:41.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:41.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:41.755
  STEP: getting /apis @ 06/13/24 07:59:41.768
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/13/24 07:59:41.827
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/13/24 07:59:41.841
  STEP: creating @ 06/13/24 07:59:41.853
  STEP: getting @ 06/13/24 07:59:41.951
  STEP: listing @ 06/13/24 07:59:41.969
  STEP: watching @ 06/13/24 07:59:41.993
  Jun 13 07:59:41.993: INFO: starting watch
  STEP: patching @ 06/13/24 07:59:41.995
  STEP: updating @ 06/13/24 07:59:42.015
  Jun 13 07:59:42.082: INFO: waiting for watch events with expected annotations
  Jun 13 07:59:42.083: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 06/13/24 07:59:42.083
  STEP: patching /status @ 06/13/24 07:59:42.091
  STEP: updating /status @ 06/13/24 07:59:42.1
  STEP: deleting @ 06/13/24 07:59:42.169
  STEP: deleting a collection @ 06/13/24 07:59:42.183
  Jun 13 07:59:42.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-8296" for this suite. @ 06/13/24 07:59:42.225
â€¢ [0.578 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/13/24 07:59:42.251
  Jun 13 07:59:42.251: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 07:59:42.253
  E0613 07:59:42.289312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:42.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:42.32
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6618 @ 06/13/24 07:59:42.335
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/13/24 07:59:42.386
  STEP: creating service externalsvc in namespace services-6618 @ 06/13/24 07:59:42.386
  STEP: creating replication controller externalsvc in namespace services-6618 @ 06/13/24 07:59:42.489
  I0613 07:59:42.509704      18 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6618, replica count: 2
  E0613 07:59:43.293538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:44.294240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:45.297428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 07:59:45.561095      18 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/13/24 07:59:45.564
  Jun 13 07:59:45.587: INFO: Creating new exec pod
  E0613 07:59:46.301299      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:47.299657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:48.303192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:49.303840      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:49.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6618 exec execpodtldrp -- /bin/sh -x -c nslookup clusterip-service.services-6618.svc.cluster.local'
  E0613 07:59:50.303997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:51.305500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:52.307175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:53.307452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:54.308646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:54.925: INFO: stderr: "+ nslookup clusterip-service.services-6618.svc.cluster.local\n"
  Jun 13 07:59:54.925: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-6618.svc.cluster.local\tcanonical name = externalsvc.services-6618.svc.cluster.local.\nName:\texternalsvc.services-6618.svc.cluster.local\nAddress: 10.43.97.131\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-6618, will wait for the garbage collector to delete the pods @ 06/13/24 07:59:54.925
  Jun 13 07:59:54.998: INFO: Deleting ReplicationController externalsvc took: 6.58023ms
  Jun 13 07:59:55.099: INFO: Terminating ReplicationController externalsvc pods took: 100.741337ms
  E0613 07:59:55.309651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:56.312628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:57.313696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 07:59:58.316241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 07:59:58.858: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun 13 07:59:58.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6618" for this suite. @ 06/13/24 07:59:58.913
â€¢ [16.676 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/13/24 07:59:58.928
  Jun 13 07:59:58.928: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 07:59:58.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 07:59:59.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 07:59:59.039
  E0613 07:59:59.319944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/13/24 07:59:59.341
  E0613 08:00:00.320822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 08:00:00.713
  STEP: Deploying the webhook pod @ 06/13/24 08:00:00.727
  STEP: Wait for the deployment to be ready @ 06/13/24 08:00:00.757
  Jun 13 08:00:00.777: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0613 08:00:01.331015      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:02.350568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:02.883: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:00:03.352431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:04.367430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:04.913: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:00:05.358020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:06.360074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:06.900: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 0, 0, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:00:07.381798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:08.361425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:00:08.892
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:00:08.958
  E0613 08:00:09.365075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:09.962: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/13/24 08:00:10.002
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/13/24 08:00:10.029
  STEP: Creating a dummy validating-webhook-configuration object @ 06/13/24 08:00:10.064
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/13/24 08:00:10.101
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/13/24 08:00:10.108
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/13/24 08:00:10.163
  E0613 08:00:10.375711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:10.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9494" for this suite. @ 06/13/24 08:00:10.426
  STEP: Destroying namespace "webhook-markers-5910" for this suite. @ 06/13/24 08:00:10.435
â€¢ [11.523 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/13/24 08:00:10.459
  Jun 13 08:00:10.459: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:00:10.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:00:10.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:00:10.657
  STEP: Creating projection with secret that has name projected-secret-test-15ecdee6-d011-438b-a753-94742375d123 @ 06/13/24 08:00:10.688
  STEP: Creating a pod to test consume secrets @ 06/13/24 08:00:10.699
  E0613 08:00:11.377917      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:12.381530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:13.382279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:14.383329      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:00:14.773
  Jun 13 08:00:14.806: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-secrets-a281e75b-b407-40e2-8e27-04ab8074bbaa container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 08:00:14.834
  Jun 13 08:00:14.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4125" for this suite. @ 06/13/24 08:00:14.899
â€¢ [4.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/13/24 08:00:14.93
  Jun 13 08:00:14.930: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename init-container @ 06/13/24 08:00:14.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:00:15.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:00:15.051
  STEP: creating the pod @ 06/13/24 08:00:15.056
  Jun 13 08:00:15.056: INFO: PodSpec: initContainers in spec.initContainers
  E0613 08:00:15.383505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:16.384198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:17.385506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:18.385814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:19.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8795" for this suite. @ 06/13/24 08:00:19.331
â€¢ [4.415 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/13/24 08:00:19.348
  Jun 13 08:00:19.348: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 08:00:19.349
  E0613 08:00:19.416952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:00:19.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:00:19.438
  STEP: Creating pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10 @ 06/13/24 08:00:19.465
  E0613 08:00:20.417887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:21.418331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:22.418382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:23.442850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 08:00:23.597
  Jun 13 08:00:23.603: INFO: Initial restart count of pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 is 0
  Jun 13 08:00:23.608: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:24.443600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:25.444195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:25.621: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:26.444671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:27.445104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:27.626: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:28.445506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:29.445595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:29.632: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:30.446753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:31.446800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:31.645: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:32.446948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:33.447057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:33.652: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:34.447127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:35.447857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:35.681: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:36.448455      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:37.454277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:37.698: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:38.457740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:39.458637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:39.704: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:40.458893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:41.458914      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:41.724: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:42.462561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:43.463050      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:43.731: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:44.463108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:45.463400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:45.735: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:46.463400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:47.463521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:47.745: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:48.464267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:49.464806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:49.758: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:50.465503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:51.465529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:51.764: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:52.465614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:53.465870      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:53.788: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:54.465791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:55.466021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:55.797: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:56.466536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:57.466997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:57.830: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:00:58.467032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:00:59.470967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:00:59.835: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:00.471767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:01.472795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:01.856: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:02.474428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:03.474723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:03.861: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:04.476174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:05.476644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:05.865: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:06.476846      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:07.477108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:07.878: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:08.477639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:09.477566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:09.883: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:10.478028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:11.478944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:11.888: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:12.479653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:13.479757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:13.897: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:14.479869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:15.479976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:15.910: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:16.480142      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:17.480270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:17.920: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:18.481165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:19.481227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:19.936: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:20.482353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:21.482488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:21.946: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:22.482808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:23.483135      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:23.950: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:24.484382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:25.484247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:25.956: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:26.485245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:27.485625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:27.967: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:28.485729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:29.485817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:29.984: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:30.486835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:31.486985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:31.990: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:32.487079      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:33.487469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:33.995: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:34.487615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:35.492344      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:36.002: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:36.493047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:37.493823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:38.012: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:38.494302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:39.494564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:40.027: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:40.495746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:41.496536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:42.033: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:42.497249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:43.497851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:44.054: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:44.498671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:45.501529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:46.075: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:46.505007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:47.505103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:48.080: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:48.505579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:49.506428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:50.093: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:50.506482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:51.506989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:52.101: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:52.507049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:53.508727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:54.106: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:54.509534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:55.511427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:56.110: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:56.511900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:57.512448      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:01:58.117: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:01:58.516235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:01:59.517657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:00.129: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:00.517876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:01.519904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:02.138: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:02.521554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:03.528252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:04.145: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:04.528613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:05.528727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:06.178: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:06.533342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:07.557601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:08.193: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:08.560103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:09.547620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:10.198: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:10.547942      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:11.547994      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:12.206: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:12.555340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:13.551961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:14.216: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:14.552174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:15.552427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:16.221: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:16.554158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:17.557651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:18.234: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:18.557892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:19.558605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:20.251: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:20.559589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:21.559874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:22.254: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:22.560255      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:23.560613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:24.268: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:24.561507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:25.561668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:26.277: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:26.561722      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:27.562674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:28.314: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:28.563028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:29.563767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:30.318: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:30.568899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:31.569201      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:32.331: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:32.570178      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:33.570630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:34.335: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:34.570707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:35.570913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:36.339: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:36.571132      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:37.572263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:38.345: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:38.572720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:39.572709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:40.352: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:40.574038      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:41.575880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:42.357: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:42.576716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:43.577193      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:44.361: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:44.577940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:45.578487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:46.366: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:46.579235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:47.592028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:48.371: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:48.581405      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:49.582335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:50.389: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:50.583476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:51.584318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:52.398: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:52.585179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:53.586303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:54.408: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:54.591217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:55.587850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:56.414: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:56.589514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:57.594588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:02:58.418: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:02:58.594736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:02:59.595492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:00.422: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:00.596706      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:01.597592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:02.445: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:02.599056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:03.599172      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:04.458: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:04.600243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:05.600496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:06.466: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:06.600564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:07.600981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:08.472: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:08.601981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:09.602913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:10.476: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:10.608708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:11.610098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:12.481: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:12.613528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:13.612302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:14.490: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:14.613062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:15.613673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:16.498: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:16.614379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:17.614635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:18.504: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:18.615468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:19.616086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:20.508: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:20.617095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:21.617284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:22.514: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:22.617537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:23.617680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:24.518: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:24.619035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:25.619158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:26.561: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:26.620133      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:27.620783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:28.607: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:28.621258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:29.621509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:30.612: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:30.621900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:31.622574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:32.618: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:32.622667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:33.623138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:34.623960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:34.624: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:35.624078      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:36.624901      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:36.628: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:37.625127      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:38.633800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:38.641: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:39.633988      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:40.634124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:40.651: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:41.634773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:42.634811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:42.659: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:43.635370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:44.635444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:44.665: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:45.636031      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:46.637857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:46.675: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:47.638428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:48.641631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:48.682: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:49.641652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:50.646126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:50.687: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:51.642807      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:52.643372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:52.702: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:53.647650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:54.649712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:54.738: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:55.649763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:56.649853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:56.754: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:57.649945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:03:58.657561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:03:58.761: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:03:59.658494      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:00.658998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:00.783: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:01.659595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:02.660389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:02.802: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:03.661501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:04.662390      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:04.831: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:05.662821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:06.663920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:06.835: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:07.664013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:08.664323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:08.844: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:09.664367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:10.665335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:10.850: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:11.665034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:12.665486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:12.860: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:13.666969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:14.666944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:14.866: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:15.669568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:16.672644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:16.869: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:17.673606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:18.677021      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:18.875: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:19.677761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:20.679259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:20.883: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:21.679346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:22.679451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:22.887: INFO: Get pod test-webserver-766e882c-afeb-4c08-b414-d5964ef396d4 in namespace container-probe-10
  E0613 08:04:23.679554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:24.679770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/13/24 08:04:24.893
  Jun 13 08:04:24.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-10" for this suite. @ 06/13/24 08:04:24.971
â€¢ [245.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/13/24 08:04:24.994
  Jun 13 08:04:24.994: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 08:04:24.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:04:25.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:04:25.063
  STEP: Create a pod @ 06/13/24 08:04:25.088
  E0613 08:04:25.696154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:26.683605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:27.684449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:28.684630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 06/13/24 08:04:29.156
  Jun 13 08:04:29.168: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun 13 08:04:29.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1414" for this suite. @ 06/13/24 08:04:29.173
â€¢ [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/13/24 08:04:29.192
  Jun 13 08:04:29.192: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename namespaces @ 06/13/24 08:04:29.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:04:29.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:04:29.319
  STEP: creating a Namespace @ 06/13/24 08:04:29.362
  STEP: patching the Namespace @ 06/13/24 08:04:29.477
  STEP: get the Namespace and ensuring it has the label @ 06/13/24 08:04:29.628
  Jun 13 08:04:29.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3734" for this suite. @ 06/13/24 08:04:29.638
  STEP: Destroying namespace "nspatchtest-c12e5609-ca66-4d80-a454-ac5ec722a2b6-9843" for this suite. @ 06/13/24 08:04:29.663
  E0613 08:04:29.687171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [0.551 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/13/24 08:04:29.75
  Jun 13 08:04:29.751: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 08:04:29.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:04:29.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:04:29.915
  STEP: Creating pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308 @ 06/13/24 08:04:29.937
  E0613 08:04:30.688073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:31.688526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:32.689599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:33.689707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 08:04:34.176
  Jun 13 08:04:34.187: INFO: Initial restart count of pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 is 0
  Jun 13 08:04:34.199: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:34.697573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:35.690806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:36.257: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:36.691120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:37.691758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:38.264: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:38.692134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:39.692242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:40.267: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:40.692599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:41.694556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:42.278: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:42.695067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:43.695104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:44.284: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:44.696063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:45.700866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:46.290: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:46.698577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:47.700890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:48.294: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:48.701783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:49.702865      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:50.298: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:50.705452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:51.705766      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:52.302: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:52.705883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:53.706094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:54.308: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:54.706208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:55.711865      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:56.312: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:56.712549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:57.712664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:04:58.321: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:04:58.714673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:04:59.715108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:00.334: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:00.715374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:01.723298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:02.351: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:02.723794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:03.729123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:04.358: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:04.730943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:05.731361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:06.363: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:06.742058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:07.742779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:08.372: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:08.753608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:09.744284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:10.380: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:10.745154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:11.747652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:12.384: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:12.748721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:13.748835      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:14.388: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:14.749921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:15.750045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:16.393: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:16.750587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:17.757646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:18.401: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:18.758647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:19.758772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:20.418: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:20.758979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:21.759276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:22.421: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:22.759972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:23.760336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:24.429: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:24.761437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:25.761568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:26.437: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:26.763147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:27.764285      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:28.461: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:28.765194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:29.765512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:30.467: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:30.767504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:31.767623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:32.471: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:32.773527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:33.773652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:34.485: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:34.774107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:35.774181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:36.493: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:36.775047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:37.775185      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:38.499: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:38.775254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:39.775979      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:40.505: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:40.776091      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:41.777129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:42.510: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:42.777995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:43.778075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:44.514: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:44.778818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:45.778883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:46.518: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:46.779217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:47.779296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:48.523: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:48.781590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:49.781528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:50.529: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:50.782239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:51.783251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:52.535: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:52.783930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:53.785575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:54.544: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:54.787443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:55.787909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:56.552: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:56.788825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:57.788926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:05:58.558: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:05:58.789922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:05:59.789951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:00.563: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:00.790080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:01.792235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:02.585: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:02.793500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:03.794495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:04.593: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:04.794599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:05.794690      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:06.597: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:06.795058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:07.805530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:08.602: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:08.798451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:09.802172      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:10.606: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:10.802890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:11.803092      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:12.609: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:12.803192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:13.803304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:14.618: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:14.803357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:15.803770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:16.630: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:16.804946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:17.805141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:18.645: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:18.809257      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:19.806355      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:20.652: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:20.806354      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:21.810759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:22.657: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:22.807088      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:23.807157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:24.667: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:24.808215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:25.808210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:26.685: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:26.809040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:27.809707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:28.692: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:28.812603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:29.812546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:30.695: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:30.813100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:31.821675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:32.701: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:32.821768      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:33.823199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:34.706: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:34.824196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:35.825723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:36.710: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:36.826698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:37.826910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:38.716: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:38.827655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:39.827808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:40.727: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:40.828709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:41.830540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:42.730: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:42.831027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:43.832007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:44.735: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:44.833298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:45.833556      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:46.757: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:46.834496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:47.834676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:48.766: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:48.834997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:49.835190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:50.792: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:50.835799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:51.835924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:52.804: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:52.836699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:53.845036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:54.812: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:54.845733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:55.845941      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:56.818: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:56.857906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:57.847327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:06:58.822: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:06:58.851477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:06:59.853498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:00.842: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:00.854155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:01.856764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:02.857984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:02.875: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:03.859128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:04.861121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:04.891: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:05.862226      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:06.862723      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:06.903: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:07.862839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:08.863023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:08.907: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:09.867805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:10.867795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:10.911: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:11.868232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:12.868887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:12.916: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:13.873765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:14.869682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:14.945: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:15.870845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:16.871348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:16.958: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:17.872446      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:18.872528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:18.967: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:19.877496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:20.881492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:20.974: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:21.882614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:22.882752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:22.978: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:23.882926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:24.883138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:24.989: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:25.885151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:26.885104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:26.999: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:27.885273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:28.885561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:29.007: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:29.885916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:30.889528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:31.023: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:31.890289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:32.890535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:33.027: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:33.890868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:34.891427      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:35.034: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:35.895178      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:36.895652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:37.040: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:37.895918      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:38.896383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:39.053: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:39.897492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:40.901498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:41.077: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:41.901713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:42.901970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:43.094: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:43.905228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:44.905385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:45.109: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:45.906370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:46.906854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:47.142: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:47.906968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:48.907098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:49.152: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:49.913463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:50.913740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:51.157: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:51.914577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:52.915165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:53.165: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:53.916581      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:54.917231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:55.188: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:55.917501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:56.917590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:57.218: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:57.918933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:07:58.919254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:07:59.222: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:07:59.921577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:00.922292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:01.228: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:01.924100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:02.932543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:03.232: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:03.933317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:04.933500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:05.248: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:05.934035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:06.934290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:07.254: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:07.936047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:08.936275      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:09.257: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:09.936377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:10.937634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:11.262: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:11.940470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:12.941749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:13.266: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:13.944107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:14.944231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:15.290: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:15.945261      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:16.945511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:17.297: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:17.946530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:18.946967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:19.317: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:19.952571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:20.953336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:21.326: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:21.957611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:22.958580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:23.335: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:23.958753      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:24.958971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:25.342: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:25.959858      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:26.960056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:27.348: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:27.960273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:28.961549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:29.356: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:29.961658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:30.962146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:31.361: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:31.965044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:32.969507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:33.386: INFO: Get pod test-grpc-bc942a3c-5a1c-46cf-9eee-cd02a68a6281 in namespace container-probe-308
  E0613 08:08:33.971212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:34.972462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/13/24 08:08:35.389
  Jun 13 08:08:35.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-308" for this suite. @ 06/13/24 08:08:35.423
â€¢ [245.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/13/24 08:08:35.436
  Jun 13 08:08:35.436: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 08:08:35.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:08:35.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:08:35.556
  Jun 13 08:08:35.584: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 08:08:35.620: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 08:08:35.633: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-204 before test
  Jun 13 08:08:35.663: INFO: fleet-agent-0 from cattle-fleet-system started at 2024-06-13 06:20:09 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.663: INFO: 	Container fleet-agent ready: true, restart count 0
  Jun 13 08:08:35.666: INFO: 	Container fleet-agent-clusterstatus ready: true, restart count 0
  Jun 13 08:08:35.666: INFO: cattle-cluster-agent-744549dbb4-28hx8 from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.667: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 08:08:35.667: INFO: cattle-cluster-agent-744549dbb4-xtk7x from cattle-system started at 2024-06-13 06:21:03 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.671: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 08:08:35.671: INFO: cattle-node-agent-kjs2b from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.671: INFO: 	Container agent ready: true, restart count 0
  Jun 13 08:08:35.671: INFO: kube-api-auth-wwvxs from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.674: INFO: 	Container kube-api-auth ready: true, restart count 0
  Jun 13 08:08:35.682: INFO: rancher-webhook-66ff948964-5r6sf from cattle-system started at 2024-06-13 06:20:57 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.682: INFO: 	Container rancher-webhook ready: true, restart count 0
  Jun 13 08:08:35.682: INFO: calico-kube-controllers-8485458bd8-xmp2w from kube-system started at 2024-06-13 06:18:18 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.682: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 08:08:35.682: INFO: canal-nmgr7 from kube-system started at 2024-06-13 06:18:18 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.682: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 08:08:35.682: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 08:08:35.682: INFO: coredns-7b7785bd9-knk5k from kube-system started at 2024-06-13 06:18:29 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.682: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 08:08:35.686: INFO: metrics-server-657c74b5d8-44q8w from kube-system started at 2024-06-13 06:18:43 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.687: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 08:08:35.688: INFO: rke-coredns-addon-deploy-job-zk2n9 from kube-system started at 2024-06-13 06:27:54 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.688: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 08:08:35.688: INFO: rke-metrics-addon-deploy-job-522gf from kube-system started at 2024-06-13 06:18:41 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.689: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 08:08:35.689: INFO: rke-network-plugin-deploy-job-nzfjk from kube-system started at 2024-06-13 06:18:15 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.689: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 08:08:35.691: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-hcrl9 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.691: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:08:35.691: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 08:08:35.691: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-94 before test
  Jun 13 08:08:35.728: INFO: cattle-node-agent-gppzj from cattle-system started at 2024-06-13 06:21:04 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.728: INFO: 	Container agent ready: true, restart count 0
  Jun 13 08:08:35.728: INFO: canal-7rrrm from kube-system started at 2024-06-13 06:21:04 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.728: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 08:08:35.728: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 08:08:35.728: INFO: coredns-7b7785bd9-7ljhs from kube-system started at 2024-06-13 06:21:06 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.728: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 08:08:35.728: INFO: coredns-autoscaler-6b7d888f49-gtz4n from kube-system started at 2024-06-13 06:27:58 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.728: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 08:08:35.728: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-5zbmz from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.728: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:08:35.728: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 08:08:35.728: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-92 before test
  Jun 13 08:08:35.736: INFO: cattle-node-agent-czvts from cattle-system started at 2024-06-13 06:21:16 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.736: INFO: 	Container agent ready: true, restart count 0
  Jun 13 08:08:35.736: INFO: canal-4z8nx from kube-system started at 2024-06-13 06:21:16 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.736: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 08:08:35.736: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 08:08:35.736: INFO: sonobuoy from sonobuoy started at 2024-06-13 06:32:15 +0000 UTC (1 container statuses recorded)
  Jun 13 08:08:35.736: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 08:08:35.736: INFO: sonobuoy-e2e-job-8c45e5711e4845f4 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.736: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 08:08:35.736: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:08:35.736: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-cq7zb from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:08:35.736: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:08:35.736: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-11-204 @ 06/13/24 08:08:35.841
  STEP: verifying the node has the label node ip-172-31-12-94 @ 06/13/24 08:08:35.885
  STEP: verifying the node has the label node ip-172-31-2-92 @ 06/13/24 08:08:35.966
  E0613 08:08:35.974184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:35.994: INFO: Pod fleet-agent-0 requesting resource cpu=0m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod cattle-cluster-agent-744549dbb4-28hx8 requesting resource cpu=0m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod cattle-cluster-agent-744549dbb4-xtk7x requesting resource cpu=0m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod cattle-node-agent-czvts requesting resource cpu=0m on Node ip-172-31-2-92
  Jun 13 08:08:35.994: INFO: Pod cattle-node-agent-gppzj requesting resource cpu=0m on Node ip-172-31-12-94
  Jun 13 08:08:35.994: INFO: Pod cattle-node-agent-kjs2b requesting resource cpu=0m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod kube-api-auth-wwvxs requesting resource cpu=0m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod rancher-webhook-66ff948964-5r6sf requesting resource cpu=0m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod calico-kube-controllers-8485458bd8-xmp2w requesting resource cpu=0m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod canal-4z8nx requesting resource cpu=250m on Node ip-172-31-2-92
  Jun 13 08:08:35.994: INFO: Pod canal-7rrrm requesting resource cpu=250m on Node ip-172-31-12-94
  Jun 13 08:08:35.994: INFO: Pod canal-nmgr7 requesting resource cpu=250m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod coredns-7b7785bd9-7ljhs requesting resource cpu=100m on Node ip-172-31-12-94
  Jun 13 08:08:35.994: INFO: Pod coredns-7b7785bd9-knk5k requesting resource cpu=100m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod coredns-autoscaler-6b7d888f49-gtz4n requesting resource cpu=20m on Node ip-172-31-12-94
  Jun 13 08:08:35.994: INFO: Pod metrics-server-657c74b5d8-44q8w requesting resource cpu=100m on Node ip-172-31-11-204
  Jun 13 08:08:35.994: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-2-92
  Jun 13 08:08:35.994: INFO: Pod sonobuoy-e2e-job-8c45e5711e4845f4 requesting resource cpu=0m on Node ip-172-31-2-92
  Jun 13 08:08:35.994: INFO: Pod sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-5zbmz requesting resource cpu=0m on Node ip-172-31-12-94
  Jun 13 08:08:35.994: INFO: Pod sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-cq7zb requesting resource cpu=0m on Node ip-172-31-2-92
  Jun 13 08:08:35.994: INFO: Pod sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-hcrl9 requesting resource cpu=0m on Node ip-172-31-11-204
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/13/24 08:08:35.994
  Jun 13 08:08:35.994: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-2-92
  Jun 13 08:08:36.045: INFO: Creating a pod which consumes cpu=1085m on Node ip-172-31-11-204
  Jun 13 08:08:36.114: INFO: Creating a pod which consumes cpu=1141m on Node ip-172-31-12-94
  E0613 08:08:36.974373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:37.975382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:38.976698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:39.978822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/13/24 08:08:40.246
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0d96e5a9-4b34-4774-88e1-6ccdc93531e2.17d881edc2ccefeb], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2907/filler-pod-0d96e5a9-4b34-4774-88e1-6ccdc93531e2 to ip-172-31-2-92] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0d96e5a9-4b34-4774-88e1-6ccdc93531e2.17d881ee1736a7b1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0d96e5a9-4b34-4774-88e1-6ccdc93531e2.17d881ee1d61e76f], Reason = [Created], Message = [Created container filler-pod-0d96e5a9-4b34-4774-88e1-6ccdc93531e2] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0d96e5a9-4b34-4774-88e1-6ccdc93531e2.17d881ee3151e6fe], Reason = [Started], Message = [Started container filler-pod-0d96e5a9-4b34-4774-88e1-6ccdc93531e2] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36c2d8e3-bcb6-4e54-ba33-3744123c4589.17d881edcc713d39], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2907/filler-pod-36c2d8e3-bcb6-4e54-ba33-3744123c4589 to ip-172-31-11-204] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36c2d8e3-bcb6-4e54-ba33-3744123c4589.17d881ee3dcca3c8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36c2d8e3-bcb6-4e54-ba33-3744123c4589.17d881ee44b8e8a3], Reason = [Created], Message = [Created container filler-pod-36c2d8e3-bcb6-4e54-ba33-3744123c4589] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-36c2d8e3-bcb6-4e54-ba33-3744123c4589.17d881ee663242e9], Reason = [Started], Message = [Started container filler-pod-36c2d8e3-bcb6-4e54-ba33-3744123c4589] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d006ac5d-5e5d-44e3-b14b-ff28788170d2.17d881edcc79cd84], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2907/filler-pod-d006ac5d-5e5d-44e3-b14b-ff28788170d2 to ip-172-31-12-94] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d006ac5d-5e5d-44e3-b14b-ff28788170d2.17d881ee0281849a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d006ac5d-5e5d-44e3-b14b-ff28788170d2.17d881ee082bb301], Reason = [Created], Message = [Created container filler-pod-d006ac5d-5e5d-44e3-b14b-ff28788170d2] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d006ac5d-5e5d-44e3-b14b-ff28788170d2.17d881ee185989fd], Reason = [Started], Message = [Started container filler-pod-d006ac5d-5e5d-44e3-b14b-ff28788170d2] @ 06/13/24 08:08:40.25
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d881eebd0f3d23], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 06/13/24 08:08:40.283
  E0613 08:08:40.979667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-11-204 @ 06/13/24 08:08:41.278
  STEP: verifying the node doesn't have the label node @ 06/13/24 08:08:41.322
  STEP: removing the label node off the node ip-172-31-12-94 @ 06/13/24 08:08:41.356
  STEP: verifying the node doesn't have the label node @ 06/13/24 08:08:41.425
  STEP: removing the label node off the node ip-172-31-2-92 @ 06/13/24 08:08:41.438
  STEP: verifying the node doesn't have the label node @ 06/13/24 08:08:41.524
  Jun 13 08:08:41.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2907" for this suite. @ 06/13/24 08:08:41.574
â€¢ [6.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/13/24 08:08:41.592
  Jun 13 08:08:41.592: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 08:08:41.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:08:41.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:08:41.676
  STEP: Creating secret with name secret-test-e72bf8fc-4104-41df-91f7-5267edfd811a @ 06/13/24 08:08:41.681
  STEP: Creating a pod to test consume secrets @ 06/13/24 08:08:41.719
  E0613 08:08:41.980138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:42.982794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:43.983311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:44.983785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:08:45.803
  Jun 13 08:08:45.823: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-secrets-a5ccef59-6e98-4fda-b2ae-052ca1954690 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 08:08:45.894
  Jun 13 08:08:45.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5683" for this suite. @ 06/13/24 08:08:45.932
â€¢ [4.355 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/13/24 08:08:45.947
  Jun 13 08:08:45.948: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-webhook @ 06/13/24 08:08:45.949
  E0613 08:08:46.004545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:08:46.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:08:46.05
  STEP: Setting up server cert @ 06/13/24 08:08:46.075
  E0613 08:08:47.004946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/13/24 08:08:47.015
  STEP: Deploying the custom resource conversion webhook pod @ 06/13/24 08:08:47.04
  STEP: Wait for the deployment to be ready @ 06/13/24 08:08:47.106
  Jun 13 08:08:47.151: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0613 08:08:48.005644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:49.005902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:49.204: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:08:50.007052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:51.007311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:51.224: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 8, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-686b5695cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:08:52.007467      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:53.007664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:08:53.208
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:08:53.242
  E0613 08:08:54.007758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:54.244: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun 13 08:08:54.253: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:08:55.009489      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:56.012346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:08:57.012604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 06/13/24 08:08:57.152
  STEP: v2 custom resource should be converted @ 06/13/24 08:08:57.187
  E0613 08:08:58.013583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:08:58.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5412" for this suite. @ 06/13/24 08:08:58.087
â€¢ [12.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/13/24 08:08:58.18
  Jun 13 08:08:58.180: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 08:08:58.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:08:58.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:08:58.377
  STEP: creating service in namespace services-6969 @ 06/13/24 08:08:58.463
  STEP: creating service affinity-nodeport-transition in namespace services-6969 @ 06/13/24 08:08:58.464
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6969 @ 06/13/24 08:08:58.5
  I0613 08:08:58.584235      18 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6969, replica count: 3
  E0613 08:08:59.016755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:00.025874      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:01.026249      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 08:09:01.635203      18 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 08:09:02.026521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:03.027082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:04.040217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 08:09:04.636238      18 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 08:09:04.705: INFO: Creating new exec pod
  E0613 08:09:05.030540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:06.031443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:07.031542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:08.032333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:09.032646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:09.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6969 exec execpod-affinitysb2sq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0613 08:09:10.033450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:10.109: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun 13 08:09:10.109: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 08:09:10.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6969 exec execpod-affinitysb2sq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.62.98 80'
  Jun 13 08:09:10.501: INFO: stderr: "+ + nc -v -t -w 2 10.43.62.98 80\nConnection to 10.43.62.98 80 port [tcp/http] succeeded!\necho hostName\n"
  Jun 13 08:09:10.501: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 08:09:10.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6969 exec execpod-affinitysb2sq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.12.94 32391'
  Jun 13 08:09:10.974: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.12.94 32391\nConnection to 172.31.12.94 32391 port [tcp/*] succeeded!\n"
  Jun 13 08:09:10.974: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 08:09:10.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6969 exec execpod-affinitysb2sq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.92 32391'
  E0613 08:09:11.033681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:11.555: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.2.92 32391\nConnection to 172.31.2.92 32391 port [tcp/*] succeeded!\n"
  Jun 13 08:09:11.555: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 08:09:11.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6969 exec execpod-affinitysb2sq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.204:32391/ ; done'
  E0613 08:09:12.034403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:12.177: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n"
  Jun 13 08:09:12.177: INFO: stdout: "\naffinity-nodeport-transition-n9nsl\naffinity-nodeport-transition-n9nsl\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-n9nsl\naffinity-nodeport-transition-w44z5\naffinity-nodeport-transition-w44z5\naffinity-nodeport-transition-n9nsl\naffinity-nodeport-transition-w44z5\naffinity-nodeport-transition-n9nsl\naffinity-nodeport-transition-w44z5\naffinity-nodeport-transition-w44z5\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-n9nsl\naffinity-nodeport-transition-w44z5"
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-n9nsl
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-n9nsl
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-n9nsl
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-w44z5
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-w44z5
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-n9nsl
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-w44z5
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-n9nsl
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-w44z5
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-w44z5
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-n9nsl
  Jun 13 08:09:12.177: INFO: Received response from host: affinity-nodeport-transition-w44z5
  Jun 13 08:09:12.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6969 exec execpod-affinitysb2sq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.11.204:32391/ ; done'
  Jun 13 08:09:12.634: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.11.204:32391/\n"
  Jun 13 08:09:12.634: INFO: stdout: "\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq\naffinity-nodeport-transition-bfpcq"
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.634: INFO: Received response from host: affinity-nodeport-transition-bfpcq
  Jun 13 08:09:12.635: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6969, will wait for the garbage collector to delete the pods @ 06/13/24 08:09:12.677
  Jun 13 08:09:12.745: INFO: Deleting ReplicationController affinity-nodeport-transition took: 9.79804ms
  Jun 13 08:09:12.945: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 200.516982ms
  E0613 08:09:13.035728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:14.036605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:15.040037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:16.040360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:16.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6969" for this suite. @ 06/13/24 08:09:16.928
â€¢ [18.761 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/13/24 08:09:16.942
  Jun 13 08:09:16.942: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 08:09:16.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:09:17.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:09:17.059
  E0613 08:09:17.059713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/13/24 08:09:17.278
  E0613 08:09:18.060166      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 08:09:18.553
  STEP: Deploying the webhook pod @ 06/13/24 08:09:18.574
  STEP: Wait for the deployment to be ready @ 06/13/24 08:09:18.598
  Jun 13 08:09:18.688: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 08:09:19.060434      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:20.060884      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:20.718: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 9, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 9, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 9, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 9, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:09:21.061732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:22.062312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:09:22.746
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:09:22.797
  E0613 08:09:23.062457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:23.798: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 08:09:23.804: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:09:24.063026      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4172-crds.webhook.example.com via the AdmissionRegistration API @ 06/13/24 08:09:24.342
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/13/24 08:09:24.398
  E0613 08:09:25.063829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:26.064269      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:27.065208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:28.066284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:28.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4681" for this suite. @ 06/13/24 08:09:28.233
  STEP: Destroying namespace "webhook-markers-900" for this suite. @ 06/13/24 08:09:28.301
â€¢ [11.479 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/13/24 08:09:28.421
  Jun 13 08:09:28.422: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 08:09:28.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:09:28.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:09:28.593
  STEP: creating the pod @ 06/13/24 08:09:28.62
  STEP: submitting the pod to kubernetes @ 06/13/24 08:09:28.621
  W0613 08:09:28.802593      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0613 08:09:29.068008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:30.069693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/13/24 08:09:30.907
  STEP: updating the pod @ 06/13/24 08:09:30.918
  E0613 08:09:31.070603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:31.484: INFO: Successfully updated pod "pod-update-activedeadlineseconds-d12181c5-1bd8-40be-98ed-248b6bb207a8"
  E0613 08:09:32.071726      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:33.072222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:34.072610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:35.072817      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:35.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9519" for this suite. @ 06/13/24 08:09:35.561
â€¢ [7.147 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/13/24 08:09:35.568
  Jun 13 08:09:35.568: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:09:35.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:09:35.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:09:35.753
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 08:09:35.762
  E0613 08:09:36.077542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:37.074254      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:38.074469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:39.074951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:09:39.851
  Jun 13 08:09:39.856: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-0d501afc-d7d4-4db5-a24c-a5fa3cb26249 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 08:09:39.869
  Jun 13 08:09:39.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4228" for this suite. @ 06/13/24 08:09:39.934
â€¢ [4.380 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/13/24 08:09:39.951
  Jun 13 08:09:39.951: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 08:09:39.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:09:40.064
  E0613 08:09:40.076289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:09:40.089
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/13/24 08:09:40.094
  Jun 13 08:09:40.116: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3683  4acfa21b-b9d9-42f9-9135-1537e8077f8e 33417 0 2024-06-13 08:09:40 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-13 08:09:40 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-htxc4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-htxc4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0613 08:09:41.076493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:42.076912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:43.077468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:44.078388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/13/24 08:09:44.191
  Jun 13 08:09:44.191: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3683 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 08:09:44.191: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 08:09:44.191: INFO: ExecWithOptions: Clientset creation
  Jun 13 08:09:44.192: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-3683/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/13/24 08:09:44.351
  Jun 13 08:09:44.352: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3683 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 08:09:44.352: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 08:09:44.353: INFO: ExecWithOptions: Clientset creation
  Jun 13 08:09:44.353: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-3683/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun 13 08:09:44.512: INFO: Deleting pod test-dns-nameservers...
  Jun 13 08:09:44.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3683" for this suite. @ 06/13/24 08:09:44.596
â€¢ [4.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/13/24 08:09:44.631
  Jun 13 08:09:44.631: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 08:09:44.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:09:44.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:09:44.74
  STEP: Starting the proxy @ 06/13/24 08:09:44.747
  Jun 13 08:09:44.747: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-4455 proxy --unix-socket=/tmp/kubectl-proxy-unix1565197810/test'
  STEP: retrieving proxy /api/ output @ 06/13/24 08:09:44.843
  Jun 13 08:09:44.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4455" for this suite. @ 06/13/24 08:09:44.86
â€¢ [0.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/13/24 08:09:44.875
  Jun 13 08:09:44.875: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 08:09:44.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:09:44.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:09:44.953
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/13/24 08:09:45.006
  Jun 13 08:09:45.007: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:09:45.079114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:46.084286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:47.084459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:47.376: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:09:48.084694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:49.085758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:50.086211      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:51.086954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:52.087233      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:53.093287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:54.093425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:55.104784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:56.104886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:57.105335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:09:58.106099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:09:58.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7367" for this suite. @ 06/13/24 08:09:58.199
â€¢ [13.358 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/13/24 08:09:58.233
  Jun 13 08:09:58.233: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:09:58.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:09:58.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:09:58.351
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/13/24 08:09:58.369
  E0613 08:09:59.107171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:00.110542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:01.109017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:02.109632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:10:02.56
  Jun 13 08:10:02.565: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-1e13153f-d37b-42e4-ad7b-30cc0414540e container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:10:02.591
  Jun 13 08:10:02.636: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4276" for this suite. @ 06/13/24 08:10:02.646
â€¢ [4.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/13/24 08:10:02.662
  Jun 13 08:10:02.662: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 08:10:02.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:10:02.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:10:02.791
  Jun 13 08:10:02.859: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 08:10:03.111019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:04.112273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:05.112327      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:06.112450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:07.114182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:08.116460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:09.117381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:10.119340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:11.120304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:12.121252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:13.121447      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:14.121537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:15.123235      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:16.123838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:17.124086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:18.124680      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:19.124757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:20.125284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:21.125500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:22.126418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:23.129259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:24.132379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:25.130905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:26.132483      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:27.134576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:28.140742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:29.141559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:30.141700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:31.141955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:32.144679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:33.145198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:34.145694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:35.148713      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:36.153431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:37.154025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:38.154758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:39.155977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:40.156383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:41.157099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:42.157505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:43.157811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:44.158282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:45.161530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:46.162010      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:47.162431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:48.162593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:49.163763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:50.173416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:51.174984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:52.164681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:53.165557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:54.166777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:55.169536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:56.169747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:57.174277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:58.181550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:10:59.175687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:00.175769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:01.176745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:02.177545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:02.863: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/13/24 08:11:02.866
  Jun 13 08:11:02.932: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 13 08:11:02.974: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  E0613 08:11:03.177615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:03.210: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun 13 08:11:03.281: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 13 08:11:03.477: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 13 08:11:03.542: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/13/24 08:11:03.542
  E0613 08:11:04.178116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:05.177982      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:06.178381      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:07.185324      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:08.185670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:09.193061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/13/24 08:11:09.668
  E0613 08:11:10.188149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:11.189503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:12.190466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:13.190973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:14.193506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:15.193605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:16.198136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:17.197729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:17.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2500" for this suite. @ 06/13/24 08:11:17.882
â€¢ [75.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/13/24 08:11:17.901
  Jun 13 08:11:17.901: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl-logs @ 06/13/24 08:11:17.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:11:17.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:11:17.991
  STEP: creating an pod @ 06/13/24 08:11:17.995
  Jun 13 08:11:17.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  E0613 08:11:18.201506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:18.301: INFO: stderr: ""
  Jun 13 08:11:18.301: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/13/24 08:11:18.301
  Jun 13 08:11:18.301: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0613 08:11:19.202383      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:20.202926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:21.204044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:22.205505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:22.346: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/13/24 08:11:22.346
  Jun 13 08:11:22.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 logs logs-generator logs-generator'
  Jun 13 08:11:22.683: INFO: stderr: ""
  Jun 13 08:11:22.683: INFO: stdout: "I0613 08:11:20.006894       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/tln 483\nI0613 08:11:20.208673       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/gj4 283\nI0613 08:11:20.406977       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/wt57 251\nI0613 08:11:20.607390       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/qb4t 446\nI0613 08:11:20.807787       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/2xtx 351\nI0613 08:11:21.007270       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/9k8 594\nI0613 08:11:21.207612       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/2lx5 366\nI0613 08:11:21.406948       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/tqbg 553\nI0613 08:11:21.607213       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/wk7 323\nI0613 08:11:21.807600       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/sxz9 320\nI0613 08:11:22.006968       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/45t 487\nI0613 08:11:22.207225       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/dcn 365\nI0613 08:11:22.408268       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/8k6w 311\nI0613 08:11:22.609171       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/szm 430\n"
  STEP: limiting log lines @ 06/13/24 08:11:22.683
  Jun 13 08:11:22.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 logs logs-generator logs-generator --tail=1'
  Jun 13 08:11:23.133: INFO: stderr: ""
  Jun 13 08:11:23.133: INFO: stdout: "I0613 08:11:23.007898       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/zkts 353\n"
  Jun 13 08:11:23.133: INFO: got output "I0613 08:11:23.007898       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/zkts 353\n"
  STEP: limiting log bytes @ 06/13/24 08:11:23.133
  Jun 13 08:11:23.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 logs logs-generator logs-generator --limit-bytes=1'
  E0613 08:11:23.206538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:23.482: INFO: stderr: ""
  Jun 13 08:11:23.482: INFO: stdout: "I"
  Jun 13 08:11:23.482: INFO: got output "I"
  STEP: exposing timestamps @ 06/13/24 08:11:23.482
  Jun 13 08:11:23.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun 13 08:11:23.931: INFO: stderr: ""
  Jun 13 08:11:23.931: INFO: stdout: "2024-06-13T08:11:23.808370411Z I0613 08:11:23.807193       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/wnh 221\n"
  Jun 13 08:11:23.931: INFO: got output "2024-06-13T08:11:23.808370411Z I0613 08:11:23.807193       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/wnh 221\n"
  STEP: restricting to a time range @ 06/13/24 08:11:23.931
  E0613 08:11:24.206646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:25.206769      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:26.206956      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:26.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 logs logs-generator logs-generator --since=1s'
  Jun 13 08:11:26.572: INFO: stderr: ""
  Jun 13 08:11:26.572: INFO: stdout: "I0613 08:11:25.607346       1 logs_generator.go:76] 28 PUT /api/v1/namespaces/ns/pods/z2g 218\nI0613 08:11:25.807734       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/tpfg 447\nI0613 08:11:26.006977       1 logs_generator.go:76] 30 GET /api/v1/namespaces/default/pods/6gr 460\nI0613 08:11:26.207451       1 logs_generator.go:76] 31 GET /api/v1/namespaces/kube-system/pods/5rh 322\nI0613 08:11:26.407816       1 logs_generator.go:76] 32 PUT /api/v1/namespaces/ns/pods/g4t 577\n"
  Jun 13 08:11:26.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 logs logs-generator logs-generator --since=24h'
  Jun 13 08:11:26.719: INFO: stderr: ""
  Jun 13 08:11:26.719: INFO: stdout: "I0613 08:11:20.006894       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/tln 483\nI0613 08:11:20.208673       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/gj4 283\nI0613 08:11:20.406977       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/wt57 251\nI0613 08:11:20.607390       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/qb4t 446\nI0613 08:11:20.807787       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/2xtx 351\nI0613 08:11:21.007270       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/9k8 594\nI0613 08:11:21.207612       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/2lx5 366\nI0613 08:11:21.406948       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/tqbg 553\nI0613 08:11:21.607213       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/wk7 323\nI0613 08:11:21.807600       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/sxz9 320\nI0613 08:11:22.006968       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/45t 487\nI0613 08:11:22.207225       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/dcn 365\nI0613 08:11:22.408268       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/8k6w 311\nI0613 08:11:22.609171       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/szm 430\nI0613 08:11:22.807568       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/vbmr 368\nI0613 08:11:23.007898       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/zkts 353\nI0613 08:11:23.207867       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/6f7 352\nI0613 08:11:23.407316       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/ktg 228\nI0613 08:11:23.606917       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/jvq 313\nI0613 08:11:23.807193       1 logs_generator.go:76] 19 GET /api/v1/namespaces/kube-system/pods/wnh 221\nI0613 08:11:24.008459       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/zbz 290\nI0613 08:11:24.207768       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/nhs 303\nI0613 08:11:24.408575       1 logs_generator.go:76] 22 POST /api/v1/namespaces/ns/pods/p7gx 488\nI0613 08:11:24.608106       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/hwv 476\nI0613 08:11:24.808658       1 logs_generator.go:76] 24 GET /api/v1/namespaces/ns/pods/qv6 433\nI0613 08:11:25.007042       1 logs_generator.go:76] 25 POST /api/v1/namespaces/ns/pods/2jr 377\nI0613 08:11:25.211819       1 logs_generator.go:76] 26 GET /api/v1/namespaces/default/pods/kbx 589\nI0613 08:11:25.407010       1 logs_generator.go:76] 27 POST /api/v1/namespaces/default/pods/b46 594\nI0613 08:11:25.607346       1 logs_generator.go:76] 28 PUT /api/v1/namespaces/ns/pods/z2g 218\nI0613 08:11:25.807734       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/tpfg 447\nI0613 08:11:26.006977       1 logs_generator.go:76] 30 GET /api/v1/namespaces/default/pods/6gr 460\nI0613 08:11:26.207451       1 logs_generator.go:76] 31 GET /api/v1/namespaces/kube-system/pods/5rh 322\nI0613 08:11:26.407816       1 logs_generator.go:76] 32 PUT /api/v1/namespaces/ns/pods/g4t 577\nI0613 08:11:26.606940       1 logs_generator.go:76] 33 PUT /api/v1/namespaces/kube-system/pods/qhs 203\n"
  Jun 13 08:11:26.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-logs-4382 delete pod logs-generator'
  E0613 08:11:27.207477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:27.833: INFO: stderr: ""
  Jun 13 08:11:27.833: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun 13 08:11:27.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-4382" for this suite. @ 06/13/24 08:11:27.845
â€¢ [9.976 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/13/24 08:11:27.877
  Jun 13 08:11:27.877: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 08:11:27.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:11:27.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:11:28.061
  E0613 08:11:28.209263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/13/24 08:11:28.378
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 08:11:28.985
  STEP: Deploying the webhook pod @ 06/13/24 08:11:29.001
  STEP: Wait for the deployment to be ready @ 06/13/24 08:11:29.053
  Jun 13 08:11:29.094: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 08:11:29.209304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:30.209651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:31.118: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:11:31.239157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:32.239624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:33.124: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:11:33.239915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:34.240010      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:35.125: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 11, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:11:35.241423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:36.244265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:11:37.124
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:11:37.135
  E0613 08:11:37.245295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:38.136: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/13/24 08:11:38.145
  STEP: create a configmap that should be updated by the webhook @ 06/13/24 08:11:38.193
  E0613 08:11:38.246163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:38.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1508" for this suite. @ 06/13/24 08:11:38.392
  STEP: Destroying namespace "webhook-markers-3504" for this suite. @ 06/13/24 08:11:38.425
â€¢ [10.612 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/13/24 08:11:38.49
  Jun 13 08:11:38.490: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 08:11:38.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:11:38.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:11:38.652
  E0613 08:11:39.246689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:40.247320      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:40.847: INFO: Deleting pod "var-expansion-bf5af944-8d34-436a-a12c-77c5bd5213c9" in namespace "var-expansion-3056"
  Jun 13 08:11:40.889: INFO: Wait up to 5m0s for pod "var-expansion-bf5af944-8d34-436a-a12c-77c5bd5213c9" to be fully deleted
  E0613 08:11:41.247385      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:42.247499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:43.252587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:44.253651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:11:44.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3056" for this suite. @ 06/13/24 08:11:44.948
â€¢ [6.503 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/13/24 08:11:44.997
  Jun 13 08:11:44.998: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename tables @ 06/13/24 08:11:44.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:11:45.252
  E0613 08:11:45.253495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:11:45.265
  Jun 13 08:11:45.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-302" for this suite. @ 06/13/24 08:11:45.303
â€¢ [0.482 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/13/24 08:11:45.482
  Jun 13 08:11:45.484: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:11:45.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:11:45.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:11:45.681
  STEP: Creating configMap with name cm-test-opt-del-825442a4-3177-4c92-9364-6d5ef2452dea @ 06/13/24 08:11:45.698
  STEP: Creating configMap with name cm-test-opt-upd-4f845808-80ab-42cb-8a31-b9718e564eed @ 06/13/24 08:11:45.718
  STEP: Creating the pod @ 06/13/24 08:11:45.728
  E0613 08:11:46.257486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:47.258597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:48.268150      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:49.263308      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-825442a4-3177-4c92-9364-6d5ef2452dea @ 06/13/24 08:11:49.848
  STEP: Updating configmap cm-test-opt-upd-4f845808-80ab-42cb-8a31-b9718e564eed @ 06/13/24 08:11:49.853
  STEP: Creating configMap with name cm-test-opt-create-a689d740-f67c-44c3-8a9b-c9803b3ab7c2 @ 06/13/24 08:11:49.869
  STEP: waiting to observe update in volume @ 06/13/24 08:11:49.882
  E0613 08:11:50.263376      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:51.264998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:52.265662      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:53.265783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:54.266693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:55.268014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:56.268930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:57.269038      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:58.269179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:11:59.275397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:00.275606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:01.277701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:02.277675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:03.277775      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:04.278403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:05.278606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:06.279231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:07.279339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:08.281138      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:09.282219      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:10.282934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:11.283922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:12.284712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:13.285560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:14.286623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:15.286656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:16.286806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:17.287184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:18.289488      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:19.290133      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:20.290886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:21.290989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:22.291741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:23.292089      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:24.293634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:25.294600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:26.294911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:27.296306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:28.296669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:29.297000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:30.297536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:31.297652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:32.299064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:33.300215      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:34.307934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:35.306701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:36.307531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:37.309217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:38.310086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:39.310344      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:40.311064      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:41.311978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:42.312287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:43.312397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:44.312531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:45.312760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:46.314760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:47.322621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:48.322839      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:49.323465      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:50.325794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:51.329504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:52.329687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:53.330406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:54.330959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:55.331222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:56.332309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:57.332409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:58.332548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:12:59.332707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:00.332821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:01.333668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:02.338682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:03.336653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:04.336778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:05.337516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:06.337546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:07.337663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:08.340991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:09.340545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:10.340601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:10.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-754" for this suite. @ 06/13/24 08:13:10.633
â€¢ [85.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/13/24 08:13:10.646
  Jun 13 08:13:10.647: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 08:13:10.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:10.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:10.783
  STEP: creating a secret @ 06/13/24 08:13:10.786
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/13/24 08:13:10.796
  STEP: patching the secret @ 06/13/24 08:13:10.801
  STEP: deleting the secret using a LabelSelector @ 06/13/24 08:13:10.833
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/13/24 08:13:10.895
  Jun 13 08:13:10.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9959" for this suite. @ 06/13/24 08:13:10.937
â€¢ [0.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/13/24 08:13:10.995
  Jun 13 08:13:11.001: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:13:11.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:11.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:11.066
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/13/24 08:13:11.075
  E0613 08:13:11.341394      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:12.349592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:13.343710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:14.345541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:13:15.19
  Jun 13 08:13:15.199: INFO: Trying to get logs from node ip-172-31-2-92 pod pod-04fb38db-ba78-4923-b0f6-815dafb861e0 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:13:15.232
  Jun 13 08:13:15.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5324" for this suite. @ 06/13/24 08:13:15.286
â€¢ [4.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/13/24 08:13:15.299
  Jun 13 08:13:15.299: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename containers @ 06/13/24 08:13:15.305
  E0613 08:13:15.346816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:15.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:15.418
  STEP: Creating a pod to test override command @ 06/13/24 08:13:15.442
  E0613 08:13:16.346945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:17.348246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:18.349616      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:19.349712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:20.349887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:21.354379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:13:21.502
  Jun 13 08:13:21.510: INFO: Trying to get logs from node ip-172-31-2-92 pod client-containers-d07eec82-1f74-4919-9273-a83f5dce4281 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 08:13:21.529
  Jun 13 08:13:21.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4014" for this suite. @ 06/13/24 08:13:21.566
â€¢ [6.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/13/24 08:13:21.579
  Jun 13 08:13:21.579: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 08:13:21.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:21.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:21.719
  STEP: getting /apis @ 06/13/24 08:13:21.722
  STEP: getting /apis/node.k8s.io @ 06/13/24 08:13:21.73
  STEP: getting /apis/node.k8s.io/v1 @ 06/13/24 08:13:21.732
  STEP: creating @ 06/13/24 08:13:21.734
  STEP: watching @ 06/13/24 08:13:21.793
  Jun 13 08:13:21.793: INFO: starting watch
  STEP: getting @ 06/13/24 08:13:21.809
  STEP: listing @ 06/13/24 08:13:21.814
  STEP: patching @ 06/13/24 08:13:21.835
  STEP: updating @ 06/13/24 08:13:21.845
  Jun 13 08:13:21.873: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/13/24 08:13:21.873
  STEP: deleting a collection @ 06/13/24 08:13:21.961
  Jun 13 08:13:21.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7843" for this suite. @ 06/13/24 08:13:22.001
â€¢ [0.437 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/13/24 08:13:22.017
  Jun 13 08:13:22.017: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename events @ 06/13/24 08:13:22.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:22.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:22.092
  STEP: Create set of events @ 06/13/24 08:13:22.096
  Jun 13 08:13:22.115: INFO: created test-event-1
  Jun 13 08:13:22.135: INFO: created test-event-2
  Jun 13 08:13:22.145: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/13/24 08:13:22.145
  STEP: delete collection of events @ 06/13/24 08:13:22.213
  Jun 13 08:13:22.213: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/13/24 08:13:22.267
  Jun 13 08:13:22.267: INFO: requesting list of events to confirm quantity
  Jun 13 08:13:22.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1167" for this suite. @ 06/13/24 08:13:22.314
  E0613 08:13:22.355474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [0.442 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/13/24 08:13:22.461
  Jun 13 08:13:22.461: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 08:13:22.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:22.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:22.708
  STEP: Setting up server cert @ 06/13/24 08:13:23.053
  E0613 08:13:23.356124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:24.356357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 08:13:24.434
  STEP: Deploying the webhook pod @ 06/13/24 08:13:24.441
  STEP: Wait for the deployment to be ready @ 06/13/24 08:13:24.456
  Jun 13 08:13:24.474: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 08:13:25.357825      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:26.357864      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:26.484: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:13:27.358729      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:28.359112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:28.488: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 13, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:13:29.360161      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:30.360331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:13:30.495
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:13:30.536
  E0613 08:13:31.360396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:31.537: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/13/24 08:13:31.694
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 08:13:31.809
  STEP: Deleting the collection of validation webhooks @ 06/13/24 08:13:31.871
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/13/24 08:13:32.006
  Jun 13 08:13:32.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7396" for this suite. @ 06/13/24 08:13:32.269
  STEP: Destroying namespace "webhook-markers-4120" for this suite. @ 06/13/24 08:13:32.3
â€¢ [9.878 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/13/24 08:13:32.34
  Jun 13 08:13:32.340: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 08:13:32.345
  E0613 08:13:32.361190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:32.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:32.479
  Jun 13 08:13:32.499: INFO: Creating deployment "webserver-deployment"
  Jun 13 08:13:32.529: INFO: Waiting for observed generation 1
  E0613 08:13:33.361805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:34.361937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:34.581: INFO: Waiting for all required pods to come up
  Jun 13 08:13:34.592: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/13/24 08:13:34.592
  E0613 08:13:35.362101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:36.362185      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:37.362252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:38.362437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:39.363097      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:40.364051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:40.706: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun 13 08:13:40.712: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun 13 08:13:40.733: INFO: Updating deployment webserver-deployment
  Jun 13 08:13:40.733: INFO: Waiting for observed generation 2
  E0613 08:13:41.364236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:42.368066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:42.750: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun 13 08:13:42.754: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun 13 08:13:42.759: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 13 08:13:42.793: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun 13 08:13:42.793: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun 13 08:13:42.801: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun 13 08:13:42.842: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun 13 08:13:42.842: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun 13 08:13:42.890: INFO: Updating deployment webserver-deployment
  Jun 13 08:13:42.900: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun 13 08:13:43.018: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  E0613 08:13:43.368331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:13:44.368515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:45.342: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0613 08:13:45.369009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:45.742: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe38110d-5644-4436-aef0-0d5b1a59ae9e",
      ResourceVersion: (string) (len=5) "34911",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 08:13:46.070: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
      ResourceVersion: (string) (len=5) "34893",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fe38110d-5644-4436-aef0-0d5b1a59ae9e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 33 38 31 31  30 64 2d 35 36 34 34 2d  |\"fe38110d-5644-|
              00000120  34 34 33 36 2d 61 65 66  30 2d 30 64 35 62 31 61  |4436-aef0-0d5b1a|
              00000130  35 39 61 65 39 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |59ae9e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 08:13:46.087: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun 13 08:13:46.087: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
      ResourceVersion: (string) (len=5) "34886",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fe38110d-5644-4436-aef0-0d5b1a59ae9e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 65 33 38 31 31  30 64 2d 35 36 34 34 2d  |\"fe38110d-5644-|
              00000120  34 34 33 36 2d 61 65 66  30 2d 30 64 35 62 31 61  |4436-aef0-0d5b1a|
              00000130  35 39 61 65 39 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |59ae9e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0613 08:13:46.369819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:46.472: INFO: Pod "webserver-deployment-557759b7c7-2qgcl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2qgcl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bf0bb4d-86c3-46cb-8230-00568db23975",
      ResourceVersion: (string) (len=5) "34697",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fbc49a2358109aca226c4f33c05d487f22446a7fda36a009732aa7414031e522",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.86/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.86/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 38 36  5c 22 7d 22 3a 7b 22 2e  |.42.2.86\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jkvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jkvb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) (len=10) "10.42.2.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863214,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://5b8c324e201a7262200628626a9e918bfb3db1fb51eddae9396159267eb8bf86",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.503: INFO: Pod "webserver-deployment-557759b7c7-5c7pr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5c7pr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2801e6bd-aaa0-44cd-8857-01c8cee0f2b0",
      ResourceVersion: (string) (len=5) "34860",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ghl9n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ghl9n",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.512: INFO: Pod "webserver-deployment-557759b7c7-7j2t4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7j2t4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69dcdcd3-211e-4e90-8487-76adfc8a41a6",
      ResourceVersion: (string) (len=5) "34920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22db2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22db2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.526: INFO: Pod "webserver-deployment-557759b7c7-fv9b9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fv9b9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6e2a613-3834-4da0-838a-612cb1b8c69a",
      ResourceVersion: (string) (len=5) "34748",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.49/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0f1cfcafc3567a4a3508ba713fea74225c017477d861fddf438f99c21e03a99e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.49/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 34 39  5c 22 7d 22 3a 7b 22 2e  |.42.0.49\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sq6c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sq6c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.204"
        }
      },
      PodIP: (string) (len=10) "10.42.0.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863217,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://d778f17c393a8d7bd7826700ef34efcbab13b2282e760eb7f7a2bd6cd01e0a3f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.534: INFO: Pod "webserver-deployment-557759b7c7-fwpjv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fwpjv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8655fad9-347c-4653-b22e-1c2aacdfa5da",
      ResourceVersion: (string) (len=5) "34916",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-95kn7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-95kn7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.204"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.614: INFO: Pod "webserver-deployment-557759b7c7-gf257" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gf257",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a58aa205-e340-45dd-8848-d4bfa373e5f9",
      ResourceVersion: (string) (len=5) "34703",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d05d48786a84b31e44b14e9d9a3af468fabcf139ca9e908a624e8c1e17f0dd44",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.254/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.254/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 35  34 5c 22 7d 22 3a 7b 22  |.42.1.254\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-htz5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-htz5b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) (len=11) "10.42.1.254",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.254"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863215,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://c5659275cb8dae253ffcb34be21a1644b919b9455ece0e13c64fff479e1aef58",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.777: INFO: Pod "webserver-deployment-557759b7c7-j7rsx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j7rsx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "124e9775-66d5-4167-92ec-f5a1245a25eb",
      ResourceVersion: (string) (len=5) "34912",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jgxch",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jgxch",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.781: INFO: Pod "webserver-deployment-557759b7c7-jj429" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-jj429",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "502d7b9e-f3bb-42f1-a31d-e78efec2bf2d",
      ResourceVersion: (string) (len=5) "34863",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-49rv8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-49rv8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.785: INFO: Pod "webserver-deployment-557759b7c7-kg79x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kg79x",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec294781-2524-4f6b-8bcc-845e33349e22",
      ResourceVersion: (string) (len=5) "34895",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ckxfh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ckxfh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.796: INFO: Pod "webserver-deployment-557759b7c7-kqv8j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kqv8j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d8bd0e0-c365-46e0-a761-aadfaa63d8dc",
      ResourceVersion: (string) (len=5) "34852",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-shdqq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-shdqq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.799: INFO: Pod "webserver-deployment-557759b7c7-rv8cq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rv8cq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bf4da57-59d4-4115-9558-aefdbad7eeee",
      ResourceVersion: (string) (len=5) "34700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "54121fe3fe45544344478e03777efea72c647e65c5eded8cbbd563fda4731c54",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.1.6/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.1.6/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 36 5c  22 7d 22 3a 7b 22 2e 22  |.42.1.6\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6fnlk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6fnlk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) (len=9) "10.42.1.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.42.1.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863216,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://c101eb36609a4e21c8729a4bccf32cc932af768749ab98d3bcbc3c47d3fe4bf8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.812: INFO: Pod "webserver-deployment-557759b7c7-smg67" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-smg67",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "012ebbce-99ce-4fe6-8cde-5b9c950dbfb8",
      ResourceVersion: (string) (len=5) "34688",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bb56c6b7a46e3de23f529e2474777703d56e1cb57d8902320b14a650917587c8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.87/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.87/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863214,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 38 37  5c 22 7d 22 3a 7b 22 2e  |.42.2.87\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j28lr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j28lr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) (len=10) "10.42.2.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863215,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://846c03fe156a4ef5ccf4be892e126bd36f648ccc5c8aded6bda85ee97cbd8a62",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.887: INFO: Pod "webserver-deployment-557759b7c7-vp5rw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vp5rw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1808fa39-2a08-4069-b8e0-78e20c2bd080",
      ResourceVersion: (string) (len=5) "34693",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a108d520e8122f743cf748ff81beeafc8139ddde3dc90bb7987afdd7c88d0a69",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.88/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.88/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863215,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 38 38  5c 22 7d 22 3a 7b 22 2e  |.42.2.88\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pccpg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pccpg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) (len=10) "10.42.2.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863215,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://56d0c4572ed34be10e70cf65732702d447d62d2e794c20bad570b312ae30f5af",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.913: INFO: Pod "webserver-deployment-557759b7c7-vpb5n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vpb5n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab4a0cc2-554e-49f4-bf36-9722c66fc1dd",
      ResourceVersion: (string) (len=5) "34745",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0b8119c40b6d8ea07d6a21b763a64dde8021182697c27c6e887c3c6aeeeb0ba3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.50/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.50/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 35 30  5c 22 7d 22 3a 7b 22 2e  |.42.0.50\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8sprs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8sprs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.204"
        }
      },
      PodIP: (string) (len=10) "10.42.0.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863217,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://5f62779421b51b3b3c6fd00716e43278e9f0dc0c61e7b462723d78333c1d29c2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.922: INFO: Pod "webserver-deployment-557759b7c7-whmbl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-whmbl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4771d647-b177-499f-8dd1-d868d18bfad6",
      ResourceVersion: (string) (len=5) "34928",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pmnf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pmnf5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.949: INFO: Pod "webserver-deployment-557759b7c7-wj7hk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wj7hk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fbdc32f-dd34-489a-b54b-9cf016f1bd70",
      ResourceVersion: (string) (len=5) "34885",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cd822",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cd822",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.965: INFO: Pod "webserver-deployment-557759b7c7-xh67k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xh67k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "509150cc-1859-4d89-af72-681d3d1033c8",
      ResourceVersion: (string) (len=5) "34874",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7hdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7hdp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:46.972: INFO: Pod "webserver-deployment-557759b7c7-xpc97" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xpc97",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bb3e6ca-585b-42d9-ac35-b4bc5da7d151",
      ResourceVersion: (string) (len=5) "34717",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8bf03ccfebbe6bbca97231ae1a05d8619a3c9e6143843bf95e76f858ffb50870",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.48/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.48/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863216,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 34 38  5c 22 7d 22 3a 7b 22 2e  |.42.0.48\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxwm4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxwm4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863212,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.204"
        }
      },
      PodIP: (string) (len=10) "10.42.0.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863212,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863217,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://0ddc4cc79076da79b2848f5e34576e4060bb5bd93dd46cc1f86963bba4f24644",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.009: INFO: Pod "webserver-deployment-557759b7c7-z7s4t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z7s4t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "959cc339-c1f7-4b65-9a37-2466ef59a54d",
      ResourceVersion: (string) (len=5) "34854",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5nw7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5nw7v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.039: INFO: Pod "webserver-deployment-557759b7c7-z82cq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-z82cq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1adb09b-d850-4a18-b9f0-963bfdb9cb32",
      ResourceVersion: (string) (len=5) "34929",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f8e8a9f515e480e5ffb22971b4b57cef71965efb689cd68ef69d35e842b81793",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.1.9/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.1.9/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "579dbfca-e91d-4a2c-b609-b65171de00f2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 37  39 64 62 66 63 61 2d 65  |d\":\"579dbfca-e|
              00000090  39 31 64 2d 34 61 32 63  2d 62 36 30 39 2d 62 36  |91d-4a2c-b609-b6|
              000000a0  35 31 37 31 64 65 30 30  66 32 5c 22 7d 22 3a 7b  |5171de00f2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrmrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrmrk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.070: INFO: Pod "webserver-deployment-9b4f5bf69-42mx6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-42mx6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d20e20e-889e-47ae-baaf-902edb3af2d0",
      ResourceVersion: (string) (len=5) "34853",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66mhk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66mhk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.076: INFO: Pod "webserver-deployment-9b4f5bf69-4d5t2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4d5t2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52067b2f-73db-4efb-87fb-e9edee868193",
      ResourceVersion: (string) (len=5) "34862",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.1.7/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.1.7/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "332299114aba131d3041f7d20da8dd6517e5a6560c9948823dfce54e12b7e282"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g558d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g558d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.091: INFO: Pod "webserver-deployment-9b4f5bf69-4xzdh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4xzdh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10edec06-2a2c-4b82-bcba-cb9e6dc306fd",
      ResourceVersion: (string) (len=5) "34876",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-glgzr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-glgzr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.102: INFO: Pod "webserver-deployment-9b4f5bf69-6nbtj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6nbtj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48b11066-9a8a-4b5b-a381-340da572bb4c",
      ResourceVersion: (string) (len=5) "34926",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.51/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.51/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9312d1c208f41dd942207bd19c789ab4640bb3325d1abf9d7049bde3b56e7b1b"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 35 31 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.0.51\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fv5hv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fv5hv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.204"
        }
      },
      PodIP: (string) (len=10) "10.42.0.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.119: INFO: Pod "webserver-deployment-9b4f5bf69-d57f5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-d57f5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ce0202fe-7880-475b-a8e2-7f3cb3141710",
      ResourceVersion: (string) (len=5) "34872",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8b47975175461869613eb7e6e2680d8b8b9cb4dce1e7bb283bde99828d413600",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.90/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.90/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x4dr9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x4dr9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.139: INFO: Pod "webserver-deployment-9b4f5bf69-fbbnt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fbbnt",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b92a7e3-5533-4f58-9284-19eae335b808",
      ResourceVersion: (string) (len=5) "34896",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tz295",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tz295",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.160: INFO: Pod "webserver-deployment-9b4f5bf69-g5q2t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-g5q2t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e228d558-cff0-459a-be96-c9064afa96bc",
      ResourceVersion: (string) (len=5) "34922",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b2qt8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b2qt8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.265: INFO: Pod "webserver-deployment-9b4f5bf69-mbqbb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mbqbb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26a17d5c-2db7-461d-90c7-eb739bd3699f",
      ResourceVersion: (string) (len=5) "34877",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-db5jl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-db5jl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.280: INFO: Pod "webserver-deployment-9b4f5bf69-nv2nc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nv2nc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9528e532-75cc-478f-8164-87e3d06230a8",
      ResourceVersion: (string) (len=5) "34875",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5wmqw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5wmqw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.204"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.304: INFO: Pod "webserver-deployment-9b4f5bf69-pnb7w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pnb7w",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09173299-c1af-42ac-abaa-6cd481732808",
      ResourceVersion: (string) (len=5) "34849",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.89/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.89/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f2fe170595ed9f1d0fa01fb0d7d5f43932a65b383c6022c8ed00b64589aee37f"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7m5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7m5z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0613 08:13:47.370950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:47.376: INFO: Pod "webserver-deployment-9b4f5bf69-rtq7n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rtq7n",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5380189-aa80-4531-99b5-a536e652bf8e",
      ResourceVersion: (string) (len=5) "34905",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hsvfr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hsvfr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-11-204",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.11.204",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.11.204"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863224,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.388: INFO: Pod "webserver-deployment-9b4f5bf69-srkbj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-srkbj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea912748-81a1-4111-b048-e859613e948b",
      ResourceVersion: (string) (len=5) "34873",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlp56",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlp56",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.416: INFO: Pod "webserver-deployment-9b4f5bf69-vptpw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vptpw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-6520",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "911c441f-d750-4e57-939a-69fc307a4700",
      ResourceVersion: (string) (len=5) "34910",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c1a7b362d79ad01a63d32c2a9b8b655ff6c6e3d8b873e83087dd6197a537f026",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.1.8/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.1.8/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "c3b33677-ead8-4b31-9dbe-7086e53aabc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  62 33 33 36 37 37 2d 65  |d\":\"c3b33677-e|
              00000090  61 64 38 2d 34 62 33 31  2d 39 64 62 65 2d 37 30  |ad8-4b31-9dbe-70|
              000000a0  38 36 65 35 33 61 61 62  63 31 5c 22 7d 22 3a 7b  |86e53aabc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zsm7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zsm7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:13:47.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6520" for this suite. @ 06/13/24 08:13:47.533
â€¢ [15.358 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/13/24 08:13:47.702
  Jun 13 08:13:47.702: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename gc @ 06/13/24 08:13:47.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:48.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:48.072
  STEP: create the deployment @ 06/13/24 08:13:48.081
  W0613 08:13:48.140213      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/13/24 08:13:48.14
  E0613 08:13:48.371123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/13/24 08:13:48.687
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/13/24 08:13:48.723
  E0613 08:13:49.373094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 08:13:49.408
  W0613 08:13:49.432696      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 08:13:49.436: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 08:13:49.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4943" for this suite. @ 06/13/24 08:13:49.47
â€¢ [1.782 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/13/24 08:13:49.484
  Jun 13 08:13:49.484: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 08:13:49.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:49.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:49.63
  Jun 13 08:13:49.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2964 create -f -'
  Jun 13 08:13:50.220: INFO: stderr: ""
  Jun 13 08:13:50.220: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun 13 08:13:50.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2964 create -f -'
  E0613 08:13:50.373873      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:51.047: INFO: stderr: ""
  Jun 13 08:13:51.047: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/13/24 08:13:51.047
  E0613 08:13:51.374028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:52.133: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:13:52.133: INFO: Found 0 / 1
  E0613 08:13:52.374413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:53.137: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:13:53.137: INFO: Found 0 / 1
  E0613 08:13:53.377516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:54.351: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:13:54.351: INFO: Found 0 / 1
  E0613 08:13:54.378143      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:55.090: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:13:55.090: INFO: Found 0 / 1
  E0613 08:13:55.379144      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:56.068: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:13:56.068: INFO: Found 0 / 1
  E0613 08:13:56.379851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:57.110: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:13:57.110: INFO: Found 1 / 1
  Jun 13 08:13:57.110: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 13 08:13:57.151: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:13:57.151: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 08:13:57.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2964 describe pod agnhost-primary-9jsvx'
  E0613 08:13:57.381866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:57.723: INFO: stderr: ""
  Jun 13 08:13:57.723: INFO: stdout: "Name:             agnhost-primary-9jsvx\nNamespace:        kubectl-2964\nPriority:         0\nService Account:  default\nNode:             ip-172-31-2-92/172.31.2.92\nStart Time:       Thu, 13 Jun 2024 08:13:50 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 5be9620e4e4989fa8b8ebb2c4e4dccdd90dc5680029b3ef310c2803843c5a0bb\n                  cni.projectcalico.org/podIP: 10.42.2.99/32\n                  cni.projectcalico.org/podIPs: 10.42.2.99/32\nStatus:           Running\nIP:               10.42.2.99\nIPs:\n  IP:           10.42.2.99\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://b9098e578ea88043f23a0c62a00196716543c555a79985af9219976636f4a79f\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 13 Jun 2024 08:13:55 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-gt887 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-gt887:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  7s    default-scheduler  Successfully assigned kubectl-2964/agnhost-primary-9jsvx to ip-172-31-2-92\n  Normal  Pulled     3s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    3s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Jun 13 08:13:57.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2964 describe rc agnhost-primary'
  Jun 13 08:13:58.065: INFO: stderr: ""
  Jun 13 08:13:58.065: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2964\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  8s    replication-controller  Created pod: agnhost-primary-9jsvx\n"
  Jun 13 08:13:58.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2964 describe service agnhost-primary'
  E0613 08:13:58.382042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:58.446: INFO: stderr: ""
  Jun 13 08:13:58.446: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-2964\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.199.168\nIPs:               10.43.199.168\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.2.99:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun 13 08:13:58.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2964 describe node ip-172-31-11-204'
  Jun 13 08:13:59.124: INFO: stderr: ""
  Jun 13 08:13:59.124: INFO: stdout: "Name:               ip-172-31-11-204\nRoles:              controlplane,etcd,worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-11-204\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/controlplane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/worker=true\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"5a:a0:1f:eb:88:70\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.11.204\n                    management.cattle.io/pod-limits: {\"memory\":\"170Mi\"}\n                    management.cattle.io/pod-requests: {\"cpu\":\"450m\",\"memory\":\"270Mi\",\"pods\":\"11\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke.cattle.io/external-ip: 18.220.202.195\n                    rke.cattle.io/internal-ip: 172.31.11.204\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 13 Jun 2024 06:18:03 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-11-204\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 13 Jun 2024 08:13:58 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 13 Jun 2024 06:18:52 +0000   Thu, 13 Jun 2024 06:18:52 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Thu, 13 Jun 2024 08:11:33 +0000   Thu, 13 Jun 2024 06:18:03 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 13 Jun 2024 08:11:33 +0000   Thu, 13 Jun 2024 06:18:03 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 13 Jun 2024 08:11:33 +0000   Thu, 13 Jun 2024 06:18:03 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 13 Jun 2024 08:11:33 +0000   Thu, 13 Jun 2024 06:18:33 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.11.204\n  Hostname:    ip-172-31-11-204\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      50758604Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3969480Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      50758604Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3969480Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 \n  System UUID:                ec2b459f-c27e-5e05-f911-86b6579653f8\n  Boot ID:                    058ceb69-e979-43ff-a630-2612b88a24a5\n  Kernel Version:             5.4.0-1035-aws\n  OS Image:                   Ubuntu 20.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://25.0.5\n  Kubelet Version:            v1.29.5\n  Kube-Proxy Version:         v1.29.5\nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nNon-terminated Pods:          (11 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  cattle-fleet-system         fleet-agent-0                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         113m\n  cattle-system               cattle-cluster-agent-744549dbb4-28hx8                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         114m\n  cattle-system               cattle-cluster-agent-744549dbb4-xtk7x                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         112m\n  cattle-system               cattle-node-agent-kjs2b                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         114m\n  cattle-system               kube-api-auth-wwvxs                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         114m\n  cattle-system               rancher-webhook-66ff948964-5r6sf                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         113m\n  kube-system                 calico-kube-controllers-8485458bd8-xmp2w                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         115m\n  kube-system                 canal-nmgr7                                                250m (12%)    0 (0%)      0 (0%)           0 (0%)         115m\n  kube-system                 coredns-7b7785bd9-knk5k                                    100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     115m\n  kube-system                 metrics-server-657c74b5d8-44q8w                            100m (5%)     0 (0%)      200Mi (5%)       0 (0%)         115m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-hcrl9    0 (0%)        0 (0%)      0 (0%)           0 (0%)         101m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    450m (22%)  0 (0%)\n  memory                 270Mi (6%)  170Mi (4%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  Jun 13 08:13:59.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-2964 describe namespace kubectl-2964'
  E0613 08:13:59.404842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:13:59.540: INFO: stderr: ""
  Jun 13 08:13:59.540: INFO: stdout: "Name:         kubectl-2964\nLabels:       e2e-framework=kubectl\n              e2e-run=0967254f-ba7a-4cba-9d6c-2964123d8ce5\n              kubernetes.io/metadata.name=kubectl-2964\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  cattle.io/status:\n                {\"Conditions\":[{\"Type\":\"ResourceQuotaInit\",\"Status\":\"True\",\"Message\":\"\",\"LastUpdateTime\":\"2024-06-13T08:13:50Z\"},{\"Type\":\"InitialRolesPopu...\n              lifecycle.cattle.io/create.namespace-auth: true\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun 13 08:13:59.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2964" for this suite. @ 06/13/24 08:13:59.627
â€¢ [10.232 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/13/24 08:13:59.718
  Jun 13 08:13:59.718: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename subpath @ 06/13/24 08:13:59.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:13:59.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:13:59.962
  STEP: Setting up data @ 06/13/24 08:14:00.212
  STEP: Creating pod pod-subpath-test-downwardapi-vl87 @ 06/13/24 08:14:00.296
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 08:14:00.296
  E0613 08:14:00.404883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:01.408163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:02.413134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:03.413508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:04.414595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:05.416326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:06.420048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:07.420600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:08.421464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:09.421537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:10.423116      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:11.423331      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:12.425799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:13.425777      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:14.425991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:15.426572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:16.426743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:17.427084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:18.427147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:19.429583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:20.429671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:21.436849      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:22.438108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:23.435122      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:24.437649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:25.443786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:26.444747      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:14:26.508
  Jun 13 08:14:26.514: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-subpath-test-downwardapi-vl87 container test-container-subpath-downwardapi-vl87: <nil>
  STEP: delete the pod @ 06/13/24 08:14:26.527
  STEP: Deleting pod pod-subpath-test-downwardapi-vl87 @ 06/13/24 08:14:26.551
  Jun 13 08:14:26.551: INFO: Deleting pod "pod-subpath-test-downwardapi-vl87" in namespace "subpath-3623"
  Jun 13 08:14:26.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3623" for this suite. @ 06/13/24 08:14:26.558
â€¢ [26.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/13/24 08:14:26.566
  Jun 13 08:14:26.566: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 08:14:26.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:14:26.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:14:26.696
  STEP: creating all guestbook components @ 06/13/24 08:14:26.713
  Jun 13 08:14:26.713: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun 13 08:14:26.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 create -f -'
  Jun 13 08:14:27.037: INFO: stderr: ""
  Jun 13 08:14:27.037: INFO: stdout: "service/agnhost-replica created\n"
  Jun 13 08:14:27.037: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun 13 08:14:27.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 create -f -'
  E0613 08:14:27.447879      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:27.582: INFO: stderr: ""
  Jun 13 08:14:27.582: INFO: stdout: "service/agnhost-primary created\n"
  Jun 13 08:14:27.582: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun 13 08:14:27.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 create -f -'
  Jun 13 08:14:28.159: INFO: stderr: ""
  Jun 13 08:14:28.159: INFO: stdout: "service/frontend created\n"
  Jun 13 08:14:28.160: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun 13 08:14:28.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 create -f -'
  E0613 08:14:28.449504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:28.589: INFO: stderr: ""
  Jun 13 08:14:28.589: INFO: stdout: "deployment.apps/frontend created\n"
  Jun 13 08:14:28.589: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 13 08:14:28.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 create -f -'
  Jun 13 08:14:29.002: INFO: stderr: ""
  Jun 13 08:14:29.002: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun 13 08:14:29.002: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun 13 08:14:29.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 create -f -'
  E0613 08:14:29.451443      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:29.451: INFO: stderr: ""
  Jun 13 08:14:29.451: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/13/24 08:14:29.451
  Jun 13 08:14:29.451: INFO: Waiting for all frontend pods to be Running.
  E0613 08:14:30.452652      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:31.452592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:32.453728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:33.453802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:34.454436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:34.506: INFO: Waiting for frontend to serve content.
  Jun 13 08:14:34.520: INFO: Trying to add a new entry to the guestbook.
  Jun 13 08:14:34.541: INFO: Verifying that added entry can be retrieved.
  Jun 13 08:14:34.584: INFO: Failed to get response from guestbook. err: <nil>, response: {"data":""}
  E0613 08:14:35.455093      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:36.455421      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:37.455681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:38.455931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:39.456047      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: using delete to clean up resources @ 06/13/24 08:14:39.626
  Jun 13 08:14:39.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 delete --grace-period=0 --force -f -'
  Jun 13 08:14:39.960: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 08:14:39.960: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 08:14:39.96
  Jun 13 08:14:39.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 delete --grace-period=0 --force -f -'
  Jun 13 08:14:40.191: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 08:14:40.191: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 08:14:40.191
  Jun 13 08:14:40.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 delete --grace-period=0 --force -f -'
  Jun 13 08:14:40.338: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 08:14:40.338: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 08:14:40.338
  Jun 13 08:14:40.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 delete --grace-period=0 --force -f -'
  E0613 08:14:40.457512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:40.495: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 08:14:40.495: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 08:14:40.495
  Jun 13 08:14:40.495: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 delete --grace-period=0 --force -f -'
  Jun 13 08:14:40.682: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 08:14:40.682: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/13/24 08:14:40.683
  Jun 13 08:14:40.683: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-9479 delete --grace-period=0 --force -f -'
  Jun 13 08:14:41.264: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun 13 08:14:41.264: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun 13 08:14:41.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9479" for this suite. @ 06/13/24 08:14:41.339
  E0613 08:14:41.458506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [14.930 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/13/24 08:14:41.496
  Jun 13 08:14:41.496: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 08:14:41.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:14:41.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:14:41.872
  STEP: Creating the pod @ 06/13/24 08:14:41.903
  E0613 08:14:42.459234      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:43.459409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:44.460457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:45.460550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:46.460611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:46.862: INFO: Successfully updated pod "annotationupdatef5838419-d4df-4607-affd-ade6b2861d12"
  E0613 08:14:47.465524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:48.466099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:48.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9912" for this suite. @ 06/13/24 08:14:48.924
â€¢ [7.449 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/13/24 08:14:48.946
  Jun 13 08:14:48.946: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 08:14:48.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:14:49.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:14:49.109
  STEP: Creating a test externalName service @ 06/13/24 08:14:49.139
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 06/13/24 08:14:49.152
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 06/13/24 08:14:49.152
  STEP: creating a pod to probe DNS @ 06/13/24 08:14:49.152
  STEP: submitting the pod to kubernetes @ 06/13/24 08:14:49.152
  E0613 08:14:49.467033      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:50.467171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:51.467946      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:52.468174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 08:14:53.194
  STEP: looking for the results for each expected name from probers @ 06/13/24 08:14:53.197
  Jun 13 08:14:53.201: INFO: File wheezy_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-8424ac86-064a-488a-842f-969573bb6af1 contains '' instead of 'foo.example.com.'
  Jun 13 08:14:53.205: INFO: File jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-8424ac86-064a-488a-842f-969573bb6af1 contains '' instead of 'foo.example.com.'
  Jun 13 08:14:53.205: INFO: Lookups using dns-4684/dns-test-8424ac86-064a-488a-842f-969573bb6af1 failed for: [wheezy_udp@dns-test-service-3.dns-4684.svc.cluster.local jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local]

  Jun 13 08:14:53.233: INFO: Pod client logs for webserver: 
  Jun 13 08:14:53.245: INFO: Pod client logs for querier: 
  Jun 13 08:14:53.260: INFO: Pod client logs for jessie-querier: 
  E0613 08:14:53.468265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:54.469181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:55.469229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:56.469739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:57.469643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:14:58.229: INFO: DNS probes using dns-test-8424ac86-064a-488a-842f-969573bb6af1 succeeded

  STEP: changing the externalName to bar.example.com @ 06/13/24 08:14:58.23
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 06/13/24 08:14:58.333
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 06/13/24 08:14:58.337
  STEP: creating a second pod to probe DNS @ 06/13/24 08:14:58.337
  STEP: submitting the pod to kubernetes @ 06/13/24 08:14:58.337
  E0613 08:14:58.481663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:14:59.480459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:00.481547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:01.481742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:02.482416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:03.482549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:04.482538      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:05.482694      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:06.483540      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:07.484160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:08.491291      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:09.488653      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:10.489499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:11.489935      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:12.490512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:13.490792      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:14.491361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:15.493590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:16.507532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:17.509498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:18.509800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:19.510179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:20.510002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:21.510608      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:22.512192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:23.512364      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:24.513255      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 08:15:24.522
  STEP: looking for the results for each expected name from probers @ 06/13/24 08:15:24.537
  Jun 13 08:15:24.560: INFO: DNS probes using dns-test-bba6bf37-264e-47ae-8a60-3d4b29035b78 succeeded

  STEP: changing the service to type=ClusterIP @ 06/13/24 08:15:24.561
  W0613 08:15:24.618644      18 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 06/13/24 08:15:24.622
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4684.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local; sleep 1; done
   @ 06/13/24 08:15:24.623
  STEP: creating a third pod to probe DNS @ 06/13/24 08:15:24.623
  STEP: submitting the pod to kubernetes @ 06/13/24 08:15:24.635
  E0613 08:15:25.513583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:26.514332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:27.516891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:28.517273      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 08:15:28.698
  STEP: looking for the results for each expected name from probers @ 06/13/24 08:15:28.701
  E0613 08:15:29.527707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:30.527444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:31.527511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:31.754: INFO: File wheezy_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-9c107a63-d8dc-4896-a00b-36bfb83f2efd contains '' instead of '10.43.156.61'
  Jun 13 08:15:31.777: INFO: File jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local from pod  dns-4684/dns-test-9c107a63-d8dc-4896-a00b-36bfb83f2efd contains '' instead of '10.43.156.61'
  Jun 13 08:15:31.777: INFO: Lookups using dns-4684/dns-test-9c107a63-d8dc-4896-a00b-36bfb83f2efd failed for: [wheezy_udp@dns-test-service-3.dns-4684.svc.cluster.local jessie_udp@dns-test-service-3.dns-4684.svc.cluster.local]

  Jun 13 08:15:31.805: INFO: Pod client logs for webserver: 
  Jun 13 08:15:31.825: INFO: Pod client logs for querier: 
  Jun 13 08:15:31.834: INFO: Pod client logs for jessie-querier: 
  E0613 08:15:32.528080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:33.529515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:33.717: INFO: DNS probes using dns-test-9c107a63-d8dc-4896-a00b-36bfb83f2efd succeeded

  STEP: deleting the pod @ 06/13/24 08:15:33.718
  STEP: deleting the pod @ 06/13/24 08:15:33.735
  STEP: deleting the pod @ 06/13/24 08:15:33.892
  STEP: deleting the test externalName service @ 06/13/24 08:15:34.015
  Jun 13 08:15:34.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4684" for this suite. @ 06/13/24 08:15:34.145
â€¢ [45.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/13/24 08:15:34.176
  Jun 13 08:15:34.176: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 08:15:34.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:15:34.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:15:34.283
  Jun 13 08:15:34.294: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:15:34.530399      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:35.530806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:36.539992      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/13/24 08:15:37.277
  Jun 13 08:15:37.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 create -f -'
  E0613 08:15:37.535464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:37.741: INFO: stderr: ""
  Jun 13 08:15:37.741: INFO: stdout: "e2e-test-crd-publish-openapi-621-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 13 08:15:37.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 delete e2e-test-crd-publish-openapi-621-crds test-foo'
  Jun 13 08:15:38.019: INFO: stderr: ""
  Jun 13 08:15:38.019: INFO: stdout: "e2e-test-crd-publish-openapi-621-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun 13 08:15:38.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 apply -f -'
  Jun 13 08:15:38.196: INFO: stderr: ""
  Jun 13 08:15:38.196: INFO: stdout: "e2e-test-crd-publish-openapi-621-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun 13 08:15:38.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 delete e2e-test-crd-publish-openapi-621-crds test-foo'
  Jun 13 08:15:38.399: INFO: stderr: ""
  Jun 13 08:15:38.418: INFO: stdout: "e2e-test-crd-publish-openapi-621-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/13/24 08:15:38.418
  Jun 13 08:15:38.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 create -f -'
  E0613 08:15:38.537518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:38.779: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/13/24 08:15:38.779
  Jun 13 08:15:38.779: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 create -f -'
  Jun 13 08:15:39.061: INFO: rc: 1
  Jun 13 08:15:39.061: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 apply -f -'
  Jun 13 08:15:39.417: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/13/24 08:15:39.417
  Jun 13 08:15:39.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 create -f -'
  E0613 08:15:39.538271      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:39.652: INFO: rc: 1
  Jun 13 08:15:39.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 --namespace=crd-publish-openapi-4695 apply -f -'
  Jun 13 08:15:40.338: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/13/24 08:15:40.34
  Jun 13 08:15:40.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 explain e2e-test-crd-publish-openapi-621-crds'
  Jun 13 08:15:40.511: INFO: stderr: ""
  Jun 13 08:15:40.511: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-621-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/13/24 08:15:40.511
  Jun 13 08:15:40.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 explain e2e-test-crd-publish-openapi-621-crds.metadata'
  E0613 08:15:40.539332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:40.737: INFO: stderr: ""
  Jun 13 08:15:40.737: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-621-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun 13 08:15:40.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 explain e2e-test-crd-publish-openapi-621-crds.spec'
  Jun 13 08:15:41.032: INFO: stderr: ""
  Jun 13 08:15:41.032: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-621-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun 13 08:15:41.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 explain e2e-test-crd-publish-openapi-621-crds.spec.bars'
  Jun 13 08:15:41.408: INFO: stderr: ""
  Jun 13 08:15:41.408: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-621-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/13/24 08:15:41.408
  Jun 13 08:15:41.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-4695 explain e2e-test-crd-publish-openapi-621-crds.spec.bars2'
  E0613 08:15:41.546139      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:41.680: INFO: rc: 1
  E0613 08:15:42.547237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:43.548821      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:44.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4695" for this suite. @ 06/13/24 08:15:44.162
â€¢ [10.003 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/13/24 08:15:44.18
  Jun 13 08:15:44.180: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 08:15:44.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:15:44.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:15:44.533
  E0613 08:15:44.549620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/13/24 08:15:44.807
  Jun 13 08:15:44.807: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:15:45.549869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:46.550317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:47.550576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:15:47.815: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:15:48.551544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:49.553531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:50.553669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:51.553811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:52.554606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:53.555271      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:54.557037      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:55.557924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:56.558749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:57.559120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:58.559816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:15:59.561073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:00.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 08:16:00.561436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-1792" for this suite. @ 06/13/24 08:16:00.669
â€¢ [16.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/13/24 08:16:00.804
  Jun 13 08:16:00.804: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 08:16:00.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:16:01.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:16:01.307
  E0613 08:16:01.561762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7663 @ 06/13/24 08:16:01.64
  STEP: changing the ExternalName service to type=NodePort @ 06/13/24 08:16:01.951
  STEP: creating replication controller externalname-service in namespace services-7663 @ 06/13/24 08:16:02.225
  I0613 08:16:02.360018      18 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7663, replica count: 2
  E0613 08:16:02.562672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:03.563311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:04.566984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 08:16:05.412938      18 runners.go:197] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0613 08:16:05.567567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:06.569505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:07.569920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 08:16:08.413437      18 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 08:16:08.413: INFO: Creating new exec pod
  E0613 08:16:08.570838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:09.570885      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:10.571168      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:11.571423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:12.572311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:13.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0613 08:16:13.574665      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:14.575558      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:15.575762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:16.326: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 13 08:16:16.326: INFO: stdout: ""
  Jun 13 08:16:16.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0613 08:16:16.577511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:16.645: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 13 08:16:16.645: INFO: stdout: "externalname-service-n9f5k"
  Jun 13 08:16:16.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.64.208 80'
  Jun 13 08:16:16.937: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.64.208 80\nConnection to 10.43.64.208 80 port [tcp/http] succeeded!\n"
  Jun 13 08:16:16.937: INFO: stdout: ""
  E0613 08:16:17.578341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:17.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.64.208 80'
  Jun 13 08:16:18.048: INFO: stderr: "+ nc -v -t -w 2 10.43.64.208 80\n+ echo hostName\nConnection to 10.43.64.208 80 port [tcp/http] succeeded!\n"
  Jun 13 08:16:18.048: INFO: stdout: "externalname-service-cc5nx"
  Jun 13 08:16:18.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.2.92 31096'
  E0613 08:16:18.581993      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:18.586: INFO: stderr: "+ nc -v -t -w 2 172.31.2.92 31096\n+ echo hostName\nConnection to 172.31.2.92 31096 port [tcp/*] succeeded!\n"
  Jun 13 08:16:18.587: INFO: stdout: "externalname-service-n9f5k"
  Jun 13 08:16:18.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.204 31096'
  Jun 13 08:16:18.856: INFO: stderr: "+ nc -v -t -w 2 172.31.11.204 31096\n+ echo hostName\nConnection to 172.31.11.204 31096 port [tcp/*] succeeded!\n"
  Jun 13 08:16:18.856: INFO: stdout: ""
  E0613 08:16:19.579989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:19.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.204 31096'
  Jun 13 08:16:19.984: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.11.204 31096\nConnection to 172.31.11.204 31096 port [tcp/*] succeeded!\n"
  Jun 13 08:16:19.984: INFO: stdout: ""
  E0613 08:16:20.580099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:20.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.204 31096'
  Jun 13 08:16:21.005: INFO: stderr: "+ nc -v -t -w 2 172.31.11.204 31096\n+ echo hostName\nConnection to 172.31.11.204 31096 port [tcp/*] succeeded!\n"
  Jun 13 08:16:21.005: INFO: stdout: ""
  E0613 08:16:21.581110      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:21.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.204 31096'
  Jun 13 08:16:22.162: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.11.204 31096\nConnection to 172.31.11.204 31096 port [tcp/*] succeeded!\n"
  Jun 13 08:16:22.162: INFO: stdout: ""
  E0613 08:16:22.583121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:22.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.204 31096'
  Jun 13 08:16:23.165: INFO: stderr: "+ nc -v -t -w 2 172.31.11.204 31096\n+ echo hostName\nConnection to 172.31.11.204 31096 port [tcp/*] succeeded!\n"
  Jun 13 08:16:23.165: INFO: stdout: ""
  E0613 08:16:23.583795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:23.588: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-7663 exec execpodsf8rq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.204 31096'
  Jun 13 08:16:23.960: INFO: stderr: "+ nc -v -t -w 2 172.31.11.204 31096\n+ echo hostName\nConnection to 172.31.11.204 31096 port [tcp/*] succeeded!\n"
  Jun 13 08:16:23.960: INFO: stdout: "externalname-service-n9f5k"
  Jun 13 08:16:23.960: INFO: Cleaning up the ExternalName to NodePort test service
  Jun 13 08:16:24.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7663" for this suite. @ 06/13/24 08:16:24.069
â€¢ [23.279 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/13/24 08:16:24.083
  Jun 13 08:16:24.083: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 08:16:24.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:16:24.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:16:24.194
  STEP: Creating configMap configmap-8086/configmap-test-aa9213c1-82ee-4582-aebf-dfcb1bf63deb @ 06/13/24 08:16:24.198
  STEP: Creating a pod to test consume configMaps @ 06/13/24 08:16:24.203
  E0613 08:16:24.585043      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:25.584852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:26.585400      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:27.585732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:16:28.283
  Jun 13 08:16:28.299: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-a99f6ea0-d7e3-48df-9361-2399195aabcb container env-test: <nil>
  STEP: delete the pod @ 06/13/24 08:16:28.31
  Jun 13 08:16:28.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8086" for this suite. @ 06/13/24 08:16:28.359
â€¢ [4.297 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/13/24 08:16:28.381
  Jun 13 08:16:28.381: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 08:16:28.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:16:28.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:16:28.472
  STEP: Creating a test headless service @ 06/13/24 08:16:28.499
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/13/24 08:16:28.556
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/13/24 08:16:28.556
  STEP: creating a pod to probe DNS @ 06/13/24 08:16:28.556
  STEP: submitting the pod to kubernetes @ 06/13/24 08:16:28.556
  E0613 08:16:28.586250      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:29.587314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:30.589557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:31.590651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:32.592270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 08:16:32.707
  STEP: looking for the results for each expected name from probers @ 06/13/24 08:16:32.71
  E0613 08:16:33.592266      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:34.592507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:35.592678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:36.593002      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:37.603864      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:38.593597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:39.594325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:39.949: INFO: Unable to read jessie_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local from pod dns-603/dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9: the server could not find the requested resource (get pods dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9)
  Jun 13 08:16:39.952: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-603/dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9: the server could not find the requested resource (get pods dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9)
  Jun 13 08:16:39.953: INFO: Lookups using dns-603/dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9 failed for: [jessie_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local jessie_hosts@dns-querier-2]

  Jun 13 08:16:39.970: INFO: Pod client logs for webserver: 
  Jun 13 08:16:39.980: INFO: Pod client logs for querier: 
  Jun 13 08:16:40.037: INFO: Pod client logs for jessie-querier: 
  Jun 13 08:16:40.086: INFO: Unable to read jessie_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local from pod dns-603/dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9: the server could not find the requested resource (get pods dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9)
  Jun 13 08:16:40.095: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-603/dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9: the server could not find the requested resource (get pods dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9)
  Jun 13 08:16:40.104: INFO: Lookups using dns-603/dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9 failed for: [jessie_hosts@dns-querier-2.dns-test-service-2.dns-603.svc.cluster.local jessie_hosts@dns-querier-2]

  Jun 13 08:16:40.122: INFO: Pod client logs for webserver: 
  Jun 13 08:16:40.131: INFO: Pod client logs for querier: 
  Jun 13 08:16:40.145: INFO: Pod client logs for jessie-querier: 
  E0613 08:16:40.595364      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:41.600859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:42.602301      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:16:42.735: INFO: DNS probes using dns-603/dns-test-b573f7af-84d2-4d14-bdc4-e09bc78281c9 succeeded

  STEP: deleting the pod @ 06/13/24 08:16:42.736
  STEP: deleting the test headless service @ 06/13/24 08:16:42.784
  Jun 13 08:16:42.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-603" for this suite. @ 06/13/24 08:16:42.836
â€¢ [14.467 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/13/24 08:16:42.848
  Jun 13 08:16:42.849: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 08:16:42.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:16:42.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:16:42.994
  Jun 13 08:16:43.061: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 08:16:43.602353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:44.604204      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:45.604896      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:46.606365      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:47.606439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:48.606785      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:49.609557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:50.610667      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:51.611321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:52.611306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:53.612090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:54.612374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:55.612904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:56.623180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:57.617708      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:58.617912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:16:59.618637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:00.618793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:01.620124      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:02.621082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:03.621328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:04.621548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:05.623752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:06.623028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:07.625703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:08.626554      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:09.628628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:10.630468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:11.630661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:12.633508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:13.635659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:14.636504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:15.636642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:16.637048      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:17.637172      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:18.637571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:19.637762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:20.644046      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:21.645071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:22.645507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:23.646032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:24.647214      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:25.648052      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:26.648297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:27.648642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:28.650613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:29.651491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:30.653315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:31.653606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:32.653692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:33.661944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:34.656284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:35.657042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:36.658042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:37.665601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:38.666947      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:39.667404      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:40.667649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:41.669692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:42.669815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:17:43.082: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/13/24 08:17:43.09
  Jun 13 08:17:43.091: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/13/24 08:17:43.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:17:43.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:17:43.211
  STEP: Finding an available node @ 06/13/24 08:17:43.233
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/13/24 08:17:43.233
  E0613 08:17:43.670120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:44.670547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:45.670933      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:46.672079      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/13/24 08:17:47.311
  Jun 13 08:17:47.354: INFO: found a healthy node: ip-172-31-12-94
  E0613 08:17:47.672816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:48.672983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:49.673141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:50.673323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:51.673623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:52.681673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:53.682208      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:54.682658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:55.683130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:56.684757      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:17:57.491: INFO: pods created so far: [1 1 1]
  Jun 13 08:17:57.491: INFO: length of pods created so far: 3
  E0613 08:17:57.683559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:17:58.686658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:17:59.505: INFO: pods created so far: [2 2 1]
  E0613 08:17:59.687685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:00.687772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:01.690408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:02.690565      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:03.692191      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:04.692341      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:05.693490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:06.694276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:06.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4430" for this suite. @ 06/13/24 08:18:06.71
  Jun 13 08:18:06.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6412" for this suite. @ 06/13/24 08:18:06.751
â€¢ [83.929 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/13/24 08:18:06.785
  Jun 13 08:18:06.785: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 08:18:06.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:06.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:06.872
  STEP: Waiting for pod completion @ 06/13/24 08:18:06.901
  E0613 08:18:07.694748      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:08.695118      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:09.695188      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:10.695351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:10.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-687" for this suite. @ 06/13/24 08:18:10.963
â€¢ [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/13/24 08:18:10.989
  Jun 13 08:18:10.989: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename job @ 06/13/24 08:18:10.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:11.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:11.082
  STEP: Creating a suspended job @ 06/13/24 08:18:11.132
  STEP: Patching the Job @ 06/13/24 08:18:11.145
  STEP: Watching for Job to be patched @ 06/13/24 08:18:11.288
  Jun 13 08:18:11.318: INFO: Event ADDED observed for Job e2e-bddvt in namespace job-562 with labels: map[e2e-job-label:e2e-bddvt] and annotations: map[]
  Jun 13 08:18:11.318: INFO: Event MODIFIED found for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[]
  STEP: Updating the job @ 06/13/24 08:18:11.318
  STEP: Watching for Job to be updated @ 06/13/24 08:18:11.373
  Jun 13 08:18:11.380: INFO: Event MODIFIED found for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[updated:true]
  Jun 13 08:18:11.380: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/13/24 08:18:11.381
  Jun 13 08:18:11.394: INFO: Job: e2e-bddvt as labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt]
  STEP: Waiting for job to complete @ 06/13/24 08:18:11.394
  E0613 08:18:11.695477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:12.697826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:13.698479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:14.699470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:15.699622      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:16.701506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:17.701989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:18.702220      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:19.702944      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:20.703134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 06/13/24 08:18:21.399
  STEP: Watching for Job to be deleted @ 06/13/24 08:18:21.421
  Jun 13 08:18:21.423: INFO: Event MODIFIED observed for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[updated:true]
  Jun 13 08:18:21.423: INFO: Event MODIFIED observed for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[updated:true]
  Jun 13 08:18:21.423: INFO: Event MODIFIED observed for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[updated:true]
  Jun 13 08:18:21.423: INFO: Event MODIFIED observed for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[updated:true]
  Jun 13 08:18:21.423: INFO: Event MODIFIED observed for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[updated:true]
  Jun 13 08:18:21.423: INFO: Event DELETED found for Job e2e-bddvt in namespace job-562 with labels: map[e2e-bddvt:patched e2e-job-label:e2e-bddvt] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/13/24 08:18:21.424
  Jun 13 08:18:21.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-562" for this suite. @ 06/13/24 08:18:21.473
â€¢ [10.543 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/13/24 08:18:21.534
  Jun 13 08:18:21.534: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 08:18:21.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:21.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:21.638
  STEP: Creating configMap with name configmap-test-volume-map-dd366fca-ac36-4257-92d9-00afe11b8771 @ 06/13/24 08:18:21.648
  STEP: Creating a pod to test consume configMaps @ 06/13/24 08:18:21.672
  E0613 08:18:21.704045      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:22.705085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:23.705671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:24.705824      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:25.705915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:18:25.736
  Jun 13 08:18:25.740: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-92e16df3-80aa-4f30-a7a3-ddd99bfb0db6 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 08:18:25.795
  Jun 13 08:18:25.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-48" for this suite. @ 06/13/24 08:18:25.862
â€¢ [4.351 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/13/24 08:18:25.887
  Jun 13 08:18:25.887: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:18:25.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:26.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:26.029
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/13/24 08:18:26.034
  E0613 08:18:26.706605      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:27.706822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:28.706989      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:29.709507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:18:30.158
  Jun 13 08:18:30.177: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-2ac965a4-cdca-4da1-ad7d-c2f94a609286 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:18:30.201
  Jun 13 08:18:30.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3423" for this suite. @ 06/13/24 08:18:30.242
â€¢ [4.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/13/24 08:18:30.257
  Jun 13 08:18:30.257: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 08:18:30.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:30.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:30.409
  STEP: Creating a test headless service @ 06/13/24 08:18:30.429
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3284.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3284.svc.cluster.local;sleep 1; done
   @ 06/13/24 08:18:30.456
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3284.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3284.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3284.svc.cluster.local;sleep 1; done
   @ 06/13/24 08:18:30.456
  STEP: creating a pod to probe DNS @ 06/13/24 08:18:30.457
  STEP: submitting the pod to kubernetes @ 06/13/24 08:18:30.457
  E0613 08:18:30.710367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:31.711025      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:32.713793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:33.714031      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 08:18:34.592
  STEP: looking for the results for each expected name from probers @ 06/13/24 08:18:34.605
  E0613 08:18:34.718468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:35.718551      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:36.718923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:37.658: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local from pod dns-3284/dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548: the server could not find the requested resource (get pods dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548)
  Jun 13 08:18:37.689: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local from pod dns-3284/dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548: the server could not find the requested resource (get pods dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548)
  Jun 13 08:18:37.697: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3284.svc.cluster.local from pod dns-3284/dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548: the server could not find the requested resource (get pods dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548)
  Jun 13 08:18:37.702: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-3284.svc.cluster.local from pod dns-3284/dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548: the server could not find the requested resource (get pods dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548)
  Jun 13 08:18:37.702: INFO: Lookups using dns-3284/dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548 failed for: [jessie_udp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3284.svc.cluster.local jessie_udp@dns-test-service-2.dns-3284.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3284.svc.cluster.local]

  E0613 08:18:37.719272      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:37.723: INFO: Pod client logs for webserver: 
  Jun 13 08:18:37.736: INFO: Pod client logs for querier: 
  Jun 13 08:18:37.760: INFO: Pod client logs for jessie-querier: 
  E0613 08:18:38.719639      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:39.680: INFO: DNS probes using dns-3284/dns-test-df89a0bc-125c-4dc8-bc52-8f94837b5548 succeeded

  STEP: deleting the pod @ 06/13/24 08:18:39.68
  E0613 08:18:39.719561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test headless service @ 06/13/24 08:18:39.764
  Jun 13 08:18:39.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3284" for this suite. @ 06/13/24 08:18:39.876
â€¢ [9.646 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/13/24 08:18:39.905
  Jun 13 08:18:39.905: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 08:18:39.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:40.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:40.035
  STEP: create deployment with httpd image @ 06/13/24 08:18:40.049
  Jun 13 08:18:40.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-975 create -f -'
  Jun 13 08:18:40.271: INFO: stderr: ""
  Jun 13 08:18:40.271: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/13/24 08:18:40.271
  Jun 13 08:18:40.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-975 diff -f -'
  E0613 08:18:40.721811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:41.721897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:42.723791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:43.725536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:44.729674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:45.730682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:45.789: INFO: rc: 1
  Jun 13 08:18:45.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-975 delete -f -'
  Jun 13 08:18:46.017: INFO: stderr: ""
  Jun 13 08:18:46.017: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun 13 08:18:46.017: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-975" for this suite. @ 06/13/24 08:18:46.057
â€¢ [6.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/13/24 08:18:46.137
  Jun 13 08:18:46.137: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:18:46.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:46.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:46.276
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/13/24 08:18:46.295
  E0613 08:18:46.731231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:47.734056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:48.732468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:49.733585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:18:50.386
  Jun 13 08:18:50.398: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-ad670bee-38e1-4139-8ed9-88ef25e96727 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:18:50.417
  Jun 13 08:18:50.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3996" for this suite. @ 06/13/24 08:18:50.492
â€¢ [4.376 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/13/24 08:18:50.513
  Jun 13 08:18:50.513: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/13/24 08:18:50.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:50.716
  E0613 08:18:50.734584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:50.848
  Jun 13 08:18:50.885: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:18:51.734490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:52.735131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/13/24 08:18:53.422
  Jun 13 08:18:53.423: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6871 --namespace=crd-publish-openapi-6871 create -f -'
  Jun 13 08:18:53.645: INFO: stderr: ""
  Jun 13 08:18:53.645: INFO: stdout: "e2e-test-crd-publish-openapi-3687-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 13 08:18:53.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6871 --namespace=crd-publish-openapi-6871 delete e2e-test-crd-publish-openapi-3687-crds test-cr'
  E0613 08:18:53.738186      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:54.096: INFO: stderr: ""
  Jun 13 08:18:54.097: INFO: stdout: "e2e-test-crd-publish-openapi-3687-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun 13 08:18:54.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6871 --namespace=crd-publish-openapi-6871 apply -f -'
  Jun 13 08:18:54.489: INFO: stderr: ""
  Jun 13 08:18:54.489: INFO: stdout: "e2e-test-crd-publish-openapi-3687-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun 13 08:18:54.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6871 --namespace=crd-publish-openapi-6871 delete e2e-test-crd-publish-openapi-3687-crds test-cr'
  Jun 13 08:18:54.709: INFO: stderr: ""
  Jun 13 08:18:54.709: INFO: stdout: "e2e-test-crd-publish-openapi-3687-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/13/24 08:18:54.71
  Jun 13 08:18:54.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=crd-publish-openapi-6871 explain e2e-test-crd-publish-openapi-3687-crds'
  E0613 08:18:54.738950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:54.905: INFO: stderr: ""
  Jun 13 08:18:54.906: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3687-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0613 08:18:55.738999      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:18:56.798596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:57.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6871" for this suite. @ 06/13/24 08:18:57.151
â€¢ [6.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/13/24 08:18:57.164
  Jun 13 08:18:57.164: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename daemonsets @ 06/13/24 08:18:57.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:18:57.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:18:57.48
  E0613 08:18:57.746487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 06/13/24 08:18:58.418
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/13/24 08:18:58.488
  Jun 13 08:18:58.553: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 08:18:58.553: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 08:18:58.748870      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:18:59.506: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 08:18:59.507: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 08:18:59.760245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:00.518: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun 13 08:19:00.518: INFO: Node ip-172-31-11-204 is running 0 daemon pod, expected 1
  E0613 08:19:00.760431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:01.529: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Jun 13 08:19:01.529: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/13/24 08:19:01.541
  STEP: DeleteCollection of the DaemonSets @ 06/13/24 08:19:01.549
  STEP: Verify that ReplicaSets have been deleted @ 06/13/24 08:19:01.559
  Jun 13 08:19:01.692: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37256"},"items":null}

  Jun 13 08:19:01.711: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37256"},"items":[{"metadata":{"name":"daemon-set-24qm8","generateName":"daemon-set-","namespace":"daemonsets-4211","uid":"63c03359-c47c-491f-99c8-17f93af2abc5","resourceVersion":"37256","creationTimestamp":"2024-06-13T08:18:58Z","deletionTimestamp":"2024-06-13T08:19:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"3e4f3b0c6c15198bfd2843d1659674259151476cb4c53a60746a0fd30086d6f2","cni.projectcalico.org/podIP":"10.42.2.106/32","cni.projectcalico.org/podIPs":"10.42.2.106/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e5d380ca-4300-4fe5-8e5b-69a8879cd2ee","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:18:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e5d380ca-4300-4fe5-8e5b-69a8879cd2ee\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:18:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:19:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.106\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gzthv","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gzthv","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-2-92","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-2-92"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:18:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:18:58Z"}],"hostIP":"172.31.2.92","hostIPs":[{"ip":"172.31.2.92"}],"podIP":"10.42.2.106","podIPs":[{"ip":"10.42.2.106"}],"startTime":"2024-06-13T08:18:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-13T08:19:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://421b79020c120e6d1989cf177d4809693ca1d6ce6a64361a736f5be58970407d","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-6qzmh","generateName":"daemon-set-","namespace":"daemonsets-4211","uid":"88226452-603d-4d07-8c97-ad70882e205c","resourceVersion":"37255","creationTimestamp":"2024-06-13T08:18:58Z","deletionTimestamp":"2024-06-13T08:19:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"c48a16ad7a35b01fda16efadc3c5b3dda7b74647639f415994f5113a37dc065d","cni.projectcalico.org/podIP":"10.42.0.59/32","cni.projectcalico.org/podIPs":"10.42.0.59/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e5d380ca-4300-4fe5-8e5b-69a8879cd2ee","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:18:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e5d380ca-4300-4fe5-8e5b-69a8879cd2ee\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:19:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:19:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.59\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-hh7np","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-hh7np","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-11-204","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-11-204"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:18:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:18:58Z"}],"hostIP":"172.31.11.204","hostIPs":[{"ip":"172.31.11.204"}],"podIP":"10.42.0.59","podIPs":[{"ip":"10.42.0.59"}],"startTime":"2024-06-13T08:18:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-13T08:19:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://ecf99ea8dff0d516235f4ebe78e8b9ef0e2aadfb198f53ad82a3b2257e4b9460","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-f94n7","generateName":"daemon-set-","namespace":"daemonsets-4211","uid":"61e92ad4-e36e-42dd-9ef1-64d5f171236f","resourceVersion":"37253","creationTimestamp":"2024-06-13T08:18:58Z","deletionTimestamp":"2024-06-13T08:19:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"4dd8d2a7d90fb21aa9feac394c8b0536a97029884655323e049ed5a3c7469097","cni.projectcalico.org/podIP":"10.42.1.43/32","cni.projectcalico.org/podIPs":"10.42.1.43/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e5d380ca-4300-4fe5-8e5b-69a8879cd2ee","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:18:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e5d380ca-4300-4fe5-8e5b-69a8879cd2ee\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:19:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-13T08:19:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.43\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lq2vc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lq2vc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-12-94","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-12-94"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:18:58Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:19:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-13T08:18:58Z"}],"hostIP":"172.31.12.94","hostIPs":[{"ip":"172.31.12.94"}],"podIP":"10.42.1.43","podIPs":[{"ip":"10.42.1.43"}],"startTime":"2024-06-13T08:18:58Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-13T08:19:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://de63cb7d4754117d151ded62f74dbf8684c338200679ac177537b8d9448b76b5","started":true}],"qosClass":"BestEffort"}}]}

  E0613 08:19:01.767784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:01.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4211" for this suite. @ 06/13/24 08:19:01.821
â€¢ [4.681 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/13/24 08:19:01.846
  Jun 13 08:19:01.846: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 08:19:01.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:19:01.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:19:02.016
  Jun 13 08:19:02.070: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:19:02.768689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:03.768772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:04.769225      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:05.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5387" for this suite. @ 06/13/24 08:19:05.561
â€¢ [3.743 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/13/24 08:19:05.591
  Jun 13 08:19:05.591: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 08:19:05.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:19:05.721
  E0613 08:19:05.770311      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:19:05.785
  STEP: creating the pod @ 06/13/24 08:19:05.839
  STEP: waiting for pod running @ 06/13/24 08:19:05.93
  E0613 08:19:06.770795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:07.774478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:08.772412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:09.772506      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 06/13/24 08:19:10.03
  Jun 13 08:19:10.044: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2598 PodName:var-expansion-48f717ad-d11f-49fe-9fd9-4d856c06f9dc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 08:19:10.044: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 08:19:10.045: INFO: ExecWithOptions: Clientset creation
  Jun 13 08:19:10.045: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-2598/pods/var-expansion-48f717ad-d11f-49fe-9fd9-4d856c06f9dc/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/13/24 08:19:10.161
  Jun 13 08:19:10.165: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2598 PodName:var-expansion-48f717ad-d11f-49fe-9fd9-4d856c06f9dc ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun 13 08:19:10.165: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  Jun 13 08:19:10.166: INFO: ExecWithOptions: Clientset creation
  Jun 13 08:19:10.166: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-2598/pods/var-expansion-48f717ad-d11f-49fe-9fd9-4d856c06f9dc/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/13/24 08:19:10.361
  E0613 08:19:10.773673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:10.927: INFO: Successfully updated pod "var-expansion-48f717ad-d11f-49fe-9fd9-4d856c06f9dc"
  STEP: waiting for annotated pod running @ 06/13/24 08:19:10.927
  STEP: deleting the pod gracefully @ 06/13/24 08:19:10.938
  Jun 13 08:19:10.938: INFO: Deleting pod "var-expansion-48f717ad-d11f-49fe-9fd9-4d856c06f9dc" in namespace "var-expansion-2598"
  Jun 13 08:19:10.999: INFO: Wait up to 5m0s for pod "var-expansion-48f717ad-d11f-49fe-9fd9-4d856c06f9dc" to be fully deleted
  E0613 08:19:11.774190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:12.774591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:13.774693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:14.774798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:15.775169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:16.775350      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:17.775698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:18.775724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:19.775819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:20.777575      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:21.777671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:22.777813      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:23.778339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:24.778445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:25.778552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:26.779028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:27.779120      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:28.779189      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:29.780206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:30.780322      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:31.780433      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:32.780521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:33.783203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:34.783548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:35.784963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:36.785326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:37.789243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:38.786755      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:39.789955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:40.790582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:41.790987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:42.791192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:43.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2598" for this suite. @ 06/13/24 08:19:43.14
â€¢ [37.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/13/24 08:19:43.147
  Jun 13 08:19:43.147: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 08:19:43.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:19:43.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:19:43.199
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6944 @ 06/13/24 08:19:43.202
  STEP: changing the ExternalName service to type=ClusterIP @ 06/13/24 08:19:43.207
  STEP: creating replication controller externalname-service in namespace services-6944 @ 06/13/24 08:19:43.257
  I0613 08:19:43.293259      18 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6944, replica count: 2
  E0613 08:19:43.791450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:44.797721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:45.793912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 08:19:46.345088      18 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun 13 08:19:46.356: INFO: Creating new exec pod
  E0613 08:19:46.794711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:47.794700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:48.795059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:49.795180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:50.795389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:51.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6944 exec execpodz6ww8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0613 08:19:51.796141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:52.796185      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:53.797008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:54.164: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun 13 08:19:54.164: INFO: stdout: "externalname-service-tbn6g"
  Jun 13 08:19:54.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6944 exec execpodz6ww8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.134.233 80'
  Jun 13 08:19:54.619: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.134.233 80\nConnection to 10.43.134.233 80 port [tcp/http] succeeded!\n"
  Jun 13 08:19:54.619: INFO: stdout: ""
  E0613 08:19:54.797822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:19:55.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-6944 exec execpodz6ww8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.134.233 80'
  Jun 13 08:19:55.599: INFO: stderr: "+ nc -v -t -w 2 10.43.134.233 80\n+ echo hostName\nConnection to 10.43.134.233 80 port [tcp/http] succeeded!\n"
  Jun 13 08:19:55.600: INFO: stdout: "externalname-service-x7qhp"
  Jun 13 08:19:55.600: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun 13 08:19:55.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6944" for this suite. @ 06/13/24 08:19:55.672
â€¢ [12.539 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/13/24 08:19:55.686
  Jun 13 08:19:55.686: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 08:19:55.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:19:55.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:19:55.764
  E0613 08:19:55.797801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 08:19:55.826
  STEP: Getting a ResourceQuota @ 06/13/24 08:19:55.846
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/13/24 08:19:55.862
  STEP: Patching the ResourceQuota @ 06/13/24 08:19:55.885
  STEP: Deleting a Collection of ResourceQuotas @ 06/13/24 08:19:55.898
  STEP: Verifying the deleted ResourceQuota @ 06/13/24 08:19:55.938
  Jun 13 08:19:55.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7166" for this suite. @ 06/13/24 08:19:55.951
â€¢ [0.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/13/24 08:19:55.974
  Jun 13 08:19:55.974: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 08:19:55.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:19:56.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:19:56.117
  STEP: Counting existing ResourceQuota @ 06/13/24 08:19:56.158
  E0613 08:19:56.798105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:57.801536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:58.802444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:19:59.802754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:00.803195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 08:20:01.192
  STEP: Ensuring resource quota status is calculated @ 06/13/24 08:20:01.227
  E0613 08:20:01.807377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:02.805336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 06/13/24 08:20:03.292
  STEP: Ensuring resource quota status captures replicaset creation @ 06/13/24 08:20:03.37
  E0613 08:20:03.806314      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:04.806432      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 06/13/24 08:20:05.388
  STEP: Ensuring resource quota status released usage @ 06/13/24 08:20:05.419
  E0613 08:20:05.808020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:06.808487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:07.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2081" for this suite. @ 06/13/24 08:20:07.429
â€¢ [11.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/13/24 08:20:07.452
  Jun 13 08:20:07.452: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename gc @ 06/13/24 08:20:07.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:20:07.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:20:07.53
  STEP: create the rc @ 06/13/24 08:20:07.547
  W0613 08:20:07.573752      18 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0613 08:20:07.809991      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:08.810511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:09.810696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:10.811643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:11.812061      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:12.812858      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:13.813296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/13/24 08:20:14.461
  E0613 08:20:14.814041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 06/13/24 08:20:15.12
  E0613 08:20:15.814098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:16.814188      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:17.814418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:18.814472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:19.815797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/13/24 08:20:20.173
  E0613 08:20:20.816017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:21.830953      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:22.816583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:23.816693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:24.817615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:25.821936      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:26.818573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:27.822585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:28.823167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:29.823358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:30.824342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:31.833809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:32.834176      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:33.835767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:34.837679      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:35.870709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:36.873624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:37.874152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:38.874812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:39.888149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:40.888819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:41.897148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:42.895293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:43.893182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:44.895147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:45.895267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:46.895323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:47.895472      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:48.895739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:20:49.900852      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/13/24 08:20:50.247
  W0613 08:20:50.260957      18 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Jun 13 08:20:50.261: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun 13 08:20:50.261: INFO: Deleting pod "simpletest.rc-28mq4" in namespace "gc-1007"
  Jun 13 08:20:50.297: INFO: Deleting pod "simpletest.rc-2g2gc" in namespace "gc-1007"
  Jun 13 08:20:50.318: INFO: Deleting pod "simpletest.rc-2jk7j" in namespace "gc-1007"
  Jun 13 08:20:50.384: INFO: Deleting pod "simpletest.rc-2tklm" in namespace "gc-1007"
  Jun 13 08:20:50.466: INFO: Deleting pod "simpletest.rc-456pg" in namespace "gc-1007"
  Jun 13 08:20:50.503: INFO: Deleting pod "simpletest.rc-4gr6c" in namespace "gc-1007"
  Jun 13 08:20:50.611: INFO: Deleting pod "simpletest.rc-5n469" in namespace "gc-1007"
  Jun 13 08:20:50.711: INFO: Deleting pod "simpletest.rc-5spss" in namespace "gc-1007"
  Jun 13 08:20:50.786: INFO: Deleting pod "simpletest.rc-67b47" in namespace "gc-1007"
  Jun 13 08:20:50.823: INFO: Deleting pod "simpletest.rc-6n5c6" in namespace "gc-1007"
  Jun 13 08:20:50.857: INFO: Deleting pod "simpletest.rc-78pm9" in namespace "gc-1007"
  E0613 08:20:50.899940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:50.945: INFO: Deleting pod "simpletest.rc-7bnvb" in namespace "gc-1007"
  Jun 13 08:20:51.082: INFO: Deleting pod "simpletest.rc-7dsbs" in namespace "gc-1007"
  Jun 13 08:20:51.130: INFO: Deleting pod "simpletest.rc-7g58j" in namespace "gc-1007"
  Jun 13 08:20:51.167: INFO: Deleting pod "simpletest.rc-7mf57" in namespace "gc-1007"
  Jun 13 08:20:51.295: INFO: Deleting pod "simpletest.rc-7wlb8" in namespace "gc-1007"
  Jun 13 08:20:51.349: INFO: Deleting pod "simpletest.rc-8znkr" in namespace "gc-1007"
  Jun 13 08:20:51.395: INFO: Deleting pod "simpletest.rc-8zsxn" in namespace "gc-1007"
  Jun 13 08:20:51.492: INFO: Deleting pod "simpletest.rc-965fl" in namespace "gc-1007"
  Jun 13 08:20:51.575: INFO: Deleting pod "simpletest.rc-9bxq5" in namespace "gc-1007"
  Jun 13 08:20:51.616: INFO: Deleting pod "simpletest.rc-9ghfc" in namespace "gc-1007"
  Jun 13 08:20:51.674: INFO: Deleting pod "simpletest.rc-9jp4j" in namespace "gc-1007"
  Jun 13 08:20:51.717: INFO: Deleting pod "simpletest.rc-9v2ch" in namespace "gc-1007"
  Jun 13 08:20:51.770: INFO: Deleting pod "simpletest.rc-b4hqw" in namespace "gc-1007"
  Jun 13 08:20:51.863: INFO: Deleting pod "simpletest.rc-bj8h2" in namespace "gc-1007"
  E0613 08:20:51.900848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:51.943: INFO: Deleting pod "simpletest.rc-ckpjv" in namespace "gc-1007"
  Jun 13 08:20:52.016: INFO: Deleting pod "simpletest.rc-cstlx" in namespace "gc-1007"
  Jun 13 08:20:52.073: INFO: Deleting pod "simpletest.rc-ctrqc" in namespace "gc-1007"
  Jun 13 08:20:52.128: INFO: Deleting pod "simpletest.rc-d2j8v" in namespace "gc-1007"
  Jun 13 08:20:52.213: INFO: Deleting pod "simpletest.rc-dprcl" in namespace "gc-1007"
  Jun 13 08:20:52.262: INFO: Deleting pod "simpletest.rc-dqml5" in namespace "gc-1007"
  Jun 13 08:20:52.320: INFO: Deleting pod "simpletest.rc-dwj87" in namespace "gc-1007"
  Jun 13 08:20:52.429: INFO: Deleting pod "simpletest.rc-fdhlw" in namespace "gc-1007"
  Jun 13 08:20:52.515: INFO: Deleting pod "simpletest.rc-fsnpf" in namespace "gc-1007"
  Jun 13 08:20:52.620: INFO: Deleting pod "simpletest.rc-fsxm7" in namespace "gc-1007"
  Jun 13 08:20:52.659: INFO: Deleting pod "simpletest.rc-ftxln" in namespace "gc-1007"
  Jun 13 08:20:52.696: INFO: Deleting pod "simpletest.rc-fvh5t" in namespace "gc-1007"
  Jun 13 08:20:52.771: INFO: Deleting pod "simpletest.rc-gklkk" in namespace "gc-1007"
  Jun 13 08:20:52.900: INFO: Deleting pod "simpletest.rc-gvgmv" in namespace "gc-1007"
  E0613 08:20:52.900754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:53.107: INFO: Deleting pod "simpletest.rc-gvvfg" in namespace "gc-1007"
  Jun 13 08:20:53.222: INFO: Deleting pod "simpletest.rc-hhqhj" in namespace "gc-1007"
  Jun 13 08:20:53.537: INFO: Deleting pod "simpletest.rc-hmffs" in namespace "gc-1007"
  Jun 13 08:20:53.862: INFO: Deleting pod "simpletest.rc-jdvhl" in namespace "gc-1007"
  E0613 08:20:53.901570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:54.100: INFO: Deleting pod "simpletest.rc-jjhrk" in namespace "gc-1007"
  Jun 13 08:20:54.193: INFO: Deleting pod "simpletest.rc-jkb7p" in namespace "gc-1007"
  Jun 13 08:20:54.376: INFO: Deleting pod "simpletest.rc-jnzmm" in namespace "gc-1007"
  Jun 13 08:20:54.509: INFO: Deleting pod "simpletest.rc-jpg8z" in namespace "gc-1007"
  Jun 13 08:20:54.651: INFO: Deleting pod "simpletest.rc-jpq4v" in namespace "gc-1007"
  Jun 13 08:20:54.780: INFO: Deleting pod "simpletest.rc-jsjq2" in namespace "gc-1007"
  Jun 13 08:20:54.870: INFO: Deleting pod "simpletest.rc-jsr7t" in namespace "gc-1007"
  E0613 08:20:54.902232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:55.027: INFO: Deleting pod "simpletest.rc-jw6rz" in namespace "gc-1007"
  Jun 13 08:20:55.236: INFO: Deleting pod "simpletest.rc-k48wh" in namespace "gc-1007"
  Jun 13 08:20:55.321: INFO: Deleting pod "simpletest.rc-kftzf" in namespace "gc-1007"
  Jun 13 08:20:55.450: INFO: Deleting pod "simpletest.rc-km565" in namespace "gc-1007"
  Jun 13 08:20:55.557: INFO: Deleting pod "simpletest.rc-l2jrj" in namespace "gc-1007"
  Jun 13 08:20:55.645: INFO: Deleting pod "simpletest.rc-l4fr8" in namespace "gc-1007"
  Jun 13 08:20:55.713: INFO: Deleting pod "simpletest.rc-lg8mq" in namespace "gc-1007"
  Jun 13 08:20:55.755: INFO: Deleting pod "simpletest.rc-lm7c9" in namespace "gc-1007"
  Jun 13 08:20:55.834: INFO: Deleting pod "simpletest.rc-lp2kt" in namespace "gc-1007"
  E0613 08:20:55.903206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:55.957: INFO: Deleting pod "simpletest.rc-m5x7v" in namespace "gc-1007"
  Jun 13 08:20:56.057: INFO: Deleting pod "simpletest.rc-mtkts" in namespace "gc-1007"
  Jun 13 08:20:56.164: INFO: Deleting pod "simpletest.rc-mtqbn" in namespace "gc-1007"
  Jun 13 08:20:56.228: INFO: Deleting pod "simpletest.rc-n5m6q" in namespace "gc-1007"
  Jun 13 08:20:56.321: INFO: Deleting pod "simpletest.rc-np47n" in namespace "gc-1007"
  Jun 13 08:20:56.456: INFO: Deleting pod "simpletest.rc-npl8x" in namespace "gc-1007"
  Jun 13 08:20:56.485: INFO: Deleting pod "simpletest.rc-nthpb" in namespace "gc-1007"
  Jun 13 08:20:56.589: INFO: Deleting pod "simpletest.rc-p6vwj" in namespace "gc-1007"
  Jun 13 08:20:56.705: INFO: Deleting pod "simpletest.rc-phx2b" in namespace "gc-1007"
  Jun 13 08:20:56.837: INFO: Deleting pod "simpletest.rc-phz2z" in namespace "gc-1007"
  E0613 08:20:56.905511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:56.917: INFO: Deleting pod "simpletest.rc-pw6rg" in namespace "gc-1007"
  Jun 13 08:20:56.981: INFO: Deleting pod "simpletest.rc-qbqjd" in namespace "gc-1007"
  Jun 13 08:20:57.131: INFO: Deleting pod "simpletest.rc-qrm47" in namespace "gc-1007"
  Jun 13 08:20:57.354: INFO: Deleting pod "simpletest.rc-qwpwv" in namespace "gc-1007"
  Jun 13 08:20:57.454: INFO: Deleting pod "simpletest.rc-r29kq" in namespace "gc-1007"
  Jun 13 08:20:57.511: INFO: Deleting pod "simpletest.rc-r8z6w" in namespace "gc-1007"
  Jun 13 08:20:57.585: INFO: Deleting pod "simpletest.rc-rb2sp" in namespace "gc-1007"
  Jun 13 08:20:57.706: INFO: Deleting pod "simpletest.rc-s22vj" in namespace "gc-1007"
  E0613 08:20:57.906230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:58.053: INFO: Deleting pod "simpletest.rc-s9lmk" in namespace "gc-1007"
  Jun 13 08:20:58.229: INFO: Deleting pod "simpletest.rc-sfmjk" in namespace "gc-1007"
  Jun 13 08:20:58.410: INFO: Deleting pod "simpletest.rc-sj8g7" in namespace "gc-1007"
  Jun 13 08:20:58.694: INFO: Deleting pod "simpletest.rc-swf26" in namespace "gc-1007"
  E0613 08:20:58.910335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:58.913: INFO: Deleting pod "simpletest.rc-t4p2r" in namespace "gc-1007"
  Jun 13 08:20:59.030: INFO: Deleting pod "simpletest.rc-t6rng" in namespace "gc-1007"
  Jun 13 08:20:59.124: INFO: Deleting pod "simpletest.rc-t7fr4" in namespace "gc-1007"
  Jun 13 08:20:59.270: INFO: Deleting pod "simpletest.rc-t9qdv" in namespace "gc-1007"
  Jun 13 08:20:59.391: INFO: Deleting pod "simpletest.rc-tgn9d" in namespace "gc-1007"
  Jun 13 08:20:59.549: INFO: Deleting pod "simpletest.rc-tqnpk" in namespace "gc-1007"
  Jun 13 08:20:59.829: INFO: Deleting pod "simpletest.rc-tzqcl" in namespace "gc-1007"
  Jun 13 08:20:59.893: INFO: Deleting pod "simpletest.rc-v8rtg" in namespace "gc-1007"
  E0613 08:20:59.909563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:20:59.949: INFO: Deleting pod "simpletest.rc-vg8dv" in namespace "gc-1007"
  Jun 13 08:21:00.114: INFO: Deleting pod "simpletest.rc-w7fh7" in namespace "gc-1007"
  Jun 13 08:21:00.293: INFO: Deleting pod "simpletest.rc-wc9ww" in namespace "gc-1007"
  Jun 13 08:21:00.380: INFO: Deleting pod "simpletest.rc-wfp66" in namespace "gc-1007"
  Jun 13 08:21:00.476: INFO: Deleting pod "simpletest.rc-wk2tt" in namespace "gc-1007"
  Jun 13 08:21:00.529: INFO: Deleting pod "simpletest.rc-wwst2" in namespace "gc-1007"
  Jun 13 08:21:00.600: INFO: Deleting pod "simpletest.rc-x7qng" in namespace "gc-1007"
  Jun 13 08:21:00.669: INFO: Deleting pod "simpletest.rc-x8tm7" in namespace "gc-1007"
  Jun 13 08:21:00.710: INFO: Deleting pod "simpletest.rc-zfpld" in namespace "gc-1007"
  Jun 13 08:21:00.791: INFO: Deleting pod "simpletest.rc-zj2cg" in namespace "gc-1007"
  Jun 13 08:21:00.893: INFO: Deleting pod "simpletest.rc-zz5dp" in namespace "gc-1007"
  E0613 08:21:00.913779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:21:01.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1007" for this suite. @ 06/13/24 08:21:01.071
â€¢ [53.637 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/13/24 08:21:01.089
  Jun 13 08:21:01.089: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 08:21:01.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:21:01.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:21:01.314
  E0613 08:21:01.914233      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:02.915184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:03.915811      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:04.916650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:05.916977      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:06.918274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:07.918983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:08.920103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:21:09.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8209" for this suite. @ 06/13/24 08:21:09.88
  E0613 08:21:09.934196      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [8.856 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/13/24 08:21:09.946
  Jun 13 08:21:09.946: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename statefulset @ 06/13/24 08:21:09.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:21:10.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:21:10.236
  STEP: Creating service test in namespace statefulset-1468 @ 06/13/24 08:21:10.296
  STEP: Creating statefulset ss in namespace statefulset-1468 @ 06/13/24 08:21:10.448
  Jun 13 08:21:10.614: INFO: Found 0 stateful pods, waiting for 1
  E0613 08:21:10.935758      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:11.935864      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:12.947288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:13.949522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:14.954583      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:15.956372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:16.957241      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:17.957632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:18.957678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:19.957972      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:21:20.558: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/13/24 08:21:20.625
  STEP: Getting /status @ 06/13/24 08:21:20.731
  Jun 13 08:21:20.840: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/13/24 08:21:20.84
  Jun 13 08:21:20.929: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/13/24 08:21:20.93
  Jun 13 08:21:20.944: INFO: Observed &StatefulSet event: ADDED
  Jun 13 08:21:20.944: INFO: Found Statefulset ss in namespace statefulset-1468 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 08:21:20.944: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/13/24 08:21:20.944
  Jun 13 08:21:20.944: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  E0613 08:21:20.958360      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:21:21.085: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/13/24 08:21:21.085
  Jun 13 08:21:21.117: INFO: Observed &StatefulSet event: ADDED
  Jun 13 08:21:21.117: INFO: Observed Statefulset ss in namespace statefulset-1468 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun 13 08:21:21.117: INFO: Observed &StatefulSet event: MODIFIED
  Jun 13 08:21:21.117: INFO: Deleting all statefulset in ns statefulset-1468
  Jun 13 08:21:21.152: INFO: Scaling statefulset ss to 0
  E0613 08:21:21.959967      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:22.961174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:23.961710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:24.962580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:25.963593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:26.963816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:27.964197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:28.964847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:29.965514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:30.965589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:21:31.285: INFO: Waiting for statefulset status.replicas updated to 0
  Jun 13 08:21:31.293: INFO: Deleting statefulset ss
  Jun 13 08:21:31.321: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1468" for this suite. @ 06/13/24 08:21:31.336
â€¢ [21.417 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/13/24 08:21:31.363
  Jun 13 08:21:31.363: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:21:31.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:21:31.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:21:31.459
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/13/24 08:21:31.47
  E0613 08:21:31.967036      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:32.967358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:33.967464      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:34.968379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:21:35.563
  Jun 13 08:21:35.567: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-29cb9f02-2170-49dd-a512-2e8ea4d9f14a container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:21:35.59
  Jun 13 08:21:35.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1407" for this suite. @ 06/13/24 08:21:35.618
â€¢ [4.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/13/24 08:21:35.63
  Jun 13 08:21:35.630: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename ingress @ 06/13/24 08:21:35.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:21:35.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:21:35.703
  STEP: getting /apis @ 06/13/24 08:21:35.712
  STEP: getting /apis/networking.k8s.io @ 06/13/24 08:21:35.731
  STEP: getting /apis/networking.k8s.iov1 @ 06/13/24 08:21:35.759
  STEP: creating @ 06/13/24 08:21:35.767
  STEP: getting @ 06/13/24 08:21:35.858
  STEP: listing @ 06/13/24 08:21:35.866
  STEP: watching @ 06/13/24 08:21:35.874
  Jun 13 08:21:35.874: INFO: starting watch
  STEP: cluster-wide listing @ 06/13/24 08:21:35.876
  STEP: cluster-wide watching @ 06/13/24 08:21:35.885
  Jun 13 08:21:35.885: INFO: starting watch
  STEP: patching @ 06/13/24 08:21:35.894
  STEP: updating @ 06/13/24 08:21:35.915
  Jun 13 08:21:35.938: INFO: waiting for watch events with expected annotations
  Jun 13 08:21:35.946: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/13/24 08:21:35.952
  E0613 08:21:35.968388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating /status @ 06/13/24 08:21:35.974
  STEP: get /status @ 06/13/24 08:21:35.997
  STEP: deleting @ 06/13/24 08:21:36.001
  STEP: deleting a collection @ 06/13/24 08:21:36.014
  Jun 13 08:21:36.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7380" for this suite. @ 06/13/24 08:21:36.094
â€¢ [0.497 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/13/24 08:21:36.128
  Jun 13 08:21:36.128: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-preemption @ 06/13/24 08:21:36.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:21:36.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:21:36.317
  Jun 13 08:21:36.555: INFO: Waiting up to 1m0s for all nodes to be ready
  E0613 08:21:36.969280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:37.969750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:38.973815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:39.973928      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:40.974784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:41.975230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:42.975920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:43.976884      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:44.977051      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:45.978128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:46.978593      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:47.978730      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:48.978898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:49.979009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:50.980007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:51.980114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:52.985923      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:53.983280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:54.984674      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:55.984787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:56.985858      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:57.986000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:58.986906      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:21:59.987023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:00.988557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:01.988699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:02.990689      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:03.991297      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:04.992403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:05.993263      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:06.993735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:07.994741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:09.001512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:10.001523      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:11.002205      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:12.002463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:13.004197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:14.004574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:15.005504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:16.006452      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:17.006732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:18.007227      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:19.007765      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:20.009851      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:21.009820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:22.010035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:23.010149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:24.010964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:25.011152      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:26.012222      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:27.012899      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:28.013413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:29.013910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:30.014264      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:31.014074      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:32.020416      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:33.021271      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:34.023888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:35.023337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:36.023733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:22:36.582: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/13/24 08:22:36.588
  Jun 13 08:22:36.660: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun 13 08:22:36.677: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun 13 08:22:36.942: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  E0613 08:22:37.030779      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:22:37.098: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Jun 13 08:22:37.303: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Jun 13 08:22:37.374: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/13/24 08:22:37.375
  E0613 08:22:38.027725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:39.030845      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:40.032568      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:41.033461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/13/24 08:22:41.555
  E0613 08:22:42.034121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:43.034958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:44.037509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:45.038233      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:46.043040      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:47.043104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:22:47.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6596" for this suite. @ 06/13/24 08:22:47.796
â€¢ [71.683 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/13/24 08:22:47.817
  Jun 13 08:22:47.817: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 08:22:47.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:22:47.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:22:47.893
  STEP: Discovering how many secrets are in namespace by default @ 06/13/24 08:22:47.904
  E0613 08:22:48.043270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:49.045080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:50.045975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:51.049571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:52.052910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/13/24 08:22:52.911
  E0613 08:22:53.053937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:54.054566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:55.055319      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:56.055963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:57.056353      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 08:22:57.941
  STEP: Ensuring resource quota status is calculated @ 06/13/24 08:22:57.969
  E0613 08:22:58.057533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:22:59.057782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 06/13/24 08:22:59.981
  E0613 08:23:00.058838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status captures secret creation @ 06/13/24 08:23:00.128
  E0613 08:23:01.059109      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:02.059842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 06/13/24 08:23:02.135
  STEP: Ensuring resource quota status released usage @ 06/13/24 08:23:02.153
  E0613 08:23:03.059958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:04.060802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:23:04.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4930" for this suite. @ 06/13/24 08:23:04.163
â€¢ [16.356 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/13/24 08:23:04.175
  Jun 13 08:23:04.175: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/13/24 08:23:04.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:04.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:04.227
  STEP: getting /apis @ 06/13/24 08:23:04.23
  STEP: getting /apis/storage.k8s.io @ 06/13/24 08:23:04.235
  STEP: getting /apis/storage.k8s.io/v1 @ 06/13/24 08:23:04.239
  STEP: creating @ 06/13/24 08:23:04.242
  STEP: watching @ 06/13/24 08:23:04.279
  Jun 13 08:23:04.279: INFO: starting watch
  STEP: getting @ 06/13/24 08:23:04.288
  STEP: listing in namespace @ 06/13/24 08:23:04.29
  STEP: listing across namespaces @ 06/13/24 08:23:04.296
  STEP: patching @ 06/13/24 08:23:04.304
  STEP: updating @ 06/13/24 08:23:04.319
  Jun 13 08:23:04.337: INFO: waiting for watch events with expected annotations in namespace
  Jun 13 08:23:04.337: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/13/24 08:23:04.338
  STEP: deleting a collection @ 06/13/24 08:23:04.363
  Jun 13 08:23:04.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9547" for this suite. @ 06/13/24 08:23:04.41
â€¢ [0.259 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/13/24 08:23:04.434
  Jun 13 08:23:04.434: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:23:04.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:04.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:04.523
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 08:23:04.534
  E0613 08:23:05.061020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:06.062122      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:07.062614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:08.062732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:23:08.579
  Jun 13 08:23:08.582: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-5969448c-6791-4b23-8a7c-57587ebc0f50 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 08:23:08.62
  Jun 13 08:23:08.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3388" for this suite. @ 06/13/24 08:23:08.661
â€¢ [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/13/24 08:23:08.674
  Jun 13 08:23:08.674: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 08:23:08.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:08.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:08.765
  Jun 13 08:23:08.872: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0613 08:23:09.063764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:10.064521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:11.064631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:12.064963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:13.065557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:23:13.889: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 08:23:13.889
  Jun 13 08:23:13.900: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/13/24 08:23:13.945
  Jun 13 08:23:13.994: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5800",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7fdc2364-bb28-42ae-8d35-bb42233b3db2",
      ResourceVersion: (string) (len=5) "40216",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 08:23:14.056: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5800",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "924d311e-5ec0-43d0-8c96-4b779a0893d5",
      ResourceVersion: (string) (len=5) "40218",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7fdc2364-bb28-42ae-8d35-bb42233b3db2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 66 64 63 32 33  36 34 2d 62 62 32 38 2d  |\"7fdc2364-bb28-|
              00000120  34 32 61 65 2d 38 64 33  35 2d 62 62 34 32 32 33  |42ae-8d35-bb4223|
              00000130  33 62 33 64 62 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3b3db2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 08:23:14.057: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun 13 08:23:14.058: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5800",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a228799-02c2-4100-9b7e-2f6bbd1bb950",
      ResourceVersion: (string) (len=5) "40217",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "7fdc2364-bb28-42ae-8d35-bb42233b3db2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 37 66 64 63 32 33 36  |"uid\":\"7fdc236|
              00000040  34 2d 62 62 32 38 2d 34  32 61 65 2d 38 64 33 35  |4-bb28-42ae-8d35|
              00000050  2d 62 62 34 32 32 33 33  62 33 64 62 32 5c 22 7d  |-bb42233b3db2\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E0613 08:23:14.065938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:23:14.119: INFO: Pod "test-cleanup-controller-nmjl8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-nmjl8",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5800",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a971f363-fe7d-41c5-bd18-2d4840a8b05d",
      ResourceVersion: (string) (len=5) "40206",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a2beccfc7bc24fa9f376251163cca964d8566f8014dcf5f191159487161cd7ef",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.86/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.86/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "5a228799-02c2-4100-9b7e-2f6bbd1bb950",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  35 61 32 32 38 37 39 39  |uid\":\"5a228799|
              00000080  2d 30 32 63 32 2d 34 31  30 30 2d 39 62 37 65 2d  |-02c2-4100-9b7e-|
              00000090  32 66 36 62 62 64 31 62  62 39 35 30 5c 22 7d 22  |2f6bbd1bb950\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863790,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 36  5c 22 7d 22 3a 7b 22 2e  |.42.1.86\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d8tgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d8tgf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863791,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) (len=10) "10.42.1.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853863790,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://d4f391c434d6d6b342662864360327834d82311646c85a1271c17e6e8ecb08f2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:23:14.143: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-chwdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-chwdn",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-5800",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17268ca9-d848-4df1-8379-52d39f212f25",
      ResourceVersion: (string) (len=5) "40227",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863793,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "924d311e-5ec0-43d0-8c96-4b779a0893d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 32  34 64 33 31 31 65 2d 35  |d\":\"924d311e-5|
              00000090  65 63 30 2d 34 33 64 30  2d 38 63 39 36 2d 34 62  |ec0-43d0-8c96-4b|
              000000a0  37 37 39 61 30 38 39 33  64 35 5c 22 7d 22 3a 7b  |779a0893d5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lf6pn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lf6pn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863794,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853863793,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853863794,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:23:14.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5800" for this suite. @ 06/13/24 08:23:14.198
â€¢ [5.548 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/13/24 08:23:14.226
  Jun 13 08:23:14.226: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:23:14.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:14.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:14.333
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 08:23:14.353
  E0613 08:23:15.066614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:16.067603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:17.068114      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:18.069517      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:23:18.555
  Jun 13 08:23:18.567: INFO: Trying to get logs from node ip-172-31-2-92 pod downwardapi-volume-15a4c7a8-9a18-4694-8f5e-bee760863c69 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 08:23:18.608
  Jun 13 08:23:18.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-736" for this suite. @ 06/13/24 08:23:18.656
â€¢ [4.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/13/24 08:23:18.68
  Jun 13 08:23:18.681: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename chunking @ 06/13/24 08:23:18.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:18.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:18.784
  STEP: creating a large number of resources @ 06/13/24 08:23:18.795
  E0613 08:23:19.071009      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:20.071826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:21.073251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:22.073629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:23.074300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:24.075471      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:25.077642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:26.078027      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0613 08:23:26.806406      18 request.go:697] Waited for 1.000131476s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-5786/podtemplates
  E0613 08:23:27.079356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:28.079827      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:29.080444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:30.081677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:31.082084      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:32.082332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:33.087661      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:34.088424      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:35.088930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:36.089181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 06/13/24 08:23:36.405
  Jun 13 08:23:36.454: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 13 08:23:36.513: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 13 08:23:36.557: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 13 08:23:36.604: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 13 08:23:36.674: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 13 08:23:36.715: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 13 08:23:36.753: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 13 08:23:36.805: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 13 08:23:36.854: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 13 08:23:36.905: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 13 08:23:36.965: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 13 08:23:37.008: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 13 08:23:37.053: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  E0613 08:23:37.090180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:23:37.103: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 13 08:23:37.154: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 13 08:23:37.208: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 13 08:23:37.257: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 13 08:23:37.303: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 13 08:23:37.353: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 13 08:23:37.406: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 13 08:23:37.454: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 13 08:23:37.507: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 13 08:23:37.561: INFO: Retrieved 17/17 results with rv 40751 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 13 08:23:37.603: INFO: Retrieved 9/17 results with rv 40751 and continue 
  Jun 13 08:23:37.655: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 13 08:23:37.707: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 13 08:23:37.753: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 13 08:23:37.806: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 13 08:23:37.858: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Jun 13 08:23:37.918: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 13 08:23:37.965: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 13 08:23:38.018: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 13 08:23:38.055: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  E0613 08:23:38.091508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:23:38.125: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 13 08:23:38.159: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 13 08:23:38.210: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 13 08:23:38.258: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 13 08:23:38.321: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 13 08:23:38.367: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 13 08:23:38.405: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 13 08:23:38.458: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 13 08:23:38.523: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 13 08:23:38.552: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 13 08:23:38.604: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 13 08:23:38.653: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 13 08:23:38.708: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 13 08:23:38.761: INFO: Retrieved 17/17 results with rv 40754 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 13 08:23:38.802: INFO: Retrieved 9/17 results with rv 40754 and continue 
  Jun 13 08:23:38.854: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Jun 13 08:23:38.907: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Jun 13 08:23:38.961: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Jun 13 08:23:39.005: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Jun 13 08:23:39.057: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  E0613 08:23:39.091759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:23:39.105: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Jun 13 08:23:39.153: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Jun 13 08:23:39.204: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Jun 13 08:23:39.261: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Jun 13 08:23:39.305: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Jun 13 08:23:39.353: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Jun 13 08:23:39.407: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Jun 13 08:23:39.453: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Jun 13 08:23:39.506: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Jun 13 08:23:39.555: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Jun 13 08:23:39.609: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Jun 13 08:23:39.662: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Jun 13 08:23:39.702: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Jun 13 08:23:39.758: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Jun 13 08:23:39.811: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Jun 13 08:23:39.861: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Jun 13 08:23:39.904: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Jun 13 08:23:39.964: INFO: Retrieved 17/17 results with rv 40755 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Jun 13 08:23:40.005: INFO: Retrieved 9/17 results with rv 40755 and continue 
  STEP: retrieving those results all at once @ 06/13/24 08:23:40.005
  Jun 13 08:23:40.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 08:23:40.093337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "chunking-5786" for this suite. @ 06/13/24 08:23:40.105
â€¢ [21.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/13/24 08:23:40.191
  Jun 13 08:23:40.191: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:23:40.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:40.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:40.33
  STEP: Creating configMap with name projected-configmap-test-volume-d5bf9048-e814-4b38-a829-a14f7c582c65 @ 06/13/24 08:23:40.344
  STEP: Creating a pod to test consume configMaps @ 06/13/24 08:23:40.373
  E0613 08:23:41.094922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:42.103389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:43.096522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:44.096870      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:23:44.452
  Jun 13 08:23:44.477: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-configmaps-b2e0590f-fd7e-4434-a2e9-7f8a911cca40 container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 08:23:44.495
  Jun 13 08:23:44.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2312" for this suite. @ 06/13/24 08:23:44.564
â€¢ [4.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/13/24 08:23:44.583
  Jun 13 08:23:44.583: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 08:23:44.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:44.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:44.721
  Jun 13 08:23:44.757: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:23:45.097059      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:23:45.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2237" for this suite. @ 06/13/24 08:23:45.448
â€¢ [0.916 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/13/24 08:23:45.499
  Jun 13 08:23:45.499: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 08:23:45.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:23:45.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:23:45.736
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/13/24 08:23:45.799
  E0613 08:23:46.097519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:47.097566      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:48.098287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:49.098687      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:50.104469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:51.106125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:52.106719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:53.111812      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:54.112799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:55.113544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:56.113891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:57.117776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:58.118607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:23:59.119328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:00.145584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:01.137940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:02.145894      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:03.146082      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:04.150480      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/13/24 08:24:05.069
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/13/24 08:24:05.077
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/13/24 08:24:05.101
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/13/24 08:24:05.101
  E0613 08:24:05.150983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/13/24 08:24:05.165
  E0613 08:24:06.153175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:07.154401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:08.155035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:09.156108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/13/24 08:24:09.229
  E0613 08:24:10.156357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/13/24 08:24:10.256
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/13/24 08:24:10.269
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/13/24 08:24:10.269
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/13/24 08:24:10.337
  E0613 08:24:11.156718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/13/24 08:24:11.386
  E0613 08:24:12.157474      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:13.162410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:14.163544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/13/24 08:24:14.409
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/13/24 08:24:14.415
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/13/24 08:24:14.415
  Jun 13 08:24:14.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2534" for this suite. @ 06/13/24 08:24:14.465
â€¢ [29.005 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/13/24 08:24:14.508
  Jun 13 08:24:14.508: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:24:14.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:24:14.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:24:14.635
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/13/24 08:24:14.665
  E0613 08:24:15.164085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:16.165672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:17.167271      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:18.165861      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:24:18.762
  Jun 13 08:24:18.767: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-38ce1320-c31e-4886-8d9b-70d0d2b0b7a7 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:24:18.782
  Jun 13 08:24:18.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3995" for this suite. @ 06/13/24 08:24:18.829
â€¢ [4.326 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/13/24 08:24:18.835
  Jun 13 08:24:18.835: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename security-context-test @ 06/13/24 08:24:18.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:24:18.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:24:18.915
  E0613 08:24:19.166462      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:20.166881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:21.167017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:22.169532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:23.068: INFO: Got logs for pod "busybox-privileged-false-a37f5743-1e77-4d51-9a76-025ec2d6b2ab": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun 13 08:24:23.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7006" for this suite. @ 06/13/24 08:24:23.087
â€¢ [4.267 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/13/24 08:24:23.103
  Jun 13 08:24:23.103: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 08:24:23.104
  E0613 08:24:23.170333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:24:23.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:24:23.242
  STEP: Setting up server cert @ 06/13/24 08:24:23.406
  E0613 08:24:24.170318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 08:24:24.504
  STEP: Deploying the webhook pod @ 06/13/24 08:24:24.514
  STEP: Wait for the deployment to be ready @ 06/13/24 08:24:24.555
  Jun 13 08:24:24.597: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 08:24:25.173234      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:26.173995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:26.612: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:24:27.174173      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:28.174274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:28.695: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:24:29.174541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:30.175476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:24:30.618
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:24:30.64
  E0613 08:24:31.175750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:31.641: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 08:24:31.653: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:24:32.175960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3970-crds.webhook.example.com via the AdmissionRegistration API @ 06/13/24 08:24:32.192
  STEP: Creating a custom resource while v1 is storage version @ 06/13/24 08:24:32.236
  E0613 08:24:33.177959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:34.178763      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/13/24 08:24:34.468
  STEP: Patching the custom resource while v2 is storage version @ 06/13/24 08:24:34.669
  E0613 08:24:35.181141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:36.181744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:36.235: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-79" for this suite. @ 06/13/24 08:24:36.306
  STEP: Destroying namespace "webhook-markers-1594" for this suite. @ 06/13/24 08:24:36.344
â€¢ [13.311 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/13/24 08:24:36.414
  Jun 13 08:24:36.415: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 08:24:36.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:24:36.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:24:36.665
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 08:24:36.713
  E0613 08:24:37.182829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:38.182954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:39.183057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:40.183113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:41.185000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:42.185783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:24:42.951
  Jun 13 08:24:42.954: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-779f0be4-e0c6-4f89-b3b6-25f7a03d131d container client-container: <nil>
  STEP: delete the pod @ 06/13/24 08:24:42.965
  Jun 13 08:24:42.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5213" for this suite. @ 06/13/24 08:24:43.011
â€¢ [6.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/13/24 08:24:43.046
  Jun 13 08:24:43.047: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 08:24:43.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:24:43.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:24:43.114
  E0613 08:24:43.186362      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 06/13/24 08:24:43.54
  E0613 08:24:44.187024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 08:24:44.532
  STEP: Deploying the webhook pod @ 06/13/24 08:24:44.539
  STEP: Wait for the deployment to be ready @ 06/13/24 08:24:44.568
  Jun 13 08:24:44.605: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 08:24:45.188172      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:46.188357      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:46.622: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:24:47.190310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:48.190371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:48.641: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:24:49.192337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:50.190651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:50.631: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 24, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:24:51.191335      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:52.191415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:24:52.639
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:24:52.685
  E0613 08:24:53.192598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:24:53.686: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/13/24 08:24:53.694
  STEP: create a namespace for the webhook @ 06/13/24 08:24:53.721
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/13/24 08:24:53.793
  Jun 13 08:24:54.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-992" for this suite. @ 06/13/24 08:24:54.177
  E0613 08:24:54.193691      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-647" for this suite. @ 06/13/24 08:24:54.388
  STEP: Destroying namespace "fail-closed-namespace-7166" for this suite. @ 06/13/24 08:24:54.459
â€¢ [11.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/13/24 08:24:54.502
  Jun 13 08:24:54.502: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename disruption @ 06/13/24 08:24:54.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:24:54.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:24:54.658
  STEP: creating the pdb @ 06/13/24 08:24:54.682
  STEP: Waiting for the pdb to be processed @ 06/13/24 08:24:54.69
  E0613 08:24:55.196317      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:56.196455      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 06/13/24 08:24:56.696
  STEP: Waiting for the pdb to be processed @ 06/13/24 08:24:56.725
  STEP: patching the pdb @ 06/13/24 08:24:56.755
  STEP: Waiting for the pdb to be processed @ 06/13/24 08:24:56.783
  STEP: Waiting for the pdb to be deleted @ 06/13/24 08:24:56.814
  Jun 13 08:24:56.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-852" for this suite. @ 06/13/24 08:24:56.825
â€¢ [2.337 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/13/24 08:24:56.839
  Jun 13 08:24:56.839: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename watch @ 06/13/24 08:24:56.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:24:56.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:24:56.924
  STEP: creating a watch on configmaps with label A @ 06/13/24 08:24:56.929
  STEP: creating a watch on configmaps with label B @ 06/13/24 08:24:56.931
  STEP: creating a watch on configmaps with label A or B @ 06/13/24 08:24:56.937
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/13/24 08:24:56.939
  Jun 13 08:24:56.951: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41741 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:24:56.952: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41741 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/13/24 08:24:56.952
  Jun 13 08:24:56.992: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41743 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:24:57.010: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41743 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/13/24 08:24:57.014
  Jun 13 08:24:57.133: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41745 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:24:57.134: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41745 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/13/24 08:24:57.134
  Jun 13 08:24:57.147: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41747 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:24:57.147: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4000  8096bcd4-ad48-472f-b54b-b37a27059dc4 41747 0 2024-06-13 08:24:56 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/13/24 08:24:57.147
  Jun 13 08:24:57.158: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4000  3df507c1-d00f-493d-9e13-9d8b509854c5 41748 0 2024-06-13 08:24:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:24:57.158: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4000  3df507c1-d00f-493d-9e13-9d8b509854c5 41748 0 2024-06-13 08:24:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0613 08:24:57.196866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:58.197284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:24:59.198187      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:00.198797      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:01.201577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:02.202628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:03.204692      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:04.205606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:05.205732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:06.207577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/13/24 08:25:07.158
  Jun 13 08:25:07.177: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4000  3df507c1-d00f-493d-9e13-9d8b509854c5 41795 0 2024-06-13 08:24:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:25:07.181: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4000  3df507c1-d00f-493d-9e13-9d8b509854c5 41795 0 2024-06-13 08:24:57 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-13 08:24:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0613 08:25:07.209501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:08.210603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:09.211504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:10.214423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:11.217539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:12.217640      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:13.217791      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:14.217937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:15.218292      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:16.218159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:25:17.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4000" for this suite. @ 06/13/24 08:25:17.19
â€¢ [20.360 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/13/24 08:25:17.199
  Jun 13 08:25:17.199: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 08:25:17.2
  E0613 08:25:17.219080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:25:17.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:25:17.394
  STEP: Create a ReplicaSet @ 06/13/24 08:25:17.404
  STEP: Verify that the required pods have come up @ 06/13/24 08:25:17.445
  Jun 13 08:25:17.487: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0613 08:25:18.219459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:19.221600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:20.221693      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:21.228796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:22.228141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:25:22.516: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/13/24 08:25:22.516
  Jun 13 08:25:22.529: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/13/24 08:25:22.548
  STEP: DeleteCollection of the ReplicaSets @ 06/13/24 08:25:22.61
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/13/24 08:25:22.691
  Jun 13 08:25:22.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6378" for this suite. @ 06/13/24 08:25:22.722
â€¢ [5.563 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/13/24 08:25:22.765
  Jun 13 08:25:22.766: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename security-context @ 06/13/24 08:25:22.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:25:22.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:25:22.93
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/13/24 08:25:22.949
  E0613 08:25:23.229522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:24.230267      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:25.231318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:26.231537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:25:27.056
  Jun 13 08:25:27.059: INFO: Trying to get logs from node ip-172-31-12-94 pod security-context-551fd9e1-5e7a-453b-bc8e-c11bb5a63952 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:25:27.074
  Jun 13 08:25:27.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-1269" for this suite. @ 06/13/24 08:25:27.101
â€¢ [4.349 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/13/24 08:25:27.114
  Jun 13 08:25:27.115: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:25:27.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:25:27.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:25:27.234
  E0613 08:25:27.235905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating configMap with name projected-configmap-test-volume-e5f4d166-b8c2-417f-88e7-1181f7f3f61a @ 06/13/24 08:25:27.256
  STEP: Creating a pod to test consume configMaps @ 06/13/24 08:25:27.264
  E0613 08:25:28.233600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:29.233644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:30.234492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:31.234613      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:25:31.372
  Jun 13 08:25:31.380: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-configmaps-741784b9-3348-48c5-9939-af99561019ca container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 08:25:31.392
  Jun 13 08:25:31.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4519" for this suite. @ 06/13/24 08:25:31.45
â€¢ [4.346 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/13/24 08:25:31.46
  Jun 13 08:25:31.461: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 08:25:31.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:25:31.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:25:31.556
  STEP: creating the pod @ 06/13/24 08:25:31.568
  STEP: submitting the pod to kubernetes @ 06/13/24 08:25:31.568
  STEP: verifying QOS class is set on the pod @ 06/13/24 08:25:31.632
  Jun 13 08:25:31.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4897" for this suite. @ 06/13/24 08:25:31.698
â€¢ [0.262 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/13/24 08:25:31.723
  Jun 13 08:25:31.723: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename sched-pred @ 06/13/24 08:25:31.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:25:31.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:25:31.883
  Jun 13 08:25:31.886: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun 13 08:25:31.922: INFO: Waiting for terminating namespaces to be deleted...
  Jun 13 08:25:31.928: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-11-204 before test
  Jun 13 08:25:31.962: INFO: fleet-agent-0 from cattle-fleet-system started at 2024-06-13 06:20:09 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:31.962: INFO: 	Container fleet-agent ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: 	Container fleet-agent-clusterstatus ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: cattle-cluster-agent-744549dbb4-28hx8 from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: cattle-cluster-agent-744549dbb4-xtk7x from cattle-system started at 2024-06-13 06:21:03 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container cluster-register ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: cattle-node-agent-kjs2b from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container agent ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: kube-api-auth-wwvxs from cattle-system started at 2024-06-13 06:19:01 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container kube-api-auth ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: rancher-webhook-66ff948964-5r6sf from cattle-system started at 2024-06-13 06:20:57 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container rancher-webhook ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: calico-kube-controllers-8485458bd8-xmp2w from kube-system started at 2024-06-13 06:18:18 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: canal-nmgr7 from kube-system started at 2024-06-13 06:18:18 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: coredns-7b7785bd9-knk5k from kube-system started at 2024-06-13 06:18:29 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: metrics-server-657c74b5d8-44q8w from kube-system started at 2024-06-13 06:18:43 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container metrics-server ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: rke-coredns-addon-deploy-job-zk2n9 from kube-system started at 2024-06-13 06:27:54 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container rke-coredns-addon-pod ready: false, restart count 0
  Jun 13 08:25:31.963: INFO: rke-metrics-addon-deploy-job-522gf from kube-system started at 2024-06-13 06:18:41 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container rke-metrics-addon-pod ready: false, restart count 0
  Jun 13 08:25:31.963: INFO: rke-network-plugin-deploy-job-nzfjk from kube-system started at 2024-06-13 06:18:15 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container rke-network-plugin-pod ready: false, restart count 0
  Jun 13 08:25:31.963: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-hcrl9 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:31.963: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 08:25:31.963: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-12-94 before test
  Jun 13 08:25:31.985: INFO: cattle-node-agent-gppzj from cattle-system started at 2024-06-13 06:21:04 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.985: INFO: 	Container agent ready: true, restart count 0
  Jun 13 08:25:31.986: INFO: canal-7rrrm from kube-system started at 2024-06-13 06:21:04 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:31.986: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 08:25:31.986: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 08:25:31.986: INFO: coredns-7b7785bd9-7ljhs from kube-system started at 2024-06-13 06:21:06 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.986: INFO: 	Container coredns ready: true, restart count 0
  Jun 13 08:25:31.986: INFO: coredns-autoscaler-6b7d888f49-gtz4n from kube-system started at 2024-06-13 06:27:58 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.986: INFO: 	Container autoscaler ready: true, restart count 0
  Jun 13 08:25:31.986: INFO: pod-qos-class-b2d4cab2-0a0e-452a-b72b-2fee91d99721 from pods-4897 started at 2024-06-13 08:25:31 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:31.986: INFO: 	Container agnhost ready: false, restart count 0
  Jun 13 08:25:31.986: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-5zbmz from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:31.987: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:25:31.987: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun 13 08:25:31.987: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-2-92 before test
  Jun 13 08:25:32.004: INFO: cattle-node-agent-czvts from cattle-system started at 2024-06-13 06:21:16 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:32.004: INFO: 	Container agent ready: true, restart count 0
  Jun 13 08:25:32.004: INFO: canal-4z8nx from kube-system started at 2024-06-13 06:21:16 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:32.004: INFO: 	Container calico-node ready: true, restart count 0
  Jun 13 08:25:32.004: INFO: 	Container kube-flannel ready: true, restart count 0
  Jun 13 08:25:32.004: INFO: sonobuoy from sonobuoy started at 2024-06-13 06:32:15 +0000 UTC (1 container statuses recorded)
  Jun 13 08:25:32.004: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun 13 08:25:32.004: INFO: sonobuoy-e2e-job-8c45e5711e4845f4 from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:32.005: INFO: 	Container e2e ready: true, restart count 0
  Jun 13 08:25:32.005: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:25:32.005: INFO: sonobuoy-systemd-logs-daemon-set-d60c6a4a7f7f40b4-cq7zb from sonobuoy started at 2024-06-13 06:32:28 +0000 UTC (2 container statuses recorded)
  Jun 13 08:25:32.005: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun 13 08:25:32.005: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/13/24 08:25:32.005
  E0613 08:25:32.236397      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:33.240245      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/13/24 08:25:34.116
  STEP: Trying to apply a random label on the found node. @ 06/13/24 08:25:34.139
  STEP: verifying the node has the label kubernetes.io/e2e-3f9c1381-3dae-45fe-9edf-3174244ec55d 95 @ 06/13/24 08:25:34.165
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/13/24 08:25:34.182
  E0613 08:25:34.240371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:35.240459      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:36.240567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.12.94 on the node which pod4 resides and expect not scheduled @ 06/13/24 08:25:36.314
  E0613 08:25:37.240710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:38.241734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:39.241862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:40.242134      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:41.252103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:42.243318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:43.244229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:44.244951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:45.245217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:46.245545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:47.246773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:48.250702      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:49.250820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:50.250948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:51.251508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:52.251750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:53.251814      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:54.255415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:55.259800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:56.261011      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:57.261545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:58.262309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:25:59.262417      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:00.264787      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:01.266231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:02.275596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:03.275712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:04.276328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:05.278561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:06.278836      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:07.279524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:08.279735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:09.280203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:10.280370      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:11.280911      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:12.281510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:13.284062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:14.283426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:15.283496      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:16.283698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:17.283739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:18.321526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:19.301737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:20.302804      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:21.307843      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:22.307945      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:23.309133      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:24.309626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:25.309738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:26.311818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:27.311841      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:28.311965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:29.313774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:30.314864      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:31.316626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:32.321964      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:33.322466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:34.323280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:35.325190      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:36.325647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:37.325831      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:38.325938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:39.333430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:40.328634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:41.329293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:42.329413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:43.329643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:44.330003      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:45.334628      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:46.335183      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:47.335943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:48.337528      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:49.337619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:50.337887      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:51.338606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:52.339097      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:53.339869      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:54.340710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:55.340776      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:56.340892      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:57.344020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:58.345145      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:26:59.346006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:00.347870      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:01.348473      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:02.348582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:03.368647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:04.355530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:05.356182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:06.357239      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:07.357541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:08.357657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:09.357848      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:10.362444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:11.362737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:12.363470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:13.364240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:14.372883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:15.365768      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:16.365838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:17.366685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:18.368296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:19.368709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:20.368957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:21.369334      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:22.385505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:23.373659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:24.374117      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:25.375621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:26.375927      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:27.377279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:28.377618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:29.377724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:30.377978      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:31.378418      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:32.378561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:33.386313      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:34.387320      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:35.388286      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:36.389200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:37.389601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:38.390592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:39.390709      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:40.390830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:41.391287      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:42.391461      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:43.393280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:44.393487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:45.393561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:46.395468      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:47.395971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:48.396349      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:49.397588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:50.397761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:51.398530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:52.398589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:53.398718      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:54.403682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:55.402303      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:56.403300      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:57.405514      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:58.408322      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:27:59.409049      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:00.414457      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:01.409601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:02.410645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:03.410877      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:04.413570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:05.415181      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:06.416644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:07.418675      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:08.420281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:09.420913      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:10.421056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:11.421770      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:12.423411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:13.425588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:14.426535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:15.426742      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:16.427073      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:17.427332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:18.427445      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:19.428502      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:20.428828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:21.428969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:22.429129      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:23.430536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:24.430796      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:25.431610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:26.431970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:27.432931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:28.439179      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:29.441275      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:30.441700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:31.442663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:32.442783      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:33.443396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:34.443516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:35.443607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:36.450419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:37.445678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:38.452543      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:39.452067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:40.453276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:41.453963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:42.457513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:43.458786      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:44.459171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:45.459838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:46.461752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:47.462751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:48.463460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:49.465714      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:50.465809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:51.471834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:52.468113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:53.470856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:54.471620      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:55.472510      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:56.473323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:57.473794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:58.473853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:28:59.474309      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:00.475310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:01.477032      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:02.486548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:03.487515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:04.489104      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:05.489123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:06.489236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:07.489916      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:08.490014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:09.491951      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:10.491886      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:11.492737      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:12.493573      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:13.498158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:14.495580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:15.496121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:16.496426      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:17.497162      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:18.497328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:19.497981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:20.501501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:21.501975      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:22.512624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:23.513437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:24.513537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:25.514232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:26.516174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:27.516856      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:28.517893      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:29.518725      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:30.524293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:31.519338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:32.520012      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:33.520206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:34.520802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:35.523470      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:36.525594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:37.526392      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:38.526484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:39.527529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:40.527643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:41.527795      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:42.527950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:43.529413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:44.529516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:45.530491      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:46.530703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:47.531544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:48.531678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:49.532743      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:50.532922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:51.533182      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:52.533423      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:53.534212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:54.534305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:55.534963      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:56.537698      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:57.538419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:58.542451      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:29:59.542820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:00.542920      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:01.543604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:02.566868      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:03.545515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:04.546326      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:05.546649      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:06.549500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:07.550981      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:08.551469      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:09.553095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:10.554715      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:11.554790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:12.554905      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:13.556585      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:14.560328      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:15.562296      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:16.563367      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:17.563477      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:18.563588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:19.564305      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:20.564411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:21.564832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:22.565199      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:23.565898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:24.566345      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:25.567419      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:26.567539      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:27.568377      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:28.568480      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:29.568599      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:30.568809      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:31.569005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:32.569103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:33.569251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:34.569927      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:35.570060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-3f9c1381-3dae-45fe-9edf-3174244ec55d off the node ip-172-31-12-94 @ 06/13/24 08:30:36.348
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3f9c1381-3dae-45fe-9edf-3174244ec55d @ 06/13/24 08:30:36.377
  Jun 13 08:30:36.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5846" for this suite. @ 06/13/24 08:30:36.403
â€¢ [304.712 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/13/24 08:30:36.436
  Jun 13 08:30:36.436: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:30:36.437
  E0613 08:30:36.570093      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:30:36.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:30:36.613
  STEP: Creating the pod @ 06/13/24 08:30:36.631
  E0613 08:30:37.570710      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:38.571682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:39.389: INFO: Successfully updated pod "annotationupdated184f58f-db88-492c-94d8-e4671613f00a"
  E0613 08:30:39.571705      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:40.572063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:41.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4602" for this suite. @ 06/13/24 08:30:41.436
â€¢ [5.021 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/13/24 08:30:41.457
  Jun 13 08:30:41.457: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 08:30:41.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:30:41.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:30:41.553
  STEP: Creating pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196 @ 06/13/24 08:30:41.562
  E0613 08:30:41.572707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:42.573371      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:43.573569      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 08:30:43.656
  Jun 13 08:30:43.663: INFO: Initial restart count of pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 is 0
  Jun 13 08:30:43.666: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:44.574902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:45.575063      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:45.670: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:46.577549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:47.578731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:47.709: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:48.581028      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:49.581396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:49.714: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:50.581530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:51.582754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:51.719: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:52.585635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:53.586580      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:53.723: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:54.586700      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:55.586808      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:55.727: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:56.586926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:57.587610      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:57.756: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:30:58.587346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:30:59.588210      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:30:59.792: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:00.589289      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:01.589607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:01.833: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:02.590351      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:03.590481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:03.850: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:04.590802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:05.590990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:05.854: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:06.591302      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:07.591436      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:07.861: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:08.591629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:09.592564      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:09.865: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:10.592910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:11.593909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:11.869: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:12.594340      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:13.595409      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:13.876: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:14.595515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:15.595801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:15.885: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:16.596034      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:17.596374      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:17.889: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:18.598531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:19.598533      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:19.897: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:20.598618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:21.598880      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:21.907: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:22.599042      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:23.599265      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:23.916: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:24.599295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:25.600900      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:25.927: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:26.603515      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:27.603635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:27.935: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:28.603760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:29.604782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:29.940: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:30.605780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:31.605658      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:31.946: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:32.607112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:33.612422      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:33.950: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:34.613544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:35.613618      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:35.959: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:36.613822      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:37.614606      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:37.965: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:38.615333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:39.615878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:39.970: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:40.615633      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:41.617749      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:41.976: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:42.618577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:43.619154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:43.980: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:44.619643      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:45.622703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:45.986: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:46.623764      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:47.634163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:47.992: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:48.636857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:49.636954      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:50.004: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:50.637229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:51.637627      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:52.013: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:52.638268      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:53.638601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:54.019: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:54.638655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:55.640165      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:56.024: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:56.640486      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:57.640819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:31:58.029: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:31:58.641276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:31:59.641703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:00.057: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:00.642500      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:01.644728      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:02.070: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:02.645530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:03.648170      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:04.078: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:04.649342      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:05.649103      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:06.084: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:06.650144      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:07.650699      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:08.089: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:08.654425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:09.654544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:10.099: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:10.655759      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:11.656586      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:12.104: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:12.656973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:13.657330      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:14.107: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:14.661625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:15.661859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:16.119: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:16.664197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:17.664154      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:18.134: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:18.665816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:19.667107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:20.145: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:20.669965      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:21.673516      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:22.154: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:22.671240      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:23.671410      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:24.170: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:24.671498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:25.671924      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:26.177: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:26.672149      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:27.675541      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:28.185: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:28.675594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:29.675948      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:30.192: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:30.676041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:31.676195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:32.197: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:32.676284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:33.676237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:34.206: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:34.677058      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:35.677113      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:36.214: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:36.678202      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:37.689520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:38.222: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:38.689555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:39.679493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:40.227: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:40.680206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:41.683247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:42.232: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:42.683293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:43.683482      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:44.246: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:44.683990      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:45.684054      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:46.250: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:46.685158      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:47.687731      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:48.257: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:48.685598      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:49.691526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:50.265: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:50.686057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:51.687105      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:52.273: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:52.687798      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:53.688688      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:54.277: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:54.688930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:55.689144      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:56.287: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:56.689537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:57.690038      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:32:58.291: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:32:58.690592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:32:59.690712      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:00.313: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:00.691621      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:01.703875      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:02.327: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:02.705435      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:03.704203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:04.333: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:04.705536      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:05.705645      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:06.344: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:06.705859      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:07.705996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:08.348: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:08.706125      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:09.706588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:10.352: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:10.706774      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:11.706902      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:12.362: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:12.707013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:13.709266      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:14.366: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:14.711071      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:15.717915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:16.372: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:16.718406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:17.720284      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:18.386: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:18.720961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:19.721548      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:20.390: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:20.722066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:21.725740      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:22.394: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:22.729509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:23.737567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:24.418: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:24.738246      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:25.738567      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:26.423: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:26.739031      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:27.745559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:28.437: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:28.742772      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:29.743682      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:30.441: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:30.744695      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:31.745075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:32.456: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:32.748403      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:33.748512      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:34.461: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:34.749275      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:35.749611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:36.479: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:36.752067      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:37.752014      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:38.502: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:38.755070      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:39.757137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:40.525: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:40.758611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:41.760987      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:42.528: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:42.764746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:43.766631      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:44.553: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:44.767323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:45.767294      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:46.558: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:46.768746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:47.769677      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:48.562: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:48.772250      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:49.772672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:50.573: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:50.774355      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:51.773507      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:52.577: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:52.774909      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:53.775449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:54.599: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:54.777511      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:55.777563      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:56.620: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:56.777669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:57.777904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:33:58.628: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:33:58.782099      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:33:59.782676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:00.634: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:00.785685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:01.786629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:02.655: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:02.787458      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:03.788337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:04.684: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:04.788651      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:05.788838      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:06.695: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:06.788960      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:07.789530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:08.699: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:08.789626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:09.789732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:10.704: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:10.790101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:11.790306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:12.708: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:12.790480      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:13.790724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:14.716: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:14.791137      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:15.791361      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:16.725: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:16.792044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:17.792147      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:18.741: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:18.793589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:19.813553      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:20.753: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:20.813826      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:21.814784      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:22.758: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:22.815519      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:23.816083      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:24.763: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:24.816904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:25.817193      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:26.770: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:26.817668      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:27.819995      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:28.777: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:28.820013      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:29.820456      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:30.781: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:30.821298      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:31.822000      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:32.788: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:32.822850      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:33.824288      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:34.793: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:34.825038      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:35.827006      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:36.798: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:36.827242      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:37.827888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:38.822: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:38.829663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:39.829498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:40.828: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:40.830029      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:41.833020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:42.832: INFO: Get pod liveness-7c6ccae4-d5a8-4f39-a5f0-be55b578d417 in namespace container-probe-1196
  E0613 08:34:42.834415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:43.834619      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/13/24 08:34:44.832
  E0613 08:34:44.834600      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:44.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1196" for this suite. @ 06/13/24 08:34:44.917
â€¢ [243.467 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/13/24 08:34:44.929
  Jun 13 08:34:44.929: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:34:44.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:34:45.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:34:45.112
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/13/24 08:34:45.143
  E0613 08:34:45.836634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:46.837922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:47.838091      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:48.840191      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:34:49.207
  Jun 13 08:34:49.212: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-eaa8aae0-4241-4cc6-9a76-9f4b416061d3 container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:34:49.247
  Jun 13 08:34:49.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9470" for this suite. @ 06/13/24 08:34:49.294
â€¢ [4.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/13/24 08:34:49.314
  Jun 13 08:34:49.314: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename podtemplate @ 06/13/24 08:34:49.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:34:49.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:34:49.388
  STEP: Create a pod template @ 06/13/24 08:34:49.401
  STEP: Replace a pod template @ 06/13/24 08:34:49.429
  Jun 13 08:34:49.446: INFO: Found updated podtemplate annotation: "true"

  Jun 13 08:34:49.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7912" for this suite. @ 06/13/24 08:34:49.454
â€¢ [0.152 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/13/24 08:34:49.466
  Jun 13 08:34:49.466: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename pods @ 06/13/24 08:34:49.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:34:49.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:34:49.577
  STEP: creating the pod @ 06/13/24 08:34:49.589
  STEP: submitting the pod to kubernetes @ 06/13/24 08:34:49.589
  E0613 08:34:49.846630      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:50.851546      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/13/24 08:34:51.647
  STEP: updating the pod @ 06/13/24 08:34:51.649
  E0613 08:34:51.850151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:52.178: INFO: Successfully updated pod "pod-update-f571b2c4-e3e6-4c15-864f-e8e08b5a25a0"
  STEP: verifying the updated pod is in kubernetes @ 06/13/24 08:34:52.183
  Jun 13 08:34:52.187: INFO: Pod update OK
  Jun 13 08:34:52.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3622" for this suite. @ 06/13/24 08:34:52.192
â€¢ [2.731 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/13/24 08:34:52.198
  Jun 13 08:34:52.198: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename podtemplate @ 06/13/24 08:34:52.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:34:52.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:34:52.333
  STEP: Create set of pod templates @ 06/13/24 08:34:52.34
  Jun 13 08:34:52.366: INFO: created test-podtemplate-1
  Jun 13 08:34:52.376: INFO: created test-podtemplate-2
  Jun 13 08:34:52.407: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/13/24 08:34:52.407
  STEP: delete collection of pod templates @ 06/13/24 08:34:52.413
  Jun 13 08:34:52.413: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/13/24 08:34:52.45
  Jun 13 08:34:52.450: INFO: requesting list of pod templates to confirm quantity
  Jun 13 08:34:52.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-317" for this suite. @ 06/13/24 08:34:52.493
â€¢ [0.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/13/24 08:34:52.518
  Jun 13 08:34:52.518: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename configmap @ 06/13/24 08:34:52.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:34:52.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:34:52.673
  STEP: Creating configMap with name configmap-test-volume-37dc8c61-6696-4c2e-8aef-d454fdd858de @ 06/13/24 08:34:52.708
  STEP: Creating a pod to test consume configMaps @ 06/13/24 08:34:52.73
  E0613 08:34:52.851560      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:53.851626      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:54.853192      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:55.861431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:34:56.824
  Jun 13 08:34:56.835: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-configmaps-e4ca7d89-59a1-4441-9438-dbc250ef943e container agnhost-container: <nil>
  STEP: delete the pod @ 06/13/24 08:34:56.845
  E0613 08:34:56.853915      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:34:56.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8361" for this suite. @ 06/13/24 08:34:56.918
â€¢ [4.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/13/24 08:34:56.93
  Jun 13 08:34:56.930: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename gc @ 06/13/24 08:34:56.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:34:56.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:34:57.017
  Jun 13 08:34:57.334: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"30dcf490-5918-428d-adaf-23f67fe2776d", Controller:(*bool)(0xc0037048f6), BlockOwnerDeletion:(*bool)(0xc0037048f7)}}
  Jun 13 08:34:57.401: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"cfa78606-d53e-445b-91c9-dd7451b73423", Controller:(*bool)(0xc003704c26), BlockOwnerDeletion:(*bool)(0xc003704c27)}}
  Jun 13 08:34:57.473: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"9a4274f4-6134-41f8-bf5a-497a381b5567", Controller:(*bool)(0xc00301f886), BlockOwnerDeletion:(*bool)(0xc00301f887)}}
  E0613 08:34:57.855629      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:58.854229      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:34:59.854881      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:00.856721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:01.856760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:02.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7110" for this suite. @ 06/13/24 08:35:02.628
â€¢ [5.724 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/13/24 08:35:02.655
  Jun 13 08:35:02.655: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 08:35:02.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:35:02.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:35:02.827
  Jun 13 08:35:02.841: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:35:02.857686      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:03.865860      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:04.858439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0613 08:35:05.749855      18 warnings.go:70] unknown field "alpha"
  W0613 08:35:05.749999      18 warnings.go:70] unknown field "beta"
  W0613 08:35:05.750078      18 warnings.go:70] unknown field "delta"
  W0613 08:35:05.750132      18 warnings.go:70] unknown field "epsilon"
  W0613 08:35:05.750195      18 warnings.go:70] unknown field "gamma"
  E0613 08:35:05.859016      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:06.398: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4546" for this suite. @ 06/13/24 08:35:06.415
â€¢ [3.811 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/13/24 08:35:06.466
  Jun 13 08:35:06.466: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 08:35:06.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:35:06.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:35:06.599
  STEP: starting the proxy server @ 06/13/24 08:35:06.643
  Jun 13 08:35:06.643: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-1880 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/13/24 08:35:06.798
  Jun 13 08:35:06.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 08:35:06.859121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-1880" for this suite. @ 06/13/24 08:35:06.865
â€¢ [0.444 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/13/24 08:35:06.91
  Jun 13 08:35:06.910: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 08:35:06.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:35:07.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:35:07.205
  STEP: creating Agnhost RC @ 06/13/24 08:35:07.221
  Jun 13 08:35:07.221: INFO: namespace kubectl-7608
  Jun 13 08:35:07.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7608 create -f -'
  Jun 13 08:35:07.673: INFO: stderr: ""
  Jun 13 08:35:07.673: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/13/24 08:35:07.673
  E0613 08:35:07.859495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:08.779: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:35:08.779: INFO: Found 0 / 1
  E0613 08:35:08.862950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:09.716: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:35:09.716: INFO: Found 0 / 1
  E0613 08:35:09.861582      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:10.695: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:35:10.695: INFO: Found 1 / 1
  Jun 13 08:35:10.695: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun 13 08:35:10.713: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun 13 08:35:10.713: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun 13 08:35:10.713: INFO: wait on agnhost-primary startup in kubectl-7608 
  Jun 13 08:35:10.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7608 logs agnhost-primary-sfx2c agnhost-primary'
  E0613 08:35:10.862493      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:11.079: INFO: stderr: ""
  Jun 13 08:35:11.079: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/13/24 08:35:11.079
  Jun 13 08:35:11.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7608 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun 13 08:35:11.407: INFO: stderr: ""
  Jun 13 08:35:11.407: INFO: stdout: "service/rm2 exposed\n"
  Jun 13 08:35:11.440: INFO: Service rm2 in namespace kubectl-7608 found.
  E0613 08:35:11.864437      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:12.864562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 06/13/24 08:35:13.461
  Jun 13 08:35:13.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-7608 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun 13 08:35:13.845: INFO: stderr: ""
  Jun 13 08:35:13.845: INFO: stdout: "service/rm3 exposed\n"
  E0613 08:35:13.865646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:13.919: INFO: Service rm3 in namespace kubectl-7608 found.
  E0613 08:35:14.869532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:15.869828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:15.928: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7608" for this suite. @ 06/13/24 08:35:15.931
â€¢ [9.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/13/24 08:35:15.939
  Jun 13 08:35:15.939: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 08:35:15.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:35:16.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:35:16.103
  E0613 08:35:16.870336      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:17.871373      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:18.871450      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:19.871571      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:20.873169      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:21.873518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:22.873637      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:23.876223      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:24.877160      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:25.877562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:26.878332      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:27.878557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:28.881589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:29.884177      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:30.897984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:31.888642      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:32.888671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/13/24 08:35:33.119
  E0613 08:35:33.888738      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:34.888930      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:35.893503      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:36.890035      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:37.890794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 08:35:38.126
  STEP: Ensuring resource quota status is calculated @ 06/13/24 08:35:38.131
  E0613 08:35:38.891323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:39.891484      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/13/24 08:35:40.146
  STEP: Ensuring resource quota status captures configMap creation @ 06/13/24 08:35:40.211
  E0613 08:35:40.891601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:41.891854      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/13/24 08:35:42.221
  STEP: Ensuring resource quota status released usage @ 06/13/24 08:35:42.271
  E0613 08:35:42.892346      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:43.892534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:44.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3135" for this suite. @ 06/13/24 08:35:44.3
â€¢ [28.374 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/13/24 08:35:44.313
  Jun 13 08:35:44.313: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename runtimeclass @ 06/13/24 08:35:44.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:35:44.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:35:44.513
  E0613 08:35:44.892750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:35:45.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3397" for this suite. @ 06/13/24 08:35:45.094
â€¢ [0.825 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/13/24 08:35:45.14
  Jun 13 08:35:45.140: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename svcaccounts @ 06/13/24 08:35:45.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:35:45.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:35:45.272
  STEP: Creating ServiceAccount "e2e-sa-bznc6"  @ 06/13/24 08:35:45.303
  Jun 13 08:35:45.319: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-bznc6"  @ 06/13/24 08:35:45.319
  Jun 13 08:35:45.359: INFO: AutomountServiceAccountToken: true
  Jun 13 08:35:45.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3656" for this suite. @ 06/13/24 08:35:45.401
â€¢ [0.331 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/13/24 08:35:45.471
  Jun 13 08:35:45.471: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename secrets @ 06/13/24 08:35:45.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:35:45.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:35:45.682
  STEP: Creating secret with name s-test-opt-del-2c01e96a-c958-4c0b-a0a2-476112b3ebd3 @ 06/13/24 08:35:45.857
  E0613 08:35:45.893744      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name s-test-opt-upd-c431c955-b0b7-48c2-8c4a-2a2856f1e307 @ 06/13/24 08:35:45.901
  STEP: Creating the pod @ 06/13/24 08:35:45.917
  E0613 08:35:46.901542      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:47.895656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:48.899164      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:49.899279      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-2c01e96a-c958-4c0b-a0a2-476112b3ebd3 @ 06/13/24 08:35:50.257
  STEP: Updating secret s-test-opt-upd-c431c955-b0b7-48c2-8c4a-2a2856f1e307 @ 06/13/24 08:35:50.275
  STEP: Creating secret with name s-test-opt-create-4ff7b2b4-b023-4b7d-a49f-0e3152f149a9 @ 06/13/24 08:35:50.311
  STEP: waiting to observe update in volume @ 06/13/24 08:35:50.333
  E0613 08:35:50.900056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:51.900310      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:52.901789      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:53.901921      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:54.902717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:55.902820      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:56.903232      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:57.903276      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:58.905732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:35:59.907041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:00.907401      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:01.910673      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:02.912830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:03.914752      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:04.914890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:05.916968      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:06.917720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:07.918589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:08.921681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:09.922615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:10.923487      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:11.923535      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:12.924281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:13.924476      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:14.924761      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:15.926090      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:16.926463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:17.927202      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:18.927321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:19.927815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:20.928844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:21.929532      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:22.930721      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:23.930829      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:24.934428      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:25.935806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:26.936544      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:27.936676      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:28.936727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:29.941530      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:30.941596      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:31.942671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:32.943141      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:33.944312      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:34.945008      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:35.945274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:36.945646      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:37.946017      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:38.946823      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:39.947098      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:40.949521      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:41.949632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:42.957634      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:43.957834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:44.969561      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:45.965508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:46.965778      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:47.966077      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:48.969577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:49.973024      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:50.973876      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:51.974130      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:52.975773      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:53.975760      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:54.976282      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:55.977678      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:56.982513      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:57.983050      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:58.983735      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:36:59.987663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:00.986005      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:01.986107      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:02.987358      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:03.989531      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:04.990247      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:05.991372      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:06.997932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:07.998150      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:08.998655      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:09.998762      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:10.998871      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:11.999321      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:12.999962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:14.004481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:15.009970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:16.012576      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:17.012696      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:18.021534      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:19.017719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:37:19.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5499" for this suite. @ 06/13/24 08:37:19.159
â€¢ [93.747 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/13/24 08:37:19.229
  Jun 13 08:37:19.229: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename init-container @ 06/13/24 08:37:19.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:37:19.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:37:19.386
  STEP: creating the pod @ 06/13/24 08:37:19.398
  Jun 13 08:37:19.398: INFO: PodSpec: initContainers in spec.initContainers
  E0613 08:37:20.018664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:21.019274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:22.019406      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:23.020382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:24.021386      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:25.021570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:26.032136      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:27.024285      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:28.024402      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:29.025175      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:30.025522      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:31.025587      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:32.027647      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:33.028094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:34.029525      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:35.029717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:36.030934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:37.031671      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:38.034022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:39.049782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:40.044720      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:41.044857      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:42.046356      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:43.048866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:44.049527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:45.049670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:46.050832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:47.051338      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:48.051883      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:49.052155      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:50.053910      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:51.053549      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:52.053574      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:53.053602      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:54.070509      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:55.100281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:56.074555      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:57.077570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:58.077650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:37:59.081501      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:00.082425      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:01.082932      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:02.084151      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:03.084816      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:03.927: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-2fe51ddf-c677-483c-a8d9-e2e6d44e67ea", GenerateName:"", Namespace:"init-container-3910", SelfLink:"", UID:"0fba70e6-c8fe-4482-a856-e709200fa7e0", ResourceVersion:"44069", Generation:0, CreationTimestamp:time.Date(2024, time.June, 13, 8, 37, 19, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"398351147"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"248ac3e070b8de5bceadefdfba4b35c1fa8d9299d8280ed0c2d607ab75443326", "cni.projectcalico.org/podIP":"10.42.2.147/32", "cni.projectcalico.org/podIPs":"10.42.2.147/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 8, 37, 19, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e0b2c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 8, 37, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e0b2f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 13, 8, 38, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e0b350), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-9nwt8", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00518bb00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-9nwt8", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-9nwt8", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-9nwt8", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0028684a8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-2-92", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0004e0930), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002868530)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002868550)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002868558), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00286855c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000e06c90), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 8, 37, 21, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 8, 37, 19, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 8, 37, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 8, 37, 19, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 13, 8, 37, 19, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.2.92", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.2.92"}}, PodIP:"10.42.2.147", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.2.147"}}, StartTime:time.Date(2024, time.June, 13, 8, 37, 19, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004e10a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004e1180)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://d061433c0afc08e1736c34b78ba015e8c95387ea690166c40b32ecfd6f3548be", Started:(*bool)(0xc0028685fa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00518bb80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00286860f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00518bb40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0028685df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun 13 08:38:03.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3910" for this suite. @ 06/13/24 08:38:03.965
â€¢ [44.771 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/13/24 08:38:04.002
  Jun 13 08:38:04.002: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename job @ 06/13/24 08:38:04.003
  E0613 08:38:04.085306      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:38:04.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:38:04.103
  STEP: Creating Indexed job @ 06/13/24 08:38:04.113
  STEP: Ensuring job reaches completions @ 06/13/24 08:38:04.129
  E0613 08:38:05.085526      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:06.085717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:07.086293      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:08.086439      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:09.086950      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:10.109550      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:11.109717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:12.109767      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:13.110614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:14.110716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 06/13/24 08:38:14.134
  Jun 13 08:38:14.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1944" for this suite. @ 06/13/24 08:38:14.148
â€¢ [10.155 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/13/24 08:38:14.157
  Jun 13 08:38:14.157: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename init-container @ 06/13/24 08:38:14.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:38:14.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:38:14.223
  STEP: creating the pod @ 06/13/24 08:38:14.23
  Jun 13 08:38:14.230: INFO: PodSpec: initContainers in spec.initContainers
  E0613 08:38:15.111259      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:16.112355      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:17.112716      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:18.113122      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:18.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9944" for this suite. @ 06/13/24 08:38:18.794
â€¢ [4.648 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/13/24 08:38:18.809
  Jun 13 08:38:18.809: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/13/24 08:38:18.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:38:18.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:38:18.925
  STEP: Creating 50 configmaps @ 06/13/24 08:38:18.953
  E0613 08:38:19.116711      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/13/24 08:38:19.856
  Jun 13 08:38:19.928: INFO: Pod name wrapped-volume-race-2554e18d-3233-441d-8e3d-15ca29374f6b: Found 0 pods out of 5
  E0613 08:38:20.118388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:21.121499      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:22.126463      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:23.127086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:24.127460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:24.945: INFO: Pod name wrapped-volume-race-2554e18d-3233-441d-8e3d-15ca29374f6b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/13/24 08:38:24.945
  E0613 08:38:25.128962      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:26.129520      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/13/24 08:38:26.989
  Jun 13 08:38:27.016: INFO: Pod name wrapped-volume-race-27a3d771-c62a-46ae-a05e-bbee3bfc190b: Found 0 pods out of 5
  E0613 08:38:27.135958      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:28.136066      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:29.137908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:30.143206      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:31.141719      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:32.138: INFO: Pod name wrapped-volume-race-27a3d771-c62a-46ae-a05e-bbee3bfc190b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/13/24 08:38:32.138
  E0613 08:38:32.142518      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:33.142664      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:34.143590      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 06/13/24 08:38:34.404
  Jun 13 08:38:34.447: INFO: Pod name wrapped-volume-race-a3d86979-75a1-40ab-b860-0daa0264a0d7: Found 0 pods out of 5
  E0613 08:38:35.143800      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:36.147237      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:37.145624      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:38.147971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:39.148387      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:39.517: INFO: Pod name wrapped-volume-race-a3d86979-75a1-40ab-b860-0daa0264a0d7: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/13/24 08:38:39.517
  E0613 08:38:40.149217      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:41.149479      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:42.149597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:43.150591      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-a3d86979-75a1-40ab-b860-0daa0264a0d7 in namespace emptydir-wrapper-7342, will wait for the garbage collector to delete the pods @ 06/13/24 08:38:43.655
  Jun 13 08:38:43.770: INFO: Deleting ReplicationController wrapped-volume-race-a3d86979-75a1-40ab-b860-0daa0264a0d7 took: 51.094917ms
  E0613 08:38:44.163252      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:44.172: INFO: Terminating ReplicationController wrapped-volume-race-a3d86979-75a1-40ab-b860-0daa0264a0d7 pods took: 401.759206ms
  E0613 08:38:45.163449      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:46.168862      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:47.169724      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-27a3d771-c62a-46ae-a05e-bbee3bfc190b in namespace emptydir-wrapper-7342, will wait for the garbage collector to delete the pods @ 06/13/24 08:38:47.573
  Jun 13 08:38:47.638: INFO: Deleting ReplicationController wrapped-volume-race-27a3d771-c62a-46ae-a05e-bbee3bfc190b took: 7.3224ms
  Jun 13 08:38:48.039: INFO: Terminating ReplicationController wrapped-volume-race-27a3d771-c62a-46ae-a05e-bbee3bfc190b pods took: 401.110112ms
  E0613 08:38:48.170258      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:49.173559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:50.174837      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:51.175833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-2554e18d-3233-441d-8e3d-15ca29374f6b in namespace emptydir-wrapper-7342, will wait for the garbage collector to delete the pods @ 06/13/24 08:38:51.943
  Jun 13 08:38:52.024: INFO: Deleting ReplicationController wrapped-volume-race-2554e18d-3233-441d-8e3d-15ca29374f6b took: 20.881474ms
  E0613 08:38:52.176562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:52.325: INFO: Terminating ReplicationController wrapped-volume-race-2554e18d-3233-441d-8e3d-15ca29374f6b pods took: 301.437783ms
  E0613 08:38:53.177060      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:54.177595      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:55.184834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/13/24 08:38:56.126
  E0613 08:38:56.185592      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:38:56.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7342" for this suite. @ 06/13/24 08:38:56.797
â€¢ [38.002 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/13/24 08:38:56.812
  Jun 13 08:38:56.812: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 08:38:56.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:38:56.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:38:56.895
  STEP: Counting existing ResourceQuota @ 06/13/24 08:38:56.905
  E0613 08:38:57.185937      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:58.186108      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:38:59.187603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:00.187681      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:01.188545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/13/24 08:39:01.95
  STEP: Ensuring resource quota status is calculated @ 06/13/24 08:39:02.002
  E0613 08:39:02.190832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:03.192732      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:04.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1498" for this suite. @ 06/13/24 08:39:04.014
â€¢ [7.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/13/24 08:39:04.034
  Jun 13 08:39:04.034: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 08:39:04.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:39:04.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:39:04.178
  E0613 08:39:04.192866      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating service multiprotocol-test in namespace services-664 @ 06/13/24 08:39:04.202
  STEP: creating pod pod1 in namespace services-664 @ 06/13/24 08:39:04.32
  STEP: Creating pod pod1 in namespace services-664 @ 06/13/24 08:39:04.32
  E0613 08:39:05.194803      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:06.193888      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-664 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/13/24 08:39:06.524
  Jun 13 08:39:06.535: INFO: successfully validated that service multiprotocol-test in namespace services-664 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/13/24 08:39:06.535
  Jun 13 08:39:06.535: INFO: Creating new exec pod
  E0613 08:39:07.194200      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:08.197745      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:08.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80'
  E0613 08:39:09.197830      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:10.201663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:10.872: INFO: rc: 1
  Jun 13 08:39:10.872: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.223.242 80
  + echo hostName
  nc: connect to 10.43.223.242 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 08:39:10.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80'
  E0613 08:39:11.201790      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:11.231: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.223.242 80\nConnection to 10.43.223.242 80 port [tcp/http] succeeded!\n"
  Jun 13 08:39:11.231: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 08:39:11.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.223.242 80'
  E0613 08:39:12.202527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:13.203236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:14.210325      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:15.207890      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:15.585: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.223.242 80\nConnection to 10.43.223.242 80 port [udp/*] succeeded!\n"
  Jun 13 08:39:15.585: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/13/24 08:39:15.585
  Jun 13 08:39:15.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80'
  Jun 13 08:39:15.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.223.242 80\nConnection to 10.43.223.242 80 port [tcp/http] succeeded!\n"
  Jun 13 08:39:15.962: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun 13 08:39:15.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.223.242 80'
  E0613 08:39:16.207998      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:17.213878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:18.214562      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:19.215413      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:20.215444      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:20.462: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.223.242 80\nConnection to 10.43.223.242 80 port [udp/*] succeeded!\n"
  Jun 13 08:39:20.463: INFO: stdout: ""
  Jun 13 08:39:20.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.223.242 80'
  E0613 08:39:21.220644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:22.223115      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:23.224123      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:24.224597      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:25.098: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.223.242 80\nConnection to 10.43.223.242 80 port [udp/*] succeeded!\n"
  Jun 13 08:39:25.098: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/13/24 08:39:25.098
  Jun 13 08:39:25.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.223.242 80'
  E0613 08:39:25.224746      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:26.225635      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:27.230253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:28.230495      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:29.230925      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:29.550: INFO: stderr: "+ nc -v -u -w 2 10.43.223.242 80\n+ echo hostName\nConnection to 10.43.223.242 80 port [udp/*] succeeded!\n"
  Jun 13 08:39:29.550: INFO: stdout: "pod1"
  Jun 13 08:39:29.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80'
  E0613 08:39:30.232504      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:31.232685      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:31.913: INFO: rc: 1
  Jun 13 08:39:31.913: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.223.242 80
  nc: connect to 10.43.223.242 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 08:39:31.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80'
  E0613 08:39:32.233337      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:33.235922      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:34.233894      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:34.289: INFO: rc: 1
  Jun 13 08:39:34.289: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.223.242 80
  + echo hostName
  nc: connect to 10.43.223.242 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 08:39:34.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80'
  E0613 08:39:35.234657      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:36.240095      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:36.650: INFO: rc: 1
  Jun 13 08:39:36.650: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=services-664 exec execpodkzccd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.223.242 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.223.242 80
  + echo hostName
  nc: connect to 10.43.223.242 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun 13 08:39:36.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-664" for this suite. @ 06/13/24 08:39:36.657
â€¢ [32.641 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/13/24 08:39:36.675
  Jun 13 08:39:36.675: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename disruption @ 06/13/24 08:39:36.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:39:36.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:39:36.747
  STEP: Waiting for the pdb to be processed @ 06/13/24 08:39:36.772
  STEP: Updating PodDisruptionBudget status @ 06/13/24 08:39:36.808
  STEP: Waiting for all pods to be running @ 06/13/24 08:39:36.848
  Jun 13 08:39:36.869: INFO: running pods: 0 < 1
  E0613 08:39:37.240780      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:38.241498      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:38.865: INFO: running pods: 0 < 1
  E0613 08:39:39.242080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:40.242100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 06/13/24 08:39:40.873
  STEP: Waiting for the pdb to be processed @ 06/13/24 08:39:40.885
  STEP: Patching PodDisruptionBudget status @ 06/13/24 08:39:40.896
  STEP: Waiting for the pdb to be processed @ 06/13/24 08:39:40.904
  Jun 13 08:39:40.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8145" for this suite. @ 06/13/24 08:39:40.92
â€¢ [4.254 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/13/24 08:39:40.93
  Jun 13 08:39:40.930: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename replicaset @ 06/13/24 08:39:40.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:39:41.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:39:41.029
  Jun 13 08:39:41.083: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0613 08:39:41.243186      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:42.243815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:43.243819      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:44.248044      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:45.245411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:46.164: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/13/24 08:39:46.171
  STEP: Scaling up "test-rs" replicaset @ 06/13/24 08:39:46.172
  Jun 13 08:39:46.234: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/13/24 08:39:46.234
  E0613 08:39:46.245997      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:46.354: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
  Jun 13 08:39:46.457: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
  Jun 13 08:39:46.544: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
  Jun 13 08:39:46.707: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 1, AvailableReplicas 1
  E0613 08:39:47.246162      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:48.285157      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:49.248672      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:49.341: INFO: observed ReplicaSet test-rs in namespace replicaset-6214 with ReadyReplicas 2, AvailableReplicas 2
  E0613 08:39:50.248943      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:39:50.477: INFO: observed Replicaset test-rs in namespace replicaset-6214 with ReadyReplicas 3 found true
  Jun 13 08:39:50.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6214" for this suite. @ 06/13/24 08:39:50.482
â€¢ [9.578 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/13/24 08:39:50.508
  Jun 13 08:39:50.508: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-runtime @ 06/13/24 08:39:50.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:39:50.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:39:50.644
  STEP: create the container @ 06/13/24 08:39:50.662
  W0613 08:39:50.685814      18 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/13/24 08:39:50.685
  E0613 08:39:51.249080      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:52.250041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:53.250412      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:54.251274      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/13/24 08:39:54.739
  STEP: the container should be terminated @ 06/13/24 08:39:54.743
  STEP: the termination message should be set @ 06/13/24 08:39:54.743
  Jun 13 08:39:54.743: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/13/24 08:39:54.744
  Jun 13 08:39:54.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2483" for this suite. @ 06/13/24 08:39:54.79
â€¢ [4.298 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/13/24 08:39:54.807
  Jun 13 08:39:54.807: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename downward-api @ 06/13/24 08:39:54.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:39:54.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:39:54.893
  STEP: Creating a pod to test downward api env vars @ 06/13/24 08:39:54.921
  E0613 08:39:55.256022      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:56.257343      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:57.258389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:58.261882      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:39:59.262644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:00.262782      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:40:01.11
  Jun 13 08:40:01.115: INFO: Trying to get logs from node ip-172-31-12-94 pod downward-api-b98f22cd-e602-4bc9-8f47-f2ef2a0544b3 container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 08:40:01.201
  Jun 13 08:40:01.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8186" for this suite. @ 06/13/24 08:40:01.242
  E0613 08:40:01.266388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [6.474 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/13/24 08:40:01.292
  Jun 13 08:40:01.293: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:40:01.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:01.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:01.539
  STEP: Creating projection with secret that has name projected-secret-test-f0901b27-0c1a-4477-affd-8dd415437ae0 @ 06/13/24 08:40:01.563
  STEP: Creating a pod to test consume secrets @ 06/13/24 08:40:01.585
  E0613 08:40:02.267805      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:03.273952      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:04.277552      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:05.278985      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:06.279055      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:07.279180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:40:07.76
  Jun 13 08:40:07.768: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-projected-secrets-b9682f73-2551-4787-9081-48957ced7264 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/13/24 08:40:07.791
  Jun 13 08:40:07.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1640" for this suite. @ 06/13/24 08:40:07.843
â€¢ [6.558 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/13/24 08:40:07.851
  Jun 13 08:40:07.852: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:40:07.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:07.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:08.005
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 08:40:08.022
  E0613 08:40:08.283039      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:09.283100      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:10.284020      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:11.284131      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:40:12.104
  Jun 13 08:40:12.116: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-f41e5329-6394-4e2b-b247-e47e7dae803d container client-container: <nil>
  STEP: delete the pod @ 06/13/24 08:40:12.147
  Jun 13 08:40:12.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2019" for this suite. @ 06/13/24 08:40:12.216
â€¢ [4.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/13/24 08:40:12.23
  Jun 13 08:40:12.230: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubectl @ 06/13/24 08:40:12.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:12.286
  E0613 08:40:12.287396      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:12.295
  STEP: validating api versions @ 06/13/24 08:40:12.345
  Jun 13 08:40:12.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-662721466 --namespace=kubectl-121 api-versions'
  Jun 13 08:40:12.471: INFO: stderr: ""
  Jun 13 08:40:12.471: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncatalog.cattle.io/v1\ncertificates.k8s.io/v1\ncluster.cattle.io/v3\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmanagement.cattle.io/v3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nui.cattle.io/v1\nv1\n"
  Jun 13 08:40:12.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-121" for this suite. @ 06/13/24 08:40:12.475
â€¢ [0.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/13/24 08:40:12.495
  Jun 13 08:40:12.495: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename kubelet-test @ 06/13/24 08:40:12.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:12.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:12.544
  Jun 13 08:40:12.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2860" for this suite. @ 06/13/24 08:40:12.662
â€¢ [0.198 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/13/24 08:40:12.694
  Jun 13 08:40:12.694: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename subpath @ 06/13/24 08:40:12.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:12.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:12.819
  STEP: Setting up data @ 06/13/24 08:40:12.897
  STEP: Creating pod pod-subpath-test-configmap-g7q4 @ 06/13/24 08:40:12.948
  STEP: Creating a pod to test atomic-volume-subpath @ 06/13/24 08:40:12.948
  E0613 08:40:13.290707      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:14.288793      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:15.290171      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:16.290648      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:17.291754      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:18.292007      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:19.292348      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:20.293198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:21.295389      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:22.297170      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:23.298251      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:24.298904      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:25.299096      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:26.312996      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:27.313815      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:28.315148      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:29.315478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:30.315659      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:31.317492      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:32.317632      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:33.318195      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:34.318654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:35.319075      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:36.319891      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:40:37.129
  Jun 13 08:40:37.161: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-subpath-test-configmap-g7q4 container test-container-subpath-configmap-g7q4: <nil>
  STEP: delete the pod @ 06/13/24 08:40:37.198
  STEP: Deleting pod pod-subpath-test-configmap-g7q4 @ 06/13/24 08:40:37.252
  Jun 13 08:40:37.252: INFO: Deleting pod "pod-subpath-test-configmap-g7q4" in namespace "subpath-4298"
  Jun 13 08:40:37.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4298" for this suite. @ 06/13/24 08:40:37.306
  E0613 08:40:37.321669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [24.635 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/13/24 08:40:37.33
  Jun 13 08:40:37.330: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/13/24 08:40:37.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:37.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:37.569
  E0613 08:40:38.322347      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:39.335983      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 06/13/24 08:40:39.916
  STEP: Cleaning up the configmap @ 06/13/24 08:40:39.925
  STEP: Cleaning up the pod @ 06/13/24 08:40:39.933
  Jun 13 08:40:39.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8178" for this suite. @ 06/13/24 08:40:39.972
â€¢ [2.661 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/13/24 08:40:39.992
  Jun 13 08:40:39.992: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename webhook @ 06/13/24 08:40:39.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:40.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:40.074
  STEP: Setting up server cert @ 06/13/24 08:40:40.166
  E0613 08:40:40.325478      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/13/24 08:40:40.597
  STEP: Deploying the webhook pod @ 06/13/24 08:40:40.62
  STEP: Wait for the deployment to be ready @ 06/13/24 08:40:40.645
  Jun 13 08:40:40.699: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0613 08:40:41.326739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:42.326802      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:40:42.769: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:40:43.327897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:44.329118      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:40:44.776: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 40, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:40:45.330184      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:46.330926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/13/24 08:40:46.775
  STEP: Verifying the service has paired with the endpoint @ 06/13/24 08:40:46.791
  E0613 08:40:47.333701      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:40:47.792: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun 13 08:40:47.801: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:40:48.333656      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4598-crds.webhook.example.com via the AdmissionRegistration API @ 06/13/24 08:40:48.35
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/13/24 08:40:48.379
  E0613 08:40:49.334121      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:50.334957      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:51.335490      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:40:51.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3580" for this suite. @ 06/13/24 08:40:51.563
  STEP: Destroying namespace "webhook-markers-9809" for this suite. @ 06/13/24 08:40:51.64
â€¢ [11.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/13/24 08:40:51.697
  Jun 13 08:40:51.697: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename watch @ 06/13/24 08:40:51.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:52.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:52.078
  STEP: creating a watch on configmaps @ 06/13/24 08:40:52.133
  STEP: creating a new configmap @ 06/13/24 08:40:52.136
  STEP: modifying the configmap once @ 06/13/24 08:40:52.259
  E0613 08:40:52.342751      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: closing the watch once it receives two notifications @ 06/13/24 08:40:52.422
  Jun 13 08:40:52.422: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4629  156b3d49-7f51-4169-a8be-604e3f279bbc 45573 0 2024-06-13 08:40:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 08:40:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:40:52.423: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4629  156b3d49-7f51-4169-a8be-604e3f279bbc 45576 0 2024-06-13 08:40:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 08:40:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/13/24 08:40:52.423
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/13/24 08:40:52.534
  STEP: deleting the configmap @ 06/13/24 08:40:52.55
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/13/24 08:40:52.593
  Jun 13 08:40:52.597: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4629  156b3d49-7f51-4169-a8be-604e3f279bbc 45578 0 2024-06-13 08:40:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 08:40:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:40:52.600: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4629  156b3d49-7f51-4169-a8be-604e3f279bbc 45580 0 2024-06-13 08:40:52 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-13 08:40:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun 13 08:40:52.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4629" for this suite. @ 06/13/24 08:40:52.62
â€¢ [0.954 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/13/24 08:40:52.663
  Jun 13 08:40:52.663: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename emptydir @ 06/13/24 08:40:52.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:52.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:52.864
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/13/24 08:40:52.867
  E0613 08:40:53.339625      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:54.339733      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:55.340959      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:56.340604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:57.341056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:40:58.341614      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:40:58.991
  Jun 13 08:40:58.996: INFO: Trying to get logs from node ip-172-31-12-94 pod pod-579fbaef-1665-496d-a9e2-798f30b9a04b container test-container: <nil>
  STEP: delete the pod @ 06/13/24 08:40:59.016
  Jun 13 08:40:59.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5142" for this suite. @ 06/13/24 08:40:59.037
â€¢ [6.417 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/13/24 08:40:59.088
  Jun 13 08:40:59.088: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-probe @ 06/13/24 08:40:59.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:40:59.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:40:59.192
  STEP: Creating pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016 @ 06/13/24 08:40:59.211
  E0613 08:40:59.343589      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:00.343741      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/13/24 08:41:01.278
  Jun 13 08:41:01.283: INFO: Initial restart count of pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 is 0
  Jun 13 08:41:01.294: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:01.353281      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:02.356842      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:03.298: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:03.357670      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:04.357970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:05.303: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:05.358295      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:06.359537      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:07.308: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:07.360176      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:08.367833      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:09.313: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:09.363391      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:10.364228      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:11.327: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:11.366019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:12.369557      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:13.334: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:13.369650      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:14.369897      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:15.338: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:15.371611      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:16.371739      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:17.343: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:17.372736      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:18.372970      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:19.350: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:19.373411      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:20.374271      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:21.353: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:21.375194      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:22.375212      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:23.384529      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:23.384: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:24.384844      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:25.387801      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:25.404: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:26.387818      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:27.388727      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:27.437: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:28.389601      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:29.390408      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:29.441: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:30.390570      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:31.390717      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:31.457: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:32.390788      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:33.390971      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:33.466: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:34.391041      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:35.391277      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:35.474: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:36.392163      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:37.392508      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:37.479: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:38.411527      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:39.394186      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:39.488: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:40.395864      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:41.396085      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:41.501: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:42.398101      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:43.398828      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:43.504: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:44.399547      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:45.399734      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:45.509: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:46.400559      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:47.400955      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:47.514: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:48.401572      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:49.401940      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:49.523: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:50.403460      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:51.405119      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:51.538: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:52.406128      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:53.407908      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:53.546: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:54.408666      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:55.408898      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:55.560: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:56.409023      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:57.409323      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:57.572: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:41:58.410110      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:41:59.411315      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:41:59.592: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:00.411703      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:01.412231      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:01.638: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:02.412290      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:03.412644      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:03.645: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:04.413481      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:05.413603      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:05.648: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:06.414339      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:07.415875      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:07.654: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:08.416094      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:09.416053      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:09.659: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:10.416607      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:11.417834      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:11.665: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:12.418588      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:13.418969      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:13.673: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  E0613 08:42:14.419062      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:15.419280      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:15.685: INFO: Get pod test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 in namespace container-probe-7016
  Jun 13 08:42:15.686: INFO: Restart count of pod container-probe-7016/test-grpc-65116fa7-72f6-425a-bb58-da4ad3fc2371 is now 1 (1m14.402795203s elapsed)
  STEP: deleting the pod @ 06/13/24 08:42:15.686
  Jun 13 08:42:15.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7016" for this suite. @ 06/13/24 08:42:15.73
â€¢ [76.655 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/13/24 08:42:15.748
  Jun 13 08:42:15.748: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 08:42:15.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:42:15.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:42:15.913
  Jun 13 08:42:15.929: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:42:16.419912      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:17.420174      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:18.420388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:19.421505      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:20.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8667" for this suite. @ 06/13/24 08:42:20.229
â€¢ [4.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/13/24 08:42:20.323
  Jun 13 08:42:20.324: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 08:42:20.325
  E0613 08:42:20.422415      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:42:20.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:42:20.51
  Jun 13 08:42:20.545: INFO: Creating deployment "test-recreate-deployment"
  Jun 13 08:42:20.602: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun 13 08:42:20.652: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0613 08:42:21.422615      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:22.422938      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:22.747: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun 13 08:42:22.770: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun 13 08:42:22.918: INFO: Updating deployment test-recreate-deployment
  Jun 13 08:42:22.918: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E0613 08:42:23.426304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:23.884: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecd8db44-e65c-4747-926c-6ad822535eae",
      ResourceVersion: (string) (len=5) "45925",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864940,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864942,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864940,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 08:42:23.959: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "726b816a-6325-4f15-8ad1-50b249baed69",
      ResourceVersion: (string) (len=5) "45924",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864943,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ecd8db44-e65c-4747-926c-6ad822535eae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 63 64 38 64 62  34 34 2d 65 36 35 63 2d  |\"ecd8db44-e65c-|
              00000120  34 37 34 37 2d 39 32 36  63 2d 36 61 64 38 32 32  |4747-926c-6ad822|
              00000130  35 33 35 65 61 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |535eae\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 08:42:23.962: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun 13 08:42:23.962: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df027ff7-30a5-40a5-bf92-4c2d1a979696",
      ResourceVersion: (string) (len=5) "45909",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864940,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ecd8db44-e65c-4747-926c-6ad822535eae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864942,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 63 64 38 64 62  34 34 2d 65 36 35 63 2d  |\"ecd8db44-e65c-|
              00000120  34 37 34 37 2d 39 32 36  63 2d 36 61 64 38 32 32  |4747-926c-6ad822|
              00000130  35 33 35 65 61 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |535eae\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 08:42:24.021: INFO: Pod "test-recreate-deployment-76fb77d45-dqbfw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-dqbfw",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-4225",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0867a779-45c0-49e4-9989-16df23115c4c",
      ResourceVersion: (string) (len=5) "45923",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864943,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "726b816a-6325-4f15-8ad1-50b249baed69",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 32  36 62 38 31 36 61 2d 36  |d\":\"726b816a-6|
              00000090  33 32 35 2d 34 66 31 35  2d 38 61 64 31 2d 35 30  |325-4f15-8ad1-50|
              000000a0  62 32 34 39 62 61 65 64  36 39 5c 22 7d 22 3a 7b  |b249baed69\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66nws",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66nws",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864943,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.12.94",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.12.94"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864943,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:42:24.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4225" for this suite. @ 06/13/24 08:42:24.085
â€¢ [3.789 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/13/24 08:42:24.114
  Jun 13 08:42:24.114: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename resourcequota @ 06/13/24 08:42:24.115
  E0613 08:42:24.429654      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:42:24.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:42:24.638
  STEP: Creating a ResourceQuota with terminating scope @ 06/13/24 08:42:24.801
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 08:42:24.821
  E0613 08:42:25.430304      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:26.431388      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 06/13/24 08:42:26.824
  STEP: Ensuring ResourceQuota status is calculated @ 06/13/24 08:42:26.834
  E0613 08:42:27.432379      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:28.438949      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 06/13/24 08:42:28.839
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/13/24 08:42:28.895
  E0613 08:42:29.433057      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:30.436973      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/13/24 08:42:30.899
  E0613 08:42:31.440146      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:32.440431      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 08:42:32.904
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 08:42:32.942
  E0613 08:42:33.440878      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:34.441126      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 06/13/24 08:42:34.949
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/13/24 08:42:34.975
  E0613 08:42:35.441832      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:36.443579      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/13/24 08:42:36.98
  E0613 08:42:37.444407      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:38.444524      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/13/24 08:42:38.997
  STEP: Ensuring resource quota status released the pod usage @ 06/13/24 08:42:39.04
  E0613 08:42:39.446236      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:40.446172      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:41.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4999" for this suite. @ 06/13/24 08:42:41.068
â€¢ [16.960 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/13/24 08:42:41.083
  Jun 13 08:42:41.084: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename dns @ 06/13/24 08:42:41.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:42:41.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:42:41.17
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/13/24 08:42:41.223
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/13/24 08:42:41.224
  STEP: creating a pod to probe DNS @ 06/13/24 08:42:41.224
  STEP: submitting the pod to kubernetes @ 06/13/24 08:42:41.224
  E0613 08:42:41.448584      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:42.449382      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:43.449466      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:44.449934      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/13/24 08:42:45.361
  STEP: looking for the results for each expected name from probers @ 06/13/24 08:42:45.37
  E0613 08:42:45.449853      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:46.453984      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:47.468230      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:48.440: INFO: Unable to read jessie_udp@kubernetes.default.svc.cluster.local from pod dns-8441/dns-test-564fbb66-56c7-4e88-8654-296ac3f7da5d: the server could not find the requested resource (get pods dns-test-564fbb66-56c7-4e88-8654-296ac3f7da5d)
  Jun 13 08:42:48.446: INFO: Unable to read jessie_tcp@kubernetes.default.svc.cluster.local from pod dns-8441/dns-test-564fbb66-56c7-4e88-8654-296ac3f7da5d: the server could not find the requested resource (get pods dns-test-564fbb66-56c7-4e88-8654-296ac3f7da5d)
  Jun 13 08:42:48.446: INFO: Lookups using dns-8441/dns-test-564fbb66-56c7-4e88-8654-296ac3f7da5d failed for: [jessie_udp@kubernetes.default.svc.cluster.local jessie_tcp@kubernetes.default.svc.cluster.local]

  E0613 08:42:48.455974      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:48.474: INFO: Pod client logs for webserver: 
  Jun 13 08:42:48.484: INFO: Pod client logs for querier: 
  Jun 13 08:42:48.496: INFO: Pod client logs for jessie-querier: 
  E0613 08:42:49.456203      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:42:50.395: INFO: DNS probes using dns-8441/dns-test-564fbb66-56c7-4e88-8654-296ac3f7da5d succeeded

  STEP: deleting the pod @ 06/13/24 08:42:50.395
  Jun 13 08:42:50.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0613 08:42:50.456594      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-8441" for this suite. @ 06/13/24 08:42:50.459
â€¢ [9.409 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/13/24 08:42:50.498
  Jun 13 08:42:50.498: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename var-expansion @ 06/13/24 08:42:50.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:42:50.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:42:50.56
  STEP: Creating a pod to test substitution in container's args @ 06/13/24 08:42:50.571
  E0613 08:42:51.456799      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:52.456847      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:53.457213      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:54.457056      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:42:54.623
  Jun 13 08:42:54.625: INFO: Trying to get logs from node ip-172-31-12-94 pod var-expansion-6e7804cb-54f9-4ec7-a26b-812a5cdb901a container dapi-container: <nil>
  STEP: delete the pod @ 06/13/24 08:42:54.633
  Jun 13 08:42:54.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6784" for this suite. @ 06/13/24 08:42:54.722
â€¢ [4.252 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/13/24 08:42:54.75
  Jun 13 08:42:54.750: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/13/24 08:42:54.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:42:54.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:42:54.799
  STEP: create the container to handle the HTTPGet hook request. @ 06/13/24 08:42:54.831
  E0613 08:42:55.458375      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:56.458465      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:57.458669      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:42:58.459167      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/13/24 08:42:58.901
  E0613 08:42:59.459086      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:00.459159      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:01.459577      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:02.463243      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:03.460976      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:04.461112      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:05.464180      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:06.483270      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:07.484197      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:08.484318      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/13/24 08:43:08.969
  STEP: delete the pod with lifecycle hook @ 06/13/24 08:43:08.994
  E0613 08:43:09.484931      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:10.485430      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:43:11.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2014" for this suite. @ 06/13/24 08:43:11.037
â€¢ [16.315 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/13/24 08:43:11.094
  Jun 13 08:43:11.094: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename field-validation @ 06/13/24 08:43:11.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:43:11.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:43:11.154
  Jun 13 08:43:11.199: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:43:11.486545      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:12.487465      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:13.487604      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0613 08:43:13.850953      18 warnings.go:70] unknown field "alpha"
  W0613 08:43:13.850978      18 warnings.go:70] unknown field "beta"
  W0613 08:43:13.850985      18 warnings.go:70] unknown field "delta"
  W0613 08:43:13.850991      18 warnings.go:70] unknown field "epsilon"
  W0613 08:43:13.851000      18 warnings.go:70] unknown field "gamma"
  E0613 08:43:14.487750      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:43:14.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4040" for this suite. @ 06/13/24 08:43:14.636
â€¢ [3.593 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/13/24 08:43:14.694
  Jun 13 08:43:14.694: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename deployment @ 06/13/24 08:43:14.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:43:14.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:43:14.974
  Jun 13 08:43:15.031: INFO: Creating simple deployment test-new-deployment
  Jun 13 08:43:15.282: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0613 08:43:15.488926      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:16.489019      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:43:17.364: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 13, 8, 43, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 43, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 13, 8, 43, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 13, 8, 43, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-557759b7c7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0613 08:43:17.489198      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:18.489333      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 06/13/24 08:43:19.452
  STEP: updating a scale subresource @ 06/13/24 08:43:19.458
  E0613 08:43:19.489663      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the deployment Spec.Replicas was modified @ 06/13/24 08:43:19.502
  STEP: Patch a scale subresource @ 06/13/24 08:43:19.511
  Jun 13 08:43:19.604: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a4c1ae9-4cba-4ac7-9c55-a92aea4d3495",
      ResourceVersion: (string) (len=5) "46286",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun 13 08:43:19.631: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06c80c45-596e-4c21-afa1-683b489eb5b4",
      ResourceVersion: (string) (len=5) "46287",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "0a4c1ae9-4cba-4ac7-9c55-a92aea4d3495",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 34 63 31 61  65 39 2d 34 63 62 61 2d  |\"0a4c1ae9-4cba-|
              00000120  34 61 63 37 2d 39 63 35  35 2d 61 39 32 61 65 61  |4ac7-9c55-a92aea|
              00000130  34 64 33 34 39 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d3495\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun 13 08:43:19.724: INFO: Pod "test-new-deployment-557759b7c7-k4djv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-k4djv",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8960319-7f15-4222-a46b-e1431c939a87",
      ResourceVersion: (string) (len=5) "46290",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c80c45-596e-4c21-afa1-683b489eb5b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 30 63 34 35 2d 35  |d\":\"06c80c45-5|
              00000090  39 36 65 2d 34 63 32 31  2d 61 66 61 31 2d 36 38  |96e-4c21-afa1-68|
              000000a0  33 62 34 38 39 65 62 35  62 34 5c 22 7d 22 3a 7b  |3b489eb5b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brzt2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brzt2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-12-94",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:43:19.725: INFO: Pod "test-new-deployment-557759b7c7-wc78g" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-wc78g",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-7327",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adeb0b92-36a1-4567-aab0-c4996131af9e",
      ResourceVersion: (string) (len=5) "46277",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c8779ab72fc5d2f9e7f76b12ef703d5612108ce791380c890e8b05d4a0ad43a8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.2.151/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.2.151/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "06c80c45-596e-4c21-afa1-683b489eb5b4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  63 38 30 63 34 35 2d 35  |d\":\"06c80c45-5|
              00000090  39 36 65 2d 34 63 32 31  2d 61 66 61 31 2d 36 38  |96e-4c21-afa1-68|
              000000a0  33 62 34 38 39 65 62 35  62 34 5c 22 7d 22 3a 7b  |3b489eb5b4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 35  31 5c 22 7d 22 3a 7b 22  |.42.2.151\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-klkbl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-klkbl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ip-172-31-2-92",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853864995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.2.92",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.2.92"
        }
      },
      PodIP: (string) (len=11) "10.42.2.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853864995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853864997,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://1f7d66f264090acaf3921f4a0d27453d777e635be30b17e783338bb5bb959052",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun 13 08:43:19.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7327" for this suite. @ 06/13/24 08:43:19.79
â€¢ [5.123 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/13/24 08:43:19.817
  Jun 13 08:43:19.818: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/13/24 08:43:19.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:43:19.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:43:20.022
  Jun 13 08:43:20.081: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  E0613 08:43:20.489794      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:43:21.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5862" for this suite. @ 06/13/24 08:43:21.198
â€¢ [1.391 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/13/24 08:43:21.21
  Jun 13 08:43:21.210: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename projected @ 06/13/24 08:43:21.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:43:21.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:43:21.277
  STEP: Creating a pod to test downward API volume plugin @ 06/13/24 08:43:21.287
  E0613 08:43:21.490238      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:22.490623      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:23.498961      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0613 08:43:24.500806      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/13/24 08:43:25.395
  Jun 13 08:43:25.410: INFO: Trying to get logs from node ip-172-31-12-94 pod downwardapi-volume-7cc8a7f3-4e6c-470a-92d8-e9b30d1bfff7 container client-container: <nil>
  STEP: delete the pod @ 06/13/24 08:43:25.437
  E0613 08:43:25.501253      18 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun 13 08:43:25.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9142" for this suite. @ 06/13/24 08:43:25.545
â€¢ [4.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/13/24 08:43:25.576
  Jun 13 08:43:25.576: INFO: >>> kubeConfig: /tmp/kubeconfig-662721466
  STEP: Building a namespace api object, basename services @ 06/13/24 08:43:25.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/13/24 08:43:25.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/13/24 08:43:25.716
  STEP: creating a collection of services @ 06/13/24 08:43:25.781
  Jun 13 08:43:25.781: INFO: Creating e2e-svc-a-mjtcx
  Jun 13 08:43:25.943: INFO: Creating e2e-svc-b-8b25n
  Jun 13 08:43:26.005: INFO: Creating e2e-svc-c-4rc6d
  STEP: deleting service collection @ 06/13/24 08:43:26.104
  Jun 13 08:43:26.273: INFO: Collection of services has been deleted
  Jun 13 08:43:26.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4519" for this suite. @ 06/13/24 08:43:26.281
â€¢ [0.734 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun 13 08:43:26.312: INFO: Running AfterSuite actions on node 1
  Jun 13 08:43:26.312: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.175 seconds]
------------------------------

Ran 388 of 7408 Specs in 7766.447 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 2h9m30.777571241s
Test Suite Passed
